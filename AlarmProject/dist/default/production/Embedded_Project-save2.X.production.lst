

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 08 13:37:03 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.45
    62                           ; Generated 16/11/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4520 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001DC4                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _threshold_loc
   101  001DC4  30                 	db	48
   102                           
   103                           ;initializer for _temp_loc
   104  001DC5  20                 	db	32
   105                           
   106                           ;initializer for _alarm_loc
   107  001DC6  10                 	db	16
   108                           
   109                           	psect	idataBANK0
   110  001DC7                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _temp_threshold
   114  001DC7  0050               	dw	80
   115                           
   116                           	psect	idataBANK1
   117  001DC0                     __pidataBANK1:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _saved_pass
   121  001DC0  31                 	db	49
   122  001DC1  32                 	db	50
   123  001DC2  33                 	db	51
   124  001DC3  34                 	db	52
   125                           
   126                           	psect	mediumconst
   127  007A58                     __pmediumconst:
   128                           	opt stack 0
   129  007A58  00                 	db	0
   130  007A59                     _dpowers:
   131                           	opt stack 0
   132  007A59  0001               	dw	1
   133  007A5B  0000               	dw	0
   134  007A5D  000A               	dw	10
   135  007A5F  0000               	dw	0
   136  007A61  0064               	dw	100
   137  007A63  0000               	dw	0
   138  007A65  03E8               	dw	1000
   139  007A67  0000               	dw	0
   140  007A69  2710               	dw	10000
   141  007A6B  0000               	dw	0
   142  007A6D  86A0               	dw	34464
   143  007A6F  0001               	dw	1
   144  007A71  4240               	dw	16960
   145  007A73  000F               	dw	15
   146  007A75  9680               	dw	38528
   147  007A77  0098               	dw	152
   148  007A79  E100               	dw	57600
   149  007A7B  05F5               	dw	1525
   150  007A7D  CA00               	dw	51712
   151  007A7F  3B9A               	dw	15258
   152  007A81                     __end_of_dpowers:
   153                           	opt stack 0
   154  0000                     _PORTDbits	set	3971
   155  0000                     _TRISDbits	set	3989
   156  0000                     _TMR0L	set	4054
   157  0000                     _TMR0H	set	4055
   158  0000                     _INTCON2bits	set	4081
   159  0000                     _ADCON2bits	set	4032
   160  0000                     _ADCON1bits	set	4033
   161  0000                     _IPR1bits	set	3999
   162  0000                     _PIE1bits	set	3997
   163  0000                     _RCONbits	set	4048
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISCbits	set	3988
   166  0000                     _TRISD	set	3989
   167  0000                     _TRISB	set	3987
   168  0000                     _RCSTAbits	set	4011
   169  0000                     _TXSTAbits	set	4012
   170  0000                     _EECON2	set	4007
   171  0000                     _EECON1bits	set	4006
   172  0000                     _EEDATA	set	4008
   173  0000                     _EEADR	set	4009
   174  0000                     _ADRESH	set	4036
   175  0000                     _ADRESL	set	4035
   176  0000                     _RCREG	set	4014
   177  0000                     _T0CONbits	set	4053
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _INTCONbits	set	4082
   180  0000                     _INTCON3bits	set	4080
   181  0000                     _PORTBbits	set	3969
   182  0000                     _TXREG	set	4013
   183  0000                     _PIR1bits	set	3998
   184  007A81                     STR_18:
   185  007A81  54                 	db	84	;'T'
   186  007A82  65                 	db	101	;'e'
   187  007A83  6D                 	db	109	;'m'
   188  007A84  70                 	db	112	;'p'
   189  007A85  65                 	db	101	;'e'
   190  007A86  72                 	db	114	;'r'
   191  007A87  61                 	db	97	;'a'
   192  007A88  74                 	db	116	;'t'
   193  007A89  75                 	db	117	;'u'
   194  007A8A  72                 	db	114	;'r'
   195  007A8B  65                 	db	101	;'e'
   196  007A8C  20                 	db	32
   197  007A8D  54                 	db	84	;'T'
   198  007A8E  68                 	db	104	;'h'
   199  007A8F  72                 	db	114	;'r'
   200  007A90  65                 	db	101	;'e'
   201  007A91  73                 	db	115	;'s'
   202  007A92  68                 	db	104	;'h'
   203  007A93  6F                 	db	111	;'o'
   204  007A94  6C                 	db	108	;'l'
   205  007A95  64                 	db	100	;'d'
   206  007A96  3A                 	db	58	;':'
   207  007A97  20                 	db	32
   208  007A98  25                 	db	37
   209  007A99  64                 	db	100	;'d'
   210  007A9A  0A                 	db	10
   211  007A9B  0D                 	db	13
   212  007A9C  43                 	db	67	;'C'
   213  007A9D  75                 	db	117	;'u'
   214  007A9E  72                 	db	114	;'r'
   215  007A9F  72                 	db	114	;'r'
   216  007AA0  65                 	db	101	;'e'
   217  007AA1  6E                 	db	110	;'n'
   218  007AA2  74                 	db	116	;'t'
   219  007AA3  20                 	db	32
   220  007AA4  54                 	db	84	;'T'
   221  007AA5  65                 	db	101	;'e'
   222  007AA6  6D                 	db	109	;'m'
   223  007AA7  70                 	db	112	;'p'
   224  007AA8  20                 	db	32
   225  007AA9  5B                 	db	91	;'['
   226  007AAA  46                 	db	70	;'F'
   227  007AAB  5D                 	db	93	;']'
   228  007AAC  3A                 	db	58	;':'
   229  007AAD  20                 	db	32
   230  007AAE  25                 	db	37
   231  007AAF  6C                 	db	108	;'l'
   232  007AB0  64                 	db	100	;'d'
   233  007AB1  0A                 	db	10
   234  007AB2  0D                 	db	13
   235  007AB3  0A                 	db	10
   236  007AB4  0D                 	db	13
   237  007AB5  41                 	db	65	;'A'
   238  007AB6  6C                 	db	108	;'l'
   239  007AB7  61                 	db	97	;'a'
   240  007AB8  72                 	db	114	;'r'
   241  007AB9  6D                 	db	109	;'m'
   242  007ABA  20                 	db	32
   243  007ABB  53                 	db	83	;'S'
   244  007ABC  79                 	db	121	;'y'
   245  007ABD  73                 	db	115	;'s'
   246  007ABE  74                 	db	116	;'t'
   247  007ABF  65                 	db	101	;'e'
   248  007AC0  6D                 	db	109	;'m'
   249  007AC1  0A                 	db	10
   250  007AC2  0D                 	db	13
   251  007AC3  2D                 	db	45
   252  007AC4  2D                 	db	45
   253  007AC5  2D                 	db	45
   254  007AC6  2D                 	db	45
   255  007AC7  2D                 	db	45
   256  007AC8  2D                 	db	45
   257  007AC9  2D                 	db	45
   258  007ACA  2D                 	db	45
   259  007ACB  2D                 	db	45
   260  007ACC  2D                 	db	45
   261  007ACD  2D                 	db	45
   262  007ACE  2D                 	db	45
   263  007ACF  2D                 	db	45
   264  007AD0  2D                 	db	45
   265  007AD1  2D                 	db	45
   266  007AD2  2D                 	db	45
   267  007AD3  2D                 	db	45
   268  007AD4  0A                 	db	10
   269  007AD5  0D                 	db	13
   270  007AD6  31                 	db	49	;'1'
   271  007AD7  29                 	db	41
   272  007AD8  50                 	db	80	;'P'
   273  007AD9  61                 	db	97	;'a'
   274  007ADA  73                 	db	115	;'s'
   275  007ADB  73                 	db	115	;'s'
   276  007ADC  77                 	db	119	;'w'
   277  007ADD  6F                 	db	111	;'o'
   278  007ADE  72                 	db	114	;'r'
   279  007ADF  64                 	db	100	;'d'
   280  007AE0  0A                 	db	10
   281  007AE1  0D                 	db	13
   282  007AE2  32                 	db	50	;'2'
   283  007AE3  29                 	db	41
   284  007AE4  50                 	db	80	;'P'
   285  007AE5  49                 	db	73	;'I'
   286  007AE6  52                 	db	82	;'R'
   287  007AE7  20                 	db	32
   288  007AE8  53                 	db	83	;'S'
   289  007AE9  65                 	db	101	;'e'
   290  007AEA  6E                 	db	110	;'n'
   291  007AEB  73                 	db	115	;'s'
   292  007AEC  6F                 	db	111	;'o'
   293  007AED  72                 	db	114	;'r'
   294  007AEE  0A                 	db	10
   295  007AEF  0D                 	db	13
   296  007AF0  33                 	db	51	;'3'
   297  007AF1  29                 	db	41
   298  007AF2  54                 	db	84	;'T'
   299  007AF3  65                 	db	101	;'e'
   300  007AF4  6D                 	db	109	;'m'
   301  007AF5  70                 	db	112	;'p'
   302  007AF6  20                 	db	32
   303  007AF7  53                 	db	83	;'S'
   304  007AF8  65                 	db	101	;'e'
   305  007AF9  6E                 	db	110	;'n'
   306  007AFA  73                 	db	115	;'s'
   307  007AFB  6F                 	db	111	;'o'
   308  007AFC  72                 	db	114	;'r'
   309  007AFD  0A                 	db	10
   310  007AFE  0D                 	db	13
   311  007AFF  34                 	db	52	;'4'
   312  007B00  29                 	db	41
   313  007B01  49                 	db	73	;'I'
   314  007B02  6E                 	db	110	;'n'
   315  007B03  70                 	db	112	;'p'
   316  007B04  75                 	db	117	;'u'
   317  007B05  74                 	db	116	;'t'
   318  007B06  20                 	db	32
   319  007B07  4D                 	db	77	;'M'
   320  007B08  65                 	db	101	;'e'
   321  007B09  74                 	db	116	;'t'
   322  007B0A  68                 	db	104	;'h'
   323  007B0B  6F                 	db	111	;'o'
   324  007B0C  64                 	db	100	;'d'
   325  007B0D  0A                 	db	10
   326  007B0E  0D                 	db	13
   327  007B0F  2D                 	db	45
   328  007B10  2D                 	db	45
   329  007B11  2D                 	db	45
   330  007B12  2D                 	db	45
   331  007B13  2D                 	db	45
   332  007B14  2D                 	db	45
   333  007B15  2D                 	db	45
   334  007B16  2D                 	db	45
   335  007B17  2D                 	db	45
   336  007B18  2D                 	db	45
   337  007B19  2D                 	db	45
   338  007B1A  2D                 	db	45
   339  007B1B  2D                 	db	45
   340  007B1C  2D                 	db	45
   341  007B1D  2D                 	db	45
   342  007B1E  2D                 	db	45
   343  007B1F  0A                 	db	10
   344  007B20  0D                 	db	13
   345  007B21  00                 	db	0
   346  007B22                     STR_53:
   347  007B22  54                 	db	84	;'T'
   348  007B23  65                 	db	101	;'e'
   349  007B24  6D                 	db	109	;'m'
   350  007B25  70                 	db	112	;'p'
   351  007B26  65                 	db	101	;'e'
   352  007B27  72                 	db	114	;'r'
   353  007B28  61                 	db	97	;'a'
   354  007B29  74                 	db	116	;'t'
   355  007B2A  75                 	db	117	;'u'
   356  007B2B  72                 	db	114	;'r'
   357  007B2C  65                 	db	101	;'e'
   358  007B2D  20                 	db	32
   359  007B2E  54                 	db	84	;'T'
   360  007B2F  68                 	db	104	;'h'
   361  007B30  72                 	db	114	;'r'
   362  007B31  65                 	db	101	;'e'
   363  007B32  73                 	db	115	;'s'
   364  007B33  68                 	db	104	;'h'
   365  007B34  6F                 	db	111	;'o'
   366  007B35  6C                 	db	108	;'l'
   367  007B36  64                 	db	100	;'d'
   368  007B37  3A                 	db	58	;':'
   369  007B38  20                 	db	32
   370  007B39  25                 	db	37
   371  007B3A  64                 	db	100	;'d'
   372  007B3B  0A                 	db	10
   373  007B3C  0D                 	db	13
   374  007B3D  43                 	db	67	;'C'
   375  007B3E  75                 	db	117	;'u'
   376  007B3F  72                 	db	114	;'r'
   377  007B40  72                 	db	114	;'r'
   378  007B41  65                 	db	101	;'e'
   379  007B42  6E                 	db	110	;'n'
   380  007B43  74                 	db	116	;'t'
   381  007B44  20                 	db	32
   382  007B45  54                 	db	84	;'T'
   383  007B46  65                 	db	101	;'e'
   384  007B47  6D                 	db	109	;'m'
   385  007B48  70                 	db	112	;'p'
   386  007B49  20                 	db	32
   387  007B4A  5B                 	db	91	;'['
   388  007B4B  46                 	db	70	;'F'
   389  007B4C  5D                 	db	93	;']'
   390  007B4D  3A                 	db	58	;':'
   391  007B4E  20                 	db	32
   392  007B4F  25                 	db	37
   393  007B50  6C                 	db	108	;'l'
   394  007B51  64                 	db	100	;'d'
   395  007B52  0A                 	db	10
   396  007B53  0D                 	db	13
   397  007B54  0A                 	db	10
   398  007B55  0D                 	db	13
   399  007B56  54                 	db	84	;'T'
   400  007B57  65                 	db	101	;'e'
   401  007B58  6D                 	db	109	;'m'
   402  007B59  70                 	db	112	;'p'
   403  007B5A  65                 	db	101	;'e'
   404  007B5B  72                 	db	114	;'r'
   405  007B5C  61                 	db	97	;'a'
   406  007B5D  74                 	db	116	;'t'
   407  007B5E  75                 	db	117	;'u'
   408  007B5F  72                 	db	114	;'r'
   409  007B60  65                 	db	101	;'e'
   410  007B61  20                 	db	32
   411  007B62  53                 	db	83	;'S'
   412  007B63  65                 	db	101	;'e'
   413  007B64  6E                 	db	110	;'n'
   414  007B65  73                 	db	115	;'s'
   415  007B66  6F                 	db	111	;'o'
   416  007B67  72                 	db	114	;'r'
   417  007B68  20                 	db	32
   418  007B69  4F                 	db	79	;'O'
   419  007B6A  50                 	db	80	;'P'
   420  007B6B  54                 	db	84	;'T'
   421  007B6C  49                 	db	73	;'I'
   422  007B6D  4F                 	db	79	;'O'
   423  007B6E  4E                 	db	78	;'N'
   424  007B6F  53                 	db	83	;'S'
   425  007B70  0A                 	db	10
   426  007B71  0D                 	db	13
   427  007B72  31                 	db	49	;'1'
   428  007B73  29                 	db	41
   429  007B74  20                 	db	32
   430  007B75  45                 	db	69	;'E'
   431  007B76  6E                 	db	110	;'n'
   432  007B77  61                 	db	97	;'a'
   433  007B78  62                 	db	98	;'b'
   434  007B79  6C                 	db	108	;'l'
   435  007B7A  65                 	db	101	;'e'
   436  007B7B  2F                 	db	47
   437  007B7C  44                 	db	68	;'D'
   438  007B7D  69                 	db	105	;'i'
   439  007B7E  73                 	db	115	;'s'
   440  007B7F  61                 	db	97	;'a'
   441  007B80  62                 	db	98	;'b'
   442  007B81  6C                 	db	108	;'l'
   443  007B82  65                 	db	101	;'e'
   444  007B83  20                 	db	32
   445  007B84  41                 	db	65	;'A'
   446  007B85  6C                 	db	108	;'l'
   447  007B86  61                 	db	97	;'a'
   448  007B87  72                 	db	114	;'r'
   449  007B88  6D                 	db	109	;'m'
   450  007B89  0A                 	db	10
   451  007B8A  0D                 	db	13
   452  007B8B  32                 	db	50	;'2'
   453  007B8C  29                 	db	41
   454  007B8D  20                 	db	32
   455  007B8E  54                 	db	84	;'T'
   456  007B8F  65                 	db	101	;'e'
   457  007B90  6D                 	db	109	;'m'
   458  007B91  70                 	db	112	;'p'
   459  007B92  65                 	db	101	;'e'
   460  007B93  72                 	db	114	;'r'
   461  007B94  61                 	db	97	;'a'
   462  007B95  74                 	db	116	;'t'
   463  007B96  75                 	db	117	;'u'
   464  007B97  72                 	db	114	;'r'
   465  007B98  65                 	db	101	;'e'
   466  007B99  20                 	db	32
   467  007B9A  54                 	db	84	;'T'
   468  007B9B  68                 	db	104	;'h'
   469  007B9C  72                 	db	114	;'r'
   470  007B9D  65                 	db	101	;'e'
   471  007B9E  73                 	db	115	;'s'
   472  007B9F  68                 	db	104	;'h'
   473  007BA0  6F                 	db	111	;'o'
   474  007BA1  6C                 	db	108	;'l'
   475  007BA2  64                 	db	100	;'d'
   476  007BA3  0A                 	db	10
   477  007BA4  0D                 	db	13
   478  007BA5  33                 	db	51	;'3'
   479  007BA6  29                 	db	41
   480  007BA7  20                 	db	32
   481  007BA8  52                 	db	82	;'R'
   482  007BA9  65                 	db	101	;'e'
   483  007BAA  74                 	db	116	;'t'
   484  007BAB  75                 	db	117	;'u'
   485  007BAC  72                 	db	114	;'r'
   486  007BAD  6E                 	db	110	;'n'
   487  007BAE  20                 	db	32
   488  007BAF  74                 	db	116	;'t'
   489  007BB0  6F                 	db	111	;'o'
   490  007BB1  20                 	db	32
   491  007BB2  4D                 	db	77	;'M'
   492  007BB3  65                 	db	101	;'e'
   493  007BB4  6E                 	db	110	;'n'
   494  007BB5  75                 	db	117	;'u'
   495  007BB6  0A                 	db	10
   496  007BB7  0D                 	db	13
   497  007BB8  00                 	db	0
   498  007BB9                     STR_64:
   499  007BB9  54                 	db	84	;'T'
   500  007BBA  65                 	db	101	;'e'
   501  007BBB  6D                 	db	109	;'m'
   502  007BBC  70                 	db	112	;'p'
   503  007BBD  65                 	db	101	;'e'
   504  007BBE  72                 	db	114	;'r'
   505  007BBF  61                 	db	97	;'a'
   506  007BC0  74                 	db	116	;'t'
   507  007BC1  75                 	db	117	;'u'
   508  007BC2  72                 	db	114	;'r'
   509  007BC3  65                 	db	101	;'e'
   510  007BC4  20                 	db	32
   511  007BC5  54                 	db	84	;'T'
   512  007BC6  68                 	db	104	;'h'
   513  007BC7  72                 	db	114	;'r'
   514  007BC8  65                 	db	101	;'e'
   515  007BC9  73                 	db	115	;'s'
   516  007BCA  68                 	db	104	;'h'
   517  007BCB  6F                 	db	111	;'o'
   518  007BCC  6C                 	db	108	;'l'
   519  007BCD  64                 	db	100	;'d'
   520  007BCE  3A                 	db	58	;':'
   521  007BCF  20                 	db	32
   522  007BD0  25                 	db	37
   523  007BD1  64                 	db	100	;'d'
   524  007BD2  0A                 	db	10
   525  007BD3  0D                 	db	13
   526  007BD4  43                 	db	67	;'C'
   527  007BD5  75                 	db	117	;'u'
   528  007BD6  72                 	db	114	;'r'
   529  007BD7  72                 	db	114	;'r'
   530  007BD8  65                 	db	101	;'e'
   531  007BD9  6E                 	db	110	;'n'
   532  007BDA  74                 	db	116	;'t'
   533  007BDB  20                 	db	32
   534  007BDC  54                 	db	84	;'T'
   535  007BDD  65                 	db	101	;'e'
   536  007BDE  6D                 	db	109	;'m'
   537  007BDF  70                 	db	112	;'p'
   538  007BE0  20                 	db	32
   539  007BE1  5B                 	db	91	;'['
   540  007BE2  46                 	db	70	;'F'
   541  007BE3  5D                 	db	93	;']'
   542  007BE4  3A                 	db	58	;':'
   543  007BE5  20                 	db	32
   544  007BE6  25                 	db	37
   545  007BE7  6C                 	db	108	;'l'
   546  007BE8  64                 	db	100	;'d'
   547  007BE9  0A                 	db	10
   548  007BEA  0D                 	db	13
   549  007BEB  0A                 	db	10
   550  007BEC  0D                 	db	13
   551  007BED  49                 	db	73	;'I'
   552  007BEE  4E                 	db	78	;'N'
   553  007BEF  50                 	db	80	;'P'
   554  007BF0  55                 	db	85	;'U'
   555  007BF1  54                 	db	84	;'T'
   556  007BF2  20                 	db	32
   557  007BF3  4F                 	db	79	;'O'
   558  007BF4  50                 	db	80	;'P'
   559  007BF5  54                 	db	84	;'T'
   560  007BF6  49                 	db	73	;'I'
   561  007BF7  4F                 	db	79	;'O'
   562  007BF8  4E                 	db	78	;'N'
   563  007BF9  53                 	db	83	;'S'
   564  007BFA  3A                 	db	58	;':'
   565  007BFB  0A                 	db	10
   566  007BFC  0D                 	db	13
   567  007BFD  31                 	db	49	;'1'
   568  007BFE  29                 	db	41
   569  007BFF  20                 	db	32
   570  007C00  55                 	db	85	;'U'
   571  007C01  73                 	db	115	;'s'
   572  007C02  65                 	db	101	;'e'
   573  007C03  20                 	db	32
   574  007C04  4B                 	db	75	;'K'
   575  007C05  65                 	db	101	;'e'
   576  007C06  79                 	db	121	;'y'
   577  007C07  70                 	db	112	;'p'
   578  007C08  61                 	db	97	;'a'
   579  007C09  64                 	db	100	;'d'
   580  007C0A  0A                 	db	10
   581  007C0B  0D                 	db	13
   582  007C0C  32                 	db	50	;'2'
   583  007C0D  29                 	db	41
   584  007C0E  20                 	db	32
   585  007C0F  55                 	db	85	;'U'
   586  007C10  73                 	db	115	;'s'
   587  007C11  65                 	db	101	;'e'
   588  007C12  20                 	db	32
   589  007C13  4B                 	db	75	;'K'
   590  007C14  65                 	db	101	;'e'
   591  007C15  79                 	db	121	;'y'
   592  007C16  62                 	db	98	;'b'
   593  007C17  6F                 	db	111	;'o'
   594  007C18  61                 	db	97	;'a'
   595  007C19  72                 	db	114	;'r'
   596  007C1A  64                 	db	100	;'d'
   597  007C1B  0A                 	db	10
   598  007C1C  0D                 	db	13
   599  007C1D  33                 	db	51	;'3'
   600  007C1E  29                 	db	41
   601  007C1F  20                 	db	32
   602  007C20  55                 	db	85	;'U'
   603  007C21  73                 	db	115	;'s'
   604  007C22  65                 	db	101	;'e'
   605  007C23  20                 	db	32
   606  007C24  42                 	db	66	;'B'
   607  007C25  4F                 	db	79	;'O'
   608  007C26  54                 	db	84	;'T'
   609  007C27  48                 	db	72	;'H'
   610  007C28  0A                 	db	10
   611  007C29  0D                 	db	13
   612  007C2A  34                 	db	52	;'4'
   613  007C2B  29                 	db	41
   614  007C2C  20                 	db	32
   615  007C2D  52                 	db	82	;'R'
   616  007C2E  65                 	db	101	;'e'
   617  007C2F  74                 	db	116	;'t'
   618  007C30  75                 	db	117	;'u'
   619  007C31  72                 	db	114	;'r'
   620  007C32  6E                 	db	110	;'n'
   621  007C33  20                 	db	32
   622  007C34  74                 	db	116	;'t'
   623  007C35  6F                 	db	111	;'o'
   624  007C36  20                 	db	32
   625  007C37  4D                 	db	77	;'M'
   626  007C38  65                 	db	101	;'e'
   627  007C39  6E                 	db	110	;'n'
   628  007C3A  75                 	db	117	;'u'
   629  007C3B  0A                 	db	10
   630  007C3C  0D                 	db	13
   631  007C3D  00                 	db	0
   632  007C3E                     STR_44:
   633  007C3E  54                 	db	84	;'T'
   634  007C3F  65                 	db	101	;'e'
   635  007C40  6D                 	db	109	;'m'
   636  007C41  70                 	db	112	;'p'
   637  007C42  65                 	db	101	;'e'
   638  007C43  72                 	db	114	;'r'
   639  007C44  61                 	db	97	;'a'
   640  007C45  74                 	db	116	;'t'
   641  007C46  75                 	db	117	;'u'
   642  007C47  72                 	db	114	;'r'
   643  007C48  65                 	db	101	;'e'
   644  007C49  20                 	db	32
   645  007C4A  54                 	db	84	;'T'
   646  007C4B  68                 	db	104	;'h'
   647  007C4C  72                 	db	114	;'r'
   648  007C4D  65                 	db	101	;'e'
   649  007C4E  73                 	db	115	;'s'
   650  007C4F  68                 	db	104	;'h'
   651  007C50  6F                 	db	111	;'o'
   652  007C51  6C                 	db	108	;'l'
   653  007C52  64                 	db	100	;'d'
   654  007C53  3A                 	db	58	;':'
   655  007C54  20                 	db	32
   656  007C55  25                 	db	37
   657  007C56  64                 	db	100	;'d'
   658  007C57  0A                 	db	10
   659  007C58  0D                 	db	13
   660  007C59  43                 	db	67	;'C'
   661  007C5A  75                 	db	117	;'u'
   662  007C5B  72                 	db	114	;'r'
   663  007C5C  72                 	db	114	;'r'
   664  007C5D  65                 	db	101	;'e'
   665  007C5E  6E                 	db	110	;'n'
   666  007C5F  74                 	db	116	;'t'
   667  007C60  20                 	db	32
   668  007C61  54                 	db	84	;'T'
   669  007C62  65                 	db	101	;'e'
   670  007C63  6D                 	db	109	;'m'
   671  007C64  70                 	db	112	;'p'
   672  007C65  20                 	db	32
   673  007C66  5B                 	db	91	;'['
   674  007C67  46                 	db	70	;'F'
   675  007C68  5D                 	db	93	;']'
   676  007C69  3A                 	db	58	;':'
   677  007C6A  20                 	db	32
   678  007C6B  25                 	db	37
   679  007C6C  6C                 	db	108	;'l'
   680  007C6D  64                 	db	100	;'d'
   681  007C6E  0A                 	db	10
   682  007C6F  0D                 	db	13
   683  007C70  0A                 	db	10
   684  007C71  0D                 	db	13
   685  007C72  50                 	db	80	;'P'
   686  007C73  49                 	db	73	;'I'
   687  007C74  52                 	db	82	;'R'
   688  007C75  20                 	db	32
   689  007C76  53                 	db	83	;'S'
   690  007C77  65                 	db	101	;'e'
   691  007C78  6E                 	db	110	;'n'
   692  007C79  73                 	db	115	;'s'
   693  007C7A  6F                 	db	111	;'o'
   694  007C7B  72                 	db	114	;'r'
   695  007C7C  20                 	db	32
   696  007C7D  4F                 	db	79	;'O'
   697  007C7E  50                 	db	80	;'P'
   698  007C7F  54                 	db	84	;'T'
   699  007C80  49                 	db	73	;'I'
   700  007C81  4F                 	db	79	;'O'
   701  007C82  4E                 	db	78	;'N'
   702  007C83  53                 	db	83	;'S'
   703  007C84  0A                 	db	10
   704  007C85  0D                 	db	13
   705  007C86  31                 	db	49	;'1'
   706  007C87  29                 	db	41
   707  007C88  20                 	db	32
   708  007C89  45                 	db	69	;'E'
   709  007C8A  6E                 	db	110	;'n'
   710  007C8B  61                 	db	97	;'a'
   711  007C8C  62                 	db	98	;'b'
   712  007C8D  6C                 	db	108	;'l'
   713  007C8E  65                 	db	101	;'e'
   714  007C8F  2F                 	db	47
   715  007C90  44                 	db	68	;'D'
   716  007C91  69                 	db	105	;'i'
   717  007C92  73                 	db	115	;'s'
   718  007C93  61                 	db	97	;'a'
   719  007C94  62                 	db	98	;'b'
   720  007C95  6C                 	db	108	;'l'
   721  007C96  65                 	db	101	;'e'
   722  007C97  20                 	db	32
   723  007C98  41                 	db	65	;'A'
   724  007C99  6C                 	db	108	;'l'
   725  007C9A  61                 	db	97	;'a'
   726  007C9B  72                 	db	114	;'r'
   727  007C9C  6D                 	db	109	;'m'
   728  007C9D  0A                 	db	10
   729  007C9E  0D                 	db	13
   730  007C9F  32                 	db	50	;'2'
   731  007CA0  29                 	db	41
   732  007CA1  20                 	db	32
   733  007CA2  52                 	db	82	;'R'
   734  007CA3  65                 	db	101	;'e'
   735  007CA4  74                 	db	116	;'t'
   736  007CA5  75                 	db	117	;'u'
   737  007CA6  72                 	db	114	;'r'
   738  007CA7  6E                 	db	110	;'n'
   739  007CA8  20                 	db	32
   740  007CA9  74                 	db	116	;'t'
   741  007CAA  6F                 	db	111	;'o'
   742  007CAB  20                 	db	32
   743  007CAC  4D                 	db	77	;'M'
   744  007CAD  65                 	db	101	;'e'
   745  007CAE  6E                 	db	110	;'n'
   746  007CAF  75                 	db	117	;'u'
   747  007CB0  0A                 	db	10
   748  007CB1  0D                 	db	13
   749  007CB2  00                 	db	0
   750  007CB3                     STR_36:
   751  007CB3  54                 	db	84	;'T'
   752  007CB4  65                 	db	101	;'e'
   753  007CB5  6D                 	db	109	;'m'
   754  007CB6  70                 	db	112	;'p'
   755  007CB7  65                 	db	101	;'e'
   756  007CB8  72                 	db	114	;'r'
   757  007CB9  61                 	db	97	;'a'
   758  007CBA  74                 	db	116	;'t'
   759  007CBB  75                 	db	117	;'u'
   760  007CBC  72                 	db	114	;'r'
   761  007CBD  65                 	db	101	;'e'
   762  007CBE  20                 	db	32
   763  007CBF  54                 	db	84	;'T'
   764  007CC0  68                 	db	104	;'h'
   765  007CC1  72                 	db	114	;'r'
   766  007CC2  65                 	db	101	;'e'
   767  007CC3  73                 	db	115	;'s'
   768  007CC4  68                 	db	104	;'h'
   769  007CC5  6F                 	db	111	;'o'
   770  007CC6  6C                 	db	108	;'l'
   771  007CC7  64                 	db	100	;'d'
   772  007CC8  3A                 	db	58	;':'
   773  007CC9  20                 	db	32
   774  007CCA  25                 	db	37
   775  007CCB  64                 	db	100	;'d'
   776  007CCC  0A                 	db	10
   777  007CCD  0D                 	db	13
   778  007CCE  43                 	db	67	;'C'
   779  007CCF  75                 	db	117	;'u'
   780  007CD0  72                 	db	114	;'r'
   781  007CD1  72                 	db	114	;'r'
   782  007CD2  65                 	db	101	;'e'
   783  007CD3  6E                 	db	110	;'n'
   784  007CD4  74                 	db	116	;'t'
   785  007CD5  20                 	db	32
   786  007CD6  54                 	db	84	;'T'
   787  007CD7  65                 	db	101	;'e'
   788  007CD8  6D                 	db	109	;'m'
   789  007CD9  70                 	db	112	;'p'
   790  007CDA  20                 	db	32
   791  007CDB  5B                 	db	91	;'['
   792  007CDC  46                 	db	70	;'F'
   793  007CDD  5D                 	db	93	;']'
   794  007CDE  3A                 	db	58	;':'
   795  007CDF  20                 	db	32
   796  007CE0  25                 	db	37
   797  007CE1  6C                 	db	108	;'l'
   798  007CE2  64                 	db	100	;'d'
   799  007CE3  0A                 	db	10
   800  007CE4  0D                 	db	13
   801  007CE5  0A                 	db	10
   802  007CE6  0D                 	db	13
   803  007CE7  50                 	db	80	;'P'
   804  007CE8  41                 	db	65	;'A'
   805  007CE9  53                 	db	83	;'S'
   806  007CEA  53                 	db	83	;'S'
   807  007CEB  57                 	db	87	;'W'
   808  007CEC  4F                 	db	79	;'O'
   809  007CED  52                 	db	82	;'R'
   810  007CEE  44                 	db	68	;'D'
   811  007CEF  20                 	db	32
   812  007CF0  4F                 	db	79	;'O'
   813  007CF1  50                 	db	80	;'P'
   814  007CF2  54                 	db	84	;'T'
   815  007CF3  49                 	db	73	;'I'
   816  007CF4  4F                 	db	79	;'O'
   817  007CF5  4E                 	db	78	;'N'
   818  007CF6  53                 	db	83	;'S'
   819  007CF7  0A                 	db	10
   820  007CF8  0D                 	db	13
   821  007CF9  31                 	db	49	;'1'
   822  007CFA  29                 	db	41
   823  007CFB  43                 	db	67	;'C'
   824  007CFC  68                 	db	104	;'h'
   825  007CFD  61                 	db	97	;'a'
   826  007CFE  6E                 	db	110	;'n'
   827  007CFF  67                 	db	103	;'g'
   828  007D00  65                 	db	101	;'e'
   829  007D01  20                 	db	32
   830  007D02  50                 	db	80	;'P'
   831  007D03  61                 	db	97	;'a'
   832  007D04  73                 	db	115	;'s'
   833  007D05  73                 	db	115	;'s'
   834  007D06  77                 	db	119	;'w'
   835  007D07  6F                 	db	111	;'o'
   836  007D08  72                 	db	114	;'r'
   837  007D09  64                 	db	100	;'d'
   838  007D0A  0A                 	db	10
   839  007D0B  0D                 	db	13
   840  007D0C  32                 	db	50	;'2'
   841  007D0D  29                 	db	41
   842  007D0E  20                 	db	32
   843  007D0F  52                 	db	82	;'R'
   844  007D10  65                 	db	101	;'e'
   845  007D11  74                 	db	116	;'t'
   846  007D12  75                 	db	117	;'u'
   847  007D13  72                 	db	114	;'r'
   848  007D14  6E                 	db	110	;'n'
   849  007D15  20                 	db	32
   850  007D16  74                 	db	116	;'t'
   851  007D17  6F                 	db	111	;'o'
   852  007D18  20                 	db	32
   853  007D19  4D                 	db	77	;'M'
   854  007D1A  65                 	db	101	;'e'
   855  007D1B  6E                 	db	110	;'n'
   856  007D1C  75                 	db	117	;'u'
   857  007D1D  0A                 	db	10
   858  007D1E  0D                 	db	13
   859  007D1F  00                 	db	0
   860  007D20                     STR_8:
   861  007D20  0A                 	db	10
   862  007D21  0D                 	db	13
   863  007D22  44                 	db	68	;'D'
   864  007D23  6F                 	db	111	;'o'
   865  007D24  20                 	db	32
   866  007D25  79                 	db	121	;'y'
   867  007D26  6F                 	db	111	;'o'
   868  007D27  75                 	db	117	;'u'
   869  007D28  20                 	db	32
   870  007D29  77                 	db	119	;'w'
   871  007D2A  61                 	db	97	;'a'
   872  007D2B  6E                 	db	110	;'n'
   873  007D2C  74                 	db	116	;'t'
   874  007D2D  20                 	db	32
   875  007D2E  74                 	db	116	;'t'
   876  007D2F  6F                 	db	111	;'o'
   877  007D30  20                 	db	32
   878  007D31  63                 	db	99	;'c'
   879  007D32  68                 	db	104	;'h'
   880  007D33  61                 	db	97	;'a'
   881  007D34  6E                 	db	110	;'n'
   882  007D35  67                 	db	103	;'g'
   883  007D36  65                 	db	101	;'e'
   884  007D37  20                 	db	32
   885  007D38  74                 	db	116	;'t'
   886  007D39  68                 	db	104	;'h'
   887  007D3A  65                 	db	101	;'e'
   888  007D3B  20                 	db	32
   889  007D3C  74                 	db	116	;'t'
   890  007D3D  65                 	db	101	;'e'
   891  007D3E  6D                 	db	109	;'m'
   892  007D3F  70                 	db	112	;'p'
   893  007D40  20                 	db	32
   894  007D41  74                 	db	116	;'t'
   895  007D42  68                 	db	104	;'h'
   896  007D43  72                 	db	114	;'r'
   897  007D44  65                 	db	101	;'e'
   898  007D45  73                 	db	115	;'s'
   899  007D46  68                 	db	104	;'h'
   900  007D47  6F                 	db	111	;'o'
   901  007D48  6C                 	db	108	;'l'
   902  007D49  64                 	db	100	;'d'
   903  007D4A  3F                 	db	63	;'?'
   904  007D4B  0A                 	db	10
   905  007D4C  0D                 	db	13
   906  007D4D  31                 	db	49	;'1'
   907  007D4E  29                 	db	41
   908  007D4F  59                 	db	89	;'Y'
   909  007D50  65                 	db	101	;'e'
   910  007D51  73                 	db	115	;'s'
   911  007D52  0A                 	db	10
   912  007D53  0D                 	db	13
   913  007D54  32                 	db	50	;'2'
   914  007D55  29                 	db	41
   915  007D56  4E                 	db	78	;'N'
   916  007D57  6F                 	db	111	;'o'
   917  007D58  00                 	db	0
   918  007D59                     STR_27:
   919  007D59  0A                 	db	10
   920  007D5A  0D                 	db	13
   921  007D5B  50                 	db	80	;'P'
   922  007D5C  61                 	db	97	;'a'
   923  007D5D  73                 	db	115	;'s'
   924  007D5E  73                 	db	115	;'s'
   925  007D5F  77                 	db	119	;'w'
   926  007D60  6F                 	db	111	;'o'
   927  007D61  72                 	db	114	;'r'
   928  007D62  64                 	db	100	;'d'
   929  007D63  20                 	db	32
   930  007D64  49                 	db	73	;'I'
   931  007D65  6E                 	db	110	;'n'
   932  007D66  76                 	db	118	;'v'
   933  007D67  61                 	db	97	;'a'
   934  007D68  6C                 	db	108	;'l'
   935  007D69  69                 	db	105	;'i'
   936  007D6A  64                 	db	100	;'d'
   937  007D6B  2E                 	db	46
   938  007D6C  20                 	db	32
   939  007D6D  47                 	db	71	;'G'
   940  007D6E  6F                 	db	111	;'o'
   941  007D6F  69                 	db	105	;'i'
   942  007D70  6E                 	db	110	;'n'
   943  007D71  67                 	db	103	;'g'
   944  007D72  20                 	db	32
   945  007D73  62                 	db	98	;'b'
   946  007D74  61                 	db	97	;'a'
   947  007D75  63                 	db	99	;'c'
   948  007D76  6B                 	db	107	;'k'
   949  007D77  20                 	db	32
   950  007D78  74                 	db	116	;'t'
   951  007D79  6F                 	db	111	;'o'
   952  007D7A  20                 	db	32
   953  007D7B  50                 	db	80	;'P'
   954  007D7C  61                 	db	97	;'a'
   955  007D7D  73                 	db	115	;'s'
   956  007D7E  73                 	db	115	;'s'
   957  007D7F  77                 	db	119	;'w'
   958  007D80  6F                 	db	111	;'o'
   959  007D81  72                 	db	114	;'r'
   960  007D82  64                 	db	100	;'d'
   961  007D83  20                 	db	32
   962  007D84  4D                 	db	77	;'M'
   963  007D85  65                 	db	101	;'e'
   964  007D86  6E                 	db	110	;'n'
   965  007D87  75                 	db	117	;'u'
   966  007D88  2E                 	db	46
   967  007D89  2E                 	db	46
   968  007D8A  2E                 	db	46
   969  007D8B  2E                 	db	46
   970  007D8C  0A                 	db	10
   971  007D8D  0D                 	db	13
   972  007D8E  00                 	db	0
   973  007D8F                     STR_5:
   974  007D8F  0A                 	db	10
   975  007D90  0D                 	db	13
   976  007D91  50                 	db	80	;'P'
   977  007D92  72                 	db	114	;'r'
   978  007D93  65                 	db	101	;'e'
   979  007D94  73                 	db	115	;'s'
   980  007D95  73                 	db	115	;'s'
   981  007D96  20                 	db	32
   982  007D97  41                 	db	65	;'A'
   983  007D98  6E                 	db	110	;'n'
   984  007D99  79                 	db	121	;'y'
   985  007D9A  20                 	db	32
   986  007D9B  42                 	db	66	;'B'
   987  007D9C  75                 	db	117	;'u'
   988  007D9D  74                 	db	116	;'t'
   989  007D9E  74                 	db	116	;'t'
   990  007D9F  6F                 	db	111	;'o'
   991  007DA0  6E                 	db	110	;'n'
   992  007DA1  20                 	db	32
   993  007DA2  74                 	db	116	;'t'
   994  007DA3  6F                 	db	111	;'o'
   995  007DA4  20                 	db	32
   996  007DA5  72                 	db	114	;'r'
   997  007DA6  65                 	db	101	;'e'
   998  007DA7  74                 	db	116	;'t'
   999  007DA8  75                 	db	117	;'u'
  1000  007DA9  72                 	db	114	;'r'
  1001  007DAA  6E                 	db	110	;'n'
  1002  007DAB  20                 	db	32
  1003  007DAC  74                 	db	116	;'t'
  1004  007DAD  6F                 	db	111	;'o'
  1005  007DAE  20                 	db	32
  1006  007DAF  4D                 	db	77	;'M'
  1007  007DB0  65                 	db	101	;'e'
  1008  007DB1  6E                 	db	110	;'n'
  1009  007DB2  75                 	db	117	;'u'
  1010  007DB3  0A                 	db	10
  1011  007DB4  0D                 	db	13
  1012  007DB5  00                 	db	0
  1013  007DB6                     STR_6:
  1014  007DB6  0A                 	db	10
  1015  007DB7  0D                 	db	13
  1016  007DB8  0A                 	db	10
  1017  007DB9  0D                 	db	13
  1018  007DBA  0A                 	db	10
  1019  007DBB  0D                 	db	13
  1020  007DBC  54                 	db	84	;'T'
  1021  007DBD  45                 	db	69	;'E'
  1022  007DBE  4D                 	db	77	;'M'
  1023  007DBF  50                 	db	80	;'P'
  1024  007DC0  20                 	db	32
  1025  007DC1  54                 	db	84	;'T'
  1026  007DC2  48                 	db	72	;'H'
  1027  007DC3  52                 	db	82	;'R'
  1028  007DC4  45                 	db	69	;'E'
  1029  007DC5  53                 	db	83	;'S'
  1030  007DC6  48                 	db	72	;'H'
  1031  007DC7  4F                 	db	79	;'O'
  1032  007DC8  4C                 	db	76	;'L'
  1033  007DC9  44                 	db	68	;'D'
  1034  007DCA  20                 	db	32
  1035  007DCB  45                 	db	69	;'E'
  1036  007DCC  58                 	db	88	;'X'
  1037  007DCD  43                 	db	67	;'C'
  1038  007DCE  45                 	db	69	;'E'
  1039  007DCF  45                 	db	69	;'E'
  1040  007DD0  44                 	db	68	;'D'
  1041  007DD1  45                 	db	69	;'E'
  1042  007DD2  44                 	db	68	;'D'
  1043  007DD3  0A                 	db	10
  1044  007DD4  0D                 	db	13
  1045  007DD5  0A                 	db	10
  1046  007DD6  0D                 	db	13
  1047  007DD7  0A                 	db	10
  1048  007DD8  0D                 	db	13
  1049  007DD9  00                 	db	0
  1050  007DDA                     STR_4:
  1051  007DDA  0A                 	db	10
  1052  007DDB  0D                 	db	13
  1053  007DDC  45                 	db	69	;'E'
  1054  007DDD  4E                 	db	78	;'N'
  1055  007DDE  54                 	db	84	;'T'
  1056  007DDF  45                 	db	69	;'E'
  1057  007DE0  52                 	db	82	;'R'
  1058  007DE1  20                 	db	32
  1059  007DE2  50                 	db	80	;'P'
  1060  007DE3  41                 	db	65	;'A'
  1061  007DE4  53                 	db	83	;'S'
  1062  007DE5  53                 	db	83	;'S'
  1063  007DE6  57                 	db	87	;'W'
  1064  007DE7  4F                 	db	79	;'O'
  1065  007DE8  52                 	db	82	;'R'
  1066  007DE9  44                 	db	68	;'D'
  1067  007DEA  20                 	db	32
  1068  007DEB  54                 	db	84	;'T'
  1069  007DEC  4F                 	db	79	;'O'
  1070  007DED  20                 	db	32
  1071  007DEE  43                 	db	67	;'C'
  1072  007DEF  4F                 	db	79	;'O'
  1073  007DF0  4E                 	db	78	;'N'
  1074  007DF1  54                 	db	84	;'T'
  1075  007DF2  49                 	db	73	;'I'
  1076  007DF3  4E                 	db	78	;'N'
  1077  007DF4  55                 	db	85	;'U'
  1078  007DF5  45                 	db	69	;'E'
  1079  007DF6  0A                 	db	10
  1080  007DF7  0D                 	db	13
  1081  007DF8  00                 	db	0
  1082  007DF9                     STR_3:
  1083  007DF9  0A                 	db	10
  1084  007DFA  0D                 	db	13
  1085  007DFB  0A                 	db	10
  1086  007DFC  0D                 	db	13
  1087  007DFD  0A                 	db	10
  1088  007DFE  0D                 	db	13
  1089  007DFF  41                 	db	65	;'A'
  1090  007E00  4C                 	db	76	;'L'
  1091  007E01  41                 	db	65	;'A'
  1092  007E02  52                 	db	82	;'R'
  1093  007E03  4D                 	db	77	;'M'
  1094  007E04  20                 	db	32
  1095  007E05  54                 	db	84	;'T'
  1096  007E06  52                 	db	82	;'R'
  1097  007E07  49                 	db	73	;'I'
  1098  007E08  47                 	db	71	;'G'
  1099  007E09  47                 	db	71	;'G'
  1100  007E0A  45                 	db	69	;'E'
  1101  007E0B  52                 	db	82	;'R'
  1102  007E0C  45                 	db	69	;'E'
  1103  007E0D  44                 	db	68	;'D'
  1104  007E0E  0A                 	db	10
  1105  007E0F  0D                 	db	13
  1106  007E10  0A                 	db	10
  1107  007E11  0D                 	db	13
  1108  007E12  0A                 	db	10
  1109  007E13  0D                 	db	13
  1110  007E14  00                 	db	0
  1111  007E15                     STR_31:
  1112  007E15  0A                 	db	10
  1113  007E16  0D                 	db	13
  1114  007E17  78                 	db	120	;'x'
  1115  007E18  78                 	db	120	;'x'
  1116  007E19  78                 	db	120	;'x'
  1117  007E1A  78                 	db	120	;'x'
  1118  007E1B  78                 	db	120	;'x'
  1119  007E1C  78                 	db	120	;'x'
  1120  007E1D  78                 	db	120	;'x'
  1121  007E1E  49                 	db	73	;'I'
  1122  007E1F  4E                 	db	78	;'N'
  1123  007E20  56                 	db	86	;'V'
  1124  007E21  41                 	db	65	;'A'
  1125  007E22  4C                 	db	76	;'L'
  1126  007E23  49                 	db	73	;'I'
  1127  007E24  44                 	db	68	;'D'
  1128  007E25  78                 	db	120	;'x'
  1129  007E26  78                 	db	120	;'x'
  1130  007E27  78                 	db	120	;'x'
  1131  007E28  78                 	db	120	;'x'
  1132  007E29  78                 	db	120	;'x'
  1133  007E2A  78                 	db	120	;'x'
  1134  007E2B  78                 	db	120	;'x'
  1135  007E2C  0A                 	db	10
  1136  007E2D  0D                 	db	13
  1137  007E2E  0A                 	db	10
  1138  007E2F  0D                 	db	13
  1139  007E30  00                 	db	0
  1140  007E31                     STR_67:
  1141  007E31  0A                 	db	10
  1142  007E32  0D                 	db	13
  1143  007E33  55                 	db	85	;'U'
  1144  007E34  73                 	db	115	;'s'
  1145  007E35  69                 	db	105	;'i'
  1146  007E36  6E                 	db	110	;'n'
  1147  007E37  67                 	db	103	;'g'
  1148  007E38  20                 	db	32
  1149  007E39  4B                 	db	75	;'K'
  1150  007E3A  65                 	db	101	;'e'
  1151  007E3B  79                 	db	121	;'y'
  1152  007E3C  62                 	db	98	;'b'
  1153  007E3D  6F                 	db	111	;'o'
  1154  007E3E  61                 	db	97	;'a'
  1155  007E3F  72                 	db	114	;'r'
  1156  007E40  64                 	db	100	;'d'
  1157  007E41  20                 	db	32
  1158  007E42  61                 	db	97	;'a'
  1159  007E43  73                 	db	115	;'s'
  1160  007E44  20                 	db	32
  1161  007E45  49                 	db	73	;'I'
  1162  007E46  6E                 	db	110	;'n'
  1163  007E47  70                 	db	112	;'p'
  1164  007E48  75                 	db	117	;'u'
  1165  007E49  74                 	db	116	;'t'
  1166  007E4A  0A                 	db	10
  1167  007E4B  0D                 	db	13
  1168  007E4C  00                 	db	0
  1169  007E4D                     STR_57:
  1170  007E4D  45                 	db	69	;'E'
  1171  007E4E  6E                 	db	110	;'n'
  1172  007E4F  74                 	db	116	;'t'
  1173  007E50  65                 	db	101	;'e'
  1174  007E51  72                 	db	114	;'r'
  1175  007E52  20                 	db	32
  1176  007E53  6E                 	db	110	;'n'
  1177  007E54  65                 	db	101	;'e'
  1178  007E55  77                 	db	119	;'w'
  1179  007E56  20                 	db	32
  1180  007E57  74                 	db	116	;'t'
  1181  007E58  65                 	db	101	;'e'
  1182  007E59  6D                 	db	109	;'m'
  1183  007E5A  70                 	db	112	;'p'
  1184  007E5B  20                 	db	32
  1185  007E5C  74                 	db	116	;'t'
  1186  007E5D  68                 	db	104	;'h'
  1187  007E5E  72                 	db	114	;'r'
  1188  007E5F  65                 	db	101	;'e'
  1189  007E60  73                 	db	115	;'s'
  1190  007E61  68                 	db	104	;'h'
  1191  007E62  6F                 	db	111	;'o'
  1192  007E63  6C                 	db	108	;'l'
  1193  007E64  64                 	db	100	;'d'
  1194  007E65  0A                 	db	10
  1195  007E66  0D                 	db	13
  1196  007E67  00                 	db	0
  1197  007E68                     STR_56:
  1198  007E68  0A                 	db	10
  1199  007E69  0D                 	db	13
  1200  007E6A  54                 	db	84	;'T'
  1201  007E6B  65                 	db	101	;'e'
  1202  007E6C  6D                 	db	109	;'m'
  1203  007E6D  70                 	db	112	;'p'
  1204  007E6E  65                 	db	101	;'e'
  1205  007E6F  72                 	db	114	;'r'
  1206  007E70  61                 	db	97	;'a'
  1207  007E71  74                 	db	116	;'t'
  1208  007E72  75                 	db	117	;'u'
  1209  007E73  72                 	db	114	;'r'
  1210  007E74  65                 	db	101	;'e'
  1211  007E75  20                 	db	32
  1212  007E76  41                 	db	65	;'A'
  1213  007E77  6C                 	db	108	;'l'
  1214  007E78  61                 	db	97	;'a'
  1215  007E79  72                 	db	114	;'r'
  1216  007E7A  6D                 	db	109	;'m'
  1217  007E7B  20                 	db	32
  1218  007E7C  4F                 	db	79	;'O'
  1219  007E7D  46                 	db	70	;'F'
  1220  007E7E  46                 	db	70	;'F'
  1221  007E7F  0A                 	db	10
  1222  007E80  0D                 	db	13
  1223  007E81  00                 	db	0
  1224  007E82                     STR_66:
  1225  007E82  0A                 	db	10
  1226  007E83  0D                 	db	13
  1227  007E84  55                 	db	85	;'U'
  1228  007E85  73                 	db	115	;'s'
  1229  007E86  69                 	db	105	;'i'
  1230  007E87  6E                 	db	110	;'n'
  1231  007E88  67                 	db	103	;'g'
  1232  007E89  20                 	db	32
  1233  007E8A  4B                 	db	75	;'K'
  1234  007E8B  65                 	db	101	;'e'
  1235  007E8C  79                 	db	121	;'y'
  1236  007E8D  70                 	db	112	;'p'
  1237  007E8E  61                 	db	97	;'a'
  1238  007E8F  64                 	db	100	;'d'
  1239  007E90  20                 	db	32
  1240  007E91  61                 	db	97	;'a'
  1241  007E92  73                 	db	115	;'s'
  1242  007E93  20                 	db	32
  1243  007E94  49                 	db	73	;'I'
  1244  007E95  6E                 	db	110	;'n'
  1245  007E96  70                 	db	112	;'p'
  1246  007E97  75                 	db	117	;'u'
  1247  007E98  74                 	db	116	;'t'
  1248  007E99  0A                 	db	10
  1249  007E9A  0D                 	db	13
  1250  007E9B  00                 	db	0
  1251  007E9C                     STR_26:
  1252  007E9C  0A                 	db	10
  1253  007E9D  0D                 	db	13
  1254  007E9E  0A                 	db	10
  1255  007E9F  0D                 	db	13
  1256  007EA0  50                 	db	80	;'P'
  1257  007EA1  61                 	db	97	;'a'
  1258  007EA2  73                 	db	115	;'s'
  1259  007EA3  73                 	db	115	;'s'
  1260  007EA4  77                 	db	119	;'w'
  1261  007EA5  6F                 	db	111	;'o'
  1262  007EA6  72                 	db	114	;'r'
  1263  007EA7  64                 	db	100	;'d'
  1264  007EA8  20                 	db	32
  1265  007EA9  43                 	db	67	;'C'
  1266  007EAA  68                 	db	104	;'h'
  1267  007EAB  61                 	db	97	;'a'
  1268  007EAC  6E                 	db	110	;'n'
  1269  007EAD  67                 	db	103	;'g'
  1270  007EAE  65                 	db	101	;'e'
  1271  007EAF  64                 	db	100	;'d'
  1272  007EB0  0A                 	db	10
  1273  007EB1  0D                 	db	13
  1274  007EB2  0A                 	db	10
  1275  007EB3  0D                 	db	13
  1276  007EB4  00                 	db	0
  1277  007EB5                     STR_20:
  1278  007EB5  0A                 	db	10
  1279  007EB6  0D                 	db	13
  1280  007EB7  52                 	db	82	;'R'
  1281  007EB8  65                 	db	101	;'e'
  1282  007EB9  74                 	db	116	;'t'
  1283  007EBA  75                 	db	117	;'u'
  1284  007EBB  72                 	db	114	;'r'
  1285  007EBC  6E                 	db	110	;'n'
  1286  007EBD  69                 	db	105	;'i'
  1287  007EBE  6E                 	db	110	;'n'
  1288  007EBF  67                 	db	103	;'g'
  1289  007EC0  20                 	db	32
  1290  007EC1  74                 	db	116	;'t'
  1291  007EC2  6F                 	db	111	;'o'
  1292  007EC3  20                 	db	32
  1293  007EC4  4D                 	db	77	;'M'
  1294  007EC5  65                 	db	101	;'e'
  1295  007EC6  6E                 	db	110	;'n'
  1296  007EC7  75                 	db	117	;'u'
  1297  007EC8  2E                 	db	46
  1298  007EC9  2E                 	db	46
  1299  007ECA  2E                 	db	46
  1300  007ECB  0A                 	db	10
  1301  007ECC  0D                 	db	13
  1302  007ECD  00                 	db	0
  1303  007ECE                     STR_55:
  1304  007ECE  0A                 	db	10
  1305  007ECF  0D                 	db	13
  1306  007ED0  54                 	db	84	;'T'
  1307  007ED1  65                 	db	101	;'e'
  1308  007ED2  6D                 	db	109	;'m'
  1309  007ED3  70                 	db	112	;'p'
  1310  007ED4  65                 	db	101	;'e'
  1311  007ED5  72                 	db	114	;'r'
  1312  007ED6  61                 	db	97	;'a'
  1313  007ED7  74                 	db	116	;'t'
  1314  007ED8  75                 	db	117	;'u'
  1315  007ED9  72                 	db	114	;'r'
  1316  007EDA  65                 	db	101	;'e'
  1317  007EDB  20                 	db	32
  1318  007EDC  41                 	db	65	;'A'
  1319  007EDD  6C                 	db	108	;'l'
  1320  007EDE  61                 	db	97	;'a'
  1321  007EDF  72                 	db	114	;'r'
  1322  007EE0  6D                 	db	109	;'m'
  1323  007EE1  20                 	db	32
  1324  007EE2  4F                 	db	79	;'O'
  1325  007EE3  4E                 	db	78	;'N'
  1326  007EE4  0A                 	db	10
  1327  007EE5  0D                 	db	13
  1328  007EE6  00                 	db	0
  1329  007EE7                     STR_22:
  1330  007EE7  45                 	db	69	;'E'
  1331  007EE8  6E                 	db	110	;'n'
  1332  007EE9  74                 	db	116	;'t'
  1333  007EEA  65                 	db	101	;'e'
  1334  007EEB  72                 	db	114	;'r'
  1335  007EEC  20                 	db	32
  1336  007EED  43                 	db	67	;'C'
  1337  007EEE  75                 	db	117	;'u'
  1338  007EEF  72                 	db	114	;'r'
  1339  007EF0  72                 	db	114	;'r'
  1340  007EF1  65                 	db	101	;'e'
  1341  007EF2  6E                 	db	110	;'n'
  1342  007EF3  74                 	db	116	;'t'
  1343  007EF4  20                 	db	32
  1344  007EF5  50                 	db	80	;'P'
  1345  007EF6  61                 	db	97	;'a'
  1346  007EF7  73                 	db	115	;'s'
  1347  007EF8  73                 	db	115	;'s'
  1348  007EF9  77                 	db	119	;'w'
  1349  007EFA  6F                 	db	111	;'o'
  1350  007EFB  72                 	db	114	;'r'
  1351  007EFC  64                 	db	100	;'d'
  1352  007EFD  3A                 	db	58	;':'
  1353  007EFE  20                 	db	32
  1354  007EFF  00                 	db	0
  1355  007F00                     STR_21:
  1356  007F00  0A                 	db	10
  1357  007F01  45                 	db	69	;'E'
  1358  007F02  52                 	db	82	;'R'
  1359  007F03  52                 	db	82	;'R'
  1360  007F04  4F                 	db	79	;'O'
  1361  007F05  52                 	db	82	;'R'
  1362  007F06  20                 	db	32
  1363  007F07  49                 	db	73	;'I'
  1364  007F08  4E                 	db	78	;'N'
  1365  007F09  56                 	db	86	;'V'
  1366  007F0A  41                 	db	65	;'A'
  1367  007F0B  4C                 	db	76	;'L'
  1368  007F0C  49                 	db	73	;'I'
  1369  007F0D  44                 	db	68	;'D'
  1370  007F0E  20                 	db	32
  1371  007F0F  49                 	db	73	;'I'
  1372  007F10  4E                 	db	78	;'N'
  1373  007F11  50                 	db	80	;'P'
  1374  007F12  55                 	db	85	;'U'
  1375  007F13  54                 	db	84	;'T'
  1376  007F14  0A                 	db	10
  1377  007F15  0D                 	db	13
  1378  007F16  00                 	db	0
  1379  007F17                     STR_30:
  1380  007F17  0A                 	db	10
  1381  007F18  0D                 	db	13
  1382  007F19  50                 	db	80	;'P'
  1383  007F1A  41                 	db	65	;'A'
  1384  007F1B  53                 	db	83	;'S'
  1385  007F1C  53                 	db	83	;'S'
  1386  007F1D  57                 	db	87	;'W'
  1387  007F1E  4F                 	db	79	;'O'
  1388  007F1F  52                 	db	82	;'R'
  1389  007F20  44                 	db	68	;'D'
  1390  007F21  20                 	db	32
  1391  007F22  56                 	db	86	;'V'
  1392  007F23  41                 	db	65	;'A'
  1393  007F24  4C                 	db	76	;'L'
  1394  007F25  49                 	db	73	;'I'
  1395  007F26  44                 	db	68	;'D'
  1396  007F27  0A                 	db	10
  1397  007F28  0D                 	db	13
  1398  007F29  0A                 	db	10
  1399  007F2A  0D                 	db	13
  1400  007F2B  00                 	db	0
  1401  007F2C                     STR_38:
  1402  007F2C  43                 	db	67	;'C'
  1403  007F2D  68                 	db	104	;'h'
  1404  007F2E  61                 	db	97	;'a'
  1405  007F2F  6E                 	db	110	;'n'
  1406  007F30  67                 	db	103	;'g'
  1407  007F31  65                 	db	101	;'e'
  1408  007F32  64                 	db	100	;'d'
  1409  007F33  20                 	db	32
  1410  007F34  50                 	db	80	;'P'
  1411  007F35  61                 	db	97	;'a'
  1412  007F36  73                 	db	115	;'s'
  1413  007F37  73                 	db	115	;'s'
  1414  007F38  77                 	db	119	;'w'
  1415  007F39  6F                 	db	111	;'o'
  1416  007F3A  72                 	db	114	;'r'
  1417  007F3B  64                 	db	100	;'d'
  1418  007F3C  0A                 	db	10
  1419  007F3D  0D                 	db	13
  1420  007F3E  0A                 	db	10
  1421  007F3F  0D                 	db	13
  1422  007F40  00                 	db	0
  1423  007F41                     STR_16:
  1424  007F41  54                 	db	84	;'T'
  1425  007F42  65                 	db	101	;'e'
  1426  007F43  6D                 	db	109	;'m'
  1427  007F44  70                 	db	112	;'p'
  1428  007F45  20                 	db	32
  1429  007F46  53                 	db	83	;'S'
  1430  007F47  65                 	db	101	;'e'
  1431  007F48  6E                 	db	110	;'n'
  1432  007F49  73                 	db	115	;'s'
  1433  007F4A  6F                 	db	111	;'o'
  1434  007F4B  72                 	db	114	;'r'
  1435  007F4C  20                 	db	32
  1436  007F4D  69                 	db	105	;'i'
  1437  007F4E  73                 	db	115	;'s'
  1438  007F4F  20                 	db	32
  1439  007F50  4F                 	db	79	;'O'
  1440  007F51  46                 	db	70	;'F'
  1441  007F52  46                 	db	70	;'F'
  1442  007F53  0A                 	db	10
  1443  007F54  0D                 	db	13
  1444  007F55  00                 	db	0
  1445  007F56                     STR_24:
  1446  007F56  45                 	db	69	;'E'
  1447  007F57  6E                 	db	110	;'n'
  1448  007F58  74                 	db	116	;'t'
  1449  007F59  65                 	db	101	;'e'
  1450  007F5A  72                 	db	114	;'r'
  1451  007F5B  20                 	db	32
  1452  007F5C  4E                 	db	78	;'N'
  1453  007F5D  65                 	db	101	;'e'
  1454  007F5E  77                 	db	119	;'w'
  1455  007F5F  20                 	db	32
  1456  007F60  50                 	db	80	;'P'
  1457  007F61  61                 	db	97	;'a'
  1458  007F62  73                 	db	115	;'s'
  1459  007F63  73                 	db	115	;'s'
  1460  007F64  77                 	db	119	;'w'
  1461  007F65  6F                 	db	111	;'o'
  1462  007F66  72                 	db	114	;'r'
  1463  007F67  64                 	db	100	;'d'
  1464  007F68  3A                 	db	58	;':'
  1465  007F69  20                 	db	32
  1466  007F6A  00                 	db	0
  1467  007F6B                     STR_17:
  1468  007F6B  54                 	db	84	;'T'
  1469  007F6C  65                 	db	101	;'e'
  1470  007F6D  6D                 	db	109	;'m'
  1471  007F6E  70                 	db	112	;'p'
  1472  007F6F  20                 	db	32
  1473  007F70  53                 	db	83	;'S'
  1474  007F71  65                 	db	101	;'e'
  1475  007F72  6E                 	db	110	;'n'
  1476  007F73  73                 	db	115	;'s'
  1477  007F74  6F                 	db	111	;'o'
  1478  007F75  72                 	db	114	;'r'
  1479  007F76  20                 	db	32
  1480  007F77  69                 	db	105	;'i'
  1481  007F78  73                 	db	115	;'s'
  1482  007F79  20                 	db	32
  1483  007F7A  4F                 	db	79	;'O'
  1484  007F7B  4E                 	db	78	;'N'
  1485  007F7C  0A                 	db	10
  1486  007F7D  0D                 	db	13
  1487  007F7E  00                 	db	0
  1488  007F7F                     STR_47:
  1489  007F7F  41                 	db	65	;'A'
  1490  007F80  6C                 	db	108	;'l'
  1491  007F81  61                 	db	97	;'a'
  1492  007F82  72                 	db	114	;'r'
  1493  007F83  6D                 	db	109	;'m'
  1494  007F84  20                 	db	32
  1495  007F85  44                 	db	68	;'D'
  1496  007F86  69                 	db	105	;'i'
  1497  007F87  73                 	db	115	;'s'
  1498  007F88  61                 	db	97	;'a'
  1499  007F89  62                 	db	98	;'b'
  1500  007F8A  6C                 	db	108	;'l'
  1501  007F8B  65                 	db	101	;'e'
  1502  007F8C  64                 	db	100	;'d'
  1503  007F8D  0A                 	db	10
  1504  007F8E  0A                 	db	10
  1505  007F8F  0D                 	db	13
  1506  007F90  0D                 	db	13
  1507  007F91  00                 	db	0
  1508  007F92                     STR_46:
  1509  007F92  41                 	db	65	;'A'
  1510  007F93  6C                 	db	108	;'l'
  1511  007F94  61                 	db	97	;'a'
  1512  007F95  72                 	db	114	;'r'
  1513  007F96  6D                 	db	109	;'m'
  1514  007F97  20                 	db	32
  1515  007F98  45                 	db	69	;'E'
  1516  007F99  6E                 	db	110	;'n'
  1517  007F9A  61                 	db	97	;'a'
  1518  007F9B  62                 	db	98	;'b'
  1519  007F9C  6C                 	db	108	;'l'
  1520  007F9D  65                 	db	101	;'e'
  1521  007F9E  64                 	db	100	;'d'
  1522  007F9F  0A                 	db	10
  1523  007FA0  0A                 	db	10
  1524  007FA1  0D                 	db	13
  1525  007FA2  0D                 	db	13
  1526  007FA3  00                 	db	0
  1527  007FA4                     STR_13:
  1528  007FA4  0A                 	db	10
  1529  007FA5  0D                 	db	13
  1530  007FA6  50                 	db	80	;'P'
  1531  007FA7  61                 	db	97	;'a'
  1532  007FA8  73                 	db	115	;'s'
  1533  007FA9  73                 	db	115	;'s'
  1534  007FAA  77                 	db	119	;'w'
  1535  007FAB  6F                 	db	111	;'o'
  1536  007FAC  72                 	db	114	;'r'
  1537  007FAD  64                 	db	100	;'d'
  1538  007FAE  20                 	db	32
  1539  007FAF  53                 	db	83	;'S'
  1540  007FB0  45                 	db	69	;'E'
  1541  007FB1  54                 	db	84	;'T'
  1542  007FB2  0A                 	db	10
  1543  007FB3  0D                 	db	13
  1544  007FB4  00                 	db	0
  1545  007FB5                     STR_11:
  1546  007FB5  53                 	db	83	;'S'
  1547  007FB6  45                 	db	69	;'E'
  1548  007FB7  54                 	db	84	;'T'
  1549  007FB8  20                 	db	32
  1550  007FB9  50                 	db	80	;'P'
  1551  007FBA  41                 	db	65	;'A'
  1552  007FBB  53                 	db	83	;'S'
  1553  007FBC  53                 	db	83	;'S'
  1554  007FBD  57                 	db	87	;'W'
  1555  007FBE  4F                 	db	79	;'O'
  1556  007FBF  52                 	db	82	;'R'
  1557  007FC0  44                 	db	68	;'D'
  1558  007FC1  3A                 	db	58	;':'
  1559  007FC2  09                 	db	9
  1560  007FC3  00                 	db	0
  1561  007FC4                     STR_14:
  1562  007FC4  41                 	db	65	;'A'
  1563  007FC5  6C                 	db	108	;'l'
  1564  007FC6  61                 	db	97	;'a'
  1565  007FC7  72                 	db	114	;'r'
  1566  007FC8  6D                 	db	109	;'m'
  1567  007FC9  20                 	db	32
  1568  007FCA  69                 	db	105	;'i'
  1569  007FCB  73                 	db	115	;'s'
  1570  007FCC  20                 	db	32
  1571  007FCD  4F                 	db	79	;'O'
  1572  007FCE  46                 	db	70	;'F'
  1573  007FCF  46                 	db	70	;'F'
  1574  007FD0  0A                 	db	10
  1575  007FD1  0D                 	db	13
  1576  007FD2  00                 	db	0
  1577  007FD3                     STR_15:
  1578  007FD3  41                 	db	65	;'A'
  1579  007FD4  6C                 	db	108	;'l'
  1580  007FD5  61                 	db	97	;'a'
  1581  007FD6  72                 	db	114	;'r'
  1582  007FD7  6D                 	db	109	;'m'
  1583  007FD8  20                 	db	32
  1584  007FD9  69                 	db	105	;'i'
  1585  007FDA  73                 	db	115	;'s'
  1586  007FDB  20                 	db	32
  1587  007FDC  4F                 	db	79	;'O'
  1588  007FDD  4E                 	db	78	;'N'
  1589  007FDE  0A                 	db	10
  1590  007FDF  0D                 	db	13
  1591  007FE0  00                 	db	0
  1592  007FE1                     STR_68:
  1593  007FE1  0A                 	db	10
  1594  007FE2  0D                 	db	13
  1595  007FE3  42                 	db	66	;'B'
  1596  007FE4  4F                 	db	79	;'O'
  1597  007FE5  54                 	db	84	;'T'
  1598  007FE6  48                 	db	72	;'H'
  1599  007FE7  0A                 	db	10
  1600  007FE8  0D                 	db	13
  1601  007FE9  00                 	db	0
  1602  007FEA                     STR_2:
  1603  007FEA  1B                 	db	27
  1604  007FEB  5B                 	db	91	;'['
  1605  007FEC  30                 	db	48	;'0'
  1606  007FED  3B                 	db	59	;';'
  1607  007FEE  30                 	db	48	;'0'
  1608  007FEF  48                 	db	72	;'H'
  1609  007FF0  00                 	db	0
  1610  007FF1                     STR_1:
  1611  007FF1  1B                 	db	27
  1612  007FF2  5B                 	db	91	;'['
  1613  007FF3  32                 	db	50	;'2'
  1614  007FF4  4A                 	db	74	;'J'
  1615  007FF5  00                 	db	0
  1616  007FF6                     STR_70:
  1617  007FF6  4F                 	db	79	;'O'
  1618  007FF7  4E                 	db	78	;'N'
  1619  007FF8  45                 	db	69	;'E'
  1620  007FF9  00                 	db	0
  1621  007FFA                     STR_9:
  1622  007FFA  25                 	db	37
  1623  007FFB  64                 	db	100	;'d'
  1624  007FFC  00                 	db	0
  1625  007FFD                     STR_12:
  1626  007FFD  2A                 	db	42
  1627  007FFE  00                 	db	0
  1628  0000                     
  1629                           ; #config settings
  1630  007FFF  00                 	db	0	; dummy byte at the end
  1631  0000                     
  1632                           	psect	cinit
  1633  00173A                     __pcinit:
  1634                           	opt stack 0
  1635  00173A                     start_initialization:
  1636                           	opt stack 0
  1637  00173A                     __initialization:
  1638                           	opt stack 0
  1639                           
  1640                           ; Initialize objects allocated to BANK1 (4 bytes)
  1641                           ; load TBLPTR registers with __pidataBANK1
  1642  00173A  0EC0               	movlw	low __pidataBANK1
  1643  00173C  6EF6               	movwf	tblptrl,c
  1644  00173E  0E1D               	movlw	high __pidataBANK1
  1645  001740  6EF7               	movwf	tblptrh,c
  1646  001742  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1647  001744  6EF8               	movwf	tblptru,c
  1648  001746  EE01  F043         	lfsr	0,__pdataBANK1
  1649  00174A  EE10 F004          	lfsr	1,4
  1650  00174E                     copy_data0:
  1651  00174E  0009               	tblrd		*+
  1652  001750  CFF5 FFEE          	movff	tablat,postinc0
  1653  001754  50E5               	movf	postdec1,w,c
  1654  001756  50E1               	movf	fsr1l,w,c
  1655  001758  E1FA               	bnz	copy_data0
  1656                           
  1657                           ; Initialize objects allocated to BANK0 (2 bytes)
  1658                           ; load TBLPTR registers with __pidataBANK0
  1659  00175A  0EC7               	movlw	low __pidataBANK0
  1660  00175C  6EF6               	movwf	tblptrl,c
  1661  00175E  0E1D               	movlw	high __pidataBANK0
  1662  001760  6EF7               	movwf	tblptrh,c
  1663  001762  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1664  001764  6EF8               	movwf	tblptru,c
  1665  001766  0009               	tblrd		*+	;fetch initializer
  1666  001768  CFF5 F0D8          	movff	tablat,__pdataBANK0
  1667  00176C  0009               	tblrd		*+	;fetch initializer
  1668  00176E  CFF5 F0D9          	movff	tablat,__pdataBANK0+1
  1669                           
  1670                           ; Initialize objects allocated to COMRAM (3 bytes)
  1671                           ; load TBLPTR registers with __pidataCOMRAM
  1672  001772  0EC4               	movlw	low __pidataCOMRAM
  1673  001774  6EF6               	movwf	tblptrl,c
  1674  001776  0E1D               	movlw	high __pidataCOMRAM
  1675  001778  6EF7               	movwf	tblptrh,c
  1676  00177A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1677  00177C  6EF8               	movwf	tblptru,c
  1678  00177E  0009               	tblrd		*+	;fetch initializer
  1679  001780  CFF5 F048          	movff	tablat,__pdataCOMRAM
  1680  001784  0009               	tblrd		*+	;fetch initializer
  1681  001786  CFF5 F049          	movff	tablat,__pdataCOMRAM+1
  1682  00178A  0009               	tblrd		*+	;fetch initializer
  1683  00178C  CFF5 F04A          	movff	tablat,__pdataCOMRAM+2
  1684                           
  1685                           ; Clear objects allocated to BANK1 (11 bytes)
  1686  001790  EE01  F038         	lfsr	0,__pbssBANK1
  1687  001794  0E0B               	movlw	11
  1688  001796                     clear_0:
  1689  001796  6AEE               	clrf	postinc0,c
  1690  001798  06E8               	decf	wreg,f,c
  1691  00179A  E1FD               	bnz	clear_0
  1692                           
  1693                           ; Clear objects allocated to BANK0 (8 bytes)
  1694  00179C  EE00  F0D0         	lfsr	0,__pbssBANK0
  1695  0017A0  0E08               	movlw	8
  1696  0017A2                     clear_1:
  1697  0017A2  6AEE               	clrf	postinc0,c
  1698  0017A4  06E8               	decf	wreg,f,c
  1699  0017A6  E1FD               	bnz	clear_1
  1700                           
  1701                           ; Clear objects allocated to COMRAM (15 bytes)
  1702  0017A8  EE00  F039         	lfsr	0,__pbssCOMRAM
  1703  0017AC  0E0F               	movlw	15
  1704  0017AE                     clear_2:
  1705  0017AE  6AEE               	clrf	postinc0,c
  1706  0017B0  06E8               	decf	wreg,f,c
  1707  0017B2  E1FD               	bnz	clear_2
  1708  0017B4                     end_of_initialization:
  1709                           	opt stack 0
  1710  0017B4                     __end_of__initialization:
  1711                           	opt stack 0
  1712  0017B4  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1713  0017B6  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1714  0017B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1715  0017BA  6EF8               	movwf	tblptru,c
  1716  0017BC  0100               	movlb	0
  1717  0017BE  EFF8  F000         	goto	_main	;jump to C main() function
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           postdec1	equ	0xFE5
  1725                           fsr1l	equ	0xFE1
  1726                           
  1727                           	psect	bssCOMRAM
  1728  000039                     __pbssCOMRAM:
  1729                           	opt stack 0
  1730  000039                     _decimal:
  1731                           	opt stack 0
  1732  000039                     	ds	4
  1733  00003D                     _adHigh:
  1734                           	opt stack 0
  1735  00003D                     	ds	4
  1736  000041                     _adLow:
  1737                           	opt stack 0
  1738  000041                     	ds	4
  1739  000045                     _test:
  1740                           	opt stack 0
  1741  000045                     	ds	2
  1742  000047                     _temp:
  1743                           	opt stack 0
  1744  000047                     	ds	1
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           postdec1	equ	0xFE5
  1752                           fsr1l	equ	0xFE1
  1753                           
  1754                           	psect	dataCOMRAM
  1755  000048                     __pdataCOMRAM:
  1756                           	opt stack 0
  1757  000048                     _threshold_loc:
  1758                           	opt stack 0
  1759  000048                     	ds	1
  1760  000049                     _temp_loc:
  1761                           	opt stack 0
  1762  000049                     	ds	1
  1763  00004A                     _alarm_loc:
  1764                           	opt stack 0
  1765  00004A                     	ds	1
  1766                           tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1l	equ	0xFE1
  1774                           
  1775                           	psect	bssBANK0
  1776  0000D0                     __pbssBANK0:
  1777                           	opt stack 0
  1778  0000D0                     _voltage:
  1779                           	opt stack 0
  1780  0000D0                     	ds	4
  1781  0000D4                     _temp_set:
  1782                           	opt stack 0
  1783  0000D4                     	ds	2
  1784  0000D6                     _choice:
  1785                           	opt stack 0
  1786  0000D6                     	ds	2
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postdec1	equ	0xFE5
  1794                           fsr1l	equ	0xFE1
  1795                           
  1796                           	psect	dataBANK0
  1797  0000D8                     __pdataBANK0:
  1798                           	opt stack 0
  1799  0000D8                     _temp_threshold:
  1800                           	opt stack 0
  1801  0000D8                     	ds	2
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           postdec1	equ	0xFE5
  1809                           fsr1l	equ	0xFE1
  1810                           
  1811                           	psect	bssBANK1
  1812  000138                     __pbssBANK1:
  1813                           	opt stack 0
  1814  000138                     _alarm_set:
  1815                           	opt stack 0
  1816  000138                     	ds	2
  1817  00013A                     _triggered:
  1818                           	opt stack 0
  1819  00013A                     	ds	2
  1820  00013C                     _check:
  1821                           	opt stack 0
  1822  00013C                     	ds	2
  1823  00013E                     _pass_loc:
  1824                           	opt stack 0
  1825  00013E                     	ds	1
  1826  00013F                     _pass:
  1827                           	opt stack 0
  1828  00013F                     	ds	4
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           postdec1	equ	0xFE5
  1836                           fsr1l	equ	0xFE1
  1837                           
  1838                           	psect	dataBANK1
  1839  000143                     __pdataBANK1:
  1840                           	opt stack 0
  1841  000143                     _saved_pass:
  1842                           	opt stack 0
  1843  000143                     	ds	4
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1l	equ	0xFE1
  1852                           
  1853                           	psect	cstackBANK1
  1854  000100                     __pcstackBANK1:
  1855                           	opt stack 0
  1856  000100                     ?_strncmp:
  1857                           	opt stack 0
  1858  000100                     ?___lldiv:
  1859                           	opt stack 0
  1860  000100                     putch@data:
  1861                           	opt stack 0
  1862  000100                     write_eeprom@data:
  1863                           	opt stack 0
  1864  000100                     strncmp@s1:
  1865                           	opt stack 0
  1866  000100                     ___lldiv@dividend:
  1867                           	opt stack 0
  1868                           
  1869                           ; 4 bytes @ 0x0
  1870  000100                     	ds	1
  1871  000101                     ??_write_eeprom:
  1872                           
  1873                           ; 1 bytes @ 0x1
  1874  000101                     	ds	1
  1875  000102                     write_eeprom@address:
  1876                           	opt stack 0
  1877  000102                     strncmp@s2:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x2
  1881  000102                     	ds	2
  1882  000104                     strncmp@len:
  1883                           	opt stack 0
  1884  000104                     ___lldiv@divisor:
  1885                           	opt stack 0
  1886                           
  1887                           ; 4 bytes @ 0x4
  1888  000104                     	ds	2
  1889  000106                     ??_strncmp:
  1890                           
  1891                           ; 1 bytes @ 0x6
  1892  000106                     	ds	2
  1893  000108                     ___lldiv@quotient:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x8
  1897  000108                     	ds	4
  1898  00010C                     ___lldiv@counter:
  1899                           	opt stack 0
  1900                           
  1901                           ; 1 bytes @ 0xC
  1902  00010C                     	ds	1
  1903  00010D                     ?___llmod:
  1904                           	opt stack 0
  1905  00010D                     ___llmod@dividend:
  1906                           	opt stack 0
  1907                           
  1908                           ; 4 bytes @ 0xD
  1909  00010D                     	ds	4
  1910  000111                     ___llmod@divisor:
  1911                           	opt stack 0
  1912                           
  1913                           ; 4 bytes @ 0x11
  1914  000111                     	ds	4
  1915  000115                     ___llmod@counter:
  1916                           	opt stack 0
  1917                           
  1918                           ; 1 bytes @ 0x15
  1919  000115                     	ds	1
  1920  000116                     ?_printf:
  1921                           	opt stack 0
  1922  000116                     printf@f:
  1923                           	opt stack 0
  1924                           
  1925                           ; 2 bytes @ 0x16
  1926  000116                     	ds	8
  1927  00011E                     ??_printf:
  1928                           
  1929                           ; 1 bytes @ 0x1E
  1930  00011E                     	ds	2
  1931  000120                     printf@prec:
  1932                           	opt stack 0
  1933                           
  1934                           ; 2 bytes @ 0x20
  1935  000120                     	ds	2
  1936  000122                     printf@ap:
  1937                           	opt stack 0
  1938                           
  1939                           ; 2 bytes @ 0x22
  1940  000122                     	ds	2
  1941  000124                     printf@flag:
  1942                           	opt stack 0
  1943                           
  1944                           ; 1 bytes @ 0x24
  1945  000124                     	ds	1
  1946  000125                     printf@val:
  1947                           	opt stack 0
  1948                           
  1949                           ; 4 bytes @ 0x25
  1950  000125                     	ds	4
  1951  000129                     printf@c:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x29
  1955  000129                     	ds	1
  1956  00012A                     ??_alarm_options:
  1957  00012A                     ??_temp_options:
  1958  00012A                     ??_input_options:
  1959  00012A                     ??_password_change:
  1960  00012A                     ?_keypad:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x2A
  1964  00012A                     	ds	2
  1965  00012C                     password_change@i:
  1966                           	opt stack 0
  1967  00012C                     temp_options@i:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x2C
  1971  00012C                     	ds	2
  1972  00012E                     password_change@i_1080:
  1973                           	opt stack 0
  1974                           
  1975                           ; 2 bytes @ 0x2E
  1976  00012E                     	ds	2
  1977  000130                     ??_password_options:
  1978                           
  1979                           ; 1 bytes @ 0x30
  1980  000130                     	ds	2
  1981  000132                     ??_main:
  1982                           
  1983                           ; 1 bytes @ 0x32
  1984  000132                     	ds	2
  1985  000134                     main@i:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x34
  1989  000134                     	ds	2
  1990  000136                     main@i_1064:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x36
  1994  000136                     	ds	2
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1l	equ	0xFE1
  2003                           
  2004                           	psect	cstackBANK0
  2005  000080                     __pcstackBANK0:
  2006                           	opt stack 0
  2007  000080                     ?i1_strncmp:
  2008                           	opt stack 0
  2009  000080                     ?___ftpack:
  2010                           	opt stack 0
  2011  000080                     ?___lmul:
  2012                           	opt stack 0
  2013  000080                     ?___aldiv:
  2014                           	opt stack 0
  2015  000080                     ?i1___lldiv:
  2016                           	opt stack 0
  2017  000080                     i1putch@data:
  2018                           	opt stack 0
  2019  000080                     i1strncmp@s1:
  2020                           	opt stack 0
  2021  000080                     ___ftpack@arg:
  2022                           	opt stack 0
  2023  000080                     ___lmul@multiplier:
  2024                           	opt stack 0
  2025  000080                     ___aldiv@dividend:
  2026                           	opt stack 0
  2027  000080                     i1___lldiv@dividend:
  2028                           	opt stack 0
  2029                           
  2030                           ; 4 bytes @ 0x0
  2031  000080                     	ds	2
  2032  000082                     i1strncmp@s2:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x2
  2036  000082                     	ds	1
  2037  000083                     ___ftpack@exp:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x3
  2041  000083                     	ds	1
  2042  000084                     ___ftpack@sign:
  2043                           	opt stack 0
  2044  000084                     i1strncmp@len:
  2045                           	opt stack 0
  2046  000084                     ___lmul@multiplicand:
  2047                           	opt stack 0
  2048  000084                     ___aldiv@divisor:
  2049                           	opt stack 0
  2050  000084                     i1___lldiv@divisor:
  2051                           	opt stack 0
  2052                           
  2053                           ; 4 bytes @ 0x4
  2054  000084                     	ds	1
  2055  000085                     ??___ftpack:
  2056                           
  2057                           ; 1 bytes @ 0x5
  2058  000085                     	ds	1
  2059  000086                     ??i1_strncmp:
  2060                           
  2061                           ; 1 bytes @ 0x6
  2062  000086                     	ds	2
  2063  000088                     ?___altoft:
  2064                           	opt stack 0
  2065  000088                     ___aldiv@counter:
  2066                           	opt stack 0
  2067  000088                     ___lmul@product:
  2068                           	opt stack 0
  2069  000088                     ___altoft@c:
  2070                           	opt stack 0
  2071  000088                     i1___lldiv@quotient:
  2072                           	opt stack 0
  2073                           
  2074                           ; 4 bytes @ 0x8
  2075  000088                     	ds	1
  2076  000089                     ___aldiv@sign:
  2077                           	opt stack 0
  2078                           
  2079                           ; 1 bytes @ 0x9
  2080  000089                     	ds	1
  2081  00008A                     ___aldiv@quotient:
  2082                           	opt stack 0
  2083                           
  2084                           ; 4 bytes @ 0xA
  2085  00008A                     	ds	2
  2086  00008C                     ??___altoft:
  2087  00008C                     i1___lldiv@counter:
  2088                           	opt stack 0
  2089                           
  2090                           ; 1 bytes @ 0xC
  2091  00008C                     	ds	1
  2092  00008D                     ?i1___llmod:
  2093                           	opt stack 0
  2094  00008D                     i1___llmod@dividend:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0xD
  2098  00008D                     	ds	3
  2099  000090                     ___altoft@exp:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0x10
  2103  000090                     	ds	1
  2104  000091                     ___altoft@sign:
  2105                           	opt stack 0
  2106  000091                     i1___llmod@divisor:
  2107                           	opt stack 0
  2108                           
  2109                           ; 4 bytes @ 0x11
  2110  000091                     	ds	1
  2111  000092                     ?___ftmul:
  2112                           	opt stack 0
  2113  000092                     ___ftmul@f1:
  2114                           	opt stack 0
  2115                           
  2116                           ; 3 bytes @ 0x12
  2117  000092                     	ds	3
  2118  000095                     i1___llmod@counter:
  2119                           	opt stack 0
  2120  000095                     ___ftmul@f2:
  2121                           	opt stack 0
  2122                           
  2123                           ; 3 bytes @ 0x15
  2124  000095                     	ds	1
  2125  000096                     ?i1_printf:
  2126                           	opt stack 0
  2127  000096                     i1printf@f:
  2128                           	opt stack 0
  2129                           
  2130                           ; 2 bytes @ 0x16
  2131  000096                     	ds	2
  2132  000098                     ??___ftmul:
  2133                           
  2134                           ; 1 bytes @ 0x18
  2135  000098                     	ds	2
  2136  00009A                     ??i1_printf:
  2137                           
  2138                           ; 1 bytes @ 0x1A
  2139  00009A                     	ds	1
  2140  00009B                     ___ftmul@exp:
  2141                           	opt stack 0
  2142                           
  2143                           ; 1 bytes @ 0x1B
  2144  00009B                     	ds	1
  2145  00009C                     i1printf@prec:
  2146                           	opt stack 0
  2147  00009C                     ___ftmul@f3_as_product:
  2148                           	opt stack 0
  2149                           
  2150                           ; 3 bytes @ 0x1C
  2151  00009C                     	ds	2
  2152  00009E                     i1printf@ap:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x1E
  2156  00009E                     	ds	1
  2157  00009F                     ___ftmul@cntr:
  2158                           	opt stack 0
  2159                           
  2160                           ; 1 bytes @ 0x1F
  2161  00009F                     	ds	1
  2162  0000A0                     ___ftmul@sign:
  2163                           	opt stack 0
  2164  0000A0                     i1printf@flag:
  2165                           	opt stack 0
  2166                           
  2167                           ; 1 bytes @ 0x20
  2168  0000A0                     	ds	1
  2169  0000A1                     ?___fttol:
  2170                           	opt stack 0
  2171  0000A1                     ___fttol@f1:
  2172                           	opt stack 0
  2173  0000A1                     i1printf@val:
  2174                           	opt stack 0
  2175                           
  2176                           ; 4 bytes @ 0x21
  2177  0000A1                     	ds	4
  2178  0000A5                     ??___fttol:
  2179  0000A5                     i1printf@c:
  2180                           	opt stack 0
  2181                           
  2182                           ; 1 bytes @ 0x25
  2183  0000A5                     	ds	1
  2184  0000A6                     password@i:
  2185                           	opt stack 0
  2186                           
  2187                           ; 2 bytes @ 0x26
  2188  0000A6                     	ds	4
  2189  0000AA                     ___fttol@sign1:
  2190                           	opt stack 0
  2191                           
  2192                           ; 1 bytes @ 0x2A
  2193  0000AA                     	ds	1
  2194  0000AB                     ___fttol@lval:
  2195                           	opt stack 0
  2196                           
  2197                           ; 4 bytes @ 0x2B
  2198  0000AB                     	ds	4
  2199  0000AF                     ___fttol@exp1:
  2200                           	opt stack 0
  2201                           
  2202                           ; 1 bytes @ 0x2F
  2203  0000AF                     	ds	1
  2204  0000B0                     ??_ADC:
  2205                           
  2206                           ; 1 bytes @ 0x30
  2207  0000B0                     	ds	4
  2208  0000B4                     ??_temp_sensor:
  2209                           
  2210                           ; 1 bytes @ 0x34
  2211  0000B4                     	ds	26
  2212  0000CE                     temp_sensor@i:
  2213                           	opt stack 0
  2214                           
  2215                           ; 2 bytes @ 0x4E
  2216  0000CE                     	ds	2
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           
  2226                           	psect	cstackCOMRAM
  2227  000001                     __pcstackCOMRAM:
  2228                           	opt stack 0
  2229  000001                     ?i2_strncmp:
  2230                           	opt stack 0
  2231  000001                     ?i2___lldiv:
  2232                           	opt stack 0
  2233  000001                     i2putch@data:
  2234                           	opt stack 0
  2235  000001                     i2strncmp@s1:
  2236                           	opt stack 0
  2237  000001                     i2___lldiv@dividend:
  2238                           	opt stack 0
  2239                           
  2240                           ; 4 bytes @ 0x0
  2241  000001                     	ds	2
  2242  000003                     i2strncmp@s2:
  2243                           	opt stack 0
  2244                           
  2245                           ; 2 bytes @ 0x2
  2246  000003                     	ds	2
  2247  000005                     i2strncmp@len:
  2248                           	opt stack 0
  2249  000005                     i2___lldiv@divisor:
  2250                           	opt stack 0
  2251                           
  2252                           ; 4 bytes @ 0x4
  2253  000005                     	ds	2
  2254  000007                     ??i2_strncmp:
  2255                           
  2256                           ; 1 bytes @ 0x6
  2257  000007                     	ds	2
  2258  000009                     i2___lldiv@quotient:
  2259                           	opt stack 0
  2260                           
  2261                           ; 4 bytes @ 0x8
  2262  000009                     	ds	4
  2263  00000D                     i2___lldiv@counter:
  2264                           	opt stack 0
  2265                           
  2266                           ; 1 bytes @ 0xC
  2267  00000D                     	ds	1
  2268  00000E                     ?i2___llmod:
  2269                           	opt stack 0
  2270  00000E                     i2___llmod@dividend:
  2271                           	opt stack 0
  2272                           
  2273                           ; 4 bytes @ 0xD
  2274  00000E                     	ds	4
  2275  000012                     i2___llmod@divisor:
  2276                           	opt stack 0
  2277                           
  2278                           ; 4 bytes @ 0x11
  2279  000012                     	ds	4
  2280  000016                     i2___llmod@counter:
  2281                           	opt stack 0
  2282                           
  2283                           ; 1 bytes @ 0x15
  2284  000016                     	ds	1
  2285  000017                     ?i2_printf:
  2286                           	opt stack 0
  2287  000017                     i2printf@f:
  2288                           	opt stack 0
  2289                           
  2290                           ; 2 bytes @ 0x16
  2291  000017                     	ds	2
  2292  000019                     ??i2_printf:
  2293                           
  2294                           ; 1 bytes @ 0x18
  2295  000019                     	ds	2
  2296  00001B                     i2printf@prec:
  2297                           	opt stack 0
  2298                           
  2299                           ; 2 bytes @ 0x1A
  2300  00001B                     	ds	2
  2301  00001D                     i2printf@ap:
  2302                           	opt stack 0
  2303                           
  2304                           ; 2 bytes @ 0x1C
  2305  00001D                     	ds	2
  2306  00001F                     i2printf@flag:
  2307                           	opt stack 0
  2308                           
  2309                           ; 1 bytes @ 0x1E
  2310  00001F                     	ds	1
  2311  000020                     i2printf@val:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x1F
  2315  000020                     	ds	4
  2316  000024                     i2printf@c:
  2317                           	opt stack 0
  2318                           
  2319                           ; 1 bytes @ 0x23
  2320  000024                     	ds	1
  2321  000025                     i2password@i:
  2322                           	opt stack 0
  2323                           
  2324                           ; 2 bytes @ 0x24
  2325  000025                     	ds	2
  2326  000027                     ??_alarm:
  2327                           
  2328                           ; 1 bytes @ 0x26
  2329  000027                     	ds	18
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1l	equ	0xFE1
  2338                           
  2339 ;;
  2340 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2341 ;;
  2342 ;; *************** function _main *****************
  2343 ;; Defined at:
  2344 ;;		line 196 in file "Lab7.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  i               2   54[BANK1 ] int 
  2349 ;;  i               2   52[BANK1 ] int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2359 ;;      Params:         0       0       0       0       0       0       0
  2360 ;;      Locals:         0       0       4       0       0       0       0
  2361 ;;      Temps:          0       0       2       0       0       0       0
  2362 ;;      Totals:         0       0       6       0       0       0       0
  2363 ;;Total ram usage:        6 bytes
  2364 ;; Hardware stack levels required when called:   13
  2365 ;; This function calls:
  2366 ;;		_Clear
  2367 ;;		_alarm_options
  2368 ;;		_input_options
  2369 ;;		_keypad
  2370 ;;		_password_options
  2371 ;;		_printf
  2372 ;;		_temp_options
  2373 ;;		_write_eeprom
  2374 ;; This function is called by:
  2375 ;;		Startup code after reset
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text0
  2380  0001F0                     __ptext0:
  2381                           	opt stack 0
  2382  0001F0                     _main:
  2383                           	opt stack 18
  2384                           
  2385                           ;Lab7.c: 199: TXSTAbits.TXEN = 1;
  2386                           
  2387                           ;incstack = 0
  2388  0001F0  8AAC               	bsf	4012,5,c	;volatile
  2389                           
  2390                           ;Lab7.c: 200: RCSTAbits.SPEN = 1;
  2391  0001F2  8EAB               	bsf	4011,7,c	;volatile
  2392                           
  2393                           ;Lab7.c: 202: TRISB = 0b00000010;
  2394  0001F4  0E02               	movlw	2
  2395  0001F6  6E93               	movwf	3987,c	;volatile
  2396                           
  2397                           ;Lab7.c: 203: TRISD = 0b00000000;
  2398  0001F8  0E00               	movlw	0
  2399  0001FA  6E95               	movwf	3989,c	;volatile
  2400                           
  2401                           ;Lab7.c: 205: PORTBbits.RB2 = 0;
  2402  0001FC  9481               	bcf	3969,2,c	;volatile
  2403                           
  2404                           ;Lab7.c: 206: PORTBbits.RB3 = 0;
  2405  0001FE  9681               	bcf	3969,3,c	;volatile
  2406                           
  2407                           ;Lab7.c: 207: PORTBbits.RB4 = 0;
  2408  000200  9881               	bcf	3969,4,c	;volatile
  2409                           
  2410                           ;Lab7.c: 208: PORTBbits.RB5 = 0;
  2411  000202  9A81               	bcf	3969,5,c	;volatile
  2412                           
  2413                           ;Lab7.c: 211: TRISCbits.RC7 = 1;
  2414  000204  8E94               	bsf	3988,7,c	;volatile
  2415                           
  2416                           ;Lab7.c: 212: TRISCbits.RC6 = 0;
  2417  000206  9C94               	bcf	3988,6,c	;volatile
  2418                           
  2419                           ;Lab7.c: 213: SPBRG = 31;
  2420  000208  0E1F               	movlw	31
  2421  00020A  6EAF               	movwf	4015,c	;volatile
  2422                           
  2423                           ;Lab7.c: 214: TXSTAbits.SYNC = 0;
  2424  00020C  98AC               	bcf	4012,4,c	;volatile
  2425                           
  2426                           ;Lab7.c: 215: TXSTAbits.BRGH = 0;
  2427  00020E  94AC               	bcf	4012,2,c	;volatile
  2428                           
  2429                           ;Lab7.c: 216: RCSTAbits.RX9 = 0;
  2430  000210  9CAB               	bcf	4011,6,c	;volatile
  2431                           
  2432                           ;Lab7.c: 217: RCSTAbits.SPEN = 1;
  2433  000212  8EAB               	bsf	4011,7,c	;volatile
  2434                           
  2435                           ;Lab7.c: 218: RCSTAbits.CREN = 1;
  2436  000214  88AB               	bsf	4011,4,c	;volatile
  2437                           
  2438                           ;Lab7.c: 221: INTCONbits.GIE = 0;
  2439  000216  9EF2               	bcf	intcon,7,c	;volatile
  2440                           
  2441                           ;Lab7.c: 222: INTCONbits.PEIE = 0;
  2442  000218  9CF2               	bcf	intcon,6,c	;volatile
  2443                           
  2444                           ;Lab7.c: 223: RCONbits.IPEN = 1;
  2445  00021A  8ED0               	bsf	4048,7,c	;volatile
  2446                           
  2447                           ;Lab7.c: 225: PIR1bits.ADIF = 0;
  2448  00021C  9C9E               	bcf	3998,6,c	;volatile
  2449                           
  2450                           ;Lab7.c: 226: PIE1bits.ADIE = 1;
  2451  00021E  8C9D               	bsf	3997,6,c	;volatile
  2452                           
  2453                           ;Lab7.c: 227: IPR1bits.ADIP = 0;
  2454  000220  9C9F               	bcf	3999,6,c	;volatile
  2455                           
  2456                           ;Lab7.c: 229: INTCON3bits.INT1IP = 1;
  2457  000222  8CF0               	bsf	intcon3,6,c	;volatile
  2458                           
  2459                           ;Lab7.c: 230: INTCON3bits.INT1IE = 0;
  2460  000224  96F0               	bcf	intcon3,3,c	;volatile
  2461                           
  2462                           ;Lab7.c: 231: INTCON3bits.INT1IF = 0;
  2463  000226  90F0               	bcf	intcon3,0,c	;volatile
  2464                           
  2465                           ;Lab7.c: 233: ADCON0bits.CHS3 = 0;
  2466  000228  9AC2               	bcf	4034,5,c	;volatile
  2467                           
  2468                           ;Lab7.c: 234: ADCON0bits.CHS2 = 0;
  2469  00022A  98C2               	bcf	4034,4,c	;volatile
  2470                           
  2471                           ;Lab7.c: 235: ADCON0bits.CHS1 = 0;
  2472  00022C  96C2               	bcf	4034,3,c	;volatile
  2473                           
  2474                           ;Lab7.c: 236: ADCON0bits.CHS0 = 0;
  2475  00022E  94C2               	bcf	4034,2,c	;volatile
  2476                           
  2477                           ;Lab7.c: 238: ADCON0bits.GO = 0;
  2478  000230  92C2               	bcf	4034,1,c	;volatile
  2479                           
  2480                           ;Lab7.c: 239: ADCON0bits.ADON = 1;
  2481  000232  80C2               	bsf	4034,0,c	;volatile
  2482                           
  2483                           ;Lab7.c: 240: ADCON1bits.VCFG1 = 0;
  2484  000234  9AC1               	bcf	4033,5,c	;volatile
  2485                           
  2486                           ;Lab7.c: 241: ADCON1bits.VCFG0 = 0;
  2487  000236  98C1               	bcf	4033,4,c	;volatile
  2488                           
  2489                           ;Lab7.c: 243: ADCON1bits.PCFG3 = 1;
  2490  000238  86C1               	bsf	4033,3,c	;volatile
  2491                           
  2492                           ;Lab7.c: 244: ADCON1bits.PCFG2 = 1;
  2493  00023A  84C1               	bsf	4033,2,c	;volatile
  2494                           
  2495                           ;Lab7.c: 245: ADCON1bits.PCFG1 = 1;
  2496  00023C  82C1               	bsf	4033,1,c	;volatile
  2497                           
  2498                           ;Lab7.c: 246: ADCON1bits.PCFG0 = 0;
  2499  00023E  90C1               	bcf	4033,0,c	;volatile
  2500                           
  2501                           ;Lab7.c: 248: ADCON2bits.ADFM = 1;
  2502  000240  8EC0               	bsf	4032,7,c	;volatile
  2503                           
  2504                           ;Lab7.c: 250: ADCON2bits.ACQT2 = 1;
  2505  000242  8AC0               	bsf	4032,5,c	;volatile
  2506                           
  2507                           ;Lab7.c: 251: ADCON2bits.ACQT2 = 0;
  2508  000244  9AC0               	bcf	4032,5,c	;volatile
  2509                           
  2510                           ;Lab7.c: 252: ADCON2bits.ACQT2 = 0;
  2511  000246  9AC0               	bcf	4032,5,c	;volatile
  2512                           
  2513                           ;Lab7.c: 254: ADCON2bits.ADCS2 = 1;
  2514  000248  84C0               	bsf	4032,2,c	;volatile
  2515                           
  2516                           ;Lab7.c: 255: ADCON2bits.ADCS1 = 0;
  2517  00024A  92C0               	bcf	4032,1,c	;volatile
  2518                           
  2519                           ;Lab7.c: 256: ADCON2bits.ADCS0 = 0;
  2520  00024C  90C0               	bcf	4032,0,c	;volatile
  2521                           
  2522                           ;Lab7.c: 258: T0CONbits.TMR0ON = 0;
  2523  00024E  9ED5               	bcf	4053,7,c	;volatile
  2524                           
  2525                           ;Lab7.c: 259: T0CONbits.T08BIT = 0;
  2526  000250  9CD5               	bcf	4053,6,c	;volatile
  2527                           
  2528                           ;Lab7.c: 260: T0CONbits.T0CS = 0;
  2529  000252  9AD5               	bcf	4053,5,c	;volatile
  2530                           
  2531                           ;Lab7.c: 261: T0CONbits.PSA = 0;
  2532  000254  96D5               	bcf	4053,3,c	;volatile
  2533                           
  2534                           ;Lab7.c: 263: T0CONbits.T0PS2 = 1;
  2535  000256  84D5               	bsf	4053,2,c	;volatile
  2536                           
  2537                           ;Lab7.c: 264: T0CONbits.T0PS1 = 0;
  2538  000258  92D5               	bcf	4053,1,c	;volatile
  2539                           
  2540                           ;Lab7.c: 265: T0CONbits.T0PS0 = 1;
  2541  00025A  80D5               	bsf	4053,0,c	;volatile
  2542                           
  2543                           ;Lab7.c: 267: INTCONbits.TMR0IE = 1;
  2544  00025C  8AF2               	bsf	intcon,5,c	;volatile
  2545                           
  2546                           ;Lab7.c: 268: INTCONbits.TMR0IF = 0;
  2547  00025E  94F2               	bcf	intcon,2,c	;volatile
  2548                           
  2549                           ;Lab7.c: 269: INTCON2bits.TMR0IP = 0;
  2550  000260  94F1               	bcf	intcon2,2,c	;volatile
  2551                           
  2552                           ;Lab7.c: 271: INTCONbits.GIE = 1;
  2553  000262  8EF2               	bsf	intcon,7,c	;volatile
  2554                           
  2555                           ;Lab7.c: 272: INTCONbits.PEIE = 1;
  2556  000264  8CF2               	bsf	intcon,6,c	;volatile
  2557                           
  2558                           ;Lab7.c: 275: TMR0H = 0x67;
  2559  000266  0E67               	movlw	103
  2560  000268  6ED7               	movwf	4055,c	;volatile
  2561                           
  2562                           ;Lab7.c: 276: TMR0L = 0x6A;
  2563  00026A  0E6A               	movlw	106
  2564  00026C  6ED6               	movwf	4054,c	;volatile
  2565                           
  2566                           ;Lab7.c: 278: Clear();
  2567  00026E  ECA1  F00E         	call	_Clear	;wreg free
  2568                           
  2569                           ;Lab7.c: 280: printf("SET PASSWORD:\t");
  2570  000272  0EB5               	movlw	low STR_11
  2571  000274  0101               	movlb	1	; () banked
  2572  000276  6F16               	movwf	printf@f& (0+255),b
  2573  000278  0E7F               	movlw	high STR_11
  2574  00027A  6F17               	movwf	(printf@f+1)& (0+255),b
  2575  00027C  EC1A  F003         	call	_printf	;wreg free
  2576                           
  2577                           ;Lab7.c: 281: for(int i = 0;i < 4;i++){
  2578  000280  0E00               	movlw	0
  2579  000282  0101               	movlb	1	; () banked
  2580  000284  6F35               	movwf	(main@i+1)& (0+255),b
  2581  000286  0E00               	movlw	0
  2582  000288  6F34               	movwf	main@i& (0+255),b
  2583                           
  2584                           ; BSR set to: 1
  2585  00028A  BF35               	btfsc	(main@i+1)& (0+255),7,b
  2586  00028C  D006               	goto	l159
  2587  00028E  5135               	movf	(main@i+1)& (0+255),w,b
  2588  000290  E120               	bnz	l3625
  2589  000292  0E04               	movlw	4
  2590  000294  5D34               	subwf	main@i& (0+255),w,b
  2591  000296  B0D8               	btfsc	status,0,c
  2592  000298  D01C               	goto	u2870
  2593  00029A                     l159:
  2594                           
  2595                           ; BSR set to: 1
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;Lab7.c: 282: while(PIR1bits.RCIF == 0);
  2599  00029A  AA9E               	btfss	3998,5,c	;volatile
  2600  00029C  D7FE               	goto	l159
  2601                           
  2602                           ;Lab7.c: 283: saved_pass[i] = RCREG;
  2603  00029E  0E43               	movlw	low _saved_pass
  2604  0002A0  0101               	movlb	1	; () banked
  2605  0002A2  2534               	addwf	main@i& (0+255),w,b
  2606  0002A4  6ED9               	movwf	fsr2l,c
  2607  0002A6  0E01               	movlw	high _saved_pass
  2608  0002A8  2135               	addwfc	(main@i+1)& (0+255),w,b
  2609  0002AA  6EDA               	movwf	fsr2h,c
  2610  0002AC  CFAE FFDF          	movff	4014,indf2	;volatile
  2611                           
  2612                           ; BSR set to: 1
  2613                           ;Lab7.c: 284: printf("*");
  2614  0002B0  0EFD               	movlw	low STR_12
  2615  0002B2  6F16               	movwf	printf@f& (0+255),b
  2616  0002B4  0E7F               	movlw	high STR_12
  2617  0002B6  6F17               	movwf	(printf@f+1)& (0+255),b
  2618  0002B8  EC1A  F003         	call	_printf	;wreg free
  2619  0002BC  0101               	movlb	1	; () banked
  2620  0002BE  4B34               	infsnz	main@i& (0+255),f,b
  2621  0002C0  2B35               	incf	(main@i+1)& (0+255),f,b
  2622                           
  2623                           ; BSR set to: 1
  2624  0002C2  BF35               	btfsc	(main@i+1)& (0+255),7,b
  2625  0002C4  D7EA               	goto	l159
  2626  0002C6  5135               	movf	(main@i+1)& (0+255),w,b
  2627  0002C8  E104               	bnz	l3625
  2628  0002CA  0E04               	movlw	4
  2629  0002CC  5D34               	subwf	main@i& (0+255),w,b
  2630  0002CE  A0D8               	btfss	status,0,c
  2631  0002D0  D7E4               	goto	l159
  2632  0002D2                     u2870:
  2633  0002D2                     l3625:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;Lab7.c: 285: }
  2637                           ;Lab7.c: 288: for(int i=0;i<4;i++)
  2638  0002D2  0E00               	movlw	0
  2639  0002D4  6F37               	movwf	(main@i_1064+1)& (0+255),b
  2640  0002D6  0E00               	movlw	0
  2641  0002D8  6F36               	movwf	main@i_1064& (0+255),b
  2642  0002DA                     l3627:
  2643                           
  2644                           ; BSR set to: 1
  2645  0002DA  BF37               	btfsc	(main@i_1064+1)& (0+255),7,b
  2646  0002DC  D006               	goto	l164
  2647  0002DE  5137               	movf	(main@i_1064+1)& (0+255),w,b
  2648  0002E0  E113               	bnz	l3637
  2649  0002E2  0E04               	movlw	4
  2650  0002E4  5D36               	subwf	main@i_1064& (0+255),w,b
  2651  0002E6  B0D8               	btfsc	status,0,c
  2652  0002E8  D00F               	goto	u2890
  2653  0002EA                     l164:
  2654                           
  2655                           ; BSR set to: 1
  2656                           ;Lab7.c: 289: {
  2657                           ;Lab7.c: 290: write_eeprom(pass_loc,saved_pass[i]);
  2658                           
  2659                           ; BSR set to: 1
  2660  0002EA  0E43               	movlw	low _saved_pass
  2661  0002EC  2536               	addwf	main@i_1064& (0+255),w,b
  2662  0002EE  6ED9               	movwf	fsr2l,c
  2663  0002F0  0E01               	movlw	high _saved_pass
  2664  0002F2  2137               	addwfc	(main@i_1064+1)& (0+255),w,b
  2665  0002F4  6EDA               	movwf	fsr2h,c
  2666  0002F6  50DF               	movf	indf2,w,c
  2667  0002F8  6F00               	movwf	write_eeprom@data& (0+255),b
  2668  0002FA  513E               	movf	_pass_loc& (0+255),w,b
  2669  0002FC  EC87  F00E         	call	_write_eeprom
  2670  000300  0101               	movlb	1	; () banked
  2671  000302  4B36               	infsnz	main@i_1064& (0+255),f,b
  2672  000304  2B37               	incf	(main@i_1064+1)& (0+255),f,b
  2673  000306  D7E9               	goto	l3627
  2674  000308                     u2890:
  2675  000308                     l3637:
  2676                           
  2677                           ; BSR set to: 1
  2678                           ;Lab7.c: 291: }
  2679                           ;Lab7.c: 293: printf("\n\rPassword SET\n\r");
  2680  000308  0EA4               	movlw	low STR_13
  2681  00030A  6F16               	movwf	printf@f& (0+255),b
  2682  00030C  0E7F               	movlw	high STR_13
  2683  00030E  6F17               	movwf	(printf@f+1)& (0+255),b
  2684  000310  EC1A  F003         	call	_printf	;wreg free
  2685  000314                     
  2686                           ;Lab7.c: 296: {
  2687                           ;Lab7.c: 297: PORTBbits.RB3 = 1;
  2688  000314  8681               	bsf	3969,3,c	;volatile
  2689                           
  2690                           ;Lab7.c: 298: T0CONbits.TMR0ON = 1;
  2691  000316  8ED5               	bsf	4053,7,c	;volatile
  2692  000318                     
  2693                           ;Lab7.c: 302: {
  2694                           ;Lab7.c: 303: if(alarm_set == 0){
  2695  000318  0101               	movlb	1	; () banked
  2696  00031A  5138               	movf	_alarm_set& (0+255),w,b
  2697  00031C  1139               	iorwf	(_alarm_set+1)& (0+255),w,b
  2698  00031E  A4D8               	btfss	status,2,c
  2699  000320  D007               	goto	l168
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;Lab7.c: 304: printf("Alarm is OFF\n\r");
  2703  000322  0EC4               	movlw	low STR_14
  2704  000324  6F16               	movwf	printf@f& (0+255),b
  2705  000326  0E7F               	movlw	high STR_14
  2706  000328  6F17               	movwf	(printf@f+1)& (0+255),b
  2707  00032A  EC1A  F003         	call	_printf	;wreg free
  2708                           
  2709                           ;Lab7.c: 305: }
  2710  00032E  D007               	goto	l169
  2711  000330                     l168:
  2712                           
  2713                           ;Lab7.c: 306: else
  2714                           ;Lab7.c: 307: {
  2715                           ;Lab7.c: 308: printf("Alarm is ON\n\r");
  2716  000330  0ED3               	movlw	low STR_15
  2717  000332  0101               	movlb	1	; () banked
  2718  000334  6F16               	movwf	printf@f& (0+255),b
  2719  000336  0E7F               	movlw	high STR_15
  2720  000338  6F17               	movwf	(printf@f+1)& (0+255),b
  2721  00033A  EC1A  F003         	call	_printf	;wreg free
  2722  00033E                     l169:
  2723                           
  2724                           ;Lab7.c: 309: }
  2725                           ;Lab7.c: 310: if(temp_set == 0){
  2726  00033E  0100               	movlb	0	; () banked
  2727  000340  51D4               	movf	_temp_set& (0+255),w,b
  2728  000342  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  2729  000344  A4D8               	btfss	status,2,c
  2730  000346  D008               	goto	l170
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;Lab7.c: 311: printf("Temp Sensor is OFF\n\r");
  2734  000348  0E41               	movlw	low STR_16
  2735  00034A  0101               	movlb	1	; () banked
  2736  00034C  6F16               	movwf	printf@f& (0+255),b
  2737  00034E  0E7F               	movlw	high STR_16
  2738  000350  6F17               	movwf	(printf@f+1)& (0+255),b
  2739  000352  EC1A  F003         	call	_printf	;wreg free
  2740                           
  2741                           ;Lab7.c: 312: }
  2742  000356  D007               	goto	l171
  2743  000358                     l170:
  2744                           
  2745                           ;Lab7.c: 313: else
  2746                           ;Lab7.c: 314: {
  2747                           ;Lab7.c: 315: printf("Temp Sensor is ON\n\r");
  2748  000358  0E6B               	movlw	low STR_17
  2749  00035A  0101               	movlb	1	; () banked
  2750  00035C  6F16               	movwf	printf@f& (0+255),b
  2751  00035E  0E7F               	movlw	high STR_17
  2752  000360  6F17               	movwf	(printf@f+1)& (0+255),b
  2753  000362  EC1A  F003         	call	_printf	;wreg free
  2754  000366                     l171:
  2755                           
  2756                           ;Lab7.c: 316: }
  2757                           ;Lab7.c: 317: printf(
  2758                           ;Lab7.c: 318: "Temperature Threshold: %d\n\r"
  2759                           ;Lab7.c: 319: "Current Temp [F]: %ld"
  2760                           ;Lab7.c: 320: "\n\r\n\r"
  2761                           ;Lab7.c: 321: "Alarm System"
  2762                           ;Lab7.c: 322: "\n\r-----------------\n\r"
  2763                           ;Lab7.c: 323: "1)Password\n\r"
  2764                           ;Lab7.c: 324: "2)PIR Sensor\n\r"
  2765                           ;Lab7.c: 325: "3)Temp Sensor\n\r"
  2766                           ;Lab7.c: 326: "4)Input Method\n\r"
  2767                           ;Lab7.c: 327: "----------------\n\r",temp_threshold,voltage
  2768                           ;Lab7.c: 328: );
  2769  000366  0E81               	movlw	low STR_18
  2770  000368  0101               	movlb	1	; () banked
  2771  00036A  6F16               	movwf	printf@f& (0+255),b
  2772  00036C  0E7A               	movlw	high STR_18
  2773  00036E  6F17               	movwf	(printf@f+1)& (0+255),b
  2774  000370  C0D8  F118         	movff	_temp_threshold,?_printf+2
  2775  000374  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  2776  000378  C0D0  F11A         	movff	_voltage,?_printf+4
  2777  00037C  C0D1  F11B         	movff	_voltage+1,?_printf+5
  2778  000380  C0D2  F11C         	movff	_voltage+2,?_printf+6
  2779  000384  C0D3  F11D         	movff	_voltage+3,?_printf+7
  2780  000388  EC1A  F003         	call	_printf	;wreg free
  2781                           
  2782                           ;Lab7.c: 338: if(PORTBbits.RB4 == 1){
  2783  00038C  A881               	btfss	3969,4,c	;volatile
  2784  00038E  D01F               	goto	l172
  2785  000390                     u2920:
  2786                           
  2787                           ;Lab7.c: 340: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2788                           
  2789                           ;Lab7.c: 339: while(1){
  2790  000390  0E1A               	movlw	26
  2791  000392  0101               	movlb	1	; () banked
  2792  000394  6F33               	movwf	(??_main+1)& (0+255),b
  2793  000396  0E5E               	movlw	94
  2794  000398  6F32               	movwf	??_main& (0+255),b
  2795  00039A  0E6E               	movlw	110
  2796  00039C                     u3507:
  2797  00039C  2EE8               	decfsz	wreg,f,c
  2798  00039E  D7FE               	bra	u3507
  2799  0003A0  2F32               	decfsz	??_main& (0+255),f,b
  2800  0003A2  D7FC               	bra	u3507
  2801  0003A4  2F33               	decfsz	(??_main+1)& (0+255),f,b
  2802  0003A6  D7FA               	bra	u3507
  2803  0003A8  F000               	nop	
  2804                           
  2805                           ;Lab7.c: 341: choice = keypad();
  2806  0003AA  EC67  F00E         	call	_keypad	;wreg free
  2807  0003AE  C12A  F0D6         	movff	?_keypad,_choice
  2808  0003B2  C12B  F0D7         	movff	?_keypad+1,_choice+1
  2809                           
  2810                           ;Lab7.c: 342: printf("%d",choice);
  2811  0003B6  0EFA               	movlw	low STR_9
  2812  0003B8  0101               	movlb	1	; () banked
  2813  0003BA  6F16               	movwf	printf@f& (0+255),b
  2814  0003BC  0E7F               	movlw	high STR_9
  2815  0003BE  6F17               	movwf	(printf@f+1)& (0+255),b
  2816  0003C0  C0D6  F118         	movff	_choice,?_printf+2
  2817  0003C4  C0D7  F119         	movff	_choice+1,?_printf+3
  2818  0003C8  EC1A  F003         	call	_printf	;wreg free
  2819  0003CC  D7E1               	goto	u2920
  2820  0003CE                     l172:
  2821                           
  2822                           ;Lab7.c: 345: else{
  2823                           ;Lab7.c: 346: while(PIR1bits.RCIF == 0);
  2824  0003CE  AA9E               	btfss	3998,5,c	;volatile
  2825  0003D0  D7FE               	goto	l172
  2826                           
  2827                           ;Lab7.c: 347: choice = RCREG;
  2828  0003D2  CFAE F0D6          	movff	4014,_choice	;volatile
  2829  0003D6  0100               	movlb	0	; () banked
  2830  0003D8  6BD7               	clrf	(_choice+1)& (0+255),b
  2831                           
  2832                           ;Lab7.c: 348: }
  2833                           ;Lab7.c: 350: if(triggered == 1)
  2834                           
  2835                           ; BSR set to: 0
  2836  0003DA  0101               	movlb	1	; () banked
  2837  0003DC  053A               	decf	_triggered& (0+255),w,b
  2838  0003DE  113B               	iorwf	(_triggered+1)& (0+255),w,b
  2839  0003E0  A4D8               	btfss	status,2,c
  2840  0003E2  D031               	goto	l182
  2841                           
  2842                           ; BSR set to: 1
  2843                           ;Lab7.c: 351: {
  2844                           ;Lab7.c: 352: printf("\n\rReturning to Menu...\n\r");
  2845  0003E4  0EB5               	movlw	low STR_20
  2846  0003E6  6F16               	movwf	printf@f& (0+255),b
  2847  0003E8  0E7E               	movlw	high STR_20
  2848  0003EA  6F17               	movwf	(printf@f+1)& (0+255),b
  2849  0003EC  EC1A  F003         	call	_printf	;wreg free
  2850                           
  2851                           ;Lab7.c: 353: triggered = 0;
  2852  0003F0  0E00               	movlw	0
  2853  0003F2  0101               	movlb	1	; () banked
  2854  0003F4  6F3B               	movwf	(_triggered+1)& (0+255),b
  2855  0003F6  0E00               	movlw	0
  2856  0003F8  6F3A               	movwf	_triggered& (0+255),b
  2857                           
  2858                           ; BSR set to: 1
  2859                           ;Lab7.c: 354: Clear();
  2860  0003FA  ECA1  F00E         	call	_Clear	;wreg free
  2861                           
  2862                           ;Lab7.c: 355: break;
  2863  0003FE  D78A               	goto	l166
  2864  000400                     
  2865                           ;Lab7.c: 359: password_options();
  2866  000400  EC4C  F008         	call	_password_options	;wreg free
  2867                           
  2868                           ;Lab7.c: 360: break;
  2869  000404  D789               	goto	l167
  2870  000406                     
  2871                           ;Lab7.c: 362: alarm_options();
  2872  000406  EC71  F006         	call	_alarm_options	;wreg free
  2873                           
  2874                           ;Lab7.c: 363: break;
  2875  00040A  D786               	goto	l167
  2876  00040C                     
  2877                           ;Lab7.c: 365: temp_options();
  2878  00040C  EC3A  F002         	call	_temp_options	;wreg free
  2879                           
  2880                           ;Lab7.c: 366: break;
  2881  000410  D783               	goto	l167
  2882  000412                     
  2883                           ;Lab7.c: 368: input_options();
  2884  000412  ECA7  F005         	call	_input_options	;wreg free
  2885                           
  2886                           ;Lab7.c: 369: break;
  2887  000416  D780               	goto	l167
  2888  000418                     
  2889                           ;Lab7.c: 371: printf("\nERROR INVALID INPUT\n\r");
  2890  000418  0E00               	movlw	low STR_21
  2891  00041A  0101               	movlb	1	; () banked
  2892  00041C  6F16               	movwf	printf@f& (0+255),b
  2893  00041E  0E7F               	movlw	high STR_21
  2894  000420  6F17               	movwf	(printf@f+1)& (0+255),b
  2895  000422  EC1A  F003         	call	_printf	;wreg free
  2896                           
  2897                           ;Lab7.c: 372: _delay((unsigned long)((500)*(20000000/4000.0)));
  2898  000426  0E0D               	movlw	13
  2899  000428  0101               	movlb	1	; () banked
  2900  00042A  6F33               	movwf	(??_main+1)& (0+255),b
  2901  00042C  0EAF               	movlw	175
  2902  00042E  6F32               	movwf	??_main& (0+255),b
  2903  000430  0EB6               	movlw	182
  2904  000432                     u3517:
  2905  000432  2EE8               	decfsz	wreg,f,c
  2906  000434  D7FE               	bra	u3517
  2907  000436  2F32               	decfsz	??_main& (0+255),f,b
  2908  000438  D7FC               	bra	u3517
  2909  00043A  2F33               	decfsz	(??_main+1)& (0+255),f,b
  2910  00043C  D7FA               	bra	u3517
  2911  00043E  F000               	nop	
  2912                           
  2913                           ;Lab7.c: 373: Clear();
  2914  000440  ECA1  F00E         	call	_Clear	;wreg free
  2915                           
  2916                           ;Lab7.c: 375: }
  2917                           
  2918                           ;Lab7.c: 374: break;
  2919  000444  D769               	goto	l167
  2920  000446                     l182:
  2921  000446  C0D6  F132         	movff	_choice,??_main
  2922  00044A  C0D7  F133         	movff	_choice+1,??_main+1
  2923                           
  2924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2925                           ; Switch size 1, requested type "space"
  2926                           ; Number of cases is 1, Range of values is 0 to 0
  2927                           ; switch strategies available:
  2928                           ; Name         Instructions Cycles
  2929                           ; simple_byte            4     3 (average)
  2930                           ;	Chosen strategy is simple_byte
  2931  00044E  0101               	movlb	1	; () banked
  2932  000450  5133               	movf	(??_main+1)& (0+255),w,b
  2933  000452  0A00               	xorlw	0	; case 0
  2934  000454  A4D8               	btfss	status,2,c
  2935  000456  D7E0               	goto	l188
  2936                           
  2937                           ; BSR set to: 1
  2938                           ; Switch size 1, requested type "space"
  2939                           ; Number of cases is 4, Range of values is 49 to 52
  2940                           ; switch strategies available:
  2941                           ; Name         Instructions Cycles
  2942                           ; simple_byte           13     7 (average)
  2943                           ;	Chosen strategy is simple_byte
  2944  000458  5132               	movf	??_main& (0+255),w,b
  2945  00045A  0A31               	xorlw	49	; case 49
  2946  00045C  B4D8               	btfsc	status,2,c
  2947  00045E  D7D0               	goto	l183
  2948  000460  0A03               	xorlw	3	; case 50
  2949  000462  B4D8               	btfsc	status,2,c
  2950  000464  D7D0               	goto	l185
  2951  000466  0A01               	xorlw	1	; case 51
  2952  000468  B4D8               	btfsc	status,2,c
  2953  00046A  D7D0               	goto	l186
  2954  00046C  0A07               	xorlw	7	; case 52
  2955  00046E  B4D8               	btfsc	status,2,c
  2956  000470  D7D0               	goto	l187
  2957  000472  D7D2               	goto	l188
  2958  000474                     __end_of_main:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           intcon	equ	0xFF2
  2965                           intcon2	equ	0xFF1
  2966                           intcon3	equ	0xFF0
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           postdec1	equ	0xFE5
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _write_eeprom *****************
  2977 ;; Defined at:
  2978 ;;		line 180 in file "Lab7.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  address         1    wreg     unsigned char 
  2981 ;;  data            1    0[BANK1 ] unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  address         1    2[BANK1 ] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2993 ;;      Params:         0       0       1       0       0       0       0
  2994 ;;      Locals:         0       0       1       0       0       0       0
  2995 ;;      Temps:          0       0       1       0       0       0       0
  2996 ;;      Totals:         0       0       3       0       0       0       0
  2997 ;;Total ram usage:        3 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    8
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text1
  3008  001D0E                     __ptext1:
  3009                           	opt stack 0
  3010  001D0E                     _write_eeprom:
  3011                           	opt stack 22
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;incstack = 0
  3015                           ;write_eeprom@address stored from wreg
  3016  001D0E  0101               	movlb	1	; () banked
  3017  001D10  6F02               	movwf	write_eeprom@address& (0+255),b
  3018                           
  3019                           ;Lab7.c: 182: EEADR = address;
  3020  001D12  C102  FFA9         	movff	write_eeprom@address,4009	;volatile
  3021                           
  3022                           ;Lab7.c: 183: EEDATA = data;
  3023  001D16  C100  FFA8         	movff	write_eeprom@data,4008	;volatile
  3024                           
  3025                           ;Lab7.c: 184: EECON1bits.EEPGD = 0;
  3026  001D1A  9EA6               	bcf	4006,7,c	;volsfr
  3027                           
  3028                           ;Lab7.c: 185: EECON1bits.CFGS = 0;
  3029  001D1C  9CA6               	bcf	4006,6,c	;volsfr
  3030                           
  3031                           ;Lab7.c: 186: EECON1bits.WREN = 1;
  3032  001D1E  84A6               	bsf	4006,2,c	;volsfr
  3033                           
  3034                           ;Lab7.c: 187: INTCONbits.GIE = 0;
  3035  001D20  9EF2               	bcf	intcon,7,c	;volatile
  3036                           
  3037                           ;Lab7.c: 188: EECON2 = 0x55;
  3038  001D22  0E55               	movlw	85
  3039  001D24  6EA7               	movwf	4007,c	;volsfr
  3040                           
  3041                           ;Lab7.c: 189: EECON2 = 0x0aa;
  3042  001D26  0EAA               	movlw	170
  3043  001D28  6EA7               	movwf	4007,c	;volsfr
  3044                           
  3045                           ;Lab7.c: 190: EECON1bits.WR = 1;
  3046  001D2A  82A6               	bsf	4006,1,c	;volsfr
  3047                           
  3048                           ;Lab7.c: 191: _delay((unsigned long)((30)*(20000000/4000.0)));
  3049  001D2C  0EC3               	movlw	195
  3050  001D2E  0101               	movlb	1	; () banked
  3051  001D30  6F01               	movwf	??_write_eeprom& (0+255),b
  3052  001D32  0ECD               	movlw	205
  3053  001D34                     u3527:
  3054  001D34  2EE8               	decfsz	wreg,f,c
  3055  001D36  D7FE               	bra	u3527
  3056  001D38  2F01               	decfsz	??_write_eeprom& (0+255),f,b
  3057  001D3A  D7FC               	bra	u3527
  3058                           
  3059                           ;Lab7.c: 192: INTCONbits.GIE = 1;
  3060  001D3C  8EF2               	bsf	intcon,7,c	;volatile
  3061                           
  3062                           ;Lab7.c: 193: EECON1bits.WREN = 0;
  3063  001D3E  94A6               	bcf	4006,2,c	;volsfr
  3064  001D40  0012               	return		;funcret
  3065  001D42                     __end_of_write_eeprom:
  3066                           	opt stack 0
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           intcon	equ	0xFF2
  3072                           intcon2	equ	0xFF1
  3073                           intcon3	equ	0xFF0
  3074                           postinc0	equ	0xFEE
  3075                           wreg	equ	0xFE8
  3076                           postdec1	equ	0xFE5
  3077                           fsr1l	equ	0xFE1
  3078                           indf2	equ	0xFDF
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _temp_options *****************
  3084 ;; Defined at:
  3085 ;;		line 564 in file "Lab7.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  i               2   44[BANK1 ] int 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3099 ;;      Params:         0       0       0       0       0       0       0
  3100 ;;      Locals:         0       0       2       0       0       0       0
  3101 ;;      Temps:          0       0       2       0       0       0       0
  3102 ;;      Totals:         0       0       4       0       0       0       0
  3103 ;;Total ram usage:        4 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:   11
  3106 ;; This function calls:
  3107 ;;		_Clear
  3108 ;;		_printf
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text2
  3115  000474                     __ptext2:
  3116                           	opt stack 0
  3117  000474                     _temp_options:
  3118                           	opt stack 19
  3119                           
  3120                           ;Lab7.c: 566: Clear();
  3121                           
  3122                           ;incstack = 0
  3123  000474  ECA1  F00E         	call	_Clear	;wreg free
  3124  000478                     
  3125                           ;Lab7.c: 568: {
  3126                           ;Lab7.c: 569: if(alarm_set == 0){
  3127  000478  0101               	movlb	1	; () banked
  3128  00047A  5138               	movf	_alarm_set& (0+255),w,b
  3129  00047C  1139               	iorwf	(_alarm_set+1)& (0+255),w,b
  3130  00047E  A4D8               	btfss	status,2,c
  3131  000480  D007               	goto	l267
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;Lab7.c: 570: printf("Alarm is OFF\n\r");
  3135  000482  0EC4               	movlw	low STR_14
  3136  000484  6F16               	movwf	printf@f& (0+255),b
  3137  000486  0E7F               	movlw	high STR_14
  3138  000488  6F17               	movwf	(printf@f+1)& (0+255),b
  3139  00048A  EC1A  F003         	call	_printf	;wreg free
  3140                           
  3141                           ;Lab7.c: 571: }
  3142  00048E  D007               	goto	l268
  3143  000490                     l267:
  3144                           
  3145                           ;Lab7.c: 572: else
  3146                           ;Lab7.c: 573: {
  3147                           ;Lab7.c: 574: printf("Alarm is ON\n\r");
  3148  000490  0ED3               	movlw	low STR_15
  3149  000492  0101               	movlb	1	; () banked
  3150  000494  6F16               	movwf	printf@f& (0+255),b
  3151  000496  0E7F               	movlw	high STR_15
  3152  000498  6F17               	movwf	(printf@f+1)& (0+255),b
  3153  00049A  EC1A  F003         	call	_printf	;wreg free
  3154  00049E                     l268:
  3155                           
  3156                           ;Lab7.c: 575: }
  3157                           ;Lab7.c: 576: if(temp_set == 0){
  3158  00049E  0100               	movlb	0	; () banked
  3159  0004A0  51D4               	movf	_temp_set& (0+255),w,b
  3160  0004A2  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  3161  0004A4  A4D8               	btfss	status,2,c
  3162  0004A6  D008               	goto	l269
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;Lab7.c: 577: printf("Temp Sensor is OFF\n\r");
  3166  0004A8  0E41               	movlw	low STR_16
  3167  0004AA  0101               	movlb	1	; () banked
  3168  0004AC  6F16               	movwf	printf@f& (0+255),b
  3169  0004AE  0E7F               	movlw	high STR_16
  3170  0004B0  6F17               	movwf	(printf@f+1)& (0+255),b
  3171  0004B2  EC1A  F003         	call	_printf	;wreg free
  3172                           
  3173                           ;Lab7.c: 578: }
  3174  0004B6  D007               	goto	l270
  3175  0004B8                     l269:
  3176                           
  3177                           ;Lab7.c: 579: else
  3178                           ;Lab7.c: 580: {
  3179                           ;Lab7.c: 581: printf("Temp Sensor is ON\n\r");
  3180  0004B8  0E6B               	movlw	low STR_17
  3181  0004BA  0101               	movlb	1	; () banked
  3182  0004BC  6F16               	movwf	printf@f& (0+255),b
  3183  0004BE  0E7F               	movlw	high STR_17
  3184  0004C0  6F17               	movwf	(printf@f+1)& (0+255),b
  3185  0004C2  EC1A  F003         	call	_printf	;wreg free
  3186  0004C6                     l270:
  3187                           
  3188                           ;Lab7.c: 582: }
  3189                           ;Lab7.c: 583: printf("Temperature Threshold: %d\n\r"
  3190                           ;Lab7.c: 584: "Current Temp [F]: %ld"
  3191                           ;Lab7.c: 585: "\n\r\n\r"
  3192                           ;Lab7.c: 586: "Temperature Sensor OPTIONS\n\r"
  3193                           ;Lab7.c: 587: "1) Enable/Disable Alarm\n\r"
  3194                           ;Lab7.c: 588: "2) Temperature Threshold\n\r"
  3195                           ;Lab7.c: 589: "3) Return to Menu\n\r",temp_threshold,voltage);
  3196  0004C6  0E22               	movlw	low STR_53
  3197  0004C8  0101               	movlb	1	; () banked
  3198  0004CA  6F16               	movwf	printf@f& (0+255),b
  3199  0004CC  0E7B               	movlw	high STR_53
  3200  0004CE  6F17               	movwf	(printf@f+1)& (0+255),b
  3201  0004D0  C0D8  F118         	movff	_temp_threshold,?_printf+2
  3202  0004D4  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  3203  0004D8  C0D0  F11A         	movff	_voltage,?_printf+4
  3204  0004DC  C0D1  F11B         	movff	_voltage+1,?_printf+5
  3205  0004E0  C0D2  F11C         	movff	_voltage+2,?_printf+6
  3206  0004E4  C0D3  F11D         	movff	_voltage+3,?_printf+7
  3207  0004E8  EC1A  F003         	call	_printf	;wreg free
  3208  0004EC  AA9E               	btfss	3998,5,c	;volatile
  3209  0004EE  D7FE               	goto	l272
  3210                           
  3211                           ;Lab7.c: 592: choice = RCREG;
  3212  0004F0  CFAE F0D6          	movff	4014,_choice	;volatile
  3213  0004F4  0100               	movlb	0	; () banked
  3214  0004F6  6BD7               	clrf	(_choice+1)& (0+255),b
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;Lab7.c: 593: if(triggered == 1)
  3218  0004F8  0101               	movlb	1	; () banked
  3219  0004FA  053A               	decf	_triggered& (0+255),w,b
  3220  0004FC  113B               	iorwf	(_triggered+1)& (0+255),w,b
  3221  0004FE  A4D8               	btfss	status,2,c
  3222  000500  D085               	goto	l276
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;Lab7.c: 594: {
  3226                           ;Lab7.c: 595: printf("\n\rReturning to Menu...\n\r");
  3227  000502  0EB5               	movlw	low STR_20
  3228  000504  6F16               	movwf	printf@f& (0+255),b
  3229  000506  0E7E               	movlw	high STR_20
  3230  000508  6F17               	movwf	(printf@f+1)& (0+255),b
  3231  00050A  EC1A  F003         	call	_printf	;wreg free
  3232                           
  3233                           ;Lab7.c: 596: triggered = 0;
  3234  00050E  0E00               	movlw	0
  3235  000510  0101               	movlb	1	; () banked
  3236  000512  6F3B               	movwf	(_triggered+1)& (0+255),b
  3237  000514  0E00               	movlw	0
  3238  000516  6F3A               	movwf	_triggered& (0+255),b
  3239                           
  3240                           ; BSR set to: 1
  3241                           ;Lab7.c: 597: Clear();
  3242  000518  ECA1  F00E         	call	_Clear	;wreg free
  3243                           
  3244                           ;Lab7.c: 598: break;
  3245  00051C  0012               	return	
  3246  00051E                     
  3247                           ;Lab7.c: 602: if(temp_set == 0)
  3248  00051E  0100               	movlb	0	; () banked
  3249  000520  51D4               	movf	_temp_set& (0+255),w,b
  3250  000522  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  3251  000524  A4D8               	btfss	status,2,c
  3252  000526  D00C               	goto	l278
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;Lab7.c: 603: {
  3256                           ;Lab7.c: 604: temp_set = 1;
  3257  000528  0E00               	movlw	0
  3258  00052A  6FD5               	movwf	(_temp_set+1)& (0+255),b
  3259  00052C  0E01               	movlw	1
  3260  00052E  6FD4               	movwf	_temp_set& (0+255),b
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;Lab7.c: 605: printf("\n\rTemperature Alarm ON\n\r");
  3264  000530  0ECE               	movlw	low STR_55
  3265  000532  0101               	movlb	1	; () banked
  3266  000534  6F16               	movwf	printf@f& (0+255),b
  3267  000536  0E7E               	movlw	high STR_55
  3268  000538  6F17               	movwf	(printf@f+1)& (0+255),b
  3269  00053A  EC1A  F003         	call	_printf	;wreg free
  3270                           
  3271                           ;Lab7.c: 606: }
  3272  00053E  D00C               	goto	l279
  3273  000540                     l278:
  3274                           
  3275                           ;Lab7.c: 607: else
  3276                           ;Lab7.c: 608: {
  3277                           ;Lab7.c: 609: temp_set = 0;
  3278  000540  0E00               	movlw	0
  3279  000542  0100               	movlb	0	; () banked
  3280  000544  6FD5               	movwf	(_temp_set+1)& (0+255),b
  3281  000546  0E00               	movlw	0
  3282  000548  6FD4               	movwf	_temp_set& (0+255),b
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;Lab7.c: 610: printf("\n\rTemperature Alarm OFF\n\r");
  3286  00054A  0E68               	movlw	low STR_56
  3287  00054C  0101               	movlb	1	; () banked
  3288  00054E  6F16               	movwf	printf@f& (0+255),b
  3289  000550  0E7E               	movlw	high STR_56
  3290  000552  6F17               	movwf	(printf@f+1)& (0+255),b
  3291  000554  EC1A  F003         	call	_printf	;wreg free
  3292  000558                     l279:
  3293                           
  3294                           ;Lab7.c: 611: }
  3295                           ;Lab7.c: 612: _delay((unsigned long)((500)*(20000000/4000.0)));
  3296  000558  0E0D               	movlw	13
  3297  00055A  0101               	movlb	1	; () banked
  3298  00055C  6F2B               	movwf	(??_temp_options+1)& (0+255),b
  3299  00055E  0EAF               	movlw	175
  3300  000560  6F2A               	movwf	??_temp_options& (0+255),b
  3301  000562  0EB6               	movlw	182
  3302  000564                     u3537:
  3303  000564  2EE8               	decfsz	wreg,f,c
  3304  000566  D7FE               	bra	u3537
  3305  000568  2F2A               	decfsz	??_temp_options& (0+255),f,b
  3306  00056A  D7FC               	bra	u3537
  3307  00056C  2F2B               	decfsz	(??_temp_options+1)& (0+255),f,b
  3308  00056E  D7FA               	bra	u3537
  3309  000570  F000               	nop	
  3310                           
  3311                           ;Lab7.c: 613: Clear();
  3312  000572  ECA1  F00E         	call	_Clear	;wreg free
  3313                           
  3314                           ;Lab7.c: 614: break;
  3315  000576  D780               	goto	l266
  3316  000578                     
  3317                           ;Lab7.c: 616: printf("Enter new temp threshold\n\r");
  3318  000578  0E4D               	movlw	low STR_57
  3319  00057A  0101               	movlb	1	; () banked
  3320  00057C  6F16               	movwf	printf@f& (0+255),b
  3321  00057E  0E7E               	movlw	high STR_57
  3322  000580  6F17               	movwf	(printf@f+1)& (0+255),b
  3323  000582  EC1A  F003         	call	_printf	;wreg free
  3324                           
  3325                           ;Lab7.c: 617: for(int i = 0;i < 2;i++){
  3326  000586  0E00               	movlw	0
  3327  000588  0101               	movlb	1	; () banked
  3328  00058A  6F2D               	movwf	(temp_options@i+1)& (0+255),b
  3329  00058C  0E00               	movlw	0
  3330  00058E  6F2C               	movwf	temp_options@i& (0+255),b
  3331                           
  3332                           ; BSR set to: 1
  3333  000590  BF2D               	btfsc	(temp_options@i+1)& (0+255),7,b
  3334  000592  D004               	goto	l282
  3335  000594  512D               	movf	(temp_options@i+1)& (0+255),w,b
  3336  000596  E101               	bnz	u2660
  3337  000598  D019               	goto	L1
  3338  00059A                     u2660:
  3339                           
  3340                           ; BSR set to: 1
  3341  00059A  D76E               	goto	l266
  3342  00059C                     l282:
  3343                           
  3344                           ; BSR set to: 1
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;Lab7.c: 618: while(PIR1bits.RCIF == 0);
  3348  00059C  AA9E               	btfss	3998,5,c	;volatile
  3349  00059E  D7FE               	goto	l282
  3350                           
  3351                           ;Lab7.c: 619: temp_threshold = RCREG;
  3352  0005A0  CFAE F0D8          	movff	4014,_temp_threshold	;volatile
  3353  0005A4  0100               	movlb	0	; () banked
  3354  0005A6  6BD9               	clrf	(_temp_threshold+1)& (0+255),b
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;Lab7.c: 620: printf("%d", temp_threshold);
  3358  0005A8  0EFA               	movlw	low STR_9
  3359  0005AA  0101               	movlb	1	; () banked
  3360  0005AC  6F16               	movwf	printf@f& (0+255),b
  3361  0005AE  0E7F               	movlw	high STR_9
  3362  0005B0  6F17               	movwf	(printf@f+1)& (0+255),b
  3363  0005B2  C0D8  F118         	movff	_temp_threshold,?_printf+2
  3364  0005B6  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  3365  0005BA  EC1A  F003         	call	_printf	;wreg free
  3366  0005BE  0101               	movlb	1	; () banked
  3367  0005C0  4B2C               	infsnz	temp_options@i& (0+255),f,b
  3368  0005C2  2B2D               	incf	(temp_options@i+1)& (0+255),f,b
  3369                           
  3370                           ; BSR set to: 1
  3371  0005C4  BF2D               	btfsc	(temp_options@i+1)& (0+255),7,b
  3372  0005C6  D7EA               	goto	l282
  3373  0005C8  512D               	movf	(temp_options@i+1)& (0+255),w,b
  3374  0005CA  E105               	bnz	u2680
  3375  0005CC                     L1:
  3376  0005CC  0E02               	movlw	2
  3377  0005CE  5D2C               	subwf	temp_options@i& (0+255),w,b
  3378  0005D0  B0D8               	btfsc	status,0,c
  3379  0005D2  D752               	goto	l266
  3380  0005D4  D7E3               	goto	l282
  3381  0005D6                     u2680:
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;Lab7.c: 621: }
  3385                           ;Lab7.c: 622: break;
  3386  0005D6  D750               	goto	l266
  3387  0005D8                     
  3388                           ; BSR set to: 1
  3389                           ;Lab7.c: 624: Clear();
  3390                           
  3391                           ; BSR set to: 1
  3392  0005D8  ECA1  F00E         	call	_Clear	;wreg free
  3393                           
  3394                           ;Lab7.c: 625: return;
  3395  0005DC  0012               	return	
  3396  0005DE                     
  3397                           ;Lab7.c: 627: printf("\nERROR INVALID INPUT\n\r");
  3398  0005DE  0E00               	movlw	low STR_21
  3399  0005E0  0101               	movlb	1	; () banked
  3400  0005E2  6F16               	movwf	printf@f& (0+255),b
  3401  0005E4  0E7F               	movlw	high STR_21
  3402  0005E6  6F17               	movwf	(printf@f+1)& (0+255),b
  3403  0005E8  EC1A  F003         	call	_printf	;wreg free
  3404                           
  3405                           ;Lab7.c: 628: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3406  0005EC  0E1A               	movlw	26
  3407  0005EE  0101               	movlb	1	; () banked
  3408  0005F0  6F2B               	movwf	(??_temp_options+1)& (0+255),b
  3409  0005F2  0E5E               	movlw	94
  3410  0005F4  6F2A               	movwf	??_temp_options& (0+255),b
  3411  0005F6  0E6E               	movlw	110
  3412  0005F8                     u3547:
  3413  0005F8  2EE8               	decfsz	wreg,f,c
  3414  0005FA  D7FE               	bra	u3547
  3415  0005FC  2F2A               	decfsz	??_temp_options& (0+255),f,b
  3416  0005FE  D7FC               	bra	u3547
  3417  000600  2F2B               	decfsz	(??_temp_options+1)& (0+255),f,b
  3418  000602  D7FA               	bra	u3547
  3419  000604  F000               	nop	
  3420                           
  3421                           ;Lab7.c: 629: Clear();
  3422  000606  ECA1  F00E         	call	_Clear	;wreg free
  3423                           
  3424                           ;Lab7.c: 631: }
  3425                           
  3426                           ;Lab7.c: 630: break;
  3427  00060A  D736               	goto	l266
  3428  00060C                     l276:
  3429  00060C  C0D6  F12A         	movff	_choice,??_temp_options
  3430  000610  C0D7  F12B         	movff	_choice+1,??_temp_options+1
  3431                           
  3432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3433                           ; Switch size 1, requested type "space"
  3434                           ; Number of cases is 1, Range of values is 0 to 0
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte            4     3 (average)
  3438                           ;	Chosen strategy is simple_byte
  3439  000614  0101               	movlb	1	; () banked
  3440  000616  512B               	movf	(??_temp_options+1)& (0+255),w,b
  3441  000618  0A00               	xorlw	0	; case 0
  3442  00061A  A4D8               	btfss	status,2,c
  3443  00061C  D7E0               	goto	l289
  3444                           
  3445                           ; BSR set to: 1
  3446                           ; Switch size 1, requested type "space"
  3447                           ; Number of cases is 3, Range of values is 49 to 51
  3448                           ; switch strategies available:
  3449                           ; Name         Instructions Cycles
  3450                           ; simple_byte           10     6 (average)
  3451                           ;	Chosen strategy is simple_byte
  3452  00061E  512A               	movf	??_temp_options& (0+255),w,b
  3453  000620  0A31               	xorlw	49	; case 49
  3454  000622  B4D8               	btfsc	status,2,c
  3455  000624  D77C               	goto	l277
  3456  000626  0A03               	xorlw	3	; case 50
  3457  000628  B4D8               	btfsc	status,2,c
  3458  00062A  D7A6               	goto	l281
  3459  00062C  0A01               	xorlw	1	; case 51
  3460  00062E  B4D8               	btfsc	status,2,c
  3461  000630  D7D3               	goto	l287
  3462  000632  D7D5               	goto	l289
  3463  000634                     __end_of_temp_options:
  3464                           	opt stack 0
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           intcon	equ	0xFF2
  3470                           intcon2	equ	0xFF1
  3471                           intcon3	equ	0xFF0
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function _password_options *****************
  3482 ;; Defined at:
  3483 ;;		line 449 in file "Lab7.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       2       0       0       0       0
  3500 ;;      Totals:         0       0       2       0       0       0       0
  3501 ;;Total ram usage:        2 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:   12
  3504 ;; This function calls:
  3505 ;;		_Clear
  3506 ;;		_password_change
  3507 ;;		_printf
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text3
  3514  001098                     __ptext3:
  3515                           	opt stack 0
  3516  001098                     _password_options:
  3517                           	opt stack 18
  3518                           
  3519                           ;Lab7.c: 451: Clear();
  3520                           
  3521                           ;incstack = 0
  3522  001098  ECA1  F00E         	call	_Clear	;wreg free
  3523  00109C                     
  3524                           ;Lab7.c: 453: {
  3525                           ;Lab7.c: 454: if(alarm_set == 0){
  3526  00109C  0101               	movlb	1	; () banked
  3527  00109E  5138               	movf	_alarm_set& (0+255),w,b
  3528  0010A0  1139               	iorwf	(_alarm_set+1)& (0+255),w,b
  3529  0010A2  A4D8               	btfss	status,2,c
  3530  0010A4  D007               	goto	l227
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;Lab7.c: 455: printf("Alarm is OFF\n\r");
  3534  0010A6  0EC4               	movlw	low STR_14
  3535  0010A8  6F16               	movwf	printf@f& (0+255),b
  3536  0010AA  0E7F               	movlw	high STR_14
  3537  0010AC  6F17               	movwf	(printf@f+1)& (0+255),b
  3538  0010AE  EC1A  F003         	call	_printf	;wreg free
  3539                           
  3540                           ;Lab7.c: 456: }
  3541  0010B2  D007               	goto	l228
  3542  0010B4                     l227:
  3543                           
  3544                           ;Lab7.c: 457: else
  3545                           ;Lab7.c: 458: {
  3546                           ;Lab7.c: 459: printf("Alarm is ON\n\r");
  3547  0010B4  0ED3               	movlw	low STR_15
  3548  0010B6  0101               	movlb	1	; () banked
  3549  0010B8  6F16               	movwf	printf@f& (0+255),b
  3550  0010BA  0E7F               	movlw	high STR_15
  3551  0010BC  6F17               	movwf	(printf@f+1)& (0+255),b
  3552  0010BE  EC1A  F003         	call	_printf	;wreg free
  3553  0010C2                     l228:
  3554                           
  3555                           ;Lab7.c: 460: }
  3556                           ;Lab7.c: 461: if(temp_set == 0){
  3557  0010C2  0100               	movlb	0	; () banked
  3558  0010C4  51D4               	movf	_temp_set& (0+255),w,b
  3559  0010C6  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  3560  0010C8  A4D8               	btfss	status,2,c
  3561  0010CA  D008               	goto	l229
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;Lab7.c: 462: printf("Temp Sensor is OFF\n\r");
  3565  0010CC  0E41               	movlw	low STR_16
  3566  0010CE  0101               	movlb	1	; () banked
  3567  0010D0  6F16               	movwf	printf@f& (0+255),b
  3568  0010D2  0E7F               	movlw	high STR_16
  3569  0010D4  6F17               	movwf	(printf@f+1)& (0+255),b
  3570  0010D6  EC1A  F003         	call	_printf	;wreg free
  3571                           
  3572                           ;Lab7.c: 463: }
  3573  0010DA  D007               	goto	l230
  3574  0010DC                     l229:
  3575                           
  3576                           ;Lab7.c: 464: else
  3577                           ;Lab7.c: 465: {
  3578                           ;Lab7.c: 466: printf("Temp Sensor is ON\n\r");
  3579  0010DC  0E6B               	movlw	low STR_17
  3580  0010DE  0101               	movlb	1	; () banked
  3581  0010E0  6F16               	movwf	printf@f& (0+255),b
  3582  0010E2  0E7F               	movlw	high STR_17
  3583  0010E4  6F17               	movwf	(printf@f+1)& (0+255),b
  3584  0010E6  EC1A  F003         	call	_printf	;wreg free
  3585  0010EA                     l230:
  3586                           
  3587                           ;Lab7.c: 467: }
  3588                           ;Lab7.c: 468: printf(
  3589                           ;Lab7.c: 469: "Temperature Threshold: %d\n\r"
  3590                           ;Lab7.c: 470: "Current Temp [F]: %ld"
  3591                           ;Lab7.c: 471: "\n\r\n\r"
  3592                           ;Lab7.c: 472: "PASSWORD OPTIONS\n\r"
  3593                           ;Lab7.c: 473: "1)Change Password\n\r"
  3594                           ;Lab7.c: 474: "2) Return to Menu\n\r",temp_threshold, voltage);
  3595  0010EA  0EB3               	movlw	low STR_36
  3596  0010EC  0101               	movlb	1	; () banked
  3597  0010EE  6F16               	movwf	printf@f& (0+255),b
  3598  0010F0  0E7C               	movlw	high STR_36
  3599  0010F2  6F17               	movwf	(printf@f+1)& (0+255),b
  3600  0010F4  C0D8  F118         	movff	_temp_threshold,?_printf+2
  3601  0010F8  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  3602  0010FC  C0D0  F11A         	movff	_voltage,?_printf+4
  3603  001100  C0D1  F11B         	movff	_voltage+1,?_printf+5
  3604  001104  C0D2  F11C         	movff	_voltage+2,?_printf+6
  3605  001108  C0D3  F11D         	movff	_voltage+3,?_printf+7
  3606  00110C  EC1A  F003         	call	_printf	;wreg free
  3607  001110  AA9E               	btfss	3998,5,c	;volatile
  3608  001112  D7FE               	goto	l232
  3609                           
  3610                           ;Lab7.c: 476: choice = RCREG;
  3611  001114  CFAE F0D6          	movff	4014,_choice	;volatile
  3612  001118  0100               	movlb	0	; () banked
  3613  00111A  6BD7               	clrf	(_choice+1)& (0+255),b
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;Lab7.c: 477: if(triggered == 1)
  3617  00111C  0101               	movlb	1	; () banked
  3618  00111E  053A               	decf	_triggered& (0+255),w,b
  3619  001120  113B               	iorwf	(_triggered+1)& (0+255),w,b
  3620  001122  A4D8               	btfss	status,2,c
  3621  001124  D032               	goto	l236
  3622                           
  3623                           ; BSR set to: 1
  3624                           ;Lab7.c: 478: {
  3625                           ;Lab7.c: 479: printf("\n\rReturning to Menu...\n\r");
  3626  001126  0EB5               	movlw	low STR_20
  3627  001128  6F16               	movwf	printf@f& (0+255),b
  3628  00112A  0E7E               	movlw	high STR_20
  3629  00112C  6F17               	movwf	(printf@f+1)& (0+255),b
  3630  00112E  EC1A  F003         	call	_printf	;wreg free
  3631                           
  3632                           ;Lab7.c: 480: triggered = 0;
  3633  001132  0E00               	movlw	0
  3634  001134  0101               	movlb	1	; () banked
  3635  001136  6F3B               	movwf	(_triggered+1)& (0+255),b
  3636  001138  0E00               	movlw	0
  3637  00113A  6F3A               	movwf	_triggered& (0+255),b
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;Lab7.c: 481: Clear();
  3641  00113C  ECA1  F00E         	call	_Clear	;wreg free
  3642                           
  3643                           ;Lab7.c: 482: break;
  3644  001140  0012               	return	
  3645  001142                     
  3646                           ;Lab7.c: 486: printf("Changed Password\n\r\n\r");
  3647  001142  0E2C               	movlw	low STR_38
  3648  001144  0101               	movlb	1	; () banked
  3649  001146  6F16               	movwf	printf@f& (0+255),b
  3650  001148  0E7F               	movlw	high STR_38
  3651  00114A  6F17               	movwf	(printf@f+1)& (0+255),b
  3652  00114C  EC1A  F003         	call	_printf	;wreg free
  3653                           
  3654                           ;Lab7.c: 487: password_change();
  3655  001150  EC1B  F007         	call	_password_change	;wreg free
  3656                           
  3657                           ;Lab7.c: 488: break;
  3658  001154  D7A3               	goto	l226
  3659  001156                     
  3660                           ;Lab7.c: 490: Clear();
  3661  001156  ECA1  F00E         	call	_Clear	;wreg free
  3662                           
  3663                           ;Lab7.c: 491: return;
  3664  00115A  0012               	return	
  3665  00115C                     
  3666                           ;Lab7.c: 493: printf("\nERROR INVALID INPUT\n\r");
  3667  00115C  0E00               	movlw	low STR_21
  3668  00115E  0101               	movlb	1	; () banked
  3669  001160  6F16               	movwf	printf@f& (0+255),b
  3670  001162  0E7F               	movlw	high STR_21
  3671  001164  6F17               	movwf	(printf@f+1)& (0+255),b
  3672  001166  EC1A  F003         	call	_printf	;wreg free
  3673                           
  3674                           ;Lab7.c: 494: _delay((unsigned long)((500)*(20000000/4000.0)));
  3675  00116A  0E0D               	movlw	13
  3676  00116C  0101               	movlb	1	; () banked
  3677  00116E  6F31               	movwf	(??_password_options+1)& (0+255),b
  3678  001170  0EAF               	movlw	175
  3679  001172  6F30               	movwf	??_password_options& (0+255),b
  3680  001174  0EB6               	movlw	182
  3681  001176                     u3557:
  3682  001176  2EE8               	decfsz	wreg,f,c
  3683  001178  D7FE               	bra	u3557
  3684  00117A  2F30               	decfsz	??_password_options& (0+255),f,b
  3685  00117C  D7FC               	bra	u3557
  3686  00117E  2F31               	decfsz	(??_password_options+1)& (0+255),f,b
  3687  001180  D7FA               	bra	u3557
  3688  001182  F000               	nop	
  3689                           
  3690                           ;Lab7.c: 495: Clear();
  3691  001184  ECA1  F00E         	call	_Clear	;wreg free
  3692                           
  3693                           ;Lab7.c: 497: }
  3694                           
  3695                           ;Lab7.c: 496: break;
  3696  001188  D789               	goto	l226
  3697  00118A                     l236:
  3698  00118A  C0D6  F130         	movff	_choice,??_password_options
  3699  00118E  C0D7  F131         	movff	_choice+1,??_password_options+1
  3700                           
  3701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3702                           ; Switch size 1, requested type "space"
  3703                           ; Number of cases is 1, Range of values is 0 to 0
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte            4     3 (average)
  3707                           ;	Chosen strategy is simple_byte
  3708  001192  0101               	movlb	1	; () banked
  3709  001194  5131               	movf	(??_password_options+1)& (0+255),w,b
  3710  001196  0A00               	xorlw	0	; case 0
  3711  001198  A4D8               	btfss	status,2,c
  3712  00119A  D7E0               	goto	l241
  3713                           
  3714                           ; BSR set to: 1
  3715                           ; Switch size 1, requested type "space"
  3716                           ; Number of cases is 2, Range of values is 49 to 50
  3717                           ; switch strategies available:
  3718                           ; Name         Instructions Cycles
  3719                           ; simple_byte            7     4 (average)
  3720                           ;	Chosen strategy is simple_byte
  3721  00119C  5130               	movf	??_password_options& (0+255),w,b
  3722  00119E  0A31               	xorlw	49	; case 49
  3723  0011A0  B4D8               	btfsc	status,2,c
  3724  0011A2  D7CF               	goto	l237
  3725  0011A4  0A03               	xorlw	3	; case 50
  3726  0011A6  B4D8               	btfsc	status,2,c
  3727  0011A8  D7D6               	goto	l239
  3728  0011AA  D7D8               	goto	l241
  3729  0011AC                     __end_of_password_options:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           intcon	equ	0xFF2
  3736                           intcon2	equ	0xFF1
  3737                           intcon3	equ	0xFF0
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           
  3747 ;; *************** function _password_change *****************
  3748 ;; Defined at:
  3749 ;;		line 379 in file "Lab7.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  i               2   46[BANK1 ] int 
  3754 ;;  i               2   44[BANK1 ] int 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         0       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       4       0       0       0       0
  3766 ;;      Temps:          0       0       2       0       0       0       0
  3767 ;;      Totals:         0       0       6       0       0       0       0
  3768 ;;Total ram usage:        6 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:   11
  3771 ;; This function calls:
  3772 ;;		_Clear
  3773 ;;		_printf
  3774 ;;		_strncmp
  3775 ;; This function is called by:
  3776 ;;		_password_options
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text4
  3781  000E36                     __ptext4:
  3782                           	opt stack 0
  3783  000E36                     _password_change:
  3784                           	opt stack 18
  3785                           
  3786                           ;Lab7.c: 382: {
  3787                           ;Lab7.c: 383: Clear();
  3788                           
  3789                           ;incstack = 0
  3790                           ;Lab7.c: 381: while(1)
  3791  000E36  ECA1  F00E         	call	_Clear	;wreg free
  3792                           
  3793                           ;Lab7.c: 384: printf("Enter Current Password: ");
  3794  000E3A  0EE7               	movlw	low STR_22
  3795  000E3C  0101               	movlb	1	; () banked
  3796  000E3E  6F16               	movwf	printf@f& (0+255),b
  3797  000E40  0E7E               	movlw	high STR_22
  3798  000E42  6F17               	movwf	(printf@f+1)& (0+255),b
  3799  000E44  EC1A  F003         	call	_printf	;wreg free
  3800                           
  3801                           ;Lab7.c: 385: for(int i = 0;i < 4;i++){
  3802  000E48  0E00               	movlw	0
  3803  000E4A  0101               	movlb	1	; () banked
  3804  000E4C  6F2D               	movwf	(password_change@i+1)& (0+255),b
  3805  000E4E  0E00               	movlw	0
  3806  000E50  6F2C               	movwf	password_change@i& (0+255),b
  3807                           
  3808                           ; BSR set to: 1
  3809  000E52  BF2D               	btfsc	(password_change@i+1)& (0+255),7,b
  3810  000E54  D006               	goto	l196
  3811  000E56  512D               	movf	(password_change@i+1)& (0+255),w,b
  3812  000E58  E120               	bnz	l2655
  3813  000E5A  0E04               	movlw	4
  3814  000E5C  5D2C               	subwf	password_change@i& (0+255),w,b
  3815  000E5E  B0D8               	btfsc	status,0,c
  3816  000E60  D01C               	goto	u1910
  3817  000E62                     l196:
  3818                           
  3819                           ; BSR set to: 1
  3820                           
  3821                           ; BSR set to: 1
  3822                           ;Lab7.c: 386: while(PIR1bits.RCIF == 0);
  3823  000E62  AA9E               	btfss	3998,5,c	;volatile
  3824  000E64  D7FE               	goto	l196
  3825                           
  3826                           ;Lab7.c: 387: pass[i] = RCREG;
  3827  000E66  0E3F               	movlw	low _pass
  3828  000E68  0101               	movlb	1	; () banked
  3829  000E6A  252C               	addwf	password_change@i& (0+255),w,b
  3830  000E6C  6ED9               	movwf	fsr2l,c
  3831  000E6E  0E01               	movlw	high _pass
  3832  000E70  212D               	addwfc	(password_change@i+1)& (0+255),w,b
  3833  000E72  6EDA               	movwf	fsr2h,c
  3834  000E74  CFAE FFDF          	movff	4014,indf2	;volatile
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;Lab7.c: 388: printf("*");
  3838  000E78  0EFD               	movlw	low STR_12
  3839  000E7A  6F16               	movwf	printf@f& (0+255),b
  3840  000E7C  0E7F               	movlw	high STR_12
  3841  000E7E  6F17               	movwf	(printf@f+1)& (0+255),b
  3842  000E80  EC1A  F003         	call	_printf	;wreg free
  3843  000E84  0101               	movlb	1	; () banked
  3844  000E86  4B2C               	infsnz	password_change@i& (0+255),f,b
  3845  000E88  2B2D               	incf	(password_change@i+1)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 1
  3848  000E8A  BF2D               	btfsc	(password_change@i+1)& (0+255),7,b
  3849  000E8C  D7EA               	goto	l196
  3850  000E8E  512D               	movf	(password_change@i+1)& (0+255),w,b
  3851  000E90  E104               	bnz	l2655
  3852  000E92  0E04               	movlw	4
  3853  000E94  5D2C               	subwf	password_change@i& (0+255),w,b
  3854  000E96  A0D8               	btfss	status,0,c
  3855  000E98  D7E4               	goto	l196
  3856  000E9A                     u1910:
  3857  000E9A                     l2655:
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;Lab7.c: 389: }
  3861                           ;Lab7.c: 390: check = strncmp(pass, saved_pass, 4);
  3862  000E9A  0E3F               	movlw	low _pass
  3863  000E9C  6F00               	movwf	strncmp@s1& (0+255),b
  3864  000E9E  0E01               	movlw	high _pass
  3865  000EA0  6F01               	movwf	(strncmp@s1+1)& (0+255),b
  3866  000EA2  0E43               	movlw	low _saved_pass
  3867  000EA4  6F02               	movwf	strncmp@s2& (0+255),b
  3868  000EA6  0E01               	movlw	high _saved_pass
  3869  000EA8  6F03               	movwf	(strncmp@s2+1)& (0+255),b
  3870  000EAA  0E00               	movlw	0
  3871  000EAC  6F05               	movwf	(strncmp@len+1)& (0+255),b
  3872  000EAE  0E04               	movlw	4
  3873  000EB0  6F04               	movwf	strncmp@len& (0+255),b
  3874  000EB2  ECA6  F00C         	call	_strncmp	;wreg free
  3875  000EB6  C100  F13C         	movff	?_strncmp,_check
  3876  000EBA  C101  F13D         	movff	?_strncmp+1,_check+1
  3877                           
  3878                           ;Lab7.c: 391: if(check == 0)
  3879  000EBE  0101               	movlb	1	; () banked
  3880  000EC0  513C               	movf	_check& (0+255),w,b
  3881  000EC2  113D               	iorwf	(_check+1)& (0+255),w,b
  3882  000EC4  A4D8               	btfss	status,2,c
  3883  000EC6  D039               	goto	l201
  3884                           
  3885                           ; BSR set to: 1
  3886                           ;Lab7.c: 392: {
  3887                           ;Lab7.c: 393: Clear();
  3888  000EC8  ECA1  F00E         	call	_Clear	;wreg free
  3889                           
  3890                           ;Lab7.c: 394: printf("Enter New Password: ");
  3891  000ECC  0E56               	movlw	low STR_24
  3892  000ECE  0101               	movlb	1	; () banked
  3893  000ED0  6F16               	movwf	printf@f& (0+255),b
  3894  000ED2  0E7F               	movlw	high STR_24
  3895  000ED4  6F17               	movwf	(printf@f+1)& (0+255),b
  3896  000ED6  EC1A  F003         	call	_printf	;wreg free
  3897                           
  3898                           ;Lab7.c: 395: for(int i = 0;i < 4;i++){
  3899  000EDA  0E00               	movlw	0
  3900  000EDC  0101               	movlb	1	; () banked
  3901  000EDE  6F2F               	movwf	(password_change@i_1080+1)& (0+255),b
  3902  000EE0  0E00               	movlw	0
  3903  000EE2  6F2E               	movwf	password_change@i_1080& (0+255),b
  3904                           
  3905                           ; BSR set to: 1
  3906  000EE4  BF2F               	btfsc	(password_change@i_1080+1)& (0+255),7,b
  3907  000EE6  D006               	goto	l202
  3908  000EE8  512F               	movf	(password_change@i_1080+1)& (0+255),w,b
  3909  000EEA  E120               	bnz	l2675
  3910  000EEC  0E04               	movlw	4
  3911  000EEE  5D2E               	subwf	password_change@i_1080& (0+255),w,b
  3912  000EF0  B0D8               	btfsc	status,0,c
  3913  000EF2  D01C               	goto	u1950
  3914  000EF4                     l202:
  3915                           
  3916                           ; BSR set to: 1
  3917                           
  3918                           ; BSR set to: 1
  3919                           ;Lab7.c: 396: while(PIR1bits.RCIF == 0);
  3920  000EF4  AA9E               	btfss	3998,5,c	;volatile
  3921  000EF6  D7FE               	goto	l202
  3922                           
  3923                           ;Lab7.c: 397: saved_pass[i] = RCREG;
  3924  000EF8  0E43               	movlw	low _saved_pass
  3925  000EFA  0101               	movlb	1	; () banked
  3926  000EFC  252E               	addwf	password_change@i_1080& (0+255),w,b
  3927  000EFE  6ED9               	movwf	fsr2l,c
  3928  000F00  0E01               	movlw	high _saved_pass
  3929  000F02  212F               	addwfc	(password_change@i_1080+1)& (0+255),w,b
  3930  000F04  6EDA               	movwf	fsr2h,c
  3931  000F06  CFAE FFDF          	movff	4014,indf2	;volatile
  3932                           
  3933                           ; BSR set to: 1
  3934                           ;Lab7.c: 398: printf("*");
  3935  000F0A  0EFD               	movlw	low STR_12
  3936  000F0C  6F16               	movwf	printf@f& (0+255),b
  3937  000F0E  0E7F               	movlw	high STR_12
  3938  000F10  6F17               	movwf	(printf@f+1)& (0+255),b
  3939  000F12  EC1A  F003         	call	_printf	;wreg free
  3940  000F16  0101               	movlb	1	; () banked
  3941  000F18  4B2E               	infsnz	password_change@i_1080& (0+255),f,b
  3942  000F1A  2B2F               	incf	(password_change@i_1080+1)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 1
  3945  000F1C  BF2F               	btfsc	(password_change@i_1080+1)& (0+255),7,b
  3946  000F1E  D7EA               	goto	l202
  3947  000F20  512F               	movf	(password_change@i_1080+1)& (0+255),w,b
  3948  000F22  E104               	bnz	l2675
  3949  000F24  0E04               	movlw	4
  3950  000F26  5D2E               	subwf	password_change@i_1080& (0+255),w,b
  3951  000F28  A0D8               	btfss	status,0,c
  3952  000F2A  D7E4               	goto	l202
  3953  000F2C                     u1950:
  3954  000F2C                     l2675:
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;Lab7.c: 399: }
  3958                           ;Lab7.c: 400: printf("\n\r\n\rPassword Changed\n\r\n\r");
  3959  000F2C  0E9C               	movlw	low STR_26
  3960  000F2E  6F16               	movwf	printf@f& (0+255),b
  3961  000F30  0E7E               	movlw	high STR_26
  3962  000F32  6F17               	movwf	(printf@f+1)& (0+255),b
  3963  000F34  EC1A  F003         	call	_printf	;wreg free
  3964                           
  3965                           ;Lab7.c: 401: break;
  3966  000F38  0012               	return	
  3967  000F3A                     l201:
  3968                           
  3969                           ;Lab7.c: 403: else
  3970                           ;Lab7.c: 404: {
  3971                           ;Lab7.c: 405: printf("\n\rPassword Invalid. Going back to Password Menu....\n\r");
  3972  000F3A  0E59               	movlw	low STR_27
  3973  000F3C  0101               	movlb	1	; () banked
  3974  000F3E  6F16               	movwf	printf@f& (0+255),b
  3975  000F40  0E7D               	movlw	high STR_27
  3976  000F42  6F17               	movwf	(printf@f+1)& (0+255),b
  3977  000F44  EC1A  F003         	call	_printf	;wreg free
  3978                           
  3979                           ;Lab7.c: 406: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3980  000F48  0E1A               	movlw	26
  3981  000F4A  0101               	movlb	1	; () banked
  3982  000F4C  6F2B               	movwf	(??_password_change+1)& (0+255),b
  3983  000F4E  0E5E               	movlw	94
  3984  000F50  6F2A               	movwf	??_password_change& (0+255),b
  3985  000F52  0E6E               	movlw	110
  3986  000F54                     u3567:
  3987  000F54  2EE8               	decfsz	wreg,f,c
  3988  000F56  D7FE               	bra	u3567
  3989  000F58  2F2A               	decfsz	??_password_change& (0+255),f,b
  3990  000F5A  D7FC               	bra	u3567
  3991  000F5C  2F2B               	decfsz	(??_password_change+1)& (0+255),f,b
  3992  000F5E  D7FA               	bra	u3567
  3993  000F60  F000               	nop	
  3994                           
  3995                           ;Lab7.c: 407: Clear();
  3996  000F62  ECA1  F00E         	call	_Clear	;wreg free
  3997                           
  3998                           ;Lab7.c: 408: break;
  3999  000F66  0012               	return	
  4000  000F68                     __end_of_password_change:
  4001                           	opt stack 0
  4002                           tblptru	equ	0xFF8
  4003                           tblptrh	equ	0xFF7
  4004                           tblptrl	equ	0xFF6
  4005                           tablat	equ	0xFF5
  4006                           intcon	equ	0xFF2
  4007                           intcon2	equ	0xFF1
  4008                           intcon3	equ	0xFF0
  4009                           postinc0	equ	0xFEE
  4010                           wreg	equ	0xFE8
  4011                           postdec1	equ	0xFE5
  4012                           fsr1l	equ	0xFE1
  4013                           indf2	equ	0xFDF
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _strncmp *****************
  4019 ;; Defined at:
  4020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  s1              2    0[BANK1 ] PTR const unsigned char 
  4023 ;;		 -> pass(4), 
  4024 ;;  s2              2    2[BANK1 ] PTR const unsigned char 
  4025 ;;		 -> saved_pass(4), 
  4026 ;;  len             2    4[BANK1 ] unsigned int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2    0[BANK1 ] int 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         0       0       6       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0
  4040 ;;      Temps:          0       0       3       0       0       0       0
  4041 ;;      Totals:         0       0       9       0       0       0       0
  4042 ;;Total ram usage:        9 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    8
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_password_change
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text5
  4053  00194C                     __ptext5:
  4054                           	opt stack 0
  4055  00194C                     _strncmp:
  4056                           	opt stack 20
  4057                           
  4058                           ;incstack = 0
  4059  00194C  D031               	goto	l916
  4060  00194E                     l2503:
  4061  00194E  C100  FFD9         	movff	strncmp@s1,fsr2l
  4062  001952  C101  FFDA         	movff	strncmp@s1+1,fsr2h
  4063  001956  50DF               	movf	indf2,w,c
  4064  001958  B4D8               	btfsc	status,2,c
  4065  00195A  D00C               	goto	u1650
  4066  00195C  C102  FFD9         	movff	strncmp@s2,fsr2l
  4067  001960  C103  FFDA         	movff	strncmp@s2+1,fsr2h
  4068  001964  C100  FFE1         	movff	strncmp@s1,fsr1l
  4069  001968  C101  FFE2         	movff	strncmp@s1+1,fsr1h
  4070  00196C  50DE               	movf	postinc2,w,c
  4071  00196E  18E6               	xorwf	postinc1,w,c
  4072  001970  B4D8               	btfsc	status,2,c
  4073  001972  D019               	goto	l918
  4074  001974                     u1650:
  4075  001974  C102  FFD9         	movff	strncmp@s2,fsr2l
  4076  001978  C103  FFDA         	movff	strncmp@s2+1,fsr2h
  4077  00197C  50DF               	movf	indf2,w,c
  4078  00197E  0101               	movlb	1	; () banked
  4079  001980  6F06               	movwf	??_strncmp& (0+255),b
  4080  001982  6B07               	clrf	(??_strncmp+1)& (0+255),b
  4081  001984  1F06               	comf	??_strncmp& (0+255),f,b
  4082  001986  1F07               	comf	(??_strncmp+1)& (0+255),f,b
  4083  001988  4B06               	infsnz	??_strncmp& (0+255),f,b
  4084  00198A  2B07               	incf	(??_strncmp+1)& (0+255),f,b
  4085  00198C  C100  FFD9         	movff	strncmp@s1,fsr2l
  4086  001990  C101  FFDA         	movff	strncmp@s1+1,fsr2h
  4087  001994  50DF               	movf	indf2,w,c
  4088  001996  6F08               	movwf	(??_strncmp+2)& (0+255),b
  4089  001998  5108               	movf	(??_strncmp+2)& (0+255),w,b
  4090  00199A  2506               	addwf	??_strncmp& (0+255),w,b
  4091  00199C  6F00               	movwf	?_strncmp& (0+255),b
  4092  00199E  0E00               	movlw	0
  4093  0019A0  2107               	addwfc	(??_strncmp+1)& (0+255),w,b
  4094  0019A2  6F01               	movwf	(?_strncmp+1)& (0+255),b
  4095                           
  4096                           ; BSR set to: 1
  4097  0019A4  0012               	return	
  4098  0019A6                     l918:
  4099                           
  4100                           ; BSR set to: 1
  4101  0019A6  0101               	movlb	1	; () banked
  4102  0019A8  4B00               	infsnz	strncmp@s1& (0+255),f,b
  4103  0019AA  2B01               	incf	(strncmp@s1+1)& (0+255),f,b
  4104  0019AC  4B02               	infsnz	strncmp@s2& (0+255),f,b
  4105  0019AE  2B03               	incf	(strncmp@s2+1)& (0+255),f,b
  4106  0019B0                     l916:
  4107                           
  4108                           ; BSR set to: 1
  4109  0019B0  0101               	movlb	1	; () banked
  4110  0019B2  0704               	decf	strncmp@len& (0+255),f,b
  4111  0019B4  A0D8               	btfss	status,0,c
  4112  0019B6  0705               	decf	(strncmp@len+1)& (0+255),f,b
  4113  0019B8  2904               	incf	strncmp@len& (0+255),w,b
  4114  0019BA  E1C9               	bnz	l2503
  4115  0019BC  2905               	incf	(strncmp@len+1)& (0+255),w,b
  4116  0019BE  A4D8               	btfss	status,2,c
  4117  0019C0  D7C6               	goto	l917
  4118                           
  4119                           ; BSR set to: 1
  4120                           
  4121                           ; BSR set to: 1
  4122  0019C2  0E00               	movlw	0
  4123  0019C4  6F01               	movwf	(?_strncmp+1)& (0+255),b
  4124  0019C6  0E00               	movlw	0
  4125  0019C8  6F00               	movwf	?_strncmp& (0+255),b
  4126  0019CA  0012               	return	
  4127  0019CC                     __end_of_strncmp:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           intcon	equ	0xFF2
  4134                           intcon2	equ	0xFF1
  4135                           intcon3	equ	0xFF0
  4136                           postinc0	equ	0xFEE
  4137                           wreg	equ	0xFE8
  4138                           postinc1	equ	0xFE6
  4139                           postdec1	equ	0xFE5
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           postinc2	equ	0xFDE
  4144                           fsr2h	equ	0xFDA
  4145                           fsr2l	equ	0xFD9
  4146                           status	equ	0xFD8
  4147                           
  4148 ;; *************** function _keypad *****************
  4149 ;; Defined at:
  4150 ;;		line 704 in file "Lab7.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  2   42[BANK1 ] int 
  4157 ;; Registers used:
  4158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4164 ;;      Params:         0       0       2       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0
  4167 ;;      Totals:         0       0       2       0       0       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:   10
  4171 ;; This function calls:
  4172 ;;		_printf
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text6
  4179  001CCE                     __ptext6:
  4180                           	opt stack 0
  4181  001CCE                     _keypad:
  4182                           	opt stack 20
  4183                           
  4184                           ;Lab7.c: 707: {
  4185                           ;Lab7.c: 709: if(PORTBbits.RB4 == 0)
  4186                           
  4187                           ; BSR set to: 1
  4188                           ;incstack = 0
  4189                           ;Lab7.c: 706: while(1)
  4190  001CCE  A881               	btfss	3969,4,c	;volatile
  4191  001CD0  0012               	return	
  4192                           
  4193                           ;Lab7.c: 713: TRISDbits.RD0 = 0;
  4194                           
  4195                           ;Lab7.c: 710: return;
  4196  001CD2  9095               	bcf	3989,0,c	;volatile
  4197                           
  4198                           ;Lab7.c: 714: TRISDbits.RD1 = 0;
  4199  001CD4  9295               	bcf	3989,1,c	;volatile
  4200                           
  4201                           ;Lab7.c: 715: TRISDbits.RD2 = 0;
  4202  001CD6  9495               	bcf	3989,2,c	;volatile
  4203                           
  4204                           ;Lab7.c: 716: TRISDbits.RD3 = 0;
  4205  001CD8  9695               	bcf	3989,3,c	;volatile
  4206                           
  4207                           ;Lab7.c: 717: TRISDbits.RD4 = 1;
  4208  001CDA  8895               	bsf	3989,4,c	;volatile
  4209                           
  4210                           ;Lab7.c: 718: TRISDbits.RD5 = 1;
  4211  001CDC  8A95               	bsf	3989,5,c	;volatile
  4212                           
  4213                           ;Lab7.c: 719: TRISDbits.RD6 = 1;
  4214  001CDE  8C95               	bsf	3989,6,c	;volatile
  4215                           
  4216                           ;Lab7.c: 720: TRISDbits.RD7 = 1;
  4217  001CE0  8E95               	bsf	3989,7,c	;volatile
  4218                           
  4219                           ;Lab7.c: 728: PORTDbits.RD0 = 1;
  4220  001CE2  8083               	bsf	3971,0,c	;volatile
  4221                           
  4222                           ;Lab7.c: 729: PORTDbits.RD1 = 0;
  4223  001CE4  9283               	bcf	3971,1,c	;volatile
  4224                           
  4225                           ;Lab7.c: 730: PORTDbits.RD2 = 0;
  4226  001CE6  9483               	bcf	3971,2,c	;volatile
  4227                           
  4228                           ;Lab7.c: 731: PORTDbits.RD3 = 0;
  4229  001CE8  9683               	bcf	3971,3,c	;volatile
  4230                           
  4231                           ;Lab7.c: 732: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORTD
      +                          bits.RD7 == 0);
  4232  001CEA  A883               	btfss	3971,4,c	;volatile
  4233  001CEC  BA83               	btfsc	3971,5,c	;volatile
  4234  001CEE  D002               	goto	l317
  4235  001CF0  AC83               	btfss	3971,6,c	;volatile
  4236  001CF2  5083               	movf	3971,w,c	;volatile
  4237  001CF4                     l317:
  4238                           
  4239                           ;Lab7.c: 733: {
  4240                           ;Lab7.c: 734: printf("ONE");
  4241  001CF4  0EF6               	movlw	low STR_70
  4242  001CF6  0101               	movlb	1	; () banked
  4243  001CF8  6F16               	movwf	printf@f& (0+255),b
  4244  001CFA  0E7F               	movlw	high STR_70
  4245  001CFC  6F17               	movwf	(printf@f+1)& (0+255),b
  4246  001CFE  EC1A  F003         	call	_printf	;wreg free
  4247                           
  4248                           ;Lab7.c: 735: return '1';
  4249  001D02  0E00               	movlw	0
  4250  001D04  0101               	movlb	1	; () banked
  4251  001D06  6F2B               	movwf	(?_keypad+1)& (0+255),b
  4252  001D08  0E31               	movlw	49
  4253  001D0A  6F2A               	movwf	?_keypad& (0+255),b
  4254                           
  4255                           ; BSR set to: 1
  4256  001D0C  0012               	return	
  4257  001D0E                     __end_of_keypad:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           intcon	equ	0xFF2
  4264                           intcon2	equ	0xFF1
  4265                           intcon3	equ	0xFF0
  4266                           postinc0	equ	0xFEE
  4267                           wreg	equ	0xFE8
  4268                           postinc1	equ	0xFE6
  4269                           postdec1	equ	0xFE5
  4270                           fsr1h	equ	0xFE2
  4271                           fsr1l	equ	0xFE1
  4272                           indf2	equ	0xFDF
  4273                           postinc2	equ	0xFDE
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function _input_options *****************
  4279 ;; Defined at:
  4280 ;;		line 634 in file "Lab7.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4294 ;;      Params:         0       0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0
  4296 ;;      Temps:          0       0       2       0       0       0       0
  4297 ;;      Totals:         0       0       2       0       0       0       0
  4298 ;;Total ram usage:        2 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:   11
  4301 ;; This function calls:
  4302 ;;		_Clear
  4303 ;;		_printf
  4304 ;; This function is called by:
  4305 ;;		_main
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text7
  4310  000B4E                     __ptext7:
  4311                           	opt stack 0
  4312  000B4E                     _input_options:
  4313                           	opt stack 19
  4314                           
  4315                           ;Lab7.c: 636: Clear();
  4316                           
  4317                           ;incstack = 0
  4318  000B4E  ECA1  F00E         	call	_Clear	;wreg free
  4319  000B52                     l293:
  4320                           
  4321                           ;Lab7.c: 638: {
  4322                           ;Lab7.c: 639: Clear();
  4323  000B52  ECA1  F00E         	call	_Clear	;wreg free
  4324                           
  4325                           ;Lab7.c: 640: if(alarm_set == 0){
  4326  000B56  0101               	movlb	1	; () banked
  4327  000B58  5138               	movf	_alarm_set& (0+255),w,b
  4328  000B5A  1139               	iorwf	(_alarm_set+1)& (0+255),w,b
  4329  000B5C  A4D8               	btfss	status,2,c
  4330  000B5E  D007               	goto	l294
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;Lab7.c: 641: printf("Alarm is OFF\n\r");
  4334  000B60  0EC4               	movlw	low STR_14
  4335  000B62  6F16               	movwf	printf@f& (0+255),b
  4336  000B64  0E7F               	movlw	high STR_14
  4337  000B66  6F17               	movwf	(printf@f+1)& (0+255),b
  4338  000B68  EC1A  F003         	call	_printf	;wreg free
  4339                           
  4340                           ;Lab7.c: 642: }
  4341  000B6C  D007               	goto	l295
  4342  000B6E                     l294:
  4343                           
  4344                           ;Lab7.c: 643: else
  4345                           ;Lab7.c: 644: {
  4346                           ;Lab7.c: 645: printf("Alarm is ON\n\r");
  4347  000B6E  0ED3               	movlw	low STR_15
  4348  000B70  0101               	movlb	1	; () banked
  4349  000B72  6F16               	movwf	printf@f& (0+255),b
  4350  000B74  0E7F               	movlw	high STR_15
  4351  000B76  6F17               	movwf	(printf@f+1)& (0+255),b
  4352  000B78  EC1A  F003         	call	_printf	;wreg free
  4353  000B7C                     l295:
  4354                           
  4355                           ;Lab7.c: 646: }
  4356                           ;Lab7.c: 647: if(temp_set == 0){
  4357  000B7C  0100               	movlb	0	; () banked
  4358  000B7E  51D4               	movf	_temp_set& (0+255),w,b
  4359  000B80  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  4360  000B82  A4D8               	btfss	status,2,c
  4361  000B84  D008               	goto	l296
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;Lab7.c: 648: printf("Temp Sensor is OFF\n\r");
  4365  000B86  0E41               	movlw	low STR_16
  4366  000B88  0101               	movlb	1	; () banked
  4367  000B8A  6F16               	movwf	printf@f& (0+255),b
  4368  000B8C  0E7F               	movlw	high STR_16
  4369  000B8E  6F17               	movwf	(printf@f+1)& (0+255),b
  4370  000B90  EC1A  F003         	call	_printf	;wreg free
  4371                           
  4372                           ;Lab7.c: 649: }
  4373  000B94  D007               	goto	l297
  4374  000B96                     l296:
  4375                           
  4376                           ;Lab7.c: 650: else
  4377                           ;Lab7.c: 651: {
  4378                           ;Lab7.c: 652: printf("Temp Sensor is ON\n\r");
  4379  000B96  0E6B               	movlw	low STR_17
  4380  000B98  0101               	movlb	1	; () banked
  4381  000B9A  6F16               	movwf	printf@f& (0+255),b
  4382  000B9C  0E7F               	movlw	high STR_17
  4383  000B9E  6F17               	movwf	(printf@f+1)& (0+255),b
  4384  000BA0  EC1A  F003         	call	_printf	;wreg free
  4385  000BA4                     l297:
  4386                           
  4387                           ;Lab7.c: 653: }
  4388                           ;Lab7.c: 654: printf("Temperature Threshold: %d\n\r"
  4389                           ;Lab7.c: 655: "Current Temp [F]: %ld"
  4390                           ;Lab7.c: 656: "\n\r\n\r"
  4391                           ;Lab7.c: 657: "INPUT OPTIONS:\n\r"
  4392                           ;Lab7.c: 658: "1) Use Keypad\n\r"
  4393                           ;Lab7.c: 659: "2) Use Keyboard\n\r"
  4394                           ;Lab7.c: 660: "3) Use BOTH\n\r"
  4395                           ;Lab7.c: 661: "4) Return to Menu\n\r",temp_threshold,voltage);
  4396  000BA4  0EB9               	movlw	low STR_64
  4397  000BA6  0101               	movlb	1	; () banked
  4398  000BA8  6F16               	movwf	printf@f& (0+255),b
  4399  000BAA  0E7B               	movlw	high STR_64
  4400  000BAC  6F17               	movwf	(printf@f+1)& (0+255),b
  4401  000BAE  C0D8  F118         	movff	_temp_threshold,?_printf+2
  4402  000BB2  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  4403  000BB6  C0D0  F11A         	movff	_voltage,?_printf+4
  4404  000BBA  C0D1  F11B         	movff	_voltage+1,?_printf+5
  4405  000BBE  C0D2  F11C         	movff	_voltage+2,?_printf+6
  4406  000BC2  C0D3  F11D         	movff	_voltage+3,?_printf+7
  4407  000BC6  EC1A  F003         	call	_printf	;wreg free
  4408  000BCA  AA9E               	btfss	3998,5,c	;volatile
  4409  000BCC  D7FE               	goto	l299
  4410                           
  4411                           ;Lab7.c: 664: choice = RCREG;
  4412  000BCE  CFAE F0D6          	movff	4014,_choice	;volatile
  4413  000BD2  0100               	movlb	0	; () banked
  4414  000BD4  6BD7               	clrf	(_choice+1)& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;Lab7.c: 665: if(triggered == 1)
  4418  000BD6  0101               	movlb	1	; () banked
  4419  000BD8  053A               	decf	_triggered& (0+255),w,b
  4420  000BDA  113B               	iorwf	(_triggered+1)& (0+255),w,b
  4421  000BDC  A4D8               	btfss	status,2,c
  4422  000BDE  D06A               	goto	l303
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;Lab7.c: 666: {
  4426                           ;Lab7.c: 667: printf("\n\rReturning to Menu...\n\r");
  4427  000BE0  0EB5               	movlw	low STR_20
  4428  000BE2  6F16               	movwf	printf@f& (0+255),b
  4429  000BE4  0E7E               	movlw	high STR_20
  4430  000BE6  6F17               	movwf	(printf@f+1)& (0+255),b
  4431  000BE8  EC1A  F003         	call	_printf	;wreg free
  4432                           
  4433                           ;Lab7.c: 668: triggered = 0;
  4434  000BEC  0E00               	movlw	0
  4435  000BEE  0101               	movlb	1	; () banked
  4436  000BF0  6F3B               	movwf	(_triggered+1)& (0+255),b
  4437  000BF2  0E00               	movlw	0
  4438  000BF4  6F3A               	movwf	_triggered& (0+255),b
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;Lab7.c: 669: Clear();
  4442  000BF6  ECA1  F00E         	call	_Clear	;wreg free
  4443                           
  4444                           ;Lab7.c: 670: break;
  4445  000BFA  0012               	return	
  4446  000BFC                     
  4447                           ;Lab7.c: 674: printf("\n\rUsing Keypad as Input\n\r");
  4448  000BFC  0E82               	movlw	low STR_66
  4449  000BFE  0101               	movlb	1	; () banked
  4450  000C00  6F16               	movwf	printf@f& (0+255),b
  4451  000C02  0E7E               	movlw	high STR_66
  4452  000C04  6F17               	movwf	(printf@f+1)& (0+255),b
  4453  000C06  EC1A  F003         	call	_printf	;wreg free
  4454                           
  4455                           ;Lab7.c: 678: PORTBbits.RB4 = 1;
  4456  000C0A  8881               	bsf	3969,4,c	;volatile
  4457                           
  4458                           ;Lab7.c: 679: _delay((unsigned long)((500)*(20000000/4000.0)));
  4459  000C0C  0E0D               	movlw	13
  4460  000C0E  0101               	movlb	1	; () banked
  4461  000C10  6F2B               	movwf	(??_input_options+1)& (0+255),b
  4462  000C12  0EAF               	movlw	175
  4463  000C14  6F2A               	movwf	??_input_options& (0+255),b
  4464  000C16  0EB6               	movlw	182
  4465  000C18                     u3577:
  4466  000C18  2EE8               	decfsz	wreg,f,c
  4467  000C1A  D7FE               	bra	u3577
  4468  000C1C  2F2A               	decfsz	??_input_options& (0+255),f,b
  4469  000C1E  D7FC               	bra	u3577
  4470  000C20  2F2B               	decfsz	(??_input_options+1)& (0+255),f,b
  4471  000C22  D7FA               	bra	u3577
  4472  000C24  D02B               	goto	L3
  4473  000C26                     
  4474                           ;Lab7.c: 682: printf("\n\rUsing Keyboard as Input\n\r");
  4475  000C26  0E31               	movlw	low STR_67
  4476  000C28  0101               	movlb	1	; () banked
  4477  000C2A  6F16               	movwf	printf@f& (0+255),b
  4478  000C2C  0E7E               	movlw	high STR_67
  4479  000C2E  6F17               	movwf	(printf@f+1)& (0+255),b
  4480  000C30  EC1A  F003         	call	_printf	;wreg free
  4481                           
  4482                           ;Lab7.c: 683: TRISD = 0b11111111;
  4483  000C34  6895               	setf	3989,c	;volatile
  4484                           
  4485                           ;Lab7.c: 684: PORTBbits.RB4 = 0;
  4486  000C36  9881               	bcf	3969,4,c	;volatile
  4487                           
  4488                           ;Lab7.c: 685: _delay((unsigned long)((500)*(20000000/4000.0)));
  4489  000C38  0E0D               	movlw	13
  4490  000C3A  0101               	movlb	1	; () banked
  4491  000C3C  6F2B               	movwf	(??_input_options+1)& (0+255),b
  4492  000C3E  0EAF               	movlw	175
  4493  000C40  6F2A               	movwf	??_input_options& (0+255),b
  4494  000C42  0EB6               	movlw	182
  4495  000C44                     u3587:
  4496  000C44  2EE8               	decfsz	wreg,f,c
  4497  000C46  D7FE               	bra	u3587
  4498  000C48  2F2A               	decfsz	??_input_options& (0+255),f,b
  4499  000C4A  D7FC               	bra	u3587
  4500  000C4C  2F2B               	decfsz	(??_input_options+1)& (0+255),f,b
  4501  000C4E  D7FA               	bra	u3587
  4502  000C50  D015               	goto	L3
  4503  000C52                     
  4504                           ;Lab7.c: 688: printf("\n\rBOTH\n\r");
  4505  000C52  0EE1               	movlw	low STR_68
  4506  000C54  0101               	movlb	1	; () banked
  4507  000C56  6F16               	movwf	printf@f& (0+255),b
  4508  000C58  0E7F               	movlw	high STR_68
  4509  000C5A  6F17               	movwf	(printf@f+1)& (0+255),b
  4510  000C5C  EC1A  F003         	call	_printf	;wreg free
  4511                           
  4512                           ;Lab7.c: 689: TRISD = 0b11111111;
  4513  000C60  6895               	setf	3989,c	;volatile
  4514                           
  4515                           ;Lab7.c: 690: PORTBbits.RB4 = 1;
  4516  000C62  8881               	bsf	3969,4,c	;volatile
  4517                           
  4518                           ;Lab7.c: 691: _delay((unsigned long)((500)*(20000000/4000.0)));
  4519  000C64  0E0D               	movlw	13
  4520  000C66  0101               	movlb	1	; () banked
  4521  000C68  6F2B               	movwf	(??_input_options+1)& (0+255),b
  4522  000C6A  0EAF               	movlw	175
  4523  000C6C  6F2A               	movwf	??_input_options& (0+255),b
  4524  000C6E  0EB6               	movlw	182
  4525  000C70                     u3597:
  4526  000C70  2EE8               	decfsz	wreg,f,c
  4527  000C72  D7FE               	bra	u3597
  4528  000C74  2F2A               	decfsz	??_input_options& (0+255),f,b
  4529  000C76  D7FC               	bra	u3597
  4530  000C78  2F2B               	decfsz	(??_input_options+1)& (0+255),f,b
  4531  000C7A  D7FA               	bra	u3597
  4532  000C7C                     L3:
  4533  000C7C  F000               	nop	
  4534                           
  4535                           ;Lab7.c: 692: break;
  4536  000C7E  D769               	goto	l293
  4537  000C80                     
  4538                           ;Lab7.c: 694: Clear();
  4539  000C80  ECA1  F00E         	call	_Clear	;wreg free
  4540                           
  4541                           ;Lab7.c: 695: return;
  4542  000C84  0012               	return	
  4543  000C86                     
  4544                           ;Lab7.c: 697: printf("\nERROR INVALID INPUT\n\r");
  4545  000C86  0E00               	movlw	low STR_21
  4546  000C88  0101               	movlb	1	; () banked
  4547  000C8A  6F16               	movwf	printf@f& (0+255),b
  4548  000C8C  0E7F               	movlw	high STR_21
  4549  000C8E  6F17               	movwf	(printf@f+1)& (0+255),b
  4550  000C90  EC1A  F003         	call	_printf	;wreg free
  4551                           
  4552                           ;Lab7.c: 698: _delay((unsigned long)((500)*(20000000/4000.0)));
  4553  000C94  0E0D               	movlw	13
  4554  000C96  0101               	movlb	1	; () banked
  4555  000C98  6F2B               	movwf	(??_input_options+1)& (0+255),b
  4556  000C9A  0EAF               	movlw	175
  4557  000C9C  6F2A               	movwf	??_input_options& (0+255),b
  4558  000C9E  0EB6               	movlw	182
  4559  000CA0                     u3607:
  4560  000CA0  2EE8               	decfsz	wreg,f,c
  4561  000CA2  D7FE               	bra	u3607
  4562  000CA4  2F2A               	decfsz	??_input_options& (0+255),f,b
  4563  000CA6  D7FC               	bra	u3607
  4564  000CA8  2F2B               	decfsz	(??_input_options+1)& (0+255),f,b
  4565  000CAA  D7FA               	bra	u3607
  4566  000CAC  F000               	nop	
  4567                           
  4568                           ;Lab7.c: 699: Clear();
  4569  000CAE  ECA1  F00E         	call	_Clear	;wreg free
  4570                           
  4571                           ;Lab7.c: 701: }
  4572                           
  4573                           ;Lab7.c: 700: break;
  4574  000CB2  D74F               	goto	l293
  4575  000CB4                     l303:
  4576  000CB4  C0D6  F12A         	movff	_choice,??_input_options
  4577  000CB8  C0D7  F12B         	movff	_choice+1,??_input_options+1
  4578                           
  4579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4580                           ; Switch size 1, requested type "space"
  4581                           ; Number of cases is 1, Range of values is 0 to 0
  4582                           ; switch strategies available:
  4583                           ; Name         Instructions Cycles
  4584                           ; simple_byte            4     3 (average)
  4585                           ;	Chosen strategy is simple_byte
  4586  000CBC  0101               	movlb	1	; () banked
  4587  000CBE  512B               	movf	(??_input_options+1)& (0+255),w,b
  4588  000CC0  0A00               	xorlw	0	; case 0
  4589  000CC2  A4D8               	btfss	status,2,c
  4590  000CC4  D7E0               	goto	l310
  4591                           
  4592                           ; BSR set to: 1
  4593                           ; Switch size 1, requested type "space"
  4594                           ; Number of cases is 4, Range of values is 49 to 52
  4595                           ; switch strategies available:
  4596                           ; Name         Instructions Cycles
  4597                           ; simple_byte           13     7 (average)
  4598                           ;	Chosen strategy is simple_byte
  4599  000CC6  512A               	movf	??_input_options& (0+255),w,b
  4600  000CC8  0A31               	xorlw	49	; case 49
  4601  000CCA  B4D8               	btfsc	status,2,c
  4602  000CCC  D797               	goto	l304
  4603  000CCE  0A03               	xorlw	3	; case 50
  4604  000CD0  B4D8               	btfsc	status,2,c
  4605  000CD2  D7A9               	goto	l306
  4606  000CD4  0A01               	xorlw	1	; case 51
  4607  000CD6  B4D8               	btfsc	status,2,c
  4608  000CD8  D7BC               	goto	l307
  4609  000CDA  0A07               	xorlw	7	; case 52
  4610  000CDC  B4D8               	btfsc	status,2,c
  4611  000CDE  D7D0               	goto	l308
  4612  000CE0  D7D2               	goto	l310
  4613  000CE2                     __end_of_input_options:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           intcon	equ	0xFF2
  4620                           intcon2	equ	0xFF1
  4621                           intcon3	equ	0xFF0
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           postinc1	equ	0xFE6
  4625                           postdec1	equ	0xFE5
  4626                           fsr1h	equ	0xFE2
  4627                           fsr1l	equ	0xFE1
  4628                           indf2	equ	0xFDF
  4629                           postinc2	equ	0xFDE
  4630                           fsr2h	equ	0xFDA
  4631                           fsr2l	equ	0xFD9
  4632                           status	equ	0xFD8
  4633                           
  4634 ;; *************** function _alarm_options *****************
  4635 ;; Defined at:
  4636 ;;		line 500 in file "Lab7.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4650 ;;      Params:         0       0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       2       0       0       0       0
  4653 ;;      Totals:         0       0       2       0       0       0       0
  4654 ;;Total ram usage:        2 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:   11
  4657 ;; This function calls:
  4658 ;;		_Clear
  4659 ;;		_printf
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text8
  4666  000CE2                     __ptext8:
  4667                           	opt stack 0
  4668  000CE2                     _alarm_options:
  4669                           	opt stack 19
  4670                           
  4671                           ;Lab7.c: 502: Clear();
  4672                           
  4673                           ;incstack = 0
  4674  000CE2  ECA1  F00E         	call	_Clear	;wreg free
  4675  000CE6                     
  4676                           ;Lab7.c: 504: {
  4677                           ;Lab7.c: 505: if(alarm_set == 0){
  4678  000CE6  0101               	movlb	1	; () banked
  4679  000CE8  5138               	movf	_alarm_set& (0+255),w,b
  4680  000CEA  1139               	iorwf	(_alarm_set+1)& (0+255),w,b
  4681  000CEC  A4D8               	btfss	status,2,c
  4682  000CEE  D007               	goto	l246
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;Lab7.c: 506: printf("Alarm is OFF\n\r");
  4686  000CF0  0EC4               	movlw	low STR_14
  4687  000CF2  6F16               	movwf	printf@f& (0+255),b
  4688  000CF4  0E7F               	movlw	high STR_14
  4689  000CF6  6F17               	movwf	(printf@f+1)& (0+255),b
  4690  000CF8  EC1A  F003         	call	_printf	;wreg free
  4691                           
  4692                           ;Lab7.c: 507: }
  4693  000CFC  D007               	goto	l247
  4694  000CFE                     l246:
  4695                           
  4696                           ;Lab7.c: 508: else
  4697                           ;Lab7.c: 509: {
  4698                           ;Lab7.c: 510: printf("Alarm is ON\n\r");
  4699  000CFE  0ED3               	movlw	low STR_15
  4700  000D00  0101               	movlb	1	; () banked
  4701  000D02  6F16               	movwf	printf@f& (0+255),b
  4702  000D04  0E7F               	movlw	high STR_15
  4703  000D06  6F17               	movwf	(printf@f+1)& (0+255),b
  4704  000D08  EC1A  F003         	call	_printf	;wreg free
  4705  000D0C                     l247:
  4706                           
  4707                           ;Lab7.c: 511: }
  4708                           ;Lab7.c: 512: if(temp_set == 0){
  4709  000D0C  0100               	movlb	0	; () banked
  4710  000D0E  51D4               	movf	_temp_set& (0+255),w,b
  4711  000D10  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  4712  000D12  A4D8               	btfss	status,2,c
  4713  000D14  D008               	goto	l248
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;Lab7.c: 513: printf("Temp Sensor is OFF\n\r");
  4717  000D16  0E41               	movlw	low STR_16
  4718  000D18  0101               	movlb	1	; () banked
  4719  000D1A  6F16               	movwf	printf@f& (0+255),b
  4720  000D1C  0E7F               	movlw	high STR_16
  4721  000D1E  6F17               	movwf	(printf@f+1)& (0+255),b
  4722  000D20  EC1A  F003         	call	_printf	;wreg free
  4723                           
  4724                           ;Lab7.c: 514: }
  4725  000D24  D007               	goto	l249
  4726  000D26                     l248:
  4727                           
  4728                           ;Lab7.c: 515: else
  4729                           ;Lab7.c: 516: {
  4730                           ;Lab7.c: 517: printf("Temp Sensor is ON\n\r");
  4731  000D26  0E6B               	movlw	low STR_17
  4732  000D28  0101               	movlb	1	; () banked
  4733  000D2A  6F16               	movwf	printf@f& (0+255),b
  4734  000D2C  0E7F               	movlw	high STR_17
  4735  000D2E  6F17               	movwf	(printf@f+1)& (0+255),b
  4736  000D30  EC1A  F003         	call	_printf	;wreg free
  4737  000D34                     l249:
  4738                           
  4739                           ;Lab7.c: 518: }
  4740                           ;Lab7.c: 519: printf("Temperature Threshold: %d\n\r"
  4741                           ;Lab7.c: 520: "Current Temp [F]: %ld"
  4742                           ;Lab7.c: 521: "\n\r\n\r"
  4743                           ;Lab7.c: 522: "PIR Sensor OPTIONS\n\r"
  4744                           ;Lab7.c: 523: "1) Enable/Disable Alarm\n\r"
  4745                           ;Lab7.c: 524: "2) Return to Menu\n\r",temp_threshold,voltage);
  4746  000D34  0E3E               	movlw	low STR_44
  4747  000D36  0101               	movlb	1	; () banked
  4748  000D38  6F16               	movwf	printf@f& (0+255),b
  4749  000D3A  0E7C               	movlw	high STR_44
  4750  000D3C  6F17               	movwf	(printf@f+1)& (0+255),b
  4751  000D3E  C0D8  F118         	movff	_temp_threshold,?_printf+2
  4752  000D42  C0D9  F119         	movff	_temp_threshold+1,?_printf+3
  4753  000D46  C0D0  F11A         	movff	_voltage,?_printf+4
  4754  000D4A  C0D1  F11B         	movff	_voltage+1,?_printf+5
  4755  000D4E  C0D2  F11C         	movff	_voltage+2,?_printf+6
  4756  000D52  C0D3  F11D         	movff	_voltage+3,?_printf+7
  4757  000D56  EC1A  F003         	call	_printf	;wreg free
  4758  000D5A  AA9E               	btfss	3998,5,c	;volatile
  4759  000D5C  D7FE               	goto	l251
  4760                           
  4761                           ;Lab7.c: 528: choice = RCREG;
  4762  000D5E  CFAE F0D6          	movff	4014,_choice	;volatile
  4763  000D62  0100               	movlb	0	; () banked
  4764  000D64  6BD7               	clrf	(_choice+1)& (0+255),b
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;Lab7.c: 530: if(triggered == 1)
  4768  000D66  0101               	movlb	1	; () banked
  4769  000D68  053A               	decf	_triggered& (0+255),w,b
  4770  000D6A  113B               	iorwf	(_triggered+1)& (0+255),w,b
  4771  000D6C  A4D8               	btfss	status,2,c
  4772  000D6E  D052               	goto	l255
  4773                           
  4774                           ; BSR set to: 1
  4775                           ;Lab7.c: 531: {
  4776                           ;Lab7.c: 532: printf("\n\rReturning to Menu...\n\r");
  4777  000D70  0EB5               	movlw	low STR_20
  4778  000D72  6F16               	movwf	printf@f& (0+255),b
  4779  000D74  0E7E               	movlw	high STR_20
  4780  000D76  6F17               	movwf	(printf@f+1)& (0+255),b
  4781  000D78  EC1A  F003         	call	_printf	;wreg free
  4782                           
  4783                           ;Lab7.c: 533: triggered = 0;
  4784  000D7C  0E00               	movlw	0
  4785  000D7E  0101               	movlb	1	; () banked
  4786  000D80  6F3B               	movwf	(_triggered+1)& (0+255),b
  4787  000D82  0E00               	movlw	0
  4788  000D84  6F3A               	movwf	_triggered& (0+255),b
  4789                           
  4790                           ; BSR set to: 1
  4791                           ;Lab7.c: 534: Clear();
  4792  000D86  ECA1  F00E         	call	_Clear	;wreg free
  4793                           
  4794                           ;Lab7.c: 535: break;
  4795  000D8A  0012               	return	
  4796  000D8C                     l256:
  4797                           
  4798                           ; BSR set to: 1
  4799                           ;Lab7.c: 539: if(INTCON3bits.INT1IE == 0){
  4800  000D8C  B6F0               	btfsc	intcon3,3,c	;volatile
  4801  000D8E  D00C               	goto	l257
  4802                           
  4803                           ; BSR set to: 1
  4804                           ;Lab7.c: 540: INTCON3bits.INT1IE = 1;
  4805  000D90  86F0               	bsf	intcon3,3,c	;volatile
  4806                           
  4807                           ; BSR set to: 1
  4808                           ;Lab7.c: 541: printf("Alarm Enabled\n\n\r\r");
  4809  000D92  0E92               	movlw	low STR_46
  4810  000D94  6F16               	movwf	printf@f& (0+255),b
  4811  000D96  0E7F               	movlw	high STR_46
  4812  000D98  6F17               	movwf	(printf@f+1)& (0+255),b
  4813  000D9A  EC1A  F003         	call	_printf	;wreg free
  4814                           
  4815                           ;Lab7.c: 542: alarm_set = 1;
  4816  000D9E  0E00               	movlw	0
  4817  000DA0  0101               	movlb	1	; () banked
  4818  000DA2  6F39               	movwf	(_alarm_set+1)& (0+255),b
  4819  000DA4  0E01               	movlw	1
  4820  000DA6  D00B               	goto	L4
  4821  000DA8                     l257:
  4822                           
  4823                           ; BSR set to: 1
  4824                           ;Lab7.c: 544: else
  4825                           ;Lab7.c: 545: {
  4826                           ;Lab7.c: 546: INTCON3bits.INT1IE = 0;
  4827  000DA8  96F0               	bcf	intcon3,3,c	;volatile
  4828                           
  4829                           ; BSR set to: 1
  4830                           ;Lab7.c: 547: printf("Alarm Disabled\n\n\r\r");
  4831  000DAA  0E7F               	movlw	low STR_47
  4832  000DAC  6F16               	movwf	printf@f& (0+255),b
  4833  000DAE  0E7F               	movlw	high STR_47
  4834  000DB0  6F17               	movwf	(printf@f+1)& (0+255),b
  4835  000DB2  EC1A  F003         	call	_printf	;wreg free
  4836                           
  4837                           ;Lab7.c: 548: alarm_set = 0;
  4838  000DB6  0E00               	movlw	0
  4839  000DB8  0101               	movlb	1	; () banked
  4840  000DBA  6F39               	movwf	(_alarm_set+1)& (0+255),b
  4841  000DBC  0E00               	movlw	0
  4842  000DBE                     L4:
  4843  000DBE  6F38               	movwf	_alarm_set& (0+255),b
  4844                           
  4845                           ; BSR set to: 1
  4846                           ;Lab7.c: 549: }
  4847                           ;Lab7.c: 550: _delay((unsigned long)((500)*(20000000/4000.0)));
  4848                           
  4849                           ; BSR set to: 1
  4850  000DC0  0E0D               	movlw	13
  4851  000DC2  0101               	movlb	1	; () banked
  4852  000DC4  6F2B               	movwf	(??_alarm_options+1)& (0+255),b
  4853  000DC6  0EAF               	movlw	175
  4854  000DC8  6F2A               	movwf	??_alarm_options& (0+255),b
  4855  000DCA  0EB6               	movlw	182
  4856  000DCC                     u3617:
  4857  000DCC  2EE8               	decfsz	wreg,f,c
  4858  000DCE  D7FE               	bra	u3617
  4859  000DD0  2F2A               	decfsz	??_alarm_options& (0+255),f,b
  4860  000DD2  D7FC               	bra	u3617
  4861  000DD4  2F2B               	decfsz	(??_alarm_options+1)& (0+255),f,b
  4862  000DD6  D7FA               	bra	u3617
  4863  000DD8  F000               	nop	
  4864                           
  4865                           ;Lab7.c: 551: Clear();
  4866  000DDA  ECA1  F00E         	call	_Clear	;wreg free
  4867                           
  4868                           ;Lab7.c: 552: break;
  4869  000DDE  D783               	goto	l245
  4870  000DE0                     
  4871                           ;Lab7.c: 554: Clear();
  4872  000DE0  ECA1  F00E         	call	_Clear	;wreg free
  4873                           
  4874                           ;Lab7.c: 555: return;
  4875  000DE4  0012               	return	
  4876  000DE6                     
  4877                           ;Lab7.c: 557: printf("\nERROR INVALID INPUT\n\r");
  4878  000DE6  0E00               	movlw	low STR_21
  4879  000DE8  0101               	movlb	1	; () banked
  4880  000DEA  6F16               	movwf	printf@f& (0+255),b
  4881  000DEC  0E7F               	movlw	high STR_21
  4882  000DEE  6F17               	movwf	(printf@f+1)& (0+255),b
  4883  000DF0  EC1A  F003         	call	_printf	;wreg free
  4884                           
  4885                           ;Lab7.c: 558: _delay((unsigned long)((500)*(20000000/4000.0)));
  4886  000DF4  0E0D               	movlw	13
  4887  000DF6  0101               	movlb	1	; () banked
  4888  000DF8  6F2B               	movwf	(??_alarm_options+1)& (0+255),b
  4889  000DFA  0EAF               	movlw	175
  4890  000DFC  6F2A               	movwf	??_alarm_options& (0+255),b
  4891  000DFE  0EB6               	movlw	182
  4892  000E00                     u3627:
  4893  000E00  2EE8               	decfsz	wreg,f,c
  4894  000E02  D7FE               	bra	u3627
  4895  000E04  2F2A               	decfsz	??_alarm_options& (0+255),f,b
  4896  000E06  D7FC               	bra	u3627
  4897  000E08  2F2B               	decfsz	(??_alarm_options+1)& (0+255),f,b
  4898  000E0A  D7FA               	bra	u3627
  4899  000E0C  F000               	nop	
  4900                           
  4901                           ;Lab7.c: 559: Clear();
  4902  000E0E  ECA1  F00E         	call	_Clear	;wreg free
  4903                           
  4904                           ;Lab7.c: 561: }
  4905                           
  4906                           ;Lab7.c: 560: break;
  4907  000E12  D769               	goto	l245
  4908  000E14                     l255:
  4909  000E14  C0D6  F12A         	movff	_choice,??_alarm_options
  4910  000E18  C0D7  F12B         	movff	_choice+1,??_alarm_options+1
  4911                           
  4912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4913                           ; Switch size 1, requested type "space"
  4914                           ; Number of cases is 1, Range of values is 0 to 0
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte            4     3 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919  000E1C  0101               	movlb	1	; () banked
  4920  000E1E  512B               	movf	(??_alarm_options+1)& (0+255),w,b
  4921  000E20  0A00               	xorlw	0	; case 0
  4922  000E22  A4D8               	btfss	status,2,c
  4923  000E24  D7E0               	goto	l262
  4924                           
  4925                           ; BSR set to: 1
  4926                           ; Switch size 1, requested type "space"
  4927                           ; Number of cases is 2, Range of values is 49 to 50
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            7     4 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932  000E26  512A               	movf	??_alarm_options& (0+255),w,b
  4933  000E28  0A31               	xorlw	49	; case 49
  4934  000E2A  B4D8               	btfsc	status,2,c
  4935  000E2C  D7AF               	goto	l256
  4936  000E2E  0A03               	xorlw	3	; case 50
  4937  000E30  B4D8               	btfsc	status,2,c
  4938  000E32  D7D6               	goto	l260
  4939  000E34  D7D8               	goto	l262
  4940  000E36                     __end_of_alarm_options:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           intcon	equ	0xFF2
  4947                           intcon2	equ	0xFF1
  4948                           intcon3	equ	0xFF0
  4949                           postinc0	equ	0xFEE
  4950                           wreg	equ	0xFE8
  4951                           postinc1	equ	0xFE6
  4952                           postdec1	equ	0xFE5
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _Clear *****************
  4962 ;; Defined at:
  4963 ;;		line 105 in file "Lab7.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4977 ;;      Params:         0       0       0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:   10
  4984 ;; This function calls:
  4985 ;;		_printf
  4986 ;; This function is called by:
  4987 ;;		_main
  4988 ;;		_password_change
  4989 ;;		_password_options
  4990 ;;		_alarm_options
  4991 ;;		_temp_options
  4992 ;;		_input_options
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text9
  4997  001D42                     __ptext9:
  4998                           	opt stack 0
  4999  001D42                     _Clear:
  5000                           	opt stack 19
  5001                           
  5002                           ;Lab7.c: 107: printf("\033[2J");
  5003                           
  5004                           ;incstack = 0
  5005  001D42  0EF1               	movlw	low STR_1
  5006  001D44  0101               	movlb	1	; () banked
  5007  001D46  6F16               	movwf	printf@f& (0+255),b
  5008  001D48  0E7F               	movlw	high STR_1
  5009  001D4A  6F17               	movwf	(printf@f+1)& (0+255),b
  5010  001D4C  EC1A  F003         	call	_printf	;wreg free
  5011                           
  5012                           ;Lab7.c: 108: printf("\033[0;0H");
  5013  001D50  0EEA               	movlw	low STR_2
  5014  001D52  0101               	movlb	1	; () banked
  5015  001D54  6F16               	movwf	printf@f& (0+255),b
  5016  001D56  0E7F               	movlw	high STR_2
  5017  001D58  6F17               	movwf	(printf@f+1)& (0+255),b
  5018  001D5A  EC1A  F003         	call	_printf	;wreg free
  5019  001D5E  0012               	return		;funcret
  5020  001D60                     __end_of_Clear:
  5021                           	opt stack 0
  5022                           tblptru	equ	0xFF8
  5023                           tblptrh	equ	0xFF7
  5024                           tblptrl	equ	0xFF6
  5025                           tablat	equ	0xFF5
  5026                           intcon	equ	0xFF2
  5027                           intcon2	equ	0xFF1
  5028                           intcon3	equ	0xFF0
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           postinc1	equ	0xFE6
  5032                           postdec1	equ	0xFE5
  5033                           fsr1h	equ	0xFE2
  5034                           fsr1l	equ	0xFE1
  5035                           indf2	equ	0xFDF
  5036                           postinc2	equ	0xFDE
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _printf *****************
  5042 ;; Defined at:
  5043 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  f               2   22[BANK1 ] PTR const unsigned char 
  5046 ;;		 -> STR_70(4), STR_69(23), STR_68(9), STR_67(28), 
  5047 ;;		 -> STR_66(26), STR_65(25), STR_64(133), STR_63(20), 
  5048 ;;		 -> STR_62(21), STR_61(14), STR_60(15), STR_59(23), 
  5049 ;;		 -> STR_58(3), STR_57(27), STR_56(26), STR_55(25), 
  5050 ;;		 -> STR_54(25), STR_53(151), STR_52(20), STR_51(21), 
  5051 ;;		 -> STR_50(14), STR_49(15), STR_48(23), STR_47(19), 
  5052 ;;		 -> STR_46(18), STR_45(25), STR_44(117), STR_43(20), 
  5053 ;;		 -> STR_42(21), STR_41(14), STR_40(15), STR_39(23), 
  5054 ;;		 -> STR_38(21), STR_37(25), STR_36(109), STR_35(20), 
  5055 ;;		 -> STR_34(21), STR_33(14), STR_32(15), STR_31(28), 
  5056 ;;		 -> STR_30(21), STR_29(2), STR_28(11), STR_27(54), 
  5057 ;;		 -> STR_26(25), STR_25(2), STR_24(21), STR_23(2), 
  5058 ;;		 -> STR_22(25), STR_21(23), STR_20(25), STR_19(3), 
  5059 ;;		 -> STR_18(161), STR_17(20), STR_16(21), STR_15(14), 
  5060 ;;		 -> STR_14(15), STR_13(17), STR_12(2), STR_11(15), 
  5061 ;;		 -> STR_10(39), STR_9(3), STR_8(57), STR_7(31), 
  5062 ;;		 -> STR_6(36), STR_5(39), STR_4(31), STR_3(28), 
  5063 ;;		 -> STR_2(7), STR_1(5), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  val             4   37[BANK1 ] unsigned long 
  5066 ;;  tmpval          4    0        struct .
  5067 ;;  cp              3    0        PTR const unsigned char 
  5068 ;;  ap              2   34[BANK1 ] PTR void [1]
  5069 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
  5070 ;;  prec            2   32[BANK1 ] int 
  5071 ;;  len             2    0        unsigned int 
  5072 ;;  c               1   41[BANK1 ] char 
  5073 ;;  flag            1   36[BANK1 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2   22[BANK1 ] int 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5083 ;;      Params:         0       0       8       0       0       0       0
  5084 ;;      Locals:         0       0      10       0       0       0       0
  5085 ;;      Temps:          0       0       2       0       0       0       0
  5086 ;;      Totals:         0       0      20       0       0       0       0
  5087 ;;Total ram usage:       20 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    9
  5090 ;; This function calls:
  5091 ;;		___lldiv
  5092 ;;		___llmod
  5093 ;;		_putch
  5094 ;; This function is called by:
  5095 ;;		_Clear
  5096 ;;		_main
  5097 ;;		_password_change
  5098 ;;		_password_options
  5099 ;;		_alarm_options
  5100 ;;		_temp_options
  5101 ;;		_input_options
  5102 ;;		_keypad
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text10
  5107  000634                     __ptext10:
  5108                           	opt stack 0
  5109  000634                     _printf:
  5110                           	opt stack 20
  5111                           
  5112                           ;doprnt.c: 466: va_list ap;
  5113                           ;doprnt.c: 499: signed char c;
  5114                           ;doprnt.c: 504: int prec;
  5115                           ;doprnt.c: 508: unsigned char flag;
  5116                           ;doprnt.c: 523: union {
  5117                           ;doprnt.c: 524: unsigned long vd;
  5118                           ;doprnt.c: 525: double integ;
  5119                           ;doprnt.c: 526: } tmpval;
  5120                           ;doprnt.c: 528: unsigned long val;
  5121                           ;doprnt.c: 529: unsigned len;
  5122                           ;doprnt.c: 530: const char * cp;
  5123                           ;doprnt.c: 533: *ap = __va_start();
  5124                           
  5125                           ;incstack = 0
  5126  000634  0E18               	movlw	low (?_printf+2)
  5127  000636  0101               	movlb	1	; () banked
  5128  000638  6F22               	movwf	printf@ap& (0+255),b
  5129  00063A  0E01               	movlw	high (?_printf+2)
  5130  00063C  6F23               	movwf	(printf@ap+1)& (0+255),b
  5131                           
  5132                           ;doprnt.c: 536: while(c = *f++) {
  5133  00063E  D0C8               	goto	u1620
  5134  000640                     
  5135                           ; BSR set to: 1
  5136                           ;doprnt.c: 538: if(c != '%')
  5137                           
  5138                           ; BSR set to: 1
  5139  000640  0E25               	movlw	37
  5140  000642  1929               	xorwf	printf@c& (0+255),w,b
  5141  000644  B4D8               	btfsc	status,2,c
  5142  000646  D004               	goto	l347
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;doprnt.c: 540: {
  5146                           ;doprnt.c: 541: (putch(c) );
  5147  000648  5129               	movf	printf@c& (0+255),w,b
  5148  00064A  ECCC  F00E         	call	_putch
  5149                           
  5150                           ;doprnt.c: 542: continue;
  5151  00064E  D0C0               	goto	u1620
  5152  000650                     l347:
  5153                           
  5154                           ;doprnt.c: 543: }
  5155                           ;doprnt.c: 548: flag = 0;
  5156  000650  0E00               	movlw	0
  5157  000652  0101               	movlb	1	; () banked
  5158  000654  6F24               	movwf	printf@flag& (0+255),b
  5159                           
  5160                           ; BSR set to: 1
  5161                           ;doprnt.c: 635: switch(c = *f++) {
  5162                           
  5163                           ;doprnt.c: 633: loop:
  5164  000656  D001               	goto	l349
  5165  000658                     
  5166                           ; BSR set to: 1
  5167                           ;doprnt.c: 643: flag |= 0x10;
  5168                           
  5169                           ; BSR set to: 1
  5170  000658  8924               	bsf	printf@flag& (0+255),4,b
  5171  00065A                     l349:
  5172                           
  5173                           ; BSR set to: 1
  5174                           
  5175                           ; BSR set to: 1
  5176  00065A  C116  FFF6         	movff	printf@f,tblptrl
  5177  00065E  C117  FFF7         	movff	printf@f+1,tblptrh
  5178  000662  4B16               	infsnz	printf@f& (0+255),f,b
  5179  000664  2B17               	incf	(printf@f+1)& (0+255),f,b
  5180  000666                     	if	0	;tblptru may be non-zero
  5181  000666                     	endif
  5182  000666                     	if	0	;tblptru may be non-zero
  5183  000666                     	endif
  5184  000666  0008               	tblrd		*
  5185  000668  CFF5 F129          	movff	tablat,printf@c
  5186  00066C  5129               	movf	printf@c& (0+255),w,b
  5187                           
  5188                           ; Switch size 1, requested type "space"
  5189                           ; Number of cases is 4, Range of values is 0 to 108
  5190                           ; switch strategies available:
  5191                           ; Name         Instructions Cycles
  5192                           ; simple_byte           13     7 (average)
  5193                           ;	Chosen strategy is simple_byte
  5194  00066E  0A00               	xorlw	0	; case 0
  5195  000670  B4D8               	btfsc	status,2,c
  5196  000672  0012               	return	
  5197  000674  0A64               	xorlw	100	; case 100
  5198  000676  B4D8               	btfsc	status,2,c
  5199  000678  D007               	goto	l355
  5200  00067A  0A0D               	xorlw	13	; case 105
  5201  00067C  B4D8               	btfsc	status,2,c
  5202  00067E  D004               	goto	l355
  5203  000680  0A05               	xorlw	5	; case 108
  5204  000682  B4D8               	btfsc	status,2,c
  5205  000684  D7E9               	goto	l352
  5206  000686  D0A4               	goto	u1620
  5207  000688                     l355:
  5208                           
  5209                           ; BSR set to: 1
  5210                           ;doprnt.c: 1253: {
  5211                           ;doprnt.c: 1255: if(flag & 0x10)
  5212  000688  A924               	btfss	printf@flag& (0+255),4,b
  5213  00068A  D00E               	goto	l357
  5214                           
  5215                           ; BSR set to: 1
  5216                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  5217  00068C  C122  FFD9         	movff	printf@ap,fsr2l
  5218  000690  C123  FFDA         	movff	printf@ap+1,fsr2h
  5219  000694  CFDE F125          	movff	postinc2,printf@val
  5220  000698  CFDE F126          	movff	postinc2,printf@val+1
  5221  00069C  CFDE F127          	movff	postinc2,printf@val+2
  5222  0006A0  CFDE F128          	movff	postinc2,printf@val+3
  5223                           
  5224                           ; BSR set to: 1
  5225  0006A4  0E04               	movlw	4
  5226  0006A6  D00E               	goto	L5
  5227  0006A8                     l357:
  5228                           
  5229                           ; BSR set to: 1
  5230                           ;doprnt.c: 1257: else
  5231                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5232                           
  5233                           ; BSR set to: 1
  5234  0006A8  C122  FFD9         	movff	printf@ap,fsr2l
  5235  0006AC  C123  FFDA         	movff	printf@ap+1,fsr2h
  5236  0006B0  CFDE F125          	movff	postinc2,printf@val
  5237  0006B4  CFDD F126          	movff	postdec2,printf@val+1
  5238  0006B8  0E00               	movlw	0
  5239  0006BA  BF26               	btfsc	(printf@val+1)& (0+255),7,b
  5240  0006BC  0EFF               	movlw	-1
  5241  0006BE  6F27               	movwf	(printf@val+2)& (0+255),b
  5242  0006C0  6F28               	movwf	(printf@val+3)& (0+255),b
  5243                           
  5244                           ; BSR set to: 1
  5245  0006C2  0E02               	movlw	2
  5246  0006C4                     L5:
  5247  0006C4  2722               	addwf	printf@ap& (0+255),f,b
  5248  0006C6  0E00               	movlw	0
  5249  0006C8  2323               	addwfc	(printf@ap+1)& (0+255),f,b
  5250                           
  5251                           ; BSR set to: 1
  5252                           ;doprnt.c: 1261: if((long)val < 0) {
  5253                           
  5254                           ; BSR set to: 1
  5255  0006CA  AF28               	btfss	(printf@val+3)& (0+255),7,b
  5256  0006CC  D00A               	goto	l359
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;doprnt.c: 1262: flag |= 0x03;
  5260  0006CE  0E03               	movlw	3
  5261  0006D0  1324               	iorwf	printf@flag& (0+255),f,b
  5262                           
  5263                           ; BSR set to: 1
  5264                           ;doprnt.c: 1263: val = -val;
  5265  0006D2  1F28               	comf	(printf@val+3)& (0+255),f,b
  5266  0006D4  1F27               	comf	(printf@val+2)& (0+255),f,b
  5267  0006D6  1F26               	comf	(printf@val+1)& (0+255),f,b
  5268  0006D8  6D25               	negf	printf@val& (0+255),b
  5269  0006DA  0E00               	movlw	0
  5270  0006DC  2326               	addwfc	(printf@val+1)& (0+255),f,b
  5271  0006DE  2327               	addwfc	(printf@val+2)& (0+255),f,b
  5272  0006E0  2328               	addwfc	(printf@val+3)& (0+255),f,b
  5273  0006E2                     l359:
  5274                           
  5275                           ; BSR set to: 1
  5276                           ;doprnt.c: 1264: }
  5277                           ;doprnt.c: 1266: }
  5278                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5279                           
  5280                           ; BSR set to: 1
  5281  0006E2  0E01               	movlw	1
  5282  0006E4  6F29               	movwf	printf@c& (0+255),b
  5283  0006E6                     l2473:
  5284                           
  5285                           ; BSR set to: 1
  5286  0006E6  0E0A               	movlw	10
  5287  0006E8  1929               	xorwf	printf@c& (0+255),w,b
  5288  0006EA  B4D8               	btfsc	status,2,c
  5289  0006EC  D018               	goto	u1600
  5290                           
  5291                           ; BSR set to: 1
  5292                           ;doprnt.c: 1306: if(val < dpowers[c])
  5293                           
  5294                           ; BSR set to: 1
  5295                           
  5296                           ; BSR set to: 1
  5297  0006EE  5129               	movf	printf@c& (0+255),w,b
  5298  0006F0  0D04               	mullw	4
  5299  0006F2  0E59               	movlw	low _dpowers
  5300  0006F4  24F3               	addwf	prodl,w,c
  5301  0006F6  6EF6               	movwf	tblptrl,c
  5302  0006F8  0E7A               	movlw	high _dpowers
  5303  0006FA  20F4               	addwfc	prodh,w,c
  5304  0006FC  6EF7               	movwf	tblptrh,c
  5305  0006FE                     	if	0	;There are less than 3 active tblptr bytes
  5306  0006FE                     	endif
  5307  0006FE  0009               	tblrd		*+
  5308  000700  50F5               	movf	tablat,w,c
  5309  000702  5D25               	subwf	printf@val& (0+255),w,b
  5310  000704  0009               	tblrd		*+
  5311  000706  50F5               	movf	tablat,w,c
  5312  000708  5926               	subwfb	(printf@val+1)& (0+255),w,b
  5313  00070A  0009               	tblrd		*+
  5314  00070C  50F5               	movf	tablat,w,c
  5315  00070E  5927               	subwfb	(printf@val+2)& (0+255),w,b
  5316  000710  0009               	tblrd		*+
  5317  000712  50F5               	movf	tablat,w,c
  5318  000714  5928               	subwfb	(printf@val+3)& (0+255),w,b
  5319  000716  A0D8               	btfss	status,0,c
  5320  000718  D002               	goto	u1600
  5321                           
  5322                           ; BSR set to: 1
  5323                           
  5324                           ; BSR set to: 1
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;doprnt.c: 1307: break;
  5328  00071A  2B29               	incf	printf@c& (0+255),f,b
  5329  00071C  D7E4               	goto	l2473
  5330  00071E                     u1600:
  5331                           
  5332                           ; BSR set to: 1
  5333                           ;doprnt.c: 1422: {
  5334                           ;doprnt.c: 1438: if(flag & 0x03)
  5335                           
  5336                           ; BSR set to: 1
  5337  00071E  C124  F11E         	movff	printf@flag,??_printf
  5338  000722  0E03               	movlw	3
  5339  000724  171E               	andwf	??_printf& (0+255),f,b
  5340  000726  B4D8               	btfsc	status,2,c
  5341  000728  D003               	goto	l363
  5342                           
  5343                           ; BSR set to: 1
  5344                           ;doprnt.c: 1439: (putch('-') );
  5345  00072A  0E2D               	movlw	45
  5346  00072C  ECCC  F00E         	call	_putch
  5347  000730                     l363:
  5348                           
  5349                           ;doprnt.c: 1469: }
  5350                           ;doprnt.c: 1472: prec = c;
  5351  000730  0101               	movlb	1	; () banked
  5352  000732  5129               	movf	printf@c& (0+255),w,b
  5353  000734  6F20               	movwf	printf@prec& (0+255),b
  5354  000736  6B21               	clrf	(printf@prec+1)& (0+255),b
  5355  000738  BF20               	btfsc	printf@prec& (0+255),7,b
  5356  00073A  0721               	decf	(printf@prec+1)& (0+255),f,b
  5357                           
  5358                           ;doprnt.c: 1474: while(prec--) {
  5359  00073C  D040               	goto	l364
  5360  00073E                     l2491:
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;doprnt.c: 1478: {
  5364                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5365  00073E  C120  F11E         	movff	printf@prec,??_printf
  5366  000742  C121  F11F         	movff	printf@prec+1,??_printf+1
  5367  000746  90D8               	bcf	status,0,c
  5368  000748  371E               	rlcf	??_printf& (0+255),f,b
  5369  00074A  371F               	rlcf	(??_printf+1)& (0+255),f,b
  5370  00074C  90D8               	bcf	status,0,c
  5371  00074E  371E               	rlcf	??_printf& (0+255),f,b
  5372  000750  371F               	rlcf	(??_printf+1)& (0+255),f,b
  5373  000752  0E59               	movlw	low _dpowers
  5374  000754  251E               	addwf	??_printf& (0+255),w,b
  5375  000756  6EF6               	movwf	tblptrl,c
  5376  000758  0E7A               	movlw	high _dpowers
  5377  00075A  211F               	addwfc	(??_printf+1)& (0+255),w,b
  5378  00075C  6EF7               	movwf	tblptrh,c
  5379  00075E                     	if	0	;There are less than 3 active tblptr bytes
  5380  00075E                     	endif
  5381  00075E  0009               	tblrd		*+
  5382  000760  CFF5 F104          	movff	tablat,___lldiv@divisor
  5383  000764  0009               	tblrd		*+
  5384  000766  CFF5 F105          	movff	tablat,___lldiv@divisor+1
  5385  00076A  0009               	tblrd		*+
  5386  00076C  CFF5 F106          	movff	tablat,___lldiv@divisor+2
  5387  000770  000A               	tblrd		*-
  5388  000772  CFF5 F107          	movff	tablat,___lldiv@divisor+3
  5389  000776  C125  F100         	movff	printf@val,___lldiv@dividend
  5390  00077A  C126  F101         	movff	printf@val+1,___lldiv@dividend+1
  5391  00077E  C127  F102         	movff	printf@val+2,___lldiv@dividend+2
  5392  000782  C128  F103         	movff	printf@val+3,___lldiv@dividend+3
  5393  000786  ECE1  F00B         	call	___lldiv	;wreg free
  5394  00078A  C100  F10D         	movff	?___lldiv,___llmod@dividend
  5395  00078E  C101  F10E         	movff	?___lldiv+1,___llmod@dividend+1
  5396  000792  C102  F10F         	movff	?___lldiv+2,___llmod@dividend+2
  5397  000796  C103  F110         	movff	?___lldiv+3,___llmod@dividend+3
  5398  00079A  0E0A               	movlw	10
  5399  00079C  0101               	movlb	1	; () banked
  5400  00079E  6F11               	movwf	___llmod@divisor& (0+255),b
  5401  0007A0  0E00               	movlw	0
  5402  0007A2  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
  5403  0007A4  0E00               	movlw	0
  5404  0007A6  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
  5405  0007A8  0E00               	movlw	0
  5406  0007AA  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
  5407  0007AC  ECA0  F00D         	call	___llmod	;wreg free
  5408  0007B0  0101               	movlb	1	; () banked
  5409  0007B2  510D               	movf	?___llmod& (0+255),w,b
  5410  0007B4  0F30               	addlw	48
  5411  0007B6  6F29               	movwf	printf@c& (0+255),b
  5412                           
  5413                           ; BSR set to: 1
  5414                           ;doprnt.c: 1523: }
  5415                           ;doprnt.c: 1524: (putch(c) );
  5416  0007B8  5129               	movf	printf@c& (0+255),w,b
  5417  0007BA  ECCC  F00E         	call	_putch
  5418  0007BE                     l364:
  5419  0007BE  0101               	movlb	1	; () banked
  5420  0007C0  0720               	decf	printf@prec& (0+255),f,b
  5421  0007C2  A0D8               	btfss	status,0,c
  5422  0007C4  0721               	decf	(printf@prec+1)& (0+255),f,b
  5423  0007C6  2920               	incf	printf@prec& (0+255),w,b
  5424  0007C8  E1BA               	bnz	l2491
  5425  0007CA  2921               	incf	(printf@prec+1)& (0+255),w,b
  5426  0007CC  A4D8               	btfss	status,2,c
  5427  0007CE  D7B7               	goto	l365
  5428  0007D0                     u1620:
  5429                           
  5430                           ; BSR set to: 1
  5431                           
  5432                           ; BSR set to: 1
  5433  0007D0  C116  FFF6         	movff	printf@f,tblptrl
  5434  0007D4  C117  FFF7         	movff	printf@f+1,tblptrh
  5435  0007D8  0101               	movlb	1	; () banked
  5436  0007DA  4B16               	infsnz	printf@f& (0+255),f,b
  5437  0007DC  2B17               	incf	(printf@f+1)& (0+255),f,b
  5438  0007DE                     	if	0	;tblptru may be non-zero
  5439  0007DE                     	endif
  5440  0007DE                     	if	0	;tblptru may be non-zero
  5441  0007DE                     	endif
  5442  0007DE  0008               	tblrd		*
  5443  0007E0  CFF5 F129          	movff	tablat,printf@c
  5444  0007E4  5129               	movf	printf@c& (0+255),w,b
  5445  0007E6  B4D8               	btfsc	status,2,c
  5446  0007E8  0012               	return	
  5447  0007EA  D72A               	goto	l346
  5448  0007EC                     __end_of_printf:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           prodh	equ	0xFF4
  5455                           prodl	equ	0xFF3
  5456                           intcon	equ	0xFF2
  5457                           intcon2	equ	0xFF1
  5458                           intcon3	equ	0xFF0
  5459                           postinc0	equ	0xFEE
  5460                           wreg	equ	0xFE8
  5461                           postinc1	equ	0xFE6
  5462                           postdec1	equ	0xFE5
  5463                           fsr1h	equ	0xFE2
  5464                           fsr1l	equ	0xFE1
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _putch *****************
  5473 ;; Defined at:
  5474 ;;		line 99 in file "Lab7.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  data            1    wreg     unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  data            1    0[BANK1 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5488 ;;      Params:         0       0       0       0       0       0       0
  5489 ;;      Locals:         0       0       1       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0
  5491 ;;      Totals:         0       0       1       0       0       0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    8
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_printf
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text11
  5503  001D98                     __ptext11:
  5504                           	opt stack 0
  5505  001D98                     _putch:
  5506                           	opt stack 20
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;incstack = 0
  5510                           ;putch@data stored from wreg
  5511  001D98  0101               	movlb	1	; () banked
  5512  001D9A  6F00               	movwf	putch@data& (0+255),b
  5513  001D9C                     
  5514                           ;Lab7.c: 102: continue;
  5515                           
  5516                           ;Lab7.c: 101: while(!PIR1bits.TXIF)
  5517  001D9C  A89E               	btfss	3998,4,c	;volatile
  5518  001D9E  D7FE               	goto	l2401
  5519                           
  5520                           ;Lab7.c: 103: TXREG = data;
  5521  001DA0  C100  FFAD         	movff	putch@data,4013	;volatile
  5522  001DA4  0012               	return		;funcret
  5523  001DA6                     __end_of_putch:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           intcon	equ	0xFF2
  5532                           intcon2	equ	0xFF1
  5533                           intcon3	equ	0xFF0
  5534                           postinc0	equ	0xFEE
  5535                           wreg	equ	0xFE8
  5536                           postinc1	equ	0xFE6
  5537                           postdec1	equ	0xFE5
  5538                           fsr1h	equ	0xFE2
  5539                           fsr1l	equ	0xFE1
  5540                           indf2	equ	0xFDF
  5541                           postinc2	equ	0xFDE
  5542                           postdec2	equ	0xFDD
  5543                           fsr2h	equ	0xFDA
  5544                           fsr2l	equ	0xFD9
  5545                           status	equ	0xFD8
  5546                           
  5547 ;; *************** function ___llmod *****************
  5548 ;; Defined at:
  5549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  dividend        4   13[BANK1 ] unsigned long 
  5552 ;;  divisor         4   17[BANK1 ] unsigned long 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  counter         1   21[BANK1 ] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  4   13[BANK1 ] unsigned long 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         0       0       8       0       0       0       0
  5565 ;;      Locals:         0       0       1       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0
  5567 ;;      Totals:         0       0       9       0       0       0       0
  5568 ;;Total ram usage:        9 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    8
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_printf
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text12
  5579  001B40                     __ptext12:
  5580                           	opt stack 0
  5581  001B40                     ___llmod:
  5582                           	opt stack 20
  5583                           
  5584                           ;incstack = 0
  5585  001B40  0101               	movlb	1	; () banked
  5586  001B42  5111               	movf	___llmod@divisor& (0+255),w,b
  5587  001B44  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5588  001B46  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5589  001B48  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5590  001B4A  B4D8               	btfsc	status,2,c
  5591  001B4C  D024               	goto	l734
  5592                           
  5593                           ; BSR set to: 1
  5594  001B4E  0E01               	movlw	1
  5595  001B50  6F15               	movwf	___llmod@counter& (0+255),b
  5596  001B52  D006               	goto	l729
  5597  001B54                     
  5598                           ; BSR set to: 1
  5599                           
  5600                           ; BSR set to: 1
  5601  001B54  90D8               	bcf	status,0,c
  5602  001B56  3711               	rlcf	___llmod@divisor& (0+255),f,b
  5603  001B58  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5604  001B5A  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5605  001B5C  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5606  001B5E  2B15               	incf	___llmod@counter& (0+255),f,b
  5607  001B60                     l729:
  5608                           
  5609                           ; BSR set to: 1
  5610                           
  5611                           ; BSR set to: 1
  5612  001B60  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5613  001B62  D7F8               	goto	l730
  5614  001B64                     u1530:
  5615                           
  5616                           ; BSR set to: 1
  5617                           
  5618                           ; BSR set to: 1
  5619                           
  5620                           ; BSR set to: 1
  5621  001B64  5111               	movf	___llmod@divisor& (0+255),w,b
  5622  001B66  5D0D               	subwf	___llmod@dividend& (0+255),w,b
  5623  001B68  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
  5624  001B6A  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5625  001B6C  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
  5626  001B6E  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5627  001B70  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
  5628  001B72  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5629  001B74  A0D8               	btfss	status,0,c
  5630  001B76  D008               	goto	l733
  5631                           
  5632                           ; BSR set to: 1
  5633  001B78  5111               	movf	___llmod@divisor& (0+255),w,b
  5634  001B7A  5F0D               	subwf	___llmod@dividend& (0+255),f,b
  5635  001B7C  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
  5636  001B7E  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5637  001B80  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
  5638  001B82  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5639  001B84  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
  5640  001B86  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5641  001B88                     l733:
  5642                           
  5643                           ; BSR set to: 1
  5644                           
  5645                           ; BSR set to: 1
  5646  001B88  90D8               	bcf	status,0,c
  5647  001B8A  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5648  001B8C  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5649  001B8E  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5650  001B90  3311               	rrcf	___llmod@divisor& (0+255),f,b
  5651                           
  5652                           ; BSR set to: 1
  5653  001B92  2F15               	decfsz	___llmod@counter& (0+255),f,b
  5654  001B94  D7E7               	goto	u1530
  5655  001B96                     l734:
  5656                           
  5657                           ; BSR set to: 1
  5658                           
  5659                           ; BSR set to: 1
  5660  001B96  C10D  F10D         	movff	___llmod@dividend,?___llmod
  5661  001B9A  C10E  F10E         	movff	___llmod@dividend+1,?___llmod+1
  5662  001B9E  C10F  F10F         	movff	___llmod@dividend+2,?___llmod+2
  5663  001BA2  C110  F110         	movff	___llmod@dividend+3,?___llmod+3
  5664                           
  5665                           ; BSR set to: 1
  5666  001BA6  0012               	return		;funcret
  5667  001BA8                     __end_of___llmod:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           intcon	equ	0xFF2
  5676                           intcon2	equ	0xFF1
  5677                           intcon3	equ	0xFF0
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           postinc1	equ	0xFE6
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function ___lldiv *****************
  5692 ;; Defined at:
  5693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  dividend        4    0[BANK1 ] unsigned long 
  5696 ;;  divisor         4    4[BANK1 ] unsigned long 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  quotient        4    8[BANK1 ] unsigned long 
  5699 ;;  counter         1   12[BANK1 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  4    0[BANK1 ] unsigned long 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5709 ;;      Params:         0       0       8       0       0       0       0
  5710 ;;      Locals:         0       0       5       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0
  5712 ;;      Totals:         0       0      13       0       0       0       0
  5713 ;;Total ram usage:       13 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    8
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_printf
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text13
  5724  0017C2                     __ptext13:
  5725                           	opt stack 0
  5726  0017C2                     ___lldiv:
  5727                           	opt stack 20
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;incstack = 0
  5731  0017C2  0E00               	movlw	0
  5732  0017C4  0101               	movlb	1	; () banked
  5733  0017C6  6F08               	movwf	___lldiv@quotient& (0+255),b
  5734  0017C8  0E00               	movlw	0
  5735  0017CA  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
  5736  0017CC  0E00               	movlw	0
  5737  0017CE  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
  5738  0017D0  0E00               	movlw	0
  5739  0017D2  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
  5740                           
  5741                           ; BSR set to: 1
  5742  0017D4  5104               	movf	___lldiv@divisor& (0+255),w,b
  5743  0017D6  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5744  0017D8  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5745  0017DA  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5746  0017DC  B4D8               	btfsc	status,2,c
  5747  0017DE  D02A               	goto	l724
  5748                           
  5749                           ; BSR set to: 1
  5750  0017E0  0E01               	movlw	1
  5751  0017E2  6F0C               	movwf	___lldiv@counter& (0+255),b
  5752  0017E4  D006               	goto	l719
  5753  0017E6                     
  5754                           ; BSR set to: 1
  5755                           
  5756                           ; BSR set to: 1
  5757  0017E6  90D8               	bcf	status,0,c
  5758  0017E8  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  5759  0017EA  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5760  0017EC  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5761  0017EE  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5762  0017F0  2B0C               	incf	___lldiv@counter& (0+255),f,b
  5763  0017F2                     l719:
  5764                           
  5765                           ; BSR set to: 1
  5766                           
  5767                           ; BSR set to: 1
  5768  0017F2  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5769  0017F4  D7F8               	goto	l720
  5770  0017F6                     u1500:
  5771                           
  5772                           ; BSR set to: 1
  5773                           
  5774                           ; BSR set to: 1
  5775                           
  5776                           ; BSR set to: 1
  5777  0017F6  90D8               	bcf	status,0,c
  5778  0017F8  3708               	rlcf	___lldiv@quotient& (0+255),f,b
  5779  0017FA  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5780  0017FC  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5781  0017FE  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5782                           
  5783                           ; BSR set to: 1
  5784  001800  5104               	movf	___lldiv@divisor& (0+255),w,b
  5785  001802  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  5786  001804  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5787  001806  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5788  001808  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5789  00180A  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5790  00180C  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5791  00180E  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5792  001810  A0D8               	btfss	status,0,c
  5793  001812  D009               	goto	l723
  5794                           
  5795                           ; BSR set to: 1
  5796  001814  5104               	movf	___lldiv@divisor& (0+255),w,b
  5797  001816  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  5798  001818  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5799  00181A  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5800  00181C  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5801  00181E  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5802  001820  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5803  001822  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 1
  5806  001824  8108               	bsf	___lldiv@quotient& (0+255),0,b
  5807  001826                     l723:
  5808                           
  5809                           ; BSR set to: 1
  5810                           
  5811                           ; BSR set to: 1
  5812  001826  90D8               	bcf	status,0,c
  5813  001828  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5814  00182A  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5815  00182C  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5816  00182E  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  5817                           
  5818                           ; BSR set to: 1
  5819  001830  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
  5820  001832  D7E1               	goto	u1500
  5821  001834                     l724:
  5822                           
  5823                           ; BSR set to: 1
  5824                           
  5825                           ; BSR set to: 1
  5826  001834  C108  F100         	movff	___lldiv@quotient,?___lldiv
  5827  001838  C109  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  5828  00183C  C10A  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  5829  001840  C10B  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  5830                           
  5831                           ; BSR set to: 1
  5832  001844  0012               	return		;funcret
  5833  001846                     __end_of___lldiv:
  5834                           	opt stack 0
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           prodh	equ	0xFF4
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           intcon2	equ	0xFF1
  5843                           intcon3	equ	0xFF0
  5844                           postinc0	equ	0xFEE
  5845                           wreg	equ	0xFE8
  5846                           postinc1	equ	0xFE6
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           postinc2	equ	0xFDE
  5852                           postdec2	equ	0xFDD
  5853                           fsr2h	equ	0xFDA
  5854                           fsr2l	equ	0xFD9
  5855                           status	equ	0xFD8
  5856                           
  5857 ;; *************** function _temp_sensor *****************
  5858 ;; Defined at:
  5859 ;;		line 124 in file "Lab7.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  i               2   78[BANK0 ] int 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5873 ;;      Params:         0       0       0       0       0       0       0
  5874 ;;      Locals:         0       2       0       0       0       0       0
  5875 ;;      Temps:          0      26       0       0       0       0       0
  5876 ;;      Totals:         0      28       0       0       0       0       0
  5877 ;;Total ram usage:       28 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    7
  5880 ;; This function calls:
  5881 ;;		_ADC
  5882 ;;		_password
  5883 ;;		i1_Clear
  5884 ;;		i1_printf
  5885 ;; This function is called by:
  5886 ;;		Interrupt level 1
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	intcodelo
  5891  000018                     __pintcodelo:
  5892                           	opt stack 0
  5893  000018                     _temp_sensor:
  5894                           	opt stack 18
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;incstack = 0
  5898  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5899  00001A  CFD8 F0B9          	movff	status,??_temp_sensor+5
  5900  00001E  CFE8 F0BA          	movff	wreg,??_temp_sensor+6
  5901  000022  CFE0 F0BB          	movff	bsr,??_temp_sensor+7
  5902  000026  CFFA F0BC          	movff	pclath,??_temp_sensor+8
  5903  00002A  CFFB F0BD          	movff	pclatu,??_temp_sensor+9
  5904  00002E  CFE9 F0BE          	movff	fsr0l,??_temp_sensor+10
  5905  000032  CFEA F0BF          	movff	fsr0h,??_temp_sensor+11
  5906  000036  CFE1 F0C0          	movff	fsr1l,??_temp_sensor+12
  5907  00003A  CFE2 F0C1          	movff	fsr1h,??_temp_sensor+13
  5908  00003E  CFD9 F0C2          	movff	fsr2l,??_temp_sensor+14
  5909  000042  CFDA F0C3          	movff	fsr2h,??_temp_sensor+15
  5910  000046  CFF3 F0C4          	movff	prodl,??_temp_sensor+16
  5911  00004A  CFF4 F0C5          	movff	prodh,??_temp_sensor+17
  5912  00004E  CFF6 F0C6          	movff	tblptrl,??_temp_sensor+18
  5913  000052  CFF7 F0C7          	movff	tblptrh,??_temp_sensor+19
  5914  000056  CFF8 F0C8          	movff	tblptru,??_temp_sensor+20
  5915  00005A  CFF5 F0C9          	movff	tablat,??_temp_sensor+21
  5916  00005E  C04B  F0CA         	movff	btemp,??_temp_sensor+22
  5917  000062  C04C  F0CB         	movff	btemp+1,??_temp_sensor+23
  5918  000066  C04D  F0CC         	movff	btemp+2,??_temp_sensor+24
  5919  00006A  C04E  F0CD         	movff	btemp+3,??_temp_sensor+25
  5920                           
  5921                           ;Lab7.c: 126: if(INTCONbits.TMR0IF == 1)
  5922  00006E  A4F2               	btfss	intcon,2,c	;volatile
  5923  000070  D08E               	goto	i1l137
  5924                           
  5925                           ;Lab7.c: 127: {
  5926                           ;Lab7.c: 128: PORTBbits.RB5 = 1;
  5927  000072  8A81               	bsf	3969,5,c	;volatile
  5928                           
  5929                           ;Lab7.c: 129: _delay((unsigned long)((10)*(20000000/4000.0)));
  5930  000074  0E41               	movlw	65
  5931  000076  0100               	movlb	0	; () banked
  5932  000078  6FB4               	movwf	??_temp_sensor& (0+255),b
  5933  00007A  0EEE               	movlw	238
  5934  00007C                     i1u363_27:
  5935  00007C  2EE8               	decfsz	wreg,f,c
  5936  00007E  D7FE               	bra	i1u363_27
  5937  000080  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  5938  000082  D7FC               	bra	i1u363_27
  5939  000084  F000               	nop	
  5940                           
  5941                           ;Lab7.c: 130: ADCON0bits.GO = 1;
  5942  000086  82C2               	bsf	4034,1,c	;volatile
  5943                           
  5944                           ;Lab7.c: 131: _delay((unsigned long)((10)*(20000000/4000.0)));
  5945  000088  0E41               	movlw	65
  5946  00008A  0100               	movlb	0	; () banked
  5947  00008C  6FB4               	movwf	??_temp_sensor& (0+255),b
  5948  00008E  0EEE               	movlw	238
  5949  000090                     i1u364_27:
  5950  000090  2EE8               	decfsz	wreg,f,c
  5951  000092  D7FE               	bra	i1u364_27
  5952  000094  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  5953  000096  D7FC               	bra	i1u364_27
  5954  000098  F000               	nop	
  5955                           
  5956                           ;Lab7.c: 132: if(PIR1bits.ADIF = 1)
  5957  00009A  8C9E               	bsf	3998,6,c	;volatile
  5958                           
  5959                           ;Lab7.c: 133: {
  5960                           ;Lab7.c: 134: ADC();
  5961  00009C  ECB4  F007         	call	_ADC	;wreg free
  5962                           
  5963                           ;Lab7.c: 135: }
  5964                           ;Lab7.c: 136: if(voltage>=temp_threshold && temp_set == 1)
  5965  0000A0  C0D8  F0B4         	movff	_temp_threshold,??_temp_sensor
  5966  0000A4  C0D9  F0B5         	movff	_temp_threshold+1,??_temp_sensor+1
  5967  0000A8  0E00               	movlw	0
  5968  0000AA  0100               	movlb	0	; () banked
  5969  0000AC  BFB5               	btfsc	(??_temp_sensor+1)& (0+255),7,b
  5970  0000AE  0EFF               	movlw	255
  5971  0000B0  6FB6               	movwf	(??_temp_sensor+2)& (0+255),b
  5972  0000B2  6FB7               	movwf	(??_temp_sensor+3)& (0+255),b
  5973  0000B4  51B4               	movf	??_temp_sensor& (0+255),w,b
  5974  0000B6  5DD0               	subwf	_voltage& (0+255),w,b
  5975  0000B8  51B5               	movf	(??_temp_sensor+1)& (0+255),w,b
  5976  0000BA  59D1               	subwfb	(_voltage+1)& (0+255),w,b
  5977  0000BC  51B6               	movf	(??_temp_sensor+2)& (0+255),w,b
  5978  0000BE  59D2               	subwfb	(_voltage+2)& (0+255),w,b
  5979  0000C0  51D3               	movf	(_voltage+3)& (0+255),w,b
  5980  0000C2  0A80               	xorlw	128
  5981  0000C4  6FB8               	movwf	(??_temp_sensor+4)& (0+255),b
  5982  0000C6  51B7               	movf	(??_temp_sensor+3)& (0+255),w,b
  5983  0000C8  0A80               	xorlw	128
  5984  0000CA  59B8               	subwfb	(??_temp_sensor+4)& (0+255),w,b
  5985  0000CC  A0D8               	btfss	status,0,c
  5986  0000CE  D05F               	goto	i1l137
  5987                           
  5988                           ; BSR set to: 0
  5989  0000D0  05D4               	decf	_temp_set& (0+255),w,b
  5990  0000D2  11D5               	iorwf	(_temp_set+1)& (0+255),w,b
  5991  0000D4  A4D8               	btfss	status,2,c
  5992  0000D6  D05B               	goto	i1l137
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;Lab7.c: 137: {
  5996                           ;Lab7.c: 138: Clear();
  5997  0000D8  ECB0  F00E         	call	i1_Clear	;wreg free
  5998                           
  5999                           ;Lab7.c: 139: triggered = 1;
  6000  0000DC  0E00               	movlw	0
  6001  0000DE  0101               	movlb	1	; () banked
  6002  0000E0  6F3B               	movwf	(_triggered+1)& (0+255),b
  6003  0000E2  0E01               	movlw	1
  6004  0000E4  6F3A               	movwf	_triggered& (0+255),b
  6005                           
  6006                           ; BSR set to: 1
  6007                           ;Lab7.c: 140: PORTBbits.RB5 = 1;
  6008  0000E6  8A81               	bsf	3969,5,c	;volatile
  6009                           
  6010                           ; BSR set to: 1
  6011                           ;Lab7.c: 141: printf("\n\r\n\r\n\rTEMP THRESHOLD EXCEEDED\n\r\n\r\n\r");
  6012  0000E8  0EB6               	movlw	low STR_6
  6013  0000EA  0100               	movlb	0	; () banked
  6014  0000EC  6F96               	movwf	i1printf@f& (0+255),b
  6015  0000EE  0E7D               	movlw	high STR_6
  6016  0000F0  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6017  0000F2  ECF6  F003         	call	i1_printf	;wreg free
  6018                           
  6019                           ;Lab7.c: 142: printf("\n\rENTER PASSWORD TO CONTINUE\n\r");
  6020  0000F6  0EDA               	movlw	low STR_4
  6021  0000F8  0100               	movlb	0	; () banked
  6022  0000FA  6F96               	movwf	i1printf@f& (0+255),b
  6023  0000FC  0E7D               	movlw	high STR_4
  6024  0000FE  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6025  000100  ECF6  F003         	call	i1_printf	;wreg free
  6026                           
  6027                           ;Lab7.c: 143: T0CONbits.TMR0ON = 0;
  6028  000104  9ED5               	bcf	4053,7,c	;volatile
  6029                           
  6030                           ;Lab7.c: 144: voltage = 0;
  6031  000106  0E00               	movlw	0
  6032  000108  0100               	movlb	0	; () banked
  6033  00010A  6FD0               	movwf	_voltage& (0+255),b
  6034  00010C  0E00               	movlw	0
  6035  00010E  6FD1               	movwf	(_voltage+1)& (0+255),b
  6036  000110  0E00               	movlw	0
  6037  000112  6FD2               	movwf	(_voltage+2)& (0+255),b
  6038  000114  0E00               	movlw	0
  6039  000116  6FD3               	movwf	(_voltage+3)& (0+255),b
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;Lab7.c: 145: password();
  6043  000118  ECF5  F00A         	call	_password	;wreg free
  6044                           
  6045                           ;Lab7.c: 146: printf("\n\rDo you want to change the temp threshold?\n\r1)Yes\n\r2)No");
  6046  00011C  0E20               	movlw	low STR_8
  6047  00011E  0100               	movlb	0	; () banked
  6048  000120  6F96               	movwf	i1printf@f& (0+255),b
  6049  000122  0E7D               	movlw	high STR_8
  6050  000124  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6051  000126  ECF6  F003         	call	i1_printf	;wreg free
  6052  00012A  AA9E               	btfss	3998,5,c	;volatile
  6053  00012C  D7FE               	goto	i1l139
  6054                           
  6055                           ;Lab7.c: 148: choice = RCREG;
  6056  00012E  CFAE F0D6          	movff	4014,_choice	;volatile
  6057  000132  0100               	movlb	0	; () banked
  6058  000134  6BD7               	clrf	(_choice+1)& (0+255),b
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;Lab7.c: 149: if(choice == 1){
  6062  000136  05D6               	decf	_choice& (0+255),w,b
  6063  000138  11D7               	iorwf	(_choice+1)& (0+255),w,b
  6064  00013A  A4D8               	btfss	status,2,c
  6065  00013C  D021               	goto	i1l141
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;Lab7.c: 150: for(int i = 0;i < 2;i++){
  6069  00013E  0E00               	movlw	0
  6070  000140  6FCF               	movwf	(temp_sensor@i+1)& (0+255),b
  6071  000142  0E00               	movlw	0
  6072  000144  6FCE               	movwf	temp_sensor@i& (0+255),b
  6073  000146  D013               	goto	i1l4165
  6074  000148                     
  6075                           ; BSR set to: 0
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;Lab7.c: 151: while(PIR1bits.RCIF == 0);
  6079  000148  AA9E               	btfss	3998,5,c	;volatile
  6080  00014A  D7FE               	goto	i1l142
  6081                           
  6082                           ;Lab7.c: 152: temp_threshold = RCREG;
  6083  00014C  CFAE F0D8          	movff	4014,_temp_threshold	;volatile
  6084  000150  0100               	movlb	0	; () banked
  6085  000152  6BD9               	clrf	(_temp_threshold+1)& (0+255),b
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;Lab7.c: 153: printf("%d", temp_threshold);
  6089  000154  0EFA               	movlw	low STR_9
  6090  000156  6F96               	movwf	i1printf@f& (0+255),b
  6091  000158  0E7F               	movlw	high STR_9
  6092  00015A  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6093  00015C  C0D8  F098         	movff	_temp_threshold,?i1_printf+2
  6094  000160  C0D9  F099         	movff	_temp_threshold+1,?i1_printf+3
  6095  000164  ECF6  F003         	call	i1_printf	;wreg free
  6096  000168  0100               	movlb	0	; () banked
  6097  00016A  4BCE               	infsnz	temp_sensor@i& (0+255),f,b
  6098  00016C  2BCF               	incf	(temp_sensor@i+1)& (0+255),f,b
  6099  00016E                     i1l4165:
  6100                           
  6101                           ; BSR set to: 0
  6102  00016E  BFCF               	btfsc	(temp_sensor@i+1)& (0+255),7,b
  6103  000170  D7EB               	goto	i1l142
  6104  000172  51CF               	movf	(temp_sensor@i+1)& (0+255),w,b
  6105  000174  E10B               	bnz	i1l4169
  6106  000176  0E02               	movlw	2
  6107  000178  5DCE               	subwf	temp_sensor@i& (0+255),w,b
  6108  00017A  B0D8               	btfsc	status,0,c
  6109  00017C  D007               	goto	i1l147
  6110  00017E  D7E4               	goto	i1l142
  6111  000180                     i1l141:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;Lab7.c: 156: else{
  6115                           ;Lab7.c: 157: printf("\n\rPress Any Button to return to Menu\n\r");
  6116                           
  6117                           ; BSR set to: 0
  6118  000180  0E8F               	movlw	low STR_5
  6119  000182  6F96               	movwf	i1printf@f& (0+255),b
  6120  000184  0E7D               	movlw	high STR_5
  6121  000186  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6122  000188  ECF6  F003         	call	i1_printf	;wreg free
  6123  00018C                     i1l147:
  6124  00018C                     i1l4169:
  6125                           
  6126                           ;Lab7.c: 158: }
  6127                           ;Lab7.c: 159: T0CONbits.TMR0ON = 1;
  6128  00018C  8ED5               	bsf	4053,7,c	;volatile
  6129  00018E                     i1l137:
  6130                           
  6131                           ;Lab7.c: 160: }
  6132                           ;Lab7.c: 162: }
  6133                           ;Lab7.c: 164: PIR1bits.ADIF = 0;
  6134  00018E  9C9E               	bcf	3998,6,c	;volatile
  6135                           
  6136                           ;Lab7.c: 165: INTCONbits.TMR0IF = 0;
  6137  000190  94F2               	bcf	intcon,2,c	;volatile
  6138                           
  6139                           ;Lab7.c: 166: PORTBbits.RB5 = 0;
  6140  000192  9A81               	bcf	3969,5,c	;volatile
  6141  000194  C0CD  F04E         	movff	??_temp_sensor+25,btemp+3
  6142  000198  C0CC  F04D         	movff	??_temp_sensor+24,btemp+2
  6143  00019C  C0CB  F04C         	movff	??_temp_sensor+23,btemp+1
  6144  0001A0  C0CA  F04B         	movff	??_temp_sensor+22,btemp
  6145  0001A4  C0C9  FFF5         	movff	??_temp_sensor+21,tablat
  6146  0001A8  C0C8  FFF8         	movff	??_temp_sensor+20,tblptru
  6147  0001AC  C0C7  FFF7         	movff	??_temp_sensor+19,tblptrh
  6148  0001B0  C0C6  FFF6         	movff	??_temp_sensor+18,tblptrl
  6149  0001B4  C0C5  FFF4         	movff	??_temp_sensor+17,prodh
  6150  0001B8  C0C4  FFF3         	movff	??_temp_sensor+16,prodl
  6151  0001BC  C0C3  FFDA         	movff	??_temp_sensor+15,fsr2h
  6152  0001C0  C0C2  FFD9         	movff	??_temp_sensor+14,fsr2l
  6153  0001C4  C0C1  FFE2         	movff	??_temp_sensor+13,fsr1h
  6154  0001C8  C0C0  FFE1         	movff	??_temp_sensor+12,fsr1l
  6155  0001CC  C0BF  FFEA         	movff	??_temp_sensor+11,fsr0h
  6156  0001D0  C0BE  FFE9         	movff	??_temp_sensor+10,fsr0l
  6157  0001D4  C0BD  FFFB         	movff	??_temp_sensor+9,pclatu
  6158  0001D8  C0BC  FFFA         	movff	??_temp_sensor+8,pclath
  6159  0001DC  C0BB  FFE0         	movff	??_temp_sensor+7,bsr
  6160  0001E0  C0BA  FFE8         	movff	??_temp_sensor+6,wreg
  6161  0001E4  C0B9  FFD8         	movff	??_temp_sensor+5,status
  6162  0001E8  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6163  0001EA  0010               	retfie	
  6164  0001EC                     __end_of_temp_sensor:
  6165                           	opt stack 0
  6166                           pclatu	equ	0xFFB
  6167                           pclath	equ	0xFFA
  6168                           tblptru	equ	0xFF8
  6169                           tblptrh	equ	0xFF7
  6170                           tblptrl	equ	0xFF6
  6171                           tablat	equ	0xFF5
  6172                           prodh	equ	0xFF4
  6173                           prodl	equ	0xFF3
  6174                           intcon	equ	0xFF2
  6175                           intcon2	equ	0xFF1
  6176                           intcon3	equ	0xFF0
  6177                           postinc0	equ	0xFEE
  6178                           fsr0h	equ	0xFEA
  6179                           fsr0l	equ	0xFE9
  6180                           wreg	equ	0xFE8
  6181                           postinc1	equ	0xFE6
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           bsr	equ	0xFE0
  6186                           indf2	equ	0xFDF
  6187                           postinc2	equ	0xFDE
  6188                           postdec2	equ	0xFDD
  6189                           fsr2h	equ	0xFDA
  6190                           fsr2l	equ	0xFD9
  6191                           status	equ	0xFD8
  6192                           
  6193 ;; *************** function i1_Clear *****************
  6194 ;; Defined at:
  6195 ;;		line 105 in file "Lab7.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6209 ;;      Params:         0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    6
  6216 ;; This function calls:
  6217 ;;		i1_printf
  6218 ;; This function is called by:
  6219 ;;		_temp_sensor
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text15
  6224  001D60                     __ptext15:
  6225                           	opt stack 0
  6226  001D60                     i1_Clear:
  6227                           	opt stack 18
  6228                           
  6229                           ;Lab7.c: 107: printf("\033[2J");
  6230                           
  6231                           ;incstack = 0
  6232  001D60  0EF1               	movlw	low STR_1
  6233  001D62  0100               	movlb	0	; () banked
  6234  001D64  6F96               	movwf	i1printf@f& (0+255),b
  6235  001D66  0E7F               	movlw	high STR_1
  6236  001D68  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6237  001D6A  ECF6  F003         	call	i1_printf	;wreg free
  6238                           
  6239                           ;Lab7.c: 108: printf("\033[0;0H");
  6240  001D6E  0EEA               	movlw	low STR_2
  6241  001D70  0100               	movlb	0	; () banked
  6242  001D72  6F96               	movwf	i1printf@f& (0+255),b
  6243  001D74  0E7F               	movlw	high STR_2
  6244  001D76  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6245  001D78  ECF6  F003         	call	i1_printf	;wreg free
  6246  001D7C  0012               	return		;funcret
  6247  001D7E                     __end_ofi1_Clear:
  6248                           	opt stack 0
  6249                           pclatu	equ	0xFFB
  6250                           pclath	equ	0xFFA
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           intcon2	equ	0xFF1
  6259                           intcon3	equ	0xFF0
  6260                           postinc0	equ	0xFEE
  6261                           fsr0h	equ	0xFEA
  6262                           fsr0l	equ	0xFE9
  6263                           wreg	equ	0xFE8
  6264                           postinc1	equ	0xFE6
  6265                           postdec1	equ	0xFE5
  6266                           fsr1h	equ	0xFE2
  6267                           fsr1l	equ	0xFE1
  6268                           bsr	equ	0xFE0
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function _password *****************
  6277 ;; Defined at:
  6278 ;;		line 412 in file "Lab7.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  i               2   38[BANK0 ] int 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         0       0       0       0       0       0       0
  6293 ;;      Locals:         0       2       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0
  6295 ;;      Totals:         0       2       0       0       0       0       0
  6296 ;;Total ram usage:        2 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    6
  6299 ;; This function calls:
  6300 ;;		i1_printf
  6301 ;;		i1_strncmp
  6302 ;; This function is called by:
  6303 ;;		_temp_sensor
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text16
  6308  0015EA                     __ptext16:
  6309                           	opt stack 0
  6310  0015EA                     _password:
  6311                           	opt stack 18
  6312                           
  6313                           ;Lab7.c: 415: {
  6314                           ;Lab7.c: 416: printf("PASSWORD:\t");
  6315                           
  6316                           ;incstack = 0
  6317                           ;Lab7.c: 414: while(1)
  6318  0015EA  0EB9               	movlw	low (STR_11+4)
  6319  0015EC  0100               	movlb	0	; () banked
  6320  0015EE  6F96               	movwf	i1printf@f& (0+255),b
  6321  0015F0  0E7F               	movlw	high (STR_11+4)
  6322  0015F2  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6323  0015F4  ECF6  F003         	call	i1_printf	;wreg free
  6324                           
  6325                           ;Lab7.c: 417: for(int i = 0;i < 4;i++){
  6326  0015F8  0E00               	movlw	0
  6327  0015FA  0100               	movlb	0	; () banked
  6328  0015FC  6FA7               	movwf	(password@i+1)& (0+255),b
  6329  0015FE  0E00               	movlw	0
  6330  001600  6FA6               	movwf	password@i& (0+255),b
  6331                           
  6332                           ; BSR set to: 0
  6333  001602  BFA7               	btfsc	(password@i+1)& (0+255),7,b
  6334  001604  D006               	goto	i1l214
  6335  001606  51A7               	movf	(password@i+1)& (0+255),w,b
  6336  001608  E120               	bnz	i1l4089
  6337  00160A  0E04               	movlw	4
  6338  00160C  5DA6               	subwf	password@i& (0+255),w,b
  6339  00160E  B0D8               	btfsc	status,0,c
  6340  001610  D01C               	goto	i1u340_20
  6341  001612                     i1l214:
  6342                           
  6343                           ; BSR set to: 0
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;Lab7.c: 418: while(PIR1bits.RCIF == 0);
  6347  001612  AA9E               	btfss	3998,5,c	;volatile
  6348  001614  D7FE               	goto	i1l214
  6349                           
  6350                           ;Lab7.c: 419: pass[i] = RCREG;
  6351  001616  0E3F               	movlw	low _pass
  6352  001618  0100               	movlb	0	; () banked
  6353  00161A  25A6               	addwf	password@i& (0+255),w,b
  6354  00161C  6ED9               	movwf	fsr2l,c
  6355  00161E  0E01               	movlw	high _pass
  6356  001620  21A7               	addwfc	(password@i+1)& (0+255),w,b
  6357  001622  6EDA               	movwf	fsr2h,c
  6358  001624  CFAE FFDF          	movff	4014,indf2	;volatile
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;Lab7.c: 420: printf("*");
  6362  001628  0EFD               	movlw	low STR_12
  6363  00162A  6F96               	movwf	i1printf@f& (0+255),b
  6364  00162C  0E7F               	movlw	high STR_12
  6365  00162E  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6366  001630  ECF6  F003         	call	i1_printf	;wreg free
  6367  001634  0100               	movlb	0	; () banked
  6368  001636  4BA6               	infsnz	password@i& (0+255),f,b
  6369  001638  2BA7               	incf	(password@i+1)& (0+255),f,b
  6370                           
  6371                           ; BSR set to: 0
  6372  00163A  BFA7               	btfsc	(password@i+1)& (0+255),7,b
  6373  00163C  D7EA               	goto	i1l214
  6374  00163E  51A7               	movf	(password@i+1)& (0+255),w,b
  6375  001640  E104               	bnz	i1l4089
  6376  001642  0E04               	movlw	4
  6377  001644  5DA6               	subwf	password@i& (0+255),w,b
  6378  001646  A0D8               	btfss	status,0,c
  6379  001648  D7E4               	goto	i1l214
  6380  00164A                     i1u340_20:
  6381  00164A                     i1l4089:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;Lab7.c: 421: }
  6385                           ;Lab7.c: 423: check = strncmp(pass, saved_pass, 4);
  6386  00164A  0E3F               	movlw	low _pass
  6387  00164C  6F80               	movwf	i1strncmp@s1& (0+255),b
  6388  00164E  0E01               	movlw	high _pass
  6389  001650  6F81               	movwf	(i1strncmp@s1+1)& (0+255),b
  6390  001652  0E43               	movlw	low _saved_pass
  6391  001654  6F82               	movwf	i1strncmp@s2& (0+255),b
  6392  001656  0E01               	movlw	high _saved_pass
  6393  001658  6F83               	movwf	(i1strncmp@s2+1)& (0+255),b
  6394  00165A  0E00               	movlw	0
  6395  00165C  6F85               	movwf	(i1strncmp@len+1)& (0+255),b
  6396  00165E  0E04               	movlw	4
  6397  001660  6F84               	movwf	i1strncmp@len& (0+255),b
  6398  001662  ECE6  F00C         	call	i1_strncmp	;wreg free
  6399  001666  C080  F13C         	movff	?i1_strncmp,_check
  6400  00166A  C081  F13D         	movff	?i1_strncmp+1,_check+1
  6401                           
  6402                           ;Lab7.c: 438: if(check == 0)
  6403  00166E  0101               	movlb	1	; () banked
  6404  001670  513C               	movf	_check& (0+255),w,b
  6405  001672  113D               	iorwf	(_check+1)& (0+255),w,b
  6406  001674  A4D8               	btfss	status,2,c
  6407  001676  D008               	goto	i1l219
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;Lab7.c: 439: {
  6411                           ;Lab7.c: 440: printf("\n\rPASSWORD VALID\n\r\n\r");
  6412  001678  0E17               	movlw	low STR_30
  6413  00167A  0100               	movlb	0	; () banked
  6414  00167C  6F96               	movwf	i1printf@f& (0+255),b
  6415  00167E  0E7F               	movlw	high STR_30
  6416  001680  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6417  001682  ECF6  F003         	call	i1_printf	;wreg free
  6418                           
  6419                           ;Lab7.c: 441: return;
  6420  001686  0012               	return	
  6421  001688                     i1l219:
  6422                           
  6423                           ;Lab7.c: 443: else
  6424                           ;Lab7.c: 444: {
  6425                           ;Lab7.c: 445: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
  6426  001688  0E15               	movlw	low STR_31
  6427  00168A  0100               	movlb	0	; () banked
  6428  00168C  6F96               	movwf	i1printf@f& (0+255),b
  6429  00168E  0E7E               	movlw	high STR_31
  6430  001690  6F97               	movwf	(i1printf@f+1)& (0+255),b
  6431  001692  ECF6  F003         	call	i1_printf	;wreg free
  6432  001696  D7A9               	goto	_password
  6433  001698                     __end_of_password:
  6434                           	opt stack 0
  6435                           pclatu	equ	0xFFB
  6436                           pclath	equ	0xFFA
  6437                           tblptru	equ	0xFF8
  6438                           tblptrh	equ	0xFF7
  6439                           tblptrl	equ	0xFF6
  6440                           tablat	equ	0xFF5
  6441                           prodh	equ	0xFF4
  6442                           prodl	equ	0xFF3
  6443                           intcon	equ	0xFF2
  6444                           intcon2	equ	0xFF1
  6445                           intcon3	equ	0xFF0
  6446                           postinc0	equ	0xFEE
  6447                           fsr0h	equ	0xFEA
  6448                           fsr0l	equ	0xFE9
  6449                           wreg	equ	0xFE8
  6450                           postinc1	equ	0xFE6
  6451                           postdec1	equ	0xFE5
  6452                           fsr1h	equ	0xFE2
  6453                           fsr1l	equ	0xFE1
  6454                           bsr	equ	0xFE0
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function i1_strncmp *****************
  6463 ;; Defined at:
  6464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  6467 ;;		 -> pass(4), 
  6468 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  6469 ;;		 -> saved_pass(4), 
  6470 ;;  len             2    4[BANK0 ] unsigned int 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  2    0[BANK0 ] int 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6482 ;;      Params:         0       6       0       0       0       0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0
  6484 ;;      Temps:          0       3       0       0       0       0       0
  6485 ;;      Totals:         0       9       0       0       0       0       0
  6486 ;;Total ram usage:        9 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    4
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_password
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text17
  6497  0019CC                     __ptext17:
  6498                           	opt stack 0
  6499  0019CC                     i1_strncmp:
  6500                           	opt stack 19
  6501                           
  6502                           ;incstack = 0
  6503  0019CC  D031               	goto	i1l916
  6504  0019CE                     i1l4057:
  6505  0019CE  C080  FFD9         	movff	i1strncmp@s1,fsr2l
  6506  0019D2  C081  FFDA         	movff	i1strncmp@s1+1,fsr2h
  6507  0019D6  50DF               	movf	indf2,w,c
  6508  0019D8  B4D8               	btfsc	status,2,c
  6509  0019DA  D00C               	goto	i1u336_20
  6510  0019DC  C082  FFD9         	movff	i1strncmp@s2,fsr2l
  6511  0019E0  C083  FFDA         	movff	i1strncmp@s2+1,fsr2h
  6512  0019E4  C080  FFE1         	movff	i1strncmp@s1,fsr1l
  6513  0019E8  C081  FFE2         	movff	i1strncmp@s1+1,fsr1h
  6514  0019EC  50DE               	movf	postinc2,w,c
  6515  0019EE  18E6               	xorwf	postinc1,w,c
  6516  0019F0  B4D8               	btfsc	status,2,c
  6517  0019F2  D019               	goto	i1l918
  6518  0019F4                     i1u336_20:
  6519  0019F4  C082  FFD9         	movff	i1strncmp@s2,fsr2l
  6520  0019F8  C083  FFDA         	movff	i1strncmp@s2+1,fsr2h
  6521  0019FC  50DF               	movf	indf2,w,c
  6522  0019FE  0100               	movlb	0	; () banked
  6523  001A00  6F86               	movwf	??i1_strncmp& (0+255),b
  6524  001A02  6B87               	clrf	(??i1_strncmp+1)& (0+255),b
  6525  001A04  1F86               	comf	??i1_strncmp& (0+255),f,b
  6526  001A06  1F87               	comf	(??i1_strncmp+1)& (0+255),f,b
  6527  001A08  4B86               	infsnz	??i1_strncmp& (0+255),f,b
  6528  001A0A  2B87               	incf	(??i1_strncmp+1)& (0+255),f,b
  6529  001A0C  C080  FFD9         	movff	i1strncmp@s1,fsr2l
  6530  001A10  C081  FFDA         	movff	i1strncmp@s1+1,fsr2h
  6531  001A14  50DF               	movf	indf2,w,c
  6532  001A16  6F88               	movwf	(??i1_strncmp+2)& (0+255),b
  6533  001A18  5188               	movf	(??i1_strncmp+2)& (0+255),w,b
  6534  001A1A  2586               	addwf	??i1_strncmp& (0+255),w,b
  6535  001A1C  6F80               	movwf	?i1_strncmp& (0+255),b
  6536  001A1E  0E00               	movlw	0
  6537  001A20  2187               	addwfc	(??i1_strncmp+1)& (0+255),w,b
  6538  001A22  6F81               	movwf	(?i1_strncmp+1)& (0+255),b
  6539                           
  6540                           ; BSR set to: 0
  6541  001A24  0012               	return	
  6542  001A26                     i1l918:
  6543                           
  6544                           ; BSR set to: 0
  6545  001A26  0100               	movlb	0	; () banked
  6546  001A28  4B80               	infsnz	i1strncmp@s1& (0+255),f,b
  6547  001A2A  2B81               	incf	(i1strncmp@s1+1)& (0+255),f,b
  6548  001A2C  4B82               	infsnz	i1strncmp@s2& (0+255),f,b
  6549  001A2E  2B83               	incf	(i1strncmp@s2+1)& (0+255),f,b
  6550  001A30                     i1l916:
  6551                           
  6552                           ; BSR set to: 0
  6553  001A30  0100               	movlb	0	; () banked
  6554  001A32  0784               	decf	i1strncmp@len& (0+255),f,b
  6555  001A34  A0D8               	btfss	status,0,c
  6556  001A36  0785               	decf	(i1strncmp@len+1)& (0+255),f,b
  6557  001A38  2984               	incf	i1strncmp@len& (0+255),w,b
  6558  001A3A  E1C9               	bnz	i1l4057
  6559  001A3C  2985               	incf	(i1strncmp@len+1)& (0+255),w,b
  6560  001A3E  A4D8               	btfss	status,2,c
  6561  001A40  D7C6               	goto	i1l917
  6562                           
  6563                           ; BSR set to: 0
  6564                           
  6565                           ; BSR set to: 0
  6566  001A42  0E00               	movlw	0
  6567  001A44  6F81               	movwf	(?i1_strncmp+1)& (0+255),b
  6568  001A46  0E00               	movlw	0
  6569  001A48  6F80               	movwf	?i1_strncmp& (0+255),b
  6570  001A4A  0012               	return	
  6571  001A4C                     __end_ofi1_strncmp:
  6572                           	opt stack 0
  6573                           pclatu	equ	0xFFB
  6574                           pclath	equ	0xFFA
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           intcon2	equ	0xFF1
  6583                           intcon3	equ	0xFF0
  6584                           postinc0	equ	0xFEE
  6585                           fsr0h	equ	0xFEA
  6586                           fsr0l	equ	0xFE9
  6587                           wreg	equ	0xFE8
  6588                           postinc1	equ	0xFE6
  6589                           postdec1	equ	0xFE5
  6590                           fsr1h	equ	0xFE2
  6591                           fsr1l	equ	0xFE1
  6592                           bsr	equ	0xFE0
  6593                           indf2	equ	0xFDF
  6594                           postinc2	equ	0xFDE
  6595                           postdec2	equ	0xFDD
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8
  6599                           
  6600 ;; *************** function i1_printf *****************
  6601 ;; Defined at:
  6602 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  6605 ;;		 -> STR_70(4), STR_69(23), STR_68(9), STR_67(28), 
  6606 ;;		 -> STR_66(26), STR_65(25), STR_64(133), STR_63(20), 
  6607 ;;		 -> STR_62(21), STR_61(14), STR_60(15), STR_59(23), 
  6608 ;;		 -> STR_58(3), STR_57(27), STR_56(26), STR_55(25), 
  6609 ;;		 -> STR_54(25), STR_53(151), STR_52(20), STR_51(21), 
  6610 ;;		 -> STR_50(14), STR_49(15), STR_48(23), STR_47(19), 
  6611 ;;		 -> STR_46(18), STR_45(25), STR_44(117), STR_43(20), 
  6612 ;;		 -> STR_42(21), STR_41(14), STR_40(15), STR_39(23), 
  6613 ;;		 -> STR_38(21), STR_37(25), STR_36(109), STR_35(20), 
  6614 ;;		 -> STR_34(21), STR_33(14), STR_32(15), STR_31(28), 
  6615 ;;		 -> STR_30(21), STR_29(2), STR_28(11), STR_27(54), 
  6616 ;;		 -> STR_26(25), STR_25(2), STR_24(21), STR_23(2), 
  6617 ;;		 -> STR_22(25), STR_21(23), STR_20(25), STR_19(3), 
  6618 ;;		 -> STR_18(161), STR_17(20), STR_16(21), STR_15(14), 
  6619 ;;		 -> STR_14(15), STR_13(17), STR_12(2), STR_11(15), 
  6620 ;;		 -> STR_10(39), STR_9(3), STR_8(57), STR_7(31), 
  6621 ;;		 -> STR_6(36), STR_5(39), STR_4(31), STR_3(28), 
  6622 ;;		 -> STR_2(7), STR_1(5), 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  printf          4   33[BANK0 ] unsigned long 
  6625 ;;  printf          4    0        struct .
  6626 ;;  printf          3    0        PTR const unsigned char 
  6627 ;;  printf          2   30[BANK0 ] PTR void [1]
  6628 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
  6629 ;;  printf          2   28[BANK0 ] int 
  6630 ;;  printf          2    0        unsigned int 
  6631 ;;  printf          1   37[BANK0 ] char 
  6632 ;;  printf          1   32[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  2   22[BANK0 ] int 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6642 ;;      Params:         0       4       0       0       0       0       0
  6643 ;;      Locals:         0      10       0       0       0       0       0
  6644 ;;      Temps:          0       2       0       0       0       0       0
  6645 ;;      Totals:         0      16       0       0       0       0       0
  6646 ;;Total ram usage:       16 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    5
  6649 ;; This function calls:
  6650 ;;		i1___lldiv
  6651 ;;		i1___llmod
  6652 ;;		i1_putch
  6653 ;; This function is called by:
  6654 ;;		_temp_sensor
  6655 ;;		_password
  6656 ;;		i1_Clear
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text18
  6661  0007EC                     __ptext18:
  6662                           	opt stack 0
  6663  0007EC                     i1_printf:
  6664                           	opt stack 19
  6665                           
  6666                           ;doprnt.c: 466: va_list ap;
  6667                           ;doprnt.c: 499: signed char c;
  6668                           ;doprnt.c: 504: int prec;
  6669                           ;doprnt.c: 508: unsigned char flag;
  6670                           ;doprnt.c: 523: union {
  6671                           ;doprnt.c: 524: unsigned long vd;
  6672                           ;doprnt.c: 525: double integ;
  6673                           ;doprnt.c: 526: } tmpval;
  6674                           ;doprnt.c: 528: unsigned long val;
  6675                           ;doprnt.c: 529: unsigned len;
  6676                           ;doprnt.c: 530: const char * cp;
  6677                           ;doprnt.c: 533: *ap = __va_start();
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;incstack = 0
  6681  0007EC  0E98               	movlw	low (?i1_printf+2)
  6682  0007EE  0100               	movlb	0	; () banked
  6683  0007F0  6F9E               	movwf	i1printf@ap& (0+255),b
  6684  0007F2  0E00               	movlw	high (?i1_printf+2)
  6685  0007F4  6F9F               	movwf	(i1printf@ap+1)& (0+255),b
  6686                           
  6687                           ;doprnt.c: 536: while(c = *f++) {
  6688  0007F6  D0C8               	goto	i1u333_20
  6689  0007F8                     
  6690                           ; BSR set to: 0
  6691                           ;doprnt.c: 538: if(c != '%')
  6692                           
  6693                           ; BSR set to: 0
  6694  0007F8  0E25               	movlw	37
  6695  0007FA  19A5               	xorwf	i1printf@c& (0+255),w,b
  6696  0007FC  B4D8               	btfsc	status,2,c
  6697  0007FE  D004               	goto	i1l347
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;doprnt.c: 540: {
  6701                           ;doprnt.c: 541: (putch(c) );
  6702  000800  51A5               	movf	i1printf@c& (0+255),w,b
  6703  000802  ECD3  F00E         	call	i1_putch
  6704                           
  6705                           ;doprnt.c: 542: continue;
  6706  000806  D0C0               	goto	i1u333_20
  6707  000808                     i1l347:
  6708                           
  6709                           ;doprnt.c: 543: }
  6710                           ;doprnt.c: 548: flag = 0;
  6711  000808  0E00               	movlw	0
  6712  00080A  0100               	movlb	0	; () banked
  6713  00080C  6FA0               	movwf	i1printf@flag& (0+255),b
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;doprnt.c: 635: switch(c = *f++) {
  6717                           
  6718                           ;doprnt.c: 633: loop:
  6719  00080E  D001               	goto	i1l349
  6720  000810                     
  6721                           ; BSR set to: 0
  6722                           ;doprnt.c: 643: flag |= 0x10;
  6723                           
  6724                           ; BSR set to: 0
  6725  000810  89A0               	bsf	i1printf@flag& (0+255),4,b
  6726  000812                     i1l349:
  6727                           
  6728                           ; BSR set to: 0
  6729                           
  6730                           ; BSR set to: 0
  6731  000812  C096  FFF6         	movff	i1printf@f,tblptrl
  6732  000816  C097  FFF7         	movff	i1printf@f+1,tblptrh
  6733  00081A  4B96               	infsnz	i1printf@f& (0+255),f,b
  6734  00081C  2B97               	incf	(i1printf@f+1)& (0+255),f,b
  6735  00081E                     	if	0	;tblptru may be non-zero
  6736  00081E                     	endif
  6737  00081E                     	if	0	;tblptru may be non-zero
  6738  00081E                     	endif
  6739  00081E  0008               	tblrd		*
  6740  000820  CFF5 F0A5          	movff	tablat,i1printf@c
  6741  000824  51A5               	movf	i1printf@c& (0+255),w,b
  6742                           
  6743                           ; Switch size 1, requested type "space"
  6744                           ; Number of cases is 4, Range of values is 0 to 108
  6745                           ; switch strategies available:
  6746                           ; Name         Instructions Cycles
  6747                           ; simple_byte           13     7 (average)
  6748                           ;	Chosen strategy is simple_byte
  6749  000826  0A00               	xorlw	0	; case 0
  6750  000828  B4D8               	btfsc	status,2,c
  6751  00082A  0012               	return	
  6752  00082C  0A64               	xorlw	100	; case 100
  6753  00082E  B4D8               	btfsc	status,2,c
  6754  000830  D007               	goto	i1l355
  6755  000832  0A0D               	xorlw	13	; case 105
  6756  000834  B4D8               	btfsc	status,2,c
  6757  000836  D004               	goto	i1l355
  6758  000838  0A05               	xorlw	5	; case 108
  6759  00083A  B4D8               	btfsc	status,2,c
  6760  00083C  D7E9               	goto	i1l352
  6761  00083E  D0A4               	goto	i1u333_20
  6762  000840                     i1l355:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;doprnt.c: 1253: {
  6766                           ;doprnt.c: 1255: if(flag & 0x10)
  6767  000840  A9A0               	btfss	i1printf@flag& (0+255),4,b
  6768  000842  D00E               	goto	i1l357
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  6772  000844  C09E  FFD9         	movff	i1printf@ap,fsr2l
  6773  000848  C09F  FFDA         	movff	i1printf@ap+1,fsr2h
  6774  00084C  CFDE F0A1          	movff	postinc2,i1printf@val
  6775  000850  CFDE F0A2          	movff	postinc2,i1printf@val+1
  6776  000854  CFDE F0A3          	movff	postinc2,i1printf@val+2
  6777  000858  CFDE F0A4          	movff	postinc2,i1printf@val+3
  6778                           
  6779                           ; BSR set to: 0
  6780  00085C  0E04               	movlw	4
  6781  00085E  D00E               	goto	L6
  6782  000860                     i1l357:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;doprnt.c: 1257: else
  6786                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6787                           
  6788                           ; BSR set to: 0
  6789  000860  C09E  FFD9         	movff	i1printf@ap,fsr2l
  6790  000864  C09F  FFDA         	movff	i1printf@ap+1,fsr2h
  6791  000868  CFDE F0A1          	movff	postinc2,i1printf@val
  6792  00086C  CFDD F0A2          	movff	postdec2,i1printf@val+1
  6793  000870  0E00               	movlw	0
  6794  000872  BFA2               	btfsc	(i1printf@val+1)& (0+255),7,b
  6795  000874  0EFF               	movlw	-1
  6796  000876  6FA3               	movwf	(i1printf@val+2)& (0+255),b
  6797  000878  6FA4               	movwf	(i1printf@val+3)& (0+255),b
  6798                           
  6799                           ; BSR set to: 0
  6800  00087A  0E02               	movlw	2
  6801  00087C                     L6:
  6802  00087C  279E               	addwf	i1printf@ap& (0+255),f,b
  6803  00087E  0E00               	movlw	0
  6804  000880  239F               	addwfc	(i1printf@ap+1)& (0+255),f,b
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;doprnt.c: 1261: if((long)val < 0) {
  6808                           
  6809                           ; BSR set to: 0
  6810  000882  AFA4               	btfss	(i1printf@val+3)& (0+255),7,b
  6811  000884  D00A               	goto	i1l359
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;doprnt.c: 1262: flag |= 0x03;
  6815  000886  0E03               	movlw	3
  6816  000888  13A0               	iorwf	i1printf@flag& (0+255),f,b
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;doprnt.c: 1263: val = -val;
  6820  00088A  1FA4               	comf	(i1printf@val+3)& (0+255),f,b
  6821  00088C  1FA3               	comf	(i1printf@val+2)& (0+255),f,b
  6822  00088E  1FA2               	comf	(i1printf@val+1)& (0+255),f,b
  6823  000890  6DA1               	negf	i1printf@val& (0+255),b
  6824  000892  0E00               	movlw	0
  6825  000894  23A2               	addwfc	(i1printf@val+1)& (0+255),f,b
  6826  000896  23A3               	addwfc	(i1printf@val+2)& (0+255),f,b
  6827  000898  23A4               	addwfc	(i1printf@val+3)& (0+255),f,b
  6828  00089A                     i1l359:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;doprnt.c: 1264: }
  6832                           ;doprnt.c: 1266: }
  6833                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6834                           
  6835                           ; BSR set to: 0
  6836  00089A  0E01               	movlw	1
  6837  00089C  6FA5               	movwf	i1printf@c& (0+255),b
  6838  00089E                     i1l4029:
  6839                           
  6840                           ; BSR set to: 0
  6841  00089E  0E0A               	movlw	10
  6842  0008A0  19A5               	xorwf	i1printf@c& (0+255),w,b
  6843  0008A2  B4D8               	btfsc	status,2,c
  6844  0008A4  D018               	goto	i1u331_20
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;doprnt.c: 1306: if(val < dpowers[c])
  6848                           
  6849                           ; BSR set to: 0
  6850                           
  6851                           ; BSR set to: 0
  6852  0008A6  51A5               	movf	i1printf@c& (0+255),w,b
  6853  0008A8  0D04               	mullw	4
  6854  0008AA  0E59               	movlw	low _dpowers
  6855  0008AC  24F3               	addwf	prodl,w,c
  6856  0008AE  6EF6               	movwf	tblptrl,c
  6857  0008B0  0E7A               	movlw	high _dpowers
  6858  0008B2  20F4               	addwfc	prodh,w,c
  6859  0008B4  6EF7               	movwf	tblptrh,c
  6860  0008B6                     	if	0	;There are less than 3 active tblptr bytes
  6861  0008B6                     	endif
  6862  0008B6  0009               	tblrd		*+
  6863  0008B8  50F5               	movf	tablat,w,c
  6864  0008BA  5DA1               	subwf	i1printf@val& (0+255),w,b
  6865  0008BC  0009               	tblrd		*+
  6866  0008BE  50F5               	movf	tablat,w,c
  6867  0008C0  59A2               	subwfb	(i1printf@val+1)& (0+255),w,b
  6868  0008C2  0009               	tblrd		*+
  6869  0008C4  50F5               	movf	tablat,w,c
  6870  0008C6  59A3               	subwfb	(i1printf@val+2)& (0+255),w,b
  6871  0008C8  0009               	tblrd		*+
  6872  0008CA  50F5               	movf	tablat,w,c
  6873  0008CC  59A4               	subwfb	(i1printf@val+3)& (0+255),w,b
  6874  0008CE  A0D8               	btfss	status,0,c
  6875  0008D0  D002               	goto	i1u331_20
  6876                           
  6877                           ; BSR set to: 0
  6878                           
  6879                           ; BSR set to: 0
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;doprnt.c: 1307: break;
  6883  0008D2  2BA5               	incf	i1printf@c& (0+255),f,b
  6884  0008D4  D7E4               	goto	i1l4029
  6885  0008D6                     i1u331_20:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;doprnt.c: 1422: {
  6889                           ;doprnt.c: 1438: if(flag & 0x03)
  6890                           
  6891                           ; BSR set to: 0
  6892  0008D6  C0A0  F09A         	movff	i1printf@flag,??i1_printf
  6893  0008DA  0E03               	movlw	3
  6894  0008DC  179A               	andwf	??i1_printf& (0+255),f,b
  6895  0008DE  B4D8               	btfsc	status,2,c
  6896  0008E0  D003               	goto	i1l363
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;doprnt.c: 1439: (putch('-') );
  6900  0008E2  0E2D               	movlw	45
  6901  0008E4  ECD3  F00E         	call	i1_putch
  6902  0008E8                     i1l363:
  6903                           
  6904                           ;doprnt.c: 1469: }
  6905                           ;doprnt.c: 1472: prec = c;
  6906  0008E8  0100               	movlb	0	; () banked
  6907  0008EA  51A5               	movf	i1printf@c& (0+255),w,b
  6908  0008EC  6F9C               	movwf	i1printf@prec& (0+255),b
  6909  0008EE  6B9D               	clrf	(i1printf@prec+1)& (0+255),b
  6910  0008F0  BF9C               	btfsc	i1printf@prec& (0+255),7,b
  6911  0008F2  079D               	decf	(i1printf@prec+1)& (0+255),f,b
  6912                           
  6913                           ;doprnt.c: 1474: while(prec--) {
  6914  0008F4  D040               	goto	i1l364
  6915  0008F6                     i1l4047:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;doprnt.c: 1478: {
  6919                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6920  0008F6  C09C  F09A         	movff	i1printf@prec,??i1_printf
  6921  0008FA  C09D  F09B         	movff	i1printf@prec+1,??i1_printf+1
  6922  0008FE  90D8               	bcf	status,0,c
  6923  000900  379A               	rlcf	??i1_printf& (0+255),f,b
  6924  000902  379B               	rlcf	(??i1_printf+1)& (0+255),f,b
  6925  000904  90D8               	bcf	status,0,c
  6926  000906  379A               	rlcf	??i1_printf& (0+255),f,b
  6927  000908  379B               	rlcf	(??i1_printf+1)& (0+255),f,b
  6928  00090A  0E59               	movlw	low _dpowers
  6929  00090C  259A               	addwf	??i1_printf& (0+255),w,b
  6930  00090E  6EF6               	movwf	tblptrl,c
  6931  000910  0E7A               	movlw	high _dpowers
  6932  000912  219B               	addwfc	(??i1_printf+1)& (0+255),w,b
  6933  000914  6EF7               	movwf	tblptrh,c
  6934  000916                     	if	0	;There are less than 3 active tblptr bytes
  6935  000916                     	endif
  6936  000916  0009               	tblrd		*+
  6937  000918  CFF5 F084          	movff	tablat,i1___lldiv@divisor
  6938  00091C  0009               	tblrd		*+
  6939  00091E  CFF5 F085          	movff	tablat,i1___lldiv@divisor+1
  6940  000922  0009               	tblrd		*+
  6941  000924  CFF5 F086          	movff	tablat,i1___lldiv@divisor+2
  6942  000928  000A               	tblrd		*-
  6943  00092A  CFF5 F087          	movff	tablat,i1___lldiv@divisor+3
  6944  00092E  C0A1  F080         	movff	i1printf@val,i1___lldiv@dividend
  6945  000932  C0A2  F081         	movff	i1printf@val+1,i1___lldiv@dividend+1
  6946  000936  C0A3  F082         	movff	i1printf@val+2,i1___lldiv@dividend+2
  6947  00093A  C0A4  F083         	movff	i1printf@val+3,i1___lldiv@dividend+3
  6948  00093E  EC23  F00C         	call	i1___lldiv	;wreg free
  6949  000942  C080  F08D         	movff	?i1___lldiv,i1___llmod@dividend
  6950  000946  C081  F08E         	movff	?i1___lldiv+1,i1___llmod@dividend+1
  6951  00094A  C082  F08F         	movff	?i1___lldiv+2,i1___llmod@dividend+2
  6952  00094E  C083  F090         	movff	?i1___lldiv+3,i1___llmod@dividend+3
  6953  000952  0E0A               	movlw	10
  6954  000954  0100               	movlb	0	; () banked
  6955  000956  6F91               	movwf	i1___llmod@divisor& (0+255),b
  6956  000958  0E00               	movlw	0
  6957  00095A  6F92               	movwf	(i1___llmod@divisor+1)& (0+255),b
  6958  00095C  0E00               	movlw	0
  6959  00095E  6F93               	movwf	(i1___llmod@divisor+2)& (0+255),b
  6960  000960  0E00               	movlw	0
  6961  000962  6F94               	movwf	(i1___llmod@divisor+3)& (0+255),b
  6962  000964  ECD4  F00D         	call	i1___llmod	;wreg free
  6963  000968  0100               	movlb	0	; () banked
  6964  00096A  518D               	movf	?i1___llmod& (0+255),w,b
  6965  00096C  0F30               	addlw	48
  6966  00096E  6FA5               	movwf	i1printf@c& (0+255),b
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;doprnt.c: 1523: }
  6970                           ;doprnt.c: 1524: (putch(c) );
  6971  000970  51A5               	movf	i1printf@c& (0+255),w,b
  6972  000972  ECD3  F00E         	call	i1_putch
  6973  000976                     i1l364:
  6974  000976  0100               	movlb	0	; () banked
  6975  000978  079C               	decf	i1printf@prec& (0+255),f,b
  6976  00097A  A0D8               	btfss	status,0,c
  6977  00097C  079D               	decf	(i1printf@prec+1)& (0+255),f,b
  6978  00097E  299C               	incf	i1printf@prec& (0+255),w,b
  6979  000980  E1BA               	bnz	i1l4047
  6980  000982  299D               	incf	(i1printf@prec+1)& (0+255),w,b
  6981  000984  A4D8               	btfss	status,2,c
  6982  000986  D7B7               	goto	i1l365
  6983  000988                     i1u333_20:
  6984                           
  6985                           ; BSR set to: 0
  6986                           
  6987                           ; BSR set to: 0
  6988  000988  C096  FFF6         	movff	i1printf@f,tblptrl
  6989  00098C  C097  FFF7         	movff	i1printf@f+1,tblptrh
  6990  000990  0100               	movlb	0	; () banked
  6991  000992  4B96               	infsnz	i1printf@f& (0+255),f,b
  6992  000994  2B97               	incf	(i1printf@f+1)& (0+255),f,b
  6993  000996                     	if	0	;tblptru may be non-zero
  6994  000996                     	endif
  6995  000996                     	if	0	;tblptru may be non-zero
  6996  000996                     	endif
  6997  000996  0008               	tblrd		*
  6998  000998  CFF5 F0A5          	movff	tablat,i1printf@c
  6999  00099C  51A5               	movf	i1printf@c& (0+255),w,b
  7000  00099E  B4D8               	btfsc	status,2,c
  7001  0009A0  0012               	return	
  7002  0009A2  D72A               	goto	i1l346
  7003  0009A4                     __end_ofi1_printf:
  7004                           	opt stack 0
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon2	equ	0xFF1
  7015                           intcon3	equ	0xFF0
  7016                           postinc0	equ	0xFEE
  7017                           fsr0h	equ	0xFEA
  7018                           fsr0l	equ	0xFE9
  7019                           wreg	equ	0xFE8
  7020                           postinc1	equ	0xFE6
  7021                           postdec1	equ	0xFE5
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           bsr	equ	0xFE0
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function i1_putch *****************
  7033 ;; Defined at:
  7034 ;;		line 99 in file "Lab7.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  data            1    wreg     unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  data            1    0[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7048 ;;      Params:         0       0       0       0       0       0       0
  7049 ;;      Locals:         0       1       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0
  7051 ;;      Totals:         0       1       0       0       0       0       0
  7052 ;;Total ram usage:        1 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		i1_printf
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text19
  7063  001DA6                     __ptext19:
  7064                           	opt stack 0
  7065  001DA6                     i1_putch:
  7066                           	opt stack 19
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;incstack = 0
  7070                           ;i1putch@data stored from wreg
  7071  001DA6  0100               	movlb	0	; () banked
  7072  001DA8  6F80               	movwf	i1putch@data& (0+255),b
  7073  001DAA                     
  7074                           ;Lab7.c: 102: continue;
  7075                           
  7076                           ;Lab7.c: 101: while(!PIR1bits.TXIF)
  7077  001DAA  A89E               	btfss	3998,4,c	;volatile
  7078  001DAC  D7FE               	goto	i1l3839
  7079                           
  7080                           ;Lab7.c: 103: TXREG = data;
  7081  001DAE  C080  FFAD         	movff	i1putch@data,4013	;volatile
  7082  001DB2  0012               	return		;funcret
  7083  001DB4                     __end_ofi1_putch:
  7084                           	opt stack 0
  7085                           pclatu	equ	0xFFB
  7086                           pclath	equ	0xFFA
  7087                           tblptru	equ	0xFF8
  7088                           tblptrh	equ	0xFF7
  7089                           tblptrl	equ	0xFF6
  7090                           tablat	equ	0xFF5
  7091                           prodh	equ	0xFF4
  7092                           prodl	equ	0xFF3
  7093                           intcon	equ	0xFF2
  7094                           intcon2	equ	0xFF1
  7095                           intcon3	equ	0xFF0
  7096                           postinc0	equ	0xFEE
  7097                           fsr0h	equ	0xFEA
  7098                           fsr0l	equ	0xFE9
  7099                           wreg	equ	0xFE8
  7100                           postinc1	equ	0xFE6
  7101                           postdec1	equ	0xFE5
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           bsr	equ	0xFE0
  7105                           indf2	equ	0xFDF
  7106                           postinc2	equ	0xFDE
  7107                           postdec2	equ	0xFDD
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112 ;; *************** function i1___llmod *****************
  7113 ;; Defined at:
  7114 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  dividend        4   13[BANK0 ] unsigned long 
  7117 ;;  divisor         4   17[BANK0 ] unsigned long 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  __llmod         1   21[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  4   13[BANK0 ] unsigned long 
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7129 ;;      Params:         0       8       0       0       0       0       0
  7130 ;;      Locals:         0       1       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0
  7132 ;;      Totals:         0       9       0       0       0       0       0
  7133 ;;Total ram usage:        9 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    4
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		i1_printf
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text20
  7144  001BA8                     __ptext20:
  7145                           	opt stack 0
  7146  001BA8                     i1___llmod:
  7147                           	opt stack 19
  7148                           
  7149                           ;incstack = 0
  7150  001BA8  0100               	movlb	0	; () banked
  7151  001BAA  5191               	movf	i1___llmod@divisor& (0+255),w,b
  7152  001BAC  1192               	iorwf	(i1___llmod@divisor+1)& (0+255),w,b
  7153  001BAE  1193               	iorwf	(i1___llmod@divisor+2)& (0+255),w,b
  7154  001BB0  1194               	iorwf	(i1___llmod@divisor+3)& (0+255),w,b
  7155  001BB2  B4D8               	btfsc	status,2,c
  7156  001BB4  D024               	goto	i1l734
  7157                           
  7158                           ; BSR set to: 0
  7159  001BB6  0E01               	movlw	1
  7160  001BB8  6F95               	movwf	i1___llmod@counter& (0+255),b
  7161  001BBA  D006               	goto	i1l729
  7162  001BBC                     
  7163                           ; BSR set to: 0
  7164                           
  7165                           ; BSR set to: 0
  7166  001BBC  90D8               	bcf	status,0,c
  7167  001BBE  3791               	rlcf	i1___llmod@divisor& (0+255),f,b
  7168  001BC0  3792               	rlcf	(i1___llmod@divisor+1)& (0+255),f,b
  7169  001BC2  3793               	rlcf	(i1___llmod@divisor+2)& (0+255),f,b
  7170  001BC4  3794               	rlcf	(i1___llmod@divisor+3)& (0+255),f,b
  7171  001BC6  2B95               	incf	i1___llmod@counter& (0+255),f,b
  7172  001BC8                     i1l729:
  7173                           
  7174                           ; BSR set to: 0
  7175                           
  7176                           ; BSR set to: 0
  7177  001BC8  AF94               	btfss	(i1___llmod@divisor+3)& (0+255),7,b
  7178  001BCA  D7F8               	goto	i1l730
  7179  001BCC                     i1u308_20:
  7180                           
  7181                           ; BSR set to: 0
  7182                           
  7183                           ; BSR set to: 0
  7184                           
  7185                           ; BSR set to: 0
  7186  001BCC  5191               	movf	i1___llmod@divisor& (0+255),w,b
  7187  001BCE  5D8D               	subwf	i1___llmod@dividend& (0+255),w,b
  7188  001BD0  5192               	movf	(i1___llmod@divisor+1)& (0+255),w,b
  7189  001BD2  598E               	subwfb	(i1___llmod@dividend+1)& (0+255),w,b
  7190  001BD4  5193               	movf	(i1___llmod@divisor+2)& (0+255),w,b
  7191  001BD6  598F               	subwfb	(i1___llmod@dividend+2)& (0+255),w,b
  7192  001BD8  5194               	movf	(i1___llmod@divisor+3)& (0+255),w,b
  7193  001BDA  5990               	subwfb	(i1___llmod@dividend+3)& (0+255),w,b
  7194  001BDC  A0D8               	btfss	status,0,c
  7195  001BDE  D008               	goto	i1l733
  7196                           
  7197                           ; BSR set to: 0
  7198  001BE0  5191               	movf	i1___llmod@divisor& (0+255),w,b
  7199  001BE2  5F8D               	subwf	i1___llmod@dividend& (0+255),f,b
  7200  001BE4  5192               	movf	(i1___llmod@divisor+1)& (0+255),w,b
  7201  001BE6  5B8E               	subwfb	(i1___llmod@dividend+1)& (0+255),f,b
  7202  001BE8  5193               	movf	(i1___llmod@divisor+2)& (0+255),w,b
  7203  001BEA  5B8F               	subwfb	(i1___llmod@dividend+2)& (0+255),f,b
  7204  001BEC  5194               	movf	(i1___llmod@divisor+3)& (0+255),w,b
  7205  001BEE  5B90               	subwfb	(i1___llmod@dividend+3)& (0+255),f,b
  7206  001BF0                     i1l733:
  7207                           
  7208                           ; BSR set to: 0
  7209                           
  7210                           ; BSR set to: 0
  7211  001BF0  90D8               	bcf	status,0,c
  7212  001BF2  3394               	rrcf	(i1___llmod@divisor+3)& (0+255),f,b
  7213  001BF4  3393               	rrcf	(i1___llmod@divisor+2)& (0+255),f,b
  7214  001BF6  3392               	rrcf	(i1___llmod@divisor+1)& (0+255),f,b
  7215  001BF8  3391               	rrcf	i1___llmod@divisor& (0+255),f,b
  7216                           
  7217                           ; BSR set to: 0
  7218  001BFA  2F95               	decfsz	i1___llmod@counter& (0+255),f,b
  7219  001BFC  D7E7               	goto	i1u308_20
  7220  001BFE                     i1l734:
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225  001BFE  C08D  F08D         	movff	i1___llmod@dividend,?i1___llmod
  7226  001C02  C08E  F08E         	movff	i1___llmod@dividend+1,?i1___llmod+1
  7227  001C06  C08F  F08F         	movff	i1___llmod@dividend+2,?i1___llmod+2
  7228  001C0A  C090  F090         	movff	i1___llmod@dividend+3,?i1___llmod+3
  7229                           
  7230                           ; BSR set to: 0
  7231  001C0E  0012               	return		;funcret
  7232  001C10                     __end_ofi1___llmod:
  7233                           	opt stack 0
  7234                           pclatu	equ	0xFFB
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           intcon2	equ	0xFF1
  7244                           intcon3	equ	0xFF0
  7245                           postinc0	equ	0xFEE
  7246                           fsr0h	equ	0xFEA
  7247                           fsr0l	equ	0xFE9
  7248                           wreg	equ	0xFE8
  7249                           postinc1	equ	0xFE6
  7250                           postdec1	equ	0xFE5
  7251                           fsr1h	equ	0xFE2
  7252                           fsr1l	equ	0xFE1
  7253                           bsr	equ	0xFE0
  7254                           indf2	equ	0xFDF
  7255                           postinc2	equ	0xFDE
  7256                           postdec2	equ	0xFDD
  7257                           fsr2h	equ	0xFDA
  7258                           fsr2l	equ	0xFD9
  7259                           status	equ	0xFD8
  7260                           
  7261 ;; *************** function i1___lldiv *****************
  7262 ;; Defined at:
  7263 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  dividend        4    0[BANK0 ] unsigned long 
  7266 ;;  divisor         4    4[BANK0 ] unsigned long 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  __lldiv         4    8[BANK0 ] unsigned long 
  7269 ;;  __lldiv         1   12[BANK0 ] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  4    0[BANK0 ] unsigned long 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7279 ;;      Params:         0       8       0       0       0       0       0
  7280 ;;      Locals:         0       5       0       0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0
  7282 ;;      Totals:         0      13       0       0       0       0       0
  7283 ;;Total ram usage:       13 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    4
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		i1_printf
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text21
  7294  001846                     __ptext21:
  7295                           	opt stack 0
  7296  001846                     i1___lldiv:
  7297                           	opt stack 19
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;incstack = 0
  7301  001846  0E00               	movlw	0
  7302  001848  0100               	movlb	0	; () banked
  7303  00184A  6F88               	movwf	i1___lldiv@quotient& (0+255),b
  7304  00184C  0E00               	movlw	0
  7305  00184E  6F89               	movwf	(i1___lldiv@quotient+1)& (0+255),b
  7306  001850  0E00               	movlw	0
  7307  001852  6F8A               	movwf	(i1___lldiv@quotient+2)& (0+255),b
  7308  001854  0E00               	movlw	0
  7309  001856  6F8B               	movwf	(i1___lldiv@quotient+3)& (0+255),b
  7310                           
  7311                           ; BSR set to: 0
  7312  001858  5184               	movf	i1___lldiv@divisor& (0+255),w,b
  7313  00185A  1185               	iorwf	(i1___lldiv@divisor+1)& (0+255),w,b
  7314  00185C  1186               	iorwf	(i1___lldiv@divisor+2)& (0+255),w,b
  7315  00185E  1187               	iorwf	(i1___lldiv@divisor+3)& (0+255),w,b
  7316  001860  B4D8               	btfsc	status,2,c
  7317  001862  D02A               	goto	i1l724
  7318                           
  7319                           ; BSR set to: 0
  7320  001864  0E01               	movlw	1
  7321  001866  6F8C               	movwf	i1___lldiv@counter& (0+255),b
  7322  001868  D006               	goto	i1l719
  7323  00186A                     
  7324                           ; BSR set to: 0
  7325                           
  7326                           ; BSR set to: 0
  7327  00186A  90D8               	bcf	status,0,c
  7328  00186C  3784               	rlcf	i1___lldiv@divisor& (0+255),f,b
  7329  00186E  3785               	rlcf	(i1___lldiv@divisor+1)& (0+255),f,b
  7330  001870  3786               	rlcf	(i1___lldiv@divisor+2)& (0+255),f,b
  7331  001872  3787               	rlcf	(i1___lldiv@divisor+3)& (0+255),f,b
  7332  001874  2B8C               	incf	i1___lldiv@counter& (0+255),f,b
  7333  001876                     i1l719:
  7334                           
  7335                           ; BSR set to: 0
  7336                           
  7337                           ; BSR set to: 0
  7338  001876  AF87               	btfss	(i1___lldiv@divisor+3)& (0+255),7,b
  7339  001878  D7F8               	goto	i1l720
  7340  00187A                     i1u305_20:
  7341                           
  7342                           ; BSR set to: 0
  7343                           
  7344                           ; BSR set to: 0
  7345                           
  7346                           ; BSR set to: 0
  7347  00187A  90D8               	bcf	status,0,c
  7348  00187C  3788               	rlcf	i1___lldiv@quotient& (0+255),f,b
  7349  00187E  3789               	rlcf	(i1___lldiv@quotient+1)& (0+255),f,b
  7350  001880  378A               	rlcf	(i1___lldiv@quotient+2)& (0+255),f,b
  7351  001882  378B               	rlcf	(i1___lldiv@quotient+3)& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354  001884  5184               	movf	i1___lldiv@divisor& (0+255),w,b
  7355  001886  5D80               	subwf	i1___lldiv@dividend& (0+255),w,b
  7356  001888  5185               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
  7357  00188A  5981               	subwfb	(i1___lldiv@dividend+1)& (0+255),w,b
  7358  00188C  5186               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
  7359  00188E  5982               	subwfb	(i1___lldiv@dividend+2)& (0+255),w,b
  7360  001890  5187               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
  7361  001892  5983               	subwfb	(i1___lldiv@dividend+3)& (0+255),w,b
  7362  001894  A0D8               	btfss	status,0,c
  7363  001896  D009               	goto	i1l723
  7364                           
  7365                           ; BSR set to: 0
  7366  001898  5184               	movf	i1___lldiv@divisor& (0+255),w,b
  7367  00189A  5F80               	subwf	i1___lldiv@dividend& (0+255),f,b
  7368  00189C  5185               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
  7369  00189E  5B81               	subwfb	(i1___lldiv@dividend+1)& (0+255),f,b
  7370  0018A0  5186               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
  7371  0018A2  5B82               	subwfb	(i1___lldiv@dividend+2)& (0+255),f,b
  7372  0018A4  5187               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
  7373  0018A6  5B83               	subwfb	(i1___lldiv@dividend+3)& (0+255),f,b
  7374                           
  7375                           ; BSR set to: 0
  7376  0018A8  8188               	bsf	i1___lldiv@quotient& (0+255),0,b
  7377  0018AA                     i1l723:
  7378                           
  7379                           ; BSR set to: 0
  7380                           
  7381                           ; BSR set to: 0
  7382  0018AA  90D8               	bcf	status,0,c
  7383  0018AC  3387               	rrcf	(i1___lldiv@divisor+3)& (0+255),f,b
  7384  0018AE  3386               	rrcf	(i1___lldiv@divisor+2)& (0+255),f,b
  7385  0018B0  3385               	rrcf	(i1___lldiv@divisor+1)& (0+255),f,b
  7386  0018B2  3384               	rrcf	i1___lldiv@divisor& (0+255),f,b
  7387                           
  7388                           ; BSR set to: 0
  7389  0018B4  2F8C               	decfsz	i1___lldiv@counter& (0+255),f,b
  7390  0018B6  D7E1               	goto	i1u305_20
  7391  0018B8                     i1l724:
  7392                           
  7393                           ; BSR set to: 0
  7394                           
  7395                           ; BSR set to: 0
  7396  0018B8  C088  F080         	movff	i1___lldiv@quotient,?i1___lldiv
  7397  0018BC  C089  F081         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
  7398  0018C0  C08A  F082         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
  7399  0018C4  C08B  F083         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
  7400                           
  7401                           ; BSR set to: 0
  7402  0018C8  0012               	return		;funcret
  7403  0018CA                     __end_ofi1___lldiv:
  7404                           	opt stack 0
  7405                           pclatu	equ	0xFFB
  7406                           pclath	equ	0xFFA
  7407                           tblptru	equ	0xFF8
  7408                           tblptrh	equ	0xFF7
  7409                           tblptrl	equ	0xFF6
  7410                           tablat	equ	0xFF5
  7411                           prodh	equ	0xFF4
  7412                           prodl	equ	0xFF3
  7413                           intcon	equ	0xFF2
  7414                           intcon2	equ	0xFF1
  7415                           intcon3	equ	0xFF0
  7416                           postinc0	equ	0xFEE
  7417                           fsr0h	equ	0xFEA
  7418                           fsr0l	equ	0xFE9
  7419                           wreg	equ	0xFE8
  7420                           postinc1	equ	0xFE6
  7421                           postdec1	equ	0xFE5
  7422                           fsr1h	equ	0xFE2
  7423                           fsr1l	equ	0xFE1
  7424                           bsr	equ	0xFE0
  7425                           indf2	equ	0xFDF
  7426                           postinc2	equ	0xFDE
  7427                           postdec2	equ	0xFDD
  7428                           fsr2h	equ	0xFDA
  7429                           fsr2l	equ	0xFD9
  7430                           status	equ	0xFD8
  7431                           
  7432 ;; *************** function _ADC *****************
  7433 ;; Defined at:
  7434 ;;		line 168 in file "Lab7.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7448 ;;      Params:         0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0
  7450 ;;      Temps:          0       4       0       0       0       0       0
  7451 ;;      Totals:         0       4       0       0       0       0       0
  7452 ;;Total ram usage:        4 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    6
  7455 ;; This function calls:
  7456 ;;		___aldiv
  7457 ;;		___altoft
  7458 ;;		___ftmul
  7459 ;;		___fttol
  7460 ;;		___lmul
  7461 ;; This function is called by:
  7462 ;;		_temp_sensor
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text22
  7467  000F68                     __ptext22:
  7468                           	opt stack 0
  7469  000F68                     _ADC:
  7470                           	opt stack 18
  7471                           
  7472                           ;Lab7.c: 170: adLow = ADRESL;
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;incstack = 0
  7476  000F68  50C3               	movf	4035,w,c	;volatile
  7477  000F6A  6E41               	movwf	_adLow,c
  7478  000F6C  6A42               	clrf	_adLow+1,c
  7479  000F6E  6A43               	clrf	_adLow+2,c
  7480  000F70  6A44               	clrf	_adLow+3,c
  7481                           
  7482                           ;Lab7.c: 171: adHigh = ADRESH;
  7483  000F72  50C4               	movf	4036,w,c	;volatile
  7484  000F74  6E3D               	movwf	_adHigh,c
  7485  000F76  6A3E               	clrf	_adHigh+1,c
  7486  000F78  6A3F               	clrf	_adHigh+2,c
  7487  000F7A  6A40               	clrf	_adHigh+3,c
  7488                           
  7489                           ;Lab7.c: 172: adHigh = adHigh << 8;
  7490  000F7C  C03D  F0B1         	movff	_adHigh,??_ADC+1
  7491  000F80  C03E  F0B2         	movff	_adHigh+1,??_ADC+2
  7492  000F84  C03F  F0B3         	movff	_adHigh+2,??_ADC+3
  7493  000F88  0100               	movlb	0	; () banked
  7494  000F8A  6BB0               	clrf	??_ADC& (0+255),b
  7495  000F8C  C0B0  F03D         	movff	??_ADC,_adHigh
  7496  000F90  C0B1  F03E         	movff	??_ADC+1,_adHigh+1
  7497  000F94  C0B2  F03F         	movff	??_ADC+2,_adHigh+2
  7498  000F98  C0B3  F040         	movff	??_ADC+3,_adHigh+3
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;Lab7.c: 173: decimal = adLow + adHigh;
  7502  000F9C  503D               	movf	_adHigh,w,c
  7503  000F9E  2441               	addwf	_adLow,w,c
  7504  000FA0  6E39               	movwf	_decimal,c
  7505  000FA2  503E               	movf	_adHigh+1,w,c
  7506  000FA4  2042               	addwfc	_adLow+1,w,c
  7507  000FA6  6E3A               	movwf	_decimal+1,c
  7508  000FA8  503F               	movf	_adHigh+2,w,c
  7509  000FAA  2043               	addwfc	_adLow+2,w,c
  7510  000FAC  6E3B               	movwf	_decimal+2,c
  7511  000FAE  5040               	movf	_adHigh+3,w,c
  7512  000FB0  2044               	addwfc	_adLow+3,w,c
  7513  000FB2  6E3C               	movwf	_decimal+3,c
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;Lab7.c: 174: voltage = decimal*500;
  7517  000FB4  C039  F080         	movff	_decimal,___lmul@multiplier
  7518  000FB8  C03A  F081         	movff	_decimal+1,___lmul@multiplier+1
  7519  000FBC  C03B  F082         	movff	_decimal+2,___lmul@multiplier+2
  7520  000FC0  C03C  F083         	movff	_decimal+3,___lmul@multiplier+3
  7521  000FC4  0EF4               	movlw	244
  7522  000FC6  6F84               	movwf	___lmul@multiplicand& (0+255),b
  7523  000FC8  0E01               	movlw	1
  7524  000FCA  6F85               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7525  000FCC  0E00               	movlw	0
  7526  000FCE  6F86               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7527  000FD0  0E00               	movlw	0
  7528  000FD2  6F87               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7529  000FD4  EC3B  F00E         	call	___lmul	;wreg free
  7530  000FD8  C080  F0D0         	movff	?___lmul,_voltage
  7531  000FDC  C081  F0D1         	movff	?___lmul+1,_voltage+1
  7532  000FE0  C082  F0D2         	movff	?___lmul+2,_voltage+2
  7533  000FE4  C083  F0D3         	movff	?___lmul+3,_voltage+3
  7534                           
  7535                           ;Lab7.c: 175: voltage = voltage/1023;
  7536  000FE8  C0D0  F080         	movff	_voltage,___aldiv@dividend
  7537  000FEC  C0D1  F081         	movff	_voltage+1,___aldiv@dividend+1
  7538  000FF0  C0D2  F082         	movff	_voltage+2,___aldiv@dividend+2
  7539  000FF4  C0D3  F083         	movff	_voltage+3,___aldiv@dividend+3
  7540  000FF8  0EFF               	movlw	255
  7541  000FFA  0100               	movlb	0	; () banked
  7542  000FFC  6F84               	movwf	___aldiv@divisor& (0+255),b
  7543  000FFE  0E03               	movlw	3
  7544  001000  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
  7545  001002  0E00               	movlw	0
  7546  001004  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
  7547  001006  0E00               	movlw	0
  7548  001008  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
  7549  00100A  EC36  F00A         	call	___aldiv	;wreg free
  7550  00100E  C080  F0D0         	movff	?___aldiv,_voltage
  7551  001012  C081  F0D1         	movff	?___aldiv+1,_voltage+1
  7552  001016  C082  F0D2         	movff	?___aldiv+2,_voltage+2
  7553  00101A  C083  F0D3         	movff	?___aldiv+3,_voltage+3
  7554                           
  7555                           ;Lab7.c: 176: voltage = voltage - 50;
  7556  00101E  0ECE               	movlw	206
  7557  001020  0100               	movlb	0	; () banked
  7558  001022  25D0               	addwf	_voltage& (0+255),w,b
  7559  001024  6FD0               	movwf	_voltage& (0+255),b
  7560  001026  0EFF               	movlw	255
  7561  001028  21D1               	addwfc	(_voltage+1)& (0+255),w,b
  7562  00102A  6FD1               	movwf	(_voltage+1)& (0+255),b
  7563  00102C  0EFF               	movlw	255
  7564  00102E  21D2               	addwfc	(_voltage+2)& (0+255),w,b
  7565  001030  6FD2               	movwf	(_voltage+2)& (0+255),b
  7566  001032  0EFF               	movlw	255
  7567  001034  21D3               	addwfc	(_voltage+3)& (0+255),w,b
  7568  001036  6FD3               	movwf	(_voltage+3)& (0+255),b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;Lab7.c: 177: voltage = voltage*1.8;
  7572  001038  0E66               	movlw	102
  7573  00103A  6F95               	movwf	___ftmul@f2& (0+255),b
  7574  00103C  0EE6               	movlw	230
  7575  00103E  6F96               	movwf	(___ftmul@f2+1)& (0+255),b
  7576  001040  0E3F               	movlw	63
  7577  001042  6F97               	movwf	(___ftmul@f2+2)& (0+255),b
  7578  001044  C0D0  F088         	movff	_voltage,___altoft@c
  7579  001048  C0D1  F089         	movff	_voltage+1,___altoft@c+1
  7580  00104C  C0D2  F08A         	movff	_voltage+2,___altoft@c+2
  7581  001050  C0D3  F08B         	movff	_voltage+3,___altoft@c+3
  7582  001054  EC26  F00D         	call	___altoft	;wreg free
  7583  001058  C088  F092         	movff	?___altoft,___ftmul@f1
  7584  00105C  C089  F093         	movff	?___altoft+1,___ftmul@f1+1
  7585  001060  C08A  F094         	movff	?___altoft+2,___ftmul@f1+2
  7586  001064  EC52  F009         	call	___ftmul	;wreg free
  7587  001068  C092  F0A1         	movff	?___ftmul,___fttol@f1
  7588  00106C  C093  F0A2         	movff	?___ftmul+1,___fttol@f1+1
  7589  001070  C094  F0A3         	movff	?___ftmul+2,___fttol@f1+2
  7590  001074  ECD6  F008         	call	___fttol	;wreg free
  7591  001078  C0A1  F0D0         	movff	?___fttol,_voltage
  7592  00107C  C0A2  F0D1         	movff	?___fttol+1,_voltage+1
  7593  001080  C0A3  F0D2         	movff	?___fttol+2,_voltage+2
  7594  001084  C0A4  F0D3         	movff	?___fttol+3,_voltage+3
  7595                           
  7596                           ;Lab7.c: 178: voltage += 32;
  7597  001088  0E20               	movlw	32
  7598  00108A  0100               	movlb	0	; () banked
  7599  00108C  27D0               	addwf	_voltage& (0+255),f,b
  7600  00108E  0E00               	movlw	0
  7601  001090  23D1               	addwfc	(_voltage+1)& (0+255),f,b
  7602  001092  23D2               	addwfc	(_voltage+2)& (0+255),f,b
  7603  001094  23D3               	addwfc	(_voltage+3)& (0+255),f,b
  7604                           
  7605                           ; BSR set to: 0
  7606  001096  0012               	return		;funcret
  7607  001098                     __end_of_ADC:
  7608                           	opt stack 0
  7609                           pclatu	equ	0xFFB
  7610                           pclath	equ	0xFFA
  7611                           tblptru	equ	0xFF8
  7612                           tblptrh	equ	0xFF7
  7613                           tblptrl	equ	0xFF6
  7614                           tablat	equ	0xFF5
  7615                           prodh	equ	0xFF4
  7616                           prodl	equ	0xFF3
  7617                           intcon	equ	0xFF2
  7618                           intcon2	equ	0xFF1
  7619                           intcon3	equ	0xFF0
  7620                           postinc0	equ	0xFEE
  7621                           fsr0h	equ	0xFEA
  7622                           fsr0l	equ	0xFE9
  7623                           wreg	equ	0xFE8
  7624                           postinc1	equ	0xFE6
  7625                           postdec1	equ	0xFE5
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           bsr	equ	0xFE0
  7629                           indf2	equ	0xFDF
  7630                           postinc2	equ	0xFDE
  7631                           postdec2	equ	0xFDD
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function ___lmul *****************
  7637 ;; Defined at:
  7638 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7641 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  product         4    8[BANK0 ] unsigned long 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4    0[BANK0 ] unsigned long 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7653 ;;      Params:         0       8       0       0       0       0       0
  7654 ;;      Locals:         0       4       0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0
  7656 ;;      Totals:         0      12       0       0       0       0       0
  7657 ;;Total ram usage:       12 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    4
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_ADC
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text23
  7668  001C76                     __ptext23:
  7669                           	opt stack 0
  7670  001C76                     ___lmul:
  7671                           	opt stack 19
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;incstack = 0
  7675  001C76  0E00               	movlw	0
  7676  001C78  0100               	movlb	0	; () banked
  7677  001C7A  6F88               	movwf	___lmul@product& (0+255),b
  7678  001C7C  0E00               	movlw	0
  7679  001C7E  6F89               	movwf	(___lmul@product+1)& (0+255),b
  7680  001C80  0E00               	movlw	0
  7681  001C82  6F8A               	movwf	(___lmul@product+2)& (0+255),b
  7682  001C84  0E00               	movlw	0
  7683  001C86  6F8B               	movwf	(___lmul@product+3)& (0+255),b
  7684  001C88                     
  7685                           ; BSR set to: 0
  7686                           
  7687                           ; BSR set to: 0
  7688  001C88  A180               	btfss	___lmul@multiplier& (0+255),0,b
  7689  001C8A  D008               	goto	i1l381
  7690                           
  7691                           ; BSR set to: 0
  7692  001C8C  5184               	movf	___lmul@multiplicand& (0+255),w,b
  7693  001C8E  2788               	addwf	___lmul@product& (0+255),f,b
  7694  001C90  5185               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7695  001C92  2389               	addwfc	(___lmul@product+1)& (0+255),f,b
  7696  001C94  5186               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7697  001C96  238A               	addwfc	(___lmul@product+2)& (0+255),f,b
  7698  001C98  5187               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7699  001C9A  238B               	addwfc	(___lmul@product+3)& (0+255),f,b
  7700  001C9C                     i1l381:
  7701                           
  7702                           ; BSR set to: 0
  7703                           
  7704                           ; BSR set to: 0
  7705  001C9C  90D8               	bcf	status,0,c
  7706  001C9E  3784               	rlcf	___lmul@multiplicand& (0+255),f,b
  7707  001CA0  3785               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7708  001CA2  3786               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7709  001CA4  3787               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7710                           
  7711                           ; BSR set to: 0
  7712  001CA6  90D8               	bcf	status,0,c
  7713  001CA8  3383               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7714  001CAA  3382               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7715  001CAC  3381               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7716  001CAE  3380               	rrcf	___lmul@multiplier& (0+255),f,b
  7717  001CB0  5180               	movf	___lmul@multiplier& (0+255),w,b
  7718  001CB2  1181               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7719  001CB4  1182               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7720  001CB6  1183               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7721  001CB8  A4D8               	btfss	status,2,c
  7722  001CBA  D7E6               	goto	i1l380
  7723                           
  7724                           ; BSR set to: 0
  7725  001CBC  C088  F080         	movff	___lmul@product,?___lmul
  7726  001CC0  C089  F081         	movff	___lmul@product+1,?___lmul+1
  7727  001CC4  C08A  F082         	movff	___lmul@product+2,?___lmul+2
  7728  001CC8  C08B  F083         	movff	___lmul@product+3,?___lmul+3
  7729                           
  7730                           ; BSR set to: 0
  7731  001CCC  0012               	return		;funcret
  7732  001CCE                     __end_of___lmul:
  7733                           	opt stack 0
  7734                           pclatu	equ	0xFFB
  7735                           pclath	equ	0xFFA
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           intcon2	equ	0xFF1
  7744                           intcon3	equ	0xFF0
  7745                           postinc0	equ	0xFEE
  7746                           fsr0h	equ	0xFEA
  7747                           fsr0l	equ	0xFE9
  7748                           wreg	equ	0xFE8
  7749                           postinc1	equ	0xFE6
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           bsr	equ	0xFE0
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           fsr2h	equ	0xFDA
  7758                           fsr2l	equ	0xFD9
  7759                           status	equ	0xFD8
  7760                           
  7761 ;; *************** function ___fttol *****************
  7762 ;; Defined at:
  7763 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  f1              3   33[BANK0 ] float 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  lval            4   43[BANK0 ] unsigned long 
  7768 ;;  exp1            1   47[BANK0 ] unsigned char 
  7769 ;;  sign1           1   42[BANK0 ] unsigned char 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  4   33[BANK0 ] long 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7779 ;;      Params:         0       4       0       0       0       0       0
  7780 ;;      Locals:         0       6       0       0       0       0       0
  7781 ;;      Temps:          0       5       0       0       0       0       0
  7782 ;;      Totals:         0      15       0       0       0       0       0
  7783 ;;Total ram usage:       15 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    4
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_ADC
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text24
  7794  0011AC                     __ptext24:
  7795                           	opt stack 0
  7796  0011AC                     ___fttol:
  7797                           	opt stack 19
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;incstack = 0
  7801  0011AC  C0A3  F0A5         	movff	___fttol@f1+2,??___fttol
  7802  0011B0  0100               	movlb	0	; () banked
  7803  0011B2  6BA6               	clrf	(??___fttol+1)& (0+255),b
  7804  0011B4  6BA7               	clrf	(??___fttol+2)& (0+255),b
  7805  0011B6  35A2               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7806  0011B8  37A5               	rlcf	??___fttol& (0+255),f,b
  7807  0011BA  E301               	bnc	u212_21
  7808  0011BC  81A6               	bsf	(??___fttol+1)& (0+255),0,b
  7809  0011BE                     u212_21:
  7810  0011BE  51A5               	movf	??___fttol& (0+255),w,b
  7811  0011C0  6FAF               	movwf	___fttol@exp1& (0+255),b
  7812  0011C2  51AF               	movf	___fttol@exp1& (0+255),w,b
  7813  0011C4  A4D8               	btfss	status,2,c
  7814  0011C6  D009               	goto	i1l683
  7815                           
  7816                           ; BSR set to: 0
  7817  0011C8  0E00               	movlw	0
  7818  0011CA  6FA1               	movwf	?___fttol& (0+255),b
  7819  0011CC  0E00               	movlw	0
  7820  0011CE  6FA2               	movwf	(?___fttol+1)& (0+255),b
  7821  0011D0  0E00               	movlw	0
  7822  0011D2  6FA3               	movwf	(?___fttol+2)& (0+255),b
  7823  0011D4  0E00               	movlw	0
  7824  0011D6  6FA4               	movwf	(?___fttol+3)& (0+255),b
  7825                           
  7826                           ; BSR set to: 0
  7827  0011D8  0012               	return	
  7828  0011DA                     i1l683:
  7829                           
  7830                           ; BSR set to: 0
  7831                           
  7832                           ; BSR set to: 0
  7833  0011DA  0E17               	movlw	23
  7834  0011DC  6FA5               	movwf	??___fttol& (0+255),b
  7835  0011DE  C0A1  F0A6         	movff	___fttol@f1,??___fttol+1
  7836  0011E2  C0A2  F0A7         	movff	___fttol@f1+1,??___fttol+2
  7837  0011E6  C0A3  F0A8         	movff	___fttol@f1+2,??___fttol+3
  7838  0011EA  29A5               	incf	??___fttol& (0+255),w,b
  7839  0011EC  6FA9               	movwf	(??___fttol+4)& (0+255),b
  7840  0011EE  D004               	goto	i1u214_20
  7841  0011F0                     i1u214_25:
  7842  0011F0  90D8               	bcf	status,0,c
  7843  0011F2  33A8               	rrcf	(??___fttol+3)& (0+255),f,b
  7844  0011F4  33A7               	rrcf	(??___fttol+2)& (0+255),f,b
  7845  0011F6  33A6               	rrcf	(??___fttol+1)& (0+255),f,b
  7846  0011F8                     i1u214_20:
  7847  0011F8  2FA9               	decfsz	(??___fttol+4)& (0+255),f,b
  7848  0011FA  D7FA               	goto	i1u214_25
  7849  0011FC  0100               	movlb	0	; () banked
  7850  0011FE  51A6               	movf	(??___fttol+1)& (0+255),w,b
  7851  001200  6FAA               	movwf	___fttol@sign1& (0+255),b
  7852                           
  7853                           ; BSR set to: 0
  7854  001202  8FA2               	bsf	(___fttol@f1+1)& (0+255),7,b
  7855                           
  7856                           ; BSR set to: 0
  7857  001204  0EFF               	movlw	255
  7858  001206  17A1               	andwf	___fttol@f1& (0+255),f,b
  7859  001208  0EFF               	movlw	255
  7860  00120A  17A2               	andwf	(___fttol@f1+1)& (0+255),f,b
  7861  00120C  0E00               	movlw	0
  7862  00120E  17A3               	andwf	(___fttol@f1+2)& (0+255),f,b
  7863                           
  7864                           ; BSR set to: 0
  7865  001210  51A1               	movf	___fttol@f1& (0+255),w,b
  7866  001212  6FAB               	movwf	___fttol@lval& (0+255),b
  7867  001214  51A2               	movf	(___fttol@f1+1)& (0+255),w,b
  7868  001216  6FAC               	movwf	(___fttol@lval+1)& (0+255),b
  7869  001218  51A3               	movf	(___fttol@f1+2)& (0+255),w,b
  7870  00121A  6FAD               	movwf	(___fttol@lval+2)& (0+255),b
  7871  00121C  6BAE               	clrf	(___fttol@lval+3)& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874  00121E  0E8E               	movlw	142
  7875  001220  5FAF               	subwf	___fttol@exp1& (0+255),f,b
  7876                           
  7877                           ; BSR set to: 0
  7878  001222  AFAF               	btfss	___fttol@exp1& (0+255),7,b
  7879  001224  D016               	goto	i1l685
  7880                           
  7881                           ; BSR set to: 0
  7882  001226  51AF               	movf	___fttol@exp1& (0+255),w,b
  7883  001228  0A80               	xorlw	128
  7884  00122A  0F8F               	addlw	143
  7885  00122C  B0D8               	btfsc	status,0,c
  7886  00122E  D009               	goto	i1l686
  7887                           
  7888                           ; BSR set to: 0
  7889  001230  0E00               	movlw	0
  7890  001232  6FA1               	movwf	?___fttol& (0+255),b
  7891  001234  0E00               	movlw	0
  7892  001236  6FA2               	movwf	(?___fttol+1)& (0+255),b
  7893  001238  0E00               	movlw	0
  7894  00123A  6FA3               	movwf	(?___fttol+2)& (0+255),b
  7895  00123C  0E00               	movlw	0
  7896  00123E  6FA4               	movwf	(?___fttol+3)& (0+255),b
  7897                           
  7898                           ; BSR set to: 0
  7899  001240  0012               	return	
  7900  001242                     i1l686:
  7901                           
  7902                           ; BSR set to: 0
  7903                           
  7904                           ; BSR set to: 0
  7905                           
  7906                           ; BSR set to: 0
  7907  001242  90D8               	bcf	status,0,c
  7908  001244  33AE               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7909  001246  33AD               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7910  001248  33AC               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7911  00124A  33AB               	rrcf	___fttol@lval& (0+255),f,b
  7912                           
  7913                           ; BSR set to: 0
  7914  00124C  3FAF               	incfsz	___fttol@exp1& (0+255),f,b
  7915  00124E  D7F9               	goto	i1l686
  7916                           
  7917                           ; BSR set to: 0
  7918  001250  D015               	goto	i1u218_20
  7919  001252                     i1l685:
  7920                           
  7921                           ; BSR set to: 0
  7922                           
  7923                           ; BSR set to: 0
  7924  001252  0E17               	movlw	23
  7925  001254  65AF               	cpfsgt	___fttol@exp1& (0+255),b
  7926  001256  D00F               	goto	i1l691
  7927                           
  7928                           ; BSR set to: 0
  7929  001258  0E00               	movlw	0
  7930  00125A  6FA1               	movwf	?___fttol& (0+255),b
  7931  00125C  0E00               	movlw	0
  7932  00125E  6FA2               	movwf	(?___fttol+1)& (0+255),b
  7933  001260  0E00               	movlw	0
  7934  001262  6FA3               	movwf	(?___fttol+2)& (0+255),b
  7935  001264  0E00               	movlw	0
  7936  001266  6FA4               	movwf	(?___fttol+3)& (0+255),b
  7937                           
  7938                           ; BSR set to: 0
  7939  001268  0012               	return	
  7940  00126A                     
  7941                           ; BSR set to: 0
  7942                           
  7943                           ; BSR set to: 0
  7944  00126A  90D8               	bcf	status,0,c
  7945  00126C  37AB               	rlcf	___fttol@lval& (0+255),f,b
  7946  00126E  37AC               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7947  001270  37AD               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7948  001272  37AE               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7949  001274  07AF               	decf	___fttol@exp1& (0+255),f,b
  7950  001276                     i1l691:
  7951                           
  7952                           ; BSR set to: 0
  7953                           
  7954                           ; BSR set to: 0
  7955  001276  51AF               	movf	___fttol@exp1& (0+255),w,b
  7956  001278  A4D8               	btfss	status,2,c
  7957  00127A  D7F7               	goto	i1l692
  7958  00127C                     i1u218_20:
  7959                           
  7960                           ; BSR set to: 0
  7961                           
  7962                           ; BSR set to: 0
  7963                           
  7964                           ; BSR set to: 0
  7965  00127C  51AA               	movf	___fttol@sign1& (0+255),w,b
  7966  00127E  B4D8               	btfsc	status,2,c
  7967  001280  D008               	goto	i1l694
  7968                           
  7969                           ; BSR set to: 0
  7970  001282  1FAE               	comf	(___fttol@lval+3)& (0+255),f,b
  7971  001284  1FAD               	comf	(___fttol@lval+2)& (0+255),f,b
  7972  001286  1FAC               	comf	(___fttol@lval+1)& (0+255),f,b
  7973  001288  6DAB               	negf	___fttol@lval& (0+255),b
  7974  00128A  0E00               	movlw	0
  7975  00128C  23AC               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7976  00128E  23AD               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7977  001290  23AE               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7978  001292                     i1l694:
  7979                           
  7980                           ; BSR set to: 0
  7981                           
  7982                           ; BSR set to: 0
  7983  001292  C0AB  F0A1         	movff	___fttol@lval,?___fttol
  7984  001296  C0AC  F0A2         	movff	___fttol@lval+1,?___fttol+1
  7985  00129A  C0AD  F0A3         	movff	___fttol@lval+2,?___fttol+2
  7986  00129E  C0AE  F0A4         	movff	___fttol@lval+3,?___fttol+3
  7987  0012A2  0012               	return	
  7988  0012A4                     __end_of___fttol:
  7989                           	opt stack 0
  7990                           pclatu	equ	0xFFB
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           intcon2	equ	0xFF1
  8000                           intcon3	equ	0xFF0
  8001                           postinc0	equ	0xFEE
  8002                           fsr0h	equ	0xFEA
  8003                           fsr0l	equ	0xFE9
  8004                           wreg	equ	0xFE8
  8005                           postinc1	equ	0xFE6
  8006                           postdec1	equ	0xFE5
  8007                           fsr1h	equ	0xFE2
  8008                           fsr1l	equ	0xFE1
  8009                           bsr	equ	0xFE0
  8010                           indf2	equ	0xFDF
  8011                           postinc2	equ	0xFDE
  8012                           postdec2	equ	0xFDD
  8013                           fsr2h	equ	0xFDA
  8014                           fsr2l	equ	0xFD9
  8015                           status	equ	0xFD8
  8016                           
  8017 ;; *************** function ___ftmul *****************
  8018 ;; Defined at:
  8019 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  f1              3   18[BANK0 ] float 
  8022 ;;  f2              3   21[BANK0 ] float 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  8025 ;;  sign            1   32[BANK0 ] unsigned char 
  8026 ;;  cntr            1   31[BANK0 ] unsigned char 
  8027 ;;  exp             1   27[BANK0 ] unsigned char 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  3   18[BANK0 ] float 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8037 ;;      Params:         0       6       0       0       0       0       0
  8038 ;;      Locals:         0       6       0       0       0       0       0
  8039 ;;      Temps:          0       3       0       0       0       0       0
  8040 ;;      Totals:         0      15       0       0       0       0       0
  8041 ;;Total ram usage:       15 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    5
  8044 ;; This function calls:
  8045 ;;		___ftpack
  8046 ;; This function is called by:
  8047 ;;		_ADC
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text25
  8052  0012A4                     __ptext25:
  8053                           	opt stack 0
  8054  0012A4                     ___ftmul:
  8055                           	opt stack 18
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;incstack = 0
  8059  0012A4  C094  F098         	movff	___ftmul@f1+2,??___ftmul
  8060  0012A8  0100               	movlb	0	; () banked
  8061  0012AA  6B99               	clrf	(??___ftmul+1)& (0+255),b
  8062  0012AC  6B9A               	clrf	(??___ftmul+2)& (0+255),b
  8063  0012AE  3593               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8064  0012B0  3798               	rlcf	??___ftmul& (0+255),f,b
  8065  0012B2  E301               	bnc	u320_21
  8066  0012B4  8199               	bsf	(??___ftmul+1)& (0+255),0,b
  8067  0012B6                     u320_21:
  8068  0012B6  5198               	movf	??___ftmul& (0+255),w,b
  8069  0012B8  6F9B               	movwf	___ftmul@exp& (0+255),b
  8070  0012BA  519B               	movf	___ftmul@exp& (0+255),w,b
  8071  0012BC  A4D8               	btfss	status,2,c
  8072  0012BE  D007               	goto	i1l662
  8073                           
  8074                           ; BSR set to: 0
  8075  0012C0  0E00               	movlw	0
  8076  0012C2  6F92               	movwf	?___ftmul& (0+255),b
  8077  0012C4  0E00               	movlw	0
  8078  0012C6  6F93               	movwf	(?___ftmul+1)& (0+255),b
  8079  0012C8  0E00               	movlw	0
  8080  0012CA  6F94               	movwf	(?___ftmul+2)& (0+255),b
  8081                           
  8082                           ; BSR set to: 0
  8083  0012CC  0012               	return	
  8084  0012CE                     i1l662:
  8085                           
  8086                           ; BSR set to: 0
  8087                           
  8088                           ; BSR set to: 0
  8089  0012CE  C097  F098         	movff	___ftmul@f2+2,??___ftmul
  8090  0012D2  6B99               	clrf	(??___ftmul+1)& (0+255),b
  8091  0012D4  6B9A               	clrf	(??___ftmul+2)& (0+255),b
  8092  0012D6  3596               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8093  0012D8  3798               	rlcf	??___ftmul& (0+255),f,b
  8094  0012DA  E301               	bnc	u322_21
  8095  0012DC  8199               	bsf	(??___ftmul+1)& (0+255),0,b
  8096  0012DE                     u322_21:
  8097  0012DE  5198               	movf	??___ftmul& (0+255),w,b
  8098  0012E0  6FA0               	movwf	___ftmul@sign& (0+255),b
  8099  0012E2  51A0               	movf	___ftmul@sign& (0+255),w,b
  8100  0012E4  A4D8               	btfss	status,2,c
  8101  0012E6  D007               	goto	i1l664
  8102                           
  8103                           ; BSR set to: 0
  8104  0012E8  0E00               	movlw	0
  8105  0012EA  6F92               	movwf	?___ftmul& (0+255),b
  8106  0012EC  0E00               	movlw	0
  8107  0012EE  6F93               	movwf	(?___ftmul+1)& (0+255),b
  8108  0012F0  0E00               	movlw	0
  8109  0012F2  6F94               	movwf	(?___ftmul+2)& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112  0012F4  0012               	return	
  8113  0012F6                     i1l664:
  8114                           
  8115                           ; BSR set to: 0
  8116                           
  8117                           ; BSR set to: 0
  8118  0012F6  51A0               	movf	___ftmul@sign& (0+255),w,b
  8119  0012F8  0F7B               	addlw	123
  8120  0012FA  279B               	addwf	___ftmul@exp& (0+255),f,b
  8121                           
  8122                           ; BSR set to: 0
  8123  0012FC  C094  F0A0         	movff	___ftmul@f1+2,___ftmul@sign
  8124  001300  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
  8125  001302  1BA0               	xorwf	___ftmul@sign& (0+255),f,b
  8126  001304  0E80               	movlw	128
  8127  001306  17A0               	andwf	___ftmul@sign& (0+255),f,b
  8128                           
  8129                           ; BSR set to: 0
  8130  001308  8F93               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8131                           
  8132                           ; BSR set to: 0
  8133  00130A  8F96               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8134                           
  8135                           ; BSR set to: 0
  8136  00130C  0EFF               	movlw	255
  8137  00130E  1795               	andwf	___ftmul@f2& (0+255),f,b
  8138  001310  0EFF               	movlw	255
  8139  001312  1796               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8140  001314  0E00               	movlw	0
  8141  001316  1797               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8142                           
  8143                           ; BSR set to: 0
  8144  001318  0E00               	movlw	0
  8145  00131A  6F9C               	movwf	___ftmul@f3_as_product& (0+255),b
  8146  00131C  0E00               	movlw	0
  8147  00131E  6F9D               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8148  001320  0E00               	movlw	0
  8149  001322  6F9E               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8150                           
  8151                           ; BSR set to: 0
  8152  001324  0E07               	movlw	7
  8153  001326  6F9F               	movwf	___ftmul@cntr& (0+255),b
  8154  001328                     
  8155                           ; BSR set to: 0
  8156                           
  8157                           ; BSR set to: 0
  8158  001328  A192               	btfss	___ftmul@f1& (0+255),0,b
  8159  00132A  D006               	goto	i1l666
  8160                           
  8161                           ; BSR set to: 0
  8162  00132C  5195               	movf	___ftmul@f2& (0+255),w,b
  8163  00132E  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8164  001330  5196               	movf	(___ftmul@f2+1)& (0+255),w,b
  8165  001332  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8166  001334  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
  8167  001336  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8168  001338                     i1l666:
  8169                           
  8170                           ; BSR set to: 0
  8171                           
  8172                           ; BSR set to: 0
  8173  001338  90D8               	bcf	status,0,c
  8174  00133A  3394               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8175  00133C  3393               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8176  00133E  3392               	rrcf	___ftmul@f1& (0+255),f,b
  8177  001340  90D8               	bcf	status,0,c
  8178  001342  3795               	rlcf	___ftmul@f2& (0+255),f,b
  8179  001344  3796               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8180  001346  3797               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8181                           
  8182                           ; BSR set to: 0
  8183  001348  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
  8184  00134A  D7EE               	goto	i1l665
  8185                           
  8186                           ; BSR set to: 0
  8187                           
  8188                           ; BSR set to: 0
  8189  00134C  0E09               	movlw	9
  8190  00134E  6F9F               	movwf	___ftmul@cntr& (0+255),b
  8191  001350                     
  8192                           ; BSR set to: 0
  8193                           
  8194                           ; BSR set to: 0
  8195  001350  A192               	btfss	___ftmul@f1& (0+255),0,b
  8196  001352  D006               	goto	i1l669
  8197                           
  8198                           ; BSR set to: 0
  8199  001354  5195               	movf	___ftmul@f2& (0+255),w,b
  8200  001356  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8201  001358  5196               	movf	(___ftmul@f2+1)& (0+255),w,b
  8202  00135A  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8203  00135C  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
  8204  00135E  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8205  001360                     i1l669:
  8206                           
  8207                           ; BSR set to: 0
  8208                           
  8209                           ; BSR set to: 0
  8210  001360  90D8               	bcf	status,0,c
  8211  001362  3394               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8212  001364  3393               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8213  001366  3392               	rrcf	___ftmul@f1& (0+255),f,b
  8214  001368  90D8               	bcf	status,0,c
  8215  00136A  339E               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8216  00136C  339D               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8217  00136E  339C               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 0
  8220  001370  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
  8221  001372  D7EE               	goto	i1l668
  8222                           
  8223                           ; BSR set to: 0
  8224                           
  8225                           ; BSR set to: 0
  8226  001374  C09C  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  8227  001378  C09D  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8228  00137C  C09E  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8229  001380  C09B  F083         	movff	___ftmul@exp,___ftpack@exp
  8230  001384  C0A0  F084         	movff	___ftmul@sign,___ftpack@sign
  8231  001388  EC9D  F00A         	call	___ftpack	;wreg free
  8232  00138C  C080  F092         	movff	?___ftpack,?___ftmul
  8233  001390  C081  F093         	movff	?___ftpack+1,?___ftmul+1
  8234  001394  C082  F094         	movff	?___ftpack+2,?___ftmul+2
  8235  001398  0012               	return	
  8236  00139A                     __end_of___ftmul:
  8237                           	opt stack 0
  8238                           pclatu	equ	0xFFB
  8239                           pclath	equ	0xFFA
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           intcon2	equ	0xFF1
  8248                           intcon3	equ	0xFF0
  8249                           postinc0	equ	0xFEE
  8250                           fsr0h	equ	0xFEA
  8251                           fsr0l	equ	0xFE9
  8252                           wreg	equ	0xFE8
  8253                           postinc1	equ	0xFE6
  8254                           postdec1	equ	0xFE5
  8255                           fsr1h	equ	0xFE2
  8256                           fsr1l	equ	0xFE1
  8257                           bsr	equ	0xFE0
  8258                           indf2	equ	0xFDF
  8259                           postinc2	equ	0xFDE
  8260                           postdec2	equ	0xFDD
  8261                           fsr2h	equ	0xFDA
  8262                           fsr2l	equ	0xFD9
  8263                           status	equ	0xFD8
  8264                           
  8265 ;; *************** function ___altoft *****************
  8266 ;; Defined at:
  8267 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  c               4    8[BANK0 ] long 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  sign            1   17[BANK0 ] unsigned char 
  8272 ;;  exp             1   16[BANK0 ] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  3    8[BANK0 ] float 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8282 ;;      Params:         0       4       0       0       0       0       0
  8283 ;;      Locals:         0       2       0       0       0       0       0
  8284 ;;      Temps:          0       4       0       0       0       0       0
  8285 ;;      Totals:         0      10       0       0       0       0       0
  8286 ;;Total ram usage:       10 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:    5
  8289 ;; This function calls:
  8290 ;;		___ftpack
  8291 ;; This function is called by:
  8292 ;;		_ADC
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text26
  8297  001A4C                     __ptext26:
  8298                           	opt stack 0
  8299  001A4C                     ___altoft:
  8300                           	opt stack 18
  8301                           
  8302                           ;incstack = 0
  8303  001A4C  0E00               	movlw	0
  8304  001A4E  0100               	movlb	0	; () banked
  8305  001A50  6F91               	movwf	___altoft@sign& (0+255),b
  8306  001A52  0E8E               	movlw	142
  8307  001A54  6F90               	movwf	___altoft@exp& (0+255),b
  8308                           
  8309                           ; BSR set to: 0
  8310  001A56  AF8B               	btfss	(___altoft@c+3)& (0+255),7,b
  8311  001A58  D011               	goto	i1l453
  8312                           
  8313                           ; BSR set to: 0
  8314  001A5A  1F8B               	comf	(___altoft@c+3)& (0+255),f,b
  8315  001A5C  1F8A               	comf	(___altoft@c+2)& (0+255),f,b
  8316  001A5E  1F89               	comf	(___altoft@c+1)& (0+255),f,b
  8317  001A60  6D88               	negf	___altoft@c& (0+255),b
  8318  001A62  0E00               	movlw	0
  8319  001A64  2389               	addwfc	(___altoft@c+1)& (0+255),f,b
  8320  001A66  238A               	addwfc	(___altoft@c+2)& (0+255),f,b
  8321  001A68  238B               	addwfc	(___altoft@c+3)& (0+255),f,b
  8322                           
  8323                           ; BSR set to: 0
  8324  001A6A  0E01               	movlw	1
  8325  001A6C  6F91               	movwf	___altoft@sign& (0+255),b
  8326                           
  8327                           ; BSR set to: 0
  8328  001A6E  D006               	goto	i1l453
  8329  001A70                     
  8330                           ; BSR set to: 0
  8331                           
  8332                           ; BSR set to: 0
  8333  001A70  90D8               	bcf	status,0,c
  8334  001A72  338B               	rrcf	(___altoft@c+3)& (0+255),f,b
  8335  001A74  338A               	rrcf	(___altoft@c+2)& (0+255),f,b
  8336  001A76  3389               	rrcf	(___altoft@c+1)& (0+255),f,b
  8337  001A78  3388               	rrcf	___altoft@c& (0+255),f,b
  8338  001A7A  2B90               	incf	___altoft@exp& (0+255),f,b
  8339  001A7C                     i1l453:
  8340                           
  8341                           ; BSR set to: 0
  8342                           
  8343                           ; BSR set to: 0
  8344  001A7C  0E00               	movlw	0
  8345  001A7E  1588               	andwf	___altoft@c& (0+255),w,b
  8346  001A80  6F8C               	movwf	??___altoft& (0+255),b
  8347  001A82  0E00               	movlw	0
  8348  001A84  1589               	andwf	(___altoft@c+1)& (0+255),w,b
  8349  001A86  6F8D               	movwf	(??___altoft+1)& (0+255),b
  8350  001A88  0E00               	movlw	0
  8351  001A8A  158A               	andwf	(___altoft@c+2)& (0+255),w,b
  8352  001A8C  6F8E               	movwf	(??___altoft+2)& (0+255),b
  8353  001A8E  0EFF               	movlw	255
  8354  001A90  158B               	andwf	(___altoft@c+3)& (0+255),w,b
  8355  001A92  6F8F               	movwf	(??___altoft+3)& (0+255),b
  8356  001A94  518C               	movf	??___altoft& (0+255),w,b
  8357  001A96  118D               	iorwf	(??___altoft+1)& (0+255),w,b
  8358  001A98  118E               	iorwf	(??___altoft+2)& (0+255),w,b
  8359  001A9A  118F               	iorwf	(??___altoft+3)& (0+255),w,b
  8360  001A9C  A4D8               	btfss	status,2,c
  8361  001A9E  D7E8               	goto	i1l454
  8362                           
  8363                           ; BSR set to: 0
  8364                           
  8365                           ; BSR set to: 0
  8366  001AA0  C088  F080         	movff	___altoft@c,___ftpack@arg
  8367  001AA4  C089  F081         	movff	___altoft@c+1,___ftpack@arg+1
  8368  001AA8  C08A  F082         	movff	___altoft@c+2,___ftpack@arg+2
  8369  001AAC  C090  F083         	movff	___altoft@exp,___ftpack@exp
  8370  001AB0  C091  F084         	movff	___altoft@sign,___ftpack@sign
  8371  001AB4  EC9D  F00A         	call	___ftpack	;wreg free
  8372  001AB8  C080  F088         	movff	?___ftpack,?___altoft
  8373  001ABC  C081  F089         	movff	?___ftpack+1,?___altoft+1
  8374  001AC0  C082  F08A         	movff	?___ftpack+2,?___altoft+2
  8375  001AC4  0012               	return	
  8376  001AC6                     __end_of___altoft:
  8377                           	opt stack 0
  8378                           pclatu	equ	0xFFB
  8379                           pclath	equ	0xFFA
  8380                           tblptru	equ	0xFF8
  8381                           tblptrh	equ	0xFF7
  8382                           tblptrl	equ	0xFF6
  8383                           tablat	equ	0xFF5
  8384                           prodh	equ	0xFF4
  8385                           prodl	equ	0xFF3
  8386                           intcon	equ	0xFF2
  8387                           intcon2	equ	0xFF1
  8388                           intcon3	equ	0xFF0
  8389                           postinc0	equ	0xFEE
  8390                           fsr0h	equ	0xFEA
  8391                           fsr0l	equ	0xFE9
  8392                           wreg	equ	0xFE8
  8393                           postinc1	equ	0xFE6
  8394                           postdec1	equ	0xFE5
  8395                           fsr1h	equ	0xFE2
  8396                           fsr1l	equ	0xFE1
  8397                           bsr	equ	0xFE0
  8398                           indf2	equ	0xFDF
  8399                           postinc2	equ	0xFDE
  8400                           postdec2	equ	0xFDD
  8401                           fsr2h	equ	0xFDA
  8402                           fsr2l	equ	0xFD9
  8403                           status	equ	0xFD8
  8404                           
  8405 ;; *************** function ___ftpack *****************
  8406 ;; Defined at:
  8407 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  arg             3    0[BANK0 ] unsigned um
  8410 ;;  exp             1    3[BANK0 ] unsigned char 
  8411 ;;  sign            1    4[BANK0 ] unsigned char 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  3    0[BANK0 ] float 
  8416 ;; Registers used:
  8417 ;;		wreg, status,2, status,0
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8423 ;;      Params:         0       5       0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0
  8425 ;;      Temps:          0       3       0       0       0       0       0
  8426 ;;      Totals:         0       8       0       0       0       0       0
  8427 ;;Total ram usage:        8 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    4
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		___altoft
  8434 ;;		___ftmul
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text27
  8439  00153A                     __ptext27:
  8440                           	opt stack 0
  8441  00153A                     ___ftpack:
  8442                           	opt stack 18
  8443                           
  8444                           ;incstack = 0
  8445  00153A  0100               	movlb	0	; () banked
  8446  00153C  5183               	movf	___ftpack@exp& (0+255),w,b
  8447  00153E  B4D8               	btfsc	status,2,c
  8448  001540  D005               	goto	i1u296_20
  8449                           
  8450                           ; BSR set to: 0
  8451  001542  5180               	movf	___ftpack@arg& (0+255),w,b
  8452  001544  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8453  001546  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8454  001548  A4D8               	btfss	status,2,c
  8455  00154A  D00C               	goto	i1l583
  8456  00154C                     i1u296_20:
  8457                           
  8458                           ; BSR set to: 0
  8459                           
  8460                           ; BSR set to: 0
  8461  00154C  0E00               	movlw	0
  8462  00154E  6F80               	movwf	?___ftpack& (0+255),b
  8463  001550  0E00               	movlw	0
  8464  001552  6F81               	movwf	(?___ftpack+1)& (0+255),b
  8465  001554  0E00               	movlw	0
  8466  001556  6F82               	movwf	(?___ftpack+2)& (0+255),b
  8467                           
  8468                           ; BSR set to: 0
  8469  001558  0012               	return	
  8470  00155A                     
  8471                           ; BSR set to: 0
  8472                           
  8473                           ; BSR set to: 0
  8474  00155A  2B83               	incf	___ftpack@exp& (0+255),f,b
  8475  00155C  90D8               	bcf	status,0,c
  8476  00155E  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8477  001560  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8478  001562  3380               	rrcf	___ftpack@arg& (0+255),f,b
  8479  001564                     i1l583:
  8480                           
  8481                           ; BSR set to: 0
  8482                           
  8483                           ; BSR set to: 0
  8484  001564  0E00               	movlw	0
  8485  001566  1580               	andwf	___ftpack@arg& (0+255),w,b
  8486  001568  6F85               	movwf	??___ftpack& (0+255),b
  8487  00156A  0E00               	movlw	0
  8488  00156C  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8489  00156E  6F86               	movwf	(??___ftpack+1)& (0+255),b
  8490  001570  0EFE               	movlw	254
  8491  001572  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8492  001574  6F87               	movwf	(??___ftpack+2)& (0+255),b
  8493  001576  5185               	movf	??___ftpack& (0+255),w,b
  8494  001578  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  8495  00157A  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  8496  00157C  B4D8               	btfsc	status,2,c
  8497  00157E  D00C               	goto	i1l586
  8498  001580  D7EC               	goto	i1l584
  8499  001582                     
  8500                           ; BSR set to: 0
  8501                           
  8502                           ; BSR set to: 0
  8503  001582  2B83               	incf	___ftpack@exp& (0+255),f,b
  8504                           
  8505                           ; BSR set to: 0
  8506  001584  0E01               	movlw	1
  8507  001586  2780               	addwf	___ftpack@arg& (0+255),f,b
  8508  001588  0E00               	movlw	0
  8509  00158A  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8510  00158C  0E00               	movlw	0
  8511  00158E  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8512  001590  90D8               	bcf	status,0,c
  8513  001592  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8514  001594  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8515  001596  3380               	rrcf	___ftpack@arg& (0+255),f,b
  8516  001598                     i1l586:
  8517                           
  8518                           ; BSR set to: 0
  8519                           
  8520                           ; BSR set to: 0
  8521  001598  0E00               	movlw	0
  8522  00159A  1580               	andwf	___ftpack@arg& (0+255),w,b
  8523  00159C  6F85               	movwf	??___ftpack& (0+255),b
  8524  00159E  0E00               	movlw	0
  8525  0015A0  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8526  0015A2  6F86               	movwf	(??___ftpack+1)& (0+255),b
  8527  0015A4  0EFF               	movlw	255
  8528  0015A6  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8529  0015A8  6F87               	movwf	(??___ftpack+2)& (0+255),b
  8530  0015AA  5185               	movf	??___ftpack& (0+255),w,b
  8531  0015AC  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  8532  0015AE  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  8533  0015B0  B4D8               	btfsc	status,2,c
  8534  0015B2  D006               	goto	i1l589
  8535  0015B4  D7E6               	goto	i1l587
  8536  0015B6                     
  8537                           ; BSR set to: 0
  8538                           
  8539                           ; BSR set to: 0
  8540  0015B6  0783               	decf	___ftpack@exp& (0+255),f,b
  8541  0015B8  90D8               	bcf	status,0,c
  8542  0015BA  3780               	rlcf	___ftpack@arg& (0+255),f,b
  8543  0015BC  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8544  0015BE  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8545  0015C0                     i1l589:
  8546                           
  8547                           ; BSR set to: 0
  8548                           
  8549                           ; BSR set to: 0
  8550  0015C0  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8551  0015C2  D003               	goto	i1u300_20
  8552                           
  8553                           ; BSR set to: 0
  8554  0015C4  0E02               	movlw	2
  8555  0015C6  6183               	cpfslt	___ftpack@exp& (0+255),b
  8556  0015C8  D7F6               	goto	i1l590
  8557  0015CA                     i1u300_20:
  8558                           
  8559                           ; BSR set to: 0
  8560                           
  8561                           ; BSR set to: 0
  8562  0015CA  A183               	btfss	___ftpack@exp& (0+255),0,b
  8563                           
  8564                           ; BSR set to: 0
  8565  0015CC  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8566                           
  8567                           ; BSR set to: 0
  8568                           
  8569                           ; BSR set to: 0
  8570  0015CE  90D8               	bcf	status,0,c
  8571  0015D0  3383               	rrcf	___ftpack@exp& (0+255),f,b
  8572  0015D2  5183               	movf	___ftpack@exp& (0+255),w,b
  8573  0015D4  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8574                           
  8575                           ; BSR set to: 0
  8576  0015D6  5184               	movf	___ftpack@sign& (0+255),w,b
  8577  0015D8  A4D8               	btfss	status,2,c
  8578                           
  8579                           ; BSR set to: 0
  8580  0015DA  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8581                           
  8582                           ; BSR set to: 0
  8583                           
  8584                           ; BSR set to: 0
  8585  0015DC  C080  F080         	movff	___ftpack@arg,?___ftpack
  8586  0015E0  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
  8587  0015E4  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
  8588  0015E8  0012               	return	
  8589  0015EA                     __end_of___ftpack:
  8590                           	opt stack 0
  8591                           pclatu	equ	0xFFB
  8592                           pclath	equ	0xFFA
  8593                           tblptru	equ	0xFF8
  8594                           tblptrh	equ	0xFF7
  8595                           tblptrl	equ	0xFF6
  8596                           tablat	equ	0xFF5
  8597                           prodh	equ	0xFF4
  8598                           prodl	equ	0xFF3
  8599                           intcon	equ	0xFF2
  8600                           intcon2	equ	0xFF1
  8601                           intcon3	equ	0xFF0
  8602                           postinc0	equ	0xFEE
  8603                           fsr0h	equ	0xFEA
  8604                           fsr0l	equ	0xFE9
  8605                           wreg	equ	0xFE8
  8606                           postinc1	equ	0xFE6
  8607                           postdec1	equ	0xFE5
  8608                           fsr1h	equ	0xFE2
  8609                           fsr1l	equ	0xFE1
  8610                           bsr	equ	0xFE0
  8611                           indf2	equ	0xFDF
  8612                           postinc2	equ	0xFDE
  8613                           postdec2	equ	0xFDD
  8614                           fsr2h	equ	0xFDA
  8615                           fsr2l	equ	0xFD9
  8616                           status	equ	0xFD8
  8617                           
  8618 ;; *************** function ___aldiv *****************
  8619 ;; Defined at:
  8620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  dividend        4    0[BANK0 ] long 
  8623 ;;  divisor         4    4[BANK0 ] long 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  quotient        4   10[BANK0 ] long 
  8626 ;;  sign            1    9[BANK0 ] unsigned char 
  8627 ;;  counter         1    8[BANK0 ] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  4    0[BANK0 ] long 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8637 ;;      Params:         0       8       0       0       0       0       0
  8638 ;;      Locals:         0       6       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0
  8640 ;;      Totals:         0      14       0       0       0       0       0
  8641 ;;Total ram usage:       14 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    4
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_ADC
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text28
  8652  00146C                     __ptext28:
  8653                           	opt stack 0
  8654  00146C                     ___aldiv:
  8655                           	opt stack 19
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;incstack = 0
  8659  00146C  0E00               	movlw	0
  8660  00146E  0100               	movlb	0	; () banked
  8661  001470  6F89               	movwf	___aldiv@sign& (0+255),b
  8662                           
  8663                           ; BSR set to: 0
  8664  001472  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8665  001474  D00A               	goto	i1l424
  8666                           
  8667                           ; BSR set to: 0
  8668  001476  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  8669  001478  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  8670  00147A  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  8671  00147C  6D84               	negf	___aldiv@divisor& (0+255),b
  8672  00147E  0E00               	movlw	0
  8673  001480  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  8674  001482  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  8675  001484  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  001486  0E01               	movlw	1
  8679  001488  6F89               	movwf	___aldiv@sign& (0+255),b
  8680  00148A                     i1l424:
  8681                           
  8682                           ; BSR set to: 0
  8683                           
  8684                           ; BSR set to: 0
  8685  00148A  AF83               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  8686  00148C  D00A               	goto	i1l425
  8687                           
  8688                           ; BSR set to: 0
  8689  00148E  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  8690  001490  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  8691  001492  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  8692  001494  6D80               	negf	___aldiv@dividend& (0+255),b
  8693  001496  0E00               	movlw	0
  8694  001498  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  8695  00149A  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  8696  00149C  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  00149E  0E01               	movlw	1
  8700  0014A0  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  8701  0014A2                     i1l425:
  8702                           
  8703                           ; BSR set to: 0
  8704                           
  8705                           ; BSR set to: 0
  8706  0014A2  0E00               	movlw	0
  8707  0014A4  6F8A               	movwf	___aldiv@quotient& (0+255),b
  8708  0014A6  0E00               	movlw	0
  8709  0014A8  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  8710  0014AA  0E00               	movlw	0
  8711  0014AC  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  8712  0014AE  0E00               	movlw	0
  8713  0014B0  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  8714                           
  8715                           ; BSR set to: 0
  8716  0014B2  5184               	movf	___aldiv@divisor& (0+255),w,b
  8717  0014B4  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  8718  0014B6  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  8719  0014B8  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  8720  0014BA  B4D8               	btfsc	status,2,c
  8721  0014BC  D02A               	goto	i1l432
  8722                           
  8723                           ; BSR set to: 0
  8724  0014BE  0E01               	movlw	1
  8725  0014C0  6F88               	movwf	___aldiv@counter& (0+255),b
  8726  0014C2  D006               	goto	i1l427
  8727  0014C4                     
  8728                           ; BSR set to: 0
  8729                           
  8730                           ; BSR set to: 0
  8731  0014C4  90D8               	bcf	status,0,c
  8732  0014C6  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  8733  0014C8  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  8734  0014CA  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  8735  0014CC  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  8736  0014CE  2B88               	incf	___aldiv@counter& (0+255),f,b
  8737  0014D0                     i1l427:
  8738                           
  8739                           ; BSR set to: 0
  8740                           
  8741                           ; BSR set to: 0
  8742  0014D0  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8743  0014D2  D7F8               	goto	i1l428
  8744  0014D4                     i1u315_20:
  8745                           
  8746                           ; BSR set to: 0
  8747                           
  8748                           ; BSR set to: 0
  8749                           
  8750                           ; BSR set to: 0
  8751  0014D4  90D8               	bcf	status,0,c
  8752  0014D6  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  8753  0014D8  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  8754  0014DA  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  8755  0014DC  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  8756                           
  8757                           ; BSR set to: 0
  8758  0014DE  5184               	movf	___aldiv@divisor& (0+255),w,b
  8759  0014E0  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  8760  0014E2  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8761  0014E4  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  8762  0014E6  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8763  0014E8  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  8764  0014EA  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8765  0014EC  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  8766  0014EE  A0D8               	btfss	status,0,c
  8767  0014F0  D009               	goto	i1l431
  8768                           
  8769                           ; BSR set to: 0
  8770  0014F2  5184               	movf	___aldiv@divisor& (0+255),w,b
  8771  0014F4  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  8772  0014F6  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8773  0014F8  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  8774  0014FA  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8775  0014FC  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  8776  0014FE  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8777  001500  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  8778                           
  8779                           ; BSR set to: 0
  8780  001502  818A               	bsf	___aldiv@quotient& (0+255),0,b
  8781  001504                     i1l431:
  8782                           
  8783                           ; BSR set to: 0
  8784                           
  8785                           ; BSR set to: 0
  8786  001504  90D8               	bcf	status,0,c
  8787  001506  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  8788  001508  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  8789  00150A  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  8790  00150C  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  8791                           
  8792                           ; BSR set to: 0
  8793  00150E  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  8794  001510  D7E1               	goto	i1u315_20
  8795  001512                     i1l432:
  8796                           
  8797                           ; BSR set to: 0
  8798                           
  8799                           ; BSR set to: 0
  8800                           
  8801                           ; BSR set to: 0
  8802  001512  5189               	movf	___aldiv@sign& (0+255),w,b
  8803  001514  B4D8               	btfsc	status,2,c
  8804  001516  D008               	goto	i1l433
  8805                           
  8806                           ; BSR set to: 0
  8807  001518  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  8808  00151A  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  8809  00151C  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  8810  00151E  6D8A               	negf	___aldiv@quotient& (0+255),b
  8811  001520  0E00               	movlw	0
  8812  001522  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  8813  001524  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  8814  001526  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  8815  001528                     i1l433:
  8816                           
  8817                           ; BSR set to: 0
  8818                           
  8819                           ; BSR set to: 0
  8820  001528  C08A  F080         	movff	___aldiv@quotient,?___aldiv
  8821  00152C  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  8822  001530  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  8823  001534  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  8824  001538  0012               	return	
  8825  00153A                     __end_of___aldiv:
  8826                           	opt stack 0
  8827                           pclatu	equ	0xFFB
  8828                           pclath	equ	0xFFA
  8829                           tblptru	equ	0xFF8
  8830                           tblptrh	equ	0xFF7
  8831                           tblptrl	equ	0xFF6
  8832                           tablat	equ	0xFF5
  8833                           prodh	equ	0xFF4
  8834                           prodl	equ	0xFF3
  8835                           intcon	equ	0xFF2
  8836                           intcon2	equ	0xFF1
  8837                           intcon3	equ	0xFF0
  8838                           postinc0	equ	0xFEE
  8839                           fsr0h	equ	0xFEA
  8840                           fsr0l	equ	0xFE9
  8841                           wreg	equ	0xFE8
  8842                           postinc1	equ	0xFE6
  8843                           postdec1	equ	0xFE5
  8844                           fsr1h	equ	0xFE2
  8845                           fsr1l	equ	0xFE1
  8846                           bsr	equ	0xFE0
  8847                           indf2	equ	0xFDF
  8848                           postinc2	equ	0xFDE
  8849                           postdec2	equ	0xFDD
  8850                           fsr2h	equ	0xFDA
  8851                           fsr2l	equ	0xFD9
  8852                           status	equ	0xFD8
  8853                           
  8854 ;; *************** function _alarm *****************
  8855 ;; Defined at:
  8856 ;;		line 111 in file "Lab7.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;		None
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;		None
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  1    wreg      void 
  8863 ;; Registers used:
  8864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8870 ;;      Params:         0       0       0       0       0       0       0
  8871 ;;      Locals:         0       0       0       0       0       0       0
  8872 ;;      Temps:         18       0       0       0       0       0       0
  8873 ;;      Totals:        18       0       0       0       0       0       0
  8874 ;;Total ram usage:       18 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    3
  8877 ;; This function calls:
  8878 ;;		i2_Clear
  8879 ;;		i2_password
  8880 ;;		i2_printf
  8881 ;; This function is called by:
  8882 ;;		Interrupt level 2
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	intcode
  8887  000008                     __pintcode:
  8888                           	opt stack 0
  8889  000008                     _alarm:
  8890                           	opt stack 18
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;incstack = 0
  8894  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8895  00000A  EDCD  F009         	call	int_func,f	;refresh shadow registers
  8896                           pclatu	equ	0xFFB
  8897                           pclath	equ	0xFFA
  8898                           tblptru	equ	0xFF8
  8899                           tblptrh	equ	0xFF7
  8900                           tblptrl	equ	0xFF6
  8901                           tablat	equ	0xFF5
  8902                           prodh	equ	0xFF4
  8903                           prodl	equ	0xFF3
  8904                           intcon	equ	0xFF2
  8905                           intcon2	equ	0xFF1
  8906                           intcon3	equ	0xFF0
  8907                           postinc0	equ	0xFEE
  8908                           fsr0h	equ	0xFEA
  8909                           fsr0l	equ	0xFE9
  8910                           wreg	equ	0xFE8
  8911                           postinc1	equ	0xFE6
  8912                           postdec1	equ	0xFE5
  8913                           fsr1h	equ	0xFE2
  8914                           fsr1l	equ	0xFE1
  8915                           bsr	equ	0xFE0
  8916                           indf2	equ	0xFDF
  8917                           postinc2	equ	0xFDE
  8918                           postdec2	equ	0xFDD
  8919                           fsr2h	equ	0xFDA
  8920                           fsr2l	equ	0xFD9
  8921                           status	equ	0xFD8
  8922                           
  8923                           	psect	intcode_body
  8924  00139A                     __pintcode_body:
  8925                           	opt stack 18
  8926  00139A                     int_func:
  8927                           	opt stack 18
  8928  00139A  0006               	pop		; remove dummy address from shadow register refresh
  8929  00139C  CFFA F027          	movff	pclath,??_alarm
  8930  0013A0  CFFB F028          	movff	pclatu,??_alarm+1
  8931  0013A4  CFE9 F029          	movff	fsr0l,??_alarm+2
  8932  0013A8  CFEA F02A          	movff	fsr0h,??_alarm+3
  8933  0013AC  CFE1 F02B          	movff	fsr1l,??_alarm+4
  8934  0013B0  CFE2 F02C          	movff	fsr1h,??_alarm+5
  8935  0013B4  CFD9 F02D          	movff	fsr2l,??_alarm+6
  8936  0013B8  CFDA F02E          	movff	fsr2h,??_alarm+7
  8937  0013BC  CFF3 F02F          	movff	prodl,??_alarm+8
  8938  0013C0  CFF4 F030          	movff	prodh,??_alarm+9
  8939  0013C4  CFF6 F031          	movff	tblptrl,??_alarm+10
  8940  0013C8  CFF7 F032          	movff	tblptrh,??_alarm+11
  8941  0013CC  CFF8 F033          	movff	tblptru,??_alarm+12
  8942  0013D0  CFF5 F034          	movff	tablat,??_alarm+13
  8943  0013D4  C04B  F035         	movff	btemp,??_alarm+14
  8944  0013D8  C04C  F036         	movff	btemp+1,??_alarm+15
  8945  0013DC  C04D  F037         	movff	btemp+2,??_alarm+16
  8946  0013E0  C04E  F038         	movff	btemp+3,??_alarm+17
  8947                           
  8948                           ;Lab7.c: 113: Clear();
  8949  0013E4  ECBF  F00E         	call	i2_Clear	;wreg free
  8950                           
  8951                           ;Lab7.c: 114: printf("\n\r\n\r\n\rALARM TRIGGERED\n\r\n\r\n\r");
  8952  0013E8  0EF9               	movlw	low STR_3
  8953  0013EA  6E17               	movwf	i2printf@f,c
  8954  0013EC  0E7D               	movlw	high STR_3
  8955  0013EE  6E18               	movwf	i2printf@f+1,c
  8956  0013F0  ECD2  F004         	call	i2_printf	;wreg free
  8957                           
  8958                           ;Lab7.c: 115: printf("\n\rENTER PASSWORD TO CONTINUE\n\r");
  8959  0013F4  0EDA               	movlw	low STR_4
  8960  0013F6  6E17               	movwf	i2printf@f,c
  8961  0013F8  0E7D               	movlw	high STR_4
  8962  0013FA  6E18               	movwf	i2printf@f+1,c
  8963  0013FC  ECD2  F004         	call	i2_printf	;wreg free
  8964                           
  8965                           ;Lab7.c: 116: PORTBbits.RB2 = 1;
  8966  001400  8481               	bsf	3969,2,c	;volatile
  8967                           
  8968                           ;Lab7.c: 117: triggered = 1;
  8969  001402  0E00               	movlw	0
  8970  001404  0101               	movlb	1	; () banked
  8971  001406  6F3B               	movwf	(_triggered+1)& (0+255),b
  8972  001408  0E01               	movlw	1
  8973  00140A  6F3A               	movwf	_triggered& (0+255),b
  8974                           
  8975                           ; BSR set to: 1
  8976                           ;Lab7.c: 118: password();
  8977  00140C  EC4C  F00B         	call	i2_password	;wreg free
  8978                           
  8979                           ;Lab7.c: 119: printf("\n\rPress Any Button to return to Menu\n\r");
  8980  001410  0E8F               	movlw	low STR_5
  8981  001412  6E17               	movwf	i2printf@f,c
  8982  001414  0E7D               	movlw	high STR_5
  8983  001416  6E18               	movwf	i2printf@f+1,c
  8984  001418  ECD2  F004         	call	i2_printf	;wreg free
  8985                           
  8986                           ;Lab7.c: 120: INTCON3bits.INT1IF = 0;
  8987  00141C  90F0               	bcf	intcon3,0,c	;volatile
  8988                           
  8989                           ;Lab7.c: 121: PORTBbits.RB2 = 0;
  8990  00141E  9481               	bcf	3969,2,c	;volatile
  8991  001420  C038  F04E         	movff	??_alarm+17,btemp+3
  8992  001424  C037  F04D         	movff	??_alarm+16,btemp+2
  8993  001428  C036  F04C         	movff	??_alarm+15,btemp+1
  8994  00142C  C035  F04B         	movff	??_alarm+14,btemp
  8995  001430  C034  FFF5         	movff	??_alarm+13,tablat
  8996  001434  C033  FFF8         	movff	??_alarm+12,tblptru
  8997  001438  C032  FFF7         	movff	??_alarm+11,tblptrh
  8998  00143C  C031  FFF6         	movff	??_alarm+10,tblptrl
  8999  001440  C030  FFF4         	movff	??_alarm+9,prodh
  9000  001444  C02F  FFF3         	movff	??_alarm+8,prodl
  9001  001448  C02E  FFDA         	movff	??_alarm+7,fsr2h
  9002  00144C  C02D  FFD9         	movff	??_alarm+6,fsr2l
  9003  001450  C02C  FFE2         	movff	??_alarm+5,fsr1h
  9004  001454  C02B  FFE1         	movff	??_alarm+4,fsr1l
  9005  001458  C02A  FFEA         	movff	??_alarm+3,fsr0h
  9006  00145C  C029  FFE9         	movff	??_alarm+2,fsr0l
  9007  001460  C028  FFFB         	movff	??_alarm+1,pclatu
  9008  001464  C027  FFFA         	movff	??_alarm,pclath
  9009  001468  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9010  00146A  0011               	retfie		f
  9011  00146C                     __end_of_alarm:
  9012                           	opt stack 0
  9013                           pclatu	equ	0xFFB
  9014                           pclath	equ	0xFFA
  9015                           tblptru	equ	0xFF8
  9016                           tblptrh	equ	0xFF7
  9017                           tblptrl	equ	0xFF6
  9018                           tablat	equ	0xFF5
  9019                           prodh	equ	0xFF4
  9020                           prodl	equ	0xFF3
  9021                           intcon	equ	0xFF2
  9022                           intcon2	equ	0xFF1
  9023                           intcon3	equ	0xFF0
  9024                           postinc0	equ	0xFEE
  9025                           fsr0h	equ	0xFEA
  9026                           fsr0l	equ	0xFE9
  9027                           wreg	equ	0xFE8
  9028                           postinc1	equ	0xFE6
  9029                           postdec1	equ	0xFE5
  9030                           fsr1h	equ	0xFE2
  9031                           fsr1l	equ	0xFE1
  9032                           bsr	equ	0xFE0
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function i2_password *****************
  9041 ;; Defined at:
  9042 ;;		line 412 in file "Lab7.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  password        2   36[COMRAM] int 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9056 ;;      Params:         0       0       0       0       0       0       0
  9057 ;;      Locals:         2       0       0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0
  9059 ;;      Totals:         2       0       0       0       0       0       0
  9060 ;;Total ram usage:        2 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    2
  9063 ;; This function calls:
  9064 ;;		i2_printf
  9065 ;;		i2_strncmp
  9066 ;; This function is called by:
  9067 ;;		_alarm
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text30
  9072  001698                     __ptext30:
  9073                           	opt stack 0
  9074  001698                     i2_password:
  9075                           	opt stack 18
  9076                           
  9077                           ;Lab7.c: 415: {
  9078                           ;Lab7.c: 416: printf("PASSWORD:\t");
  9079                           
  9080                           ;incstack = 0
  9081                           ;Lab7.c: 414: while(1)
  9082  001698  0EB9               	movlw	low (STR_11+4)
  9083  00169A  6E17               	movwf	i2printf@f,c
  9084  00169C  0E7F               	movlw	high (STR_11+4)
  9085  00169E  6E18               	movwf	i2printf@f+1,c
  9086  0016A0  ECD2  F004         	call	i2_printf	;wreg free
  9087                           
  9088                           ;Lab7.c: 417: for(int i = 0;i < 4;i++){
  9089  0016A4  0E00               	movlw	0
  9090  0016A6  6E26               	movwf	i2password@i+1,c
  9091  0016A8  0E00               	movlw	0
  9092  0016AA  6E25               	movwf	i2password@i,c
  9093  0016AC  BE26               	btfsc	i2password@i+1,7,c
  9094  0016AE  D006               	goto	i2l214
  9095  0016B0  5026               	movf	i2password@i+1,w,c
  9096  0016B2  E11E               	bnz	i2l3419
  9097  0016B4  0E04               	movlw	4
  9098  0016B6  5C25               	subwf	i2password@i,w,c
  9099  0016B8  B0D8               	btfsc	status,0,c
  9100  0016BA  D01A               	goto	i2u275_40
  9101  0016BC                     i2l214:
  9102                           
  9103                           ;Lab7.c: 418: while(PIR1bits.RCIF == 0);
  9104  0016BC  AA9E               	btfss	3998,5,c	;volatile
  9105  0016BE  D7FE               	goto	i2l214
  9106                           
  9107                           ;Lab7.c: 419: pass[i] = RCREG;
  9108  0016C0  0E3F               	movlw	low _pass
  9109  0016C2  2425               	addwf	i2password@i,w,c
  9110  0016C4  6ED9               	movwf	fsr2l,c
  9111  0016C6  0E01               	movlw	high _pass
  9112  0016C8  2026               	addwfc	i2password@i+1,w,c
  9113  0016CA  6EDA               	movwf	fsr2h,c
  9114  0016CC  CFAE FFDF          	movff	4014,indf2	;volatile
  9115                           
  9116                           ;Lab7.c: 420: printf("*");
  9117  0016D0  0EFD               	movlw	low STR_12
  9118  0016D2  6E17               	movwf	i2printf@f,c
  9119  0016D4  0E7F               	movlw	high STR_12
  9120  0016D6  6E18               	movwf	i2printf@f+1,c
  9121  0016D8  ECD2  F004         	call	i2_printf	;wreg free
  9122  0016DC  4A25               	infsnz	i2password@i,f,c
  9123  0016DE  2A26               	incf	i2password@i+1,f,c
  9124  0016E0  BE26               	btfsc	i2password@i+1,7,c
  9125  0016E2  D7EC               	goto	i2l214
  9126  0016E4  5026               	movf	i2password@i+1,w,c
  9127  0016E6  E104               	bnz	i2l3419
  9128  0016E8  0E04               	movlw	4
  9129  0016EA  5C25               	subwf	i2password@i,w,c
  9130  0016EC  A0D8               	btfss	status,0,c
  9131  0016EE  D7E6               	goto	i2l214
  9132  0016F0                     i2u275_40:
  9133  0016F0                     i2l3419:
  9134                           
  9135                           ;Lab7.c: 421: }
  9136                           ;Lab7.c: 423: check = strncmp(pass, saved_pass, 4);
  9137  0016F0  0E3F               	movlw	low _pass
  9138  0016F2  6E01               	movwf	i2strncmp@s1,c
  9139  0016F4  0E01               	movlw	high _pass
  9140  0016F6  6E02               	movwf	i2strncmp@s1+1,c
  9141  0016F8  0E43               	movlw	low _saved_pass
  9142  0016FA  6E03               	movwf	i2strncmp@s2,c
  9143  0016FC  0E01               	movlw	high _saved_pass
  9144  0016FE  6E04               	movwf	i2strncmp@s2+1,c
  9145  001700  0E00               	movlw	0
  9146  001702  6E06               	movwf	i2strncmp@len+1,c
  9147  001704  0E04               	movlw	4
  9148  001706  6E05               	movwf	i2strncmp@len,c
  9149  001708  EC63  F00D         	call	i2_strncmp	;wreg free
  9150  00170C  C001  F13C         	movff	?i2_strncmp,_check
  9151  001710  C002  F13D         	movff	?i2_strncmp+1,_check+1
  9152                           
  9153                           ;Lab7.c: 438: if(check == 0)
  9154  001714  0101               	movlb	1	; () banked
  9155  001716  513C               	movf	_check& (0+255),w,b
  9156  001718  113D               	iorwf	(_check+1)& (0+255),w,b
  9157  00171A  A4D8               	btfss	status,2,c
  9158  00171C  D007               	goto	i2l219
  9159                           
  9160                           ; BSR set to: 1
  9161                           ;Lab7.c: 439: {
  9162                           ;Lab7.c: 440: printf("\n\rPASSWORD VALID\n\r\n\r");
  9163  00171E  0E17               	movlw	low STR_30
  9164  001720  6E17               	movwf	i2printf@f,c
  9165  001722  0E7F               	movlw	high STR_30
  9166  001724  6E18               	movwf	i2printf@f+1,c
  9167  001726  ECD2  F004         	call	i2_printf	;wreg free
  9168                           
  9169                           ;Lab7.c: 441: return;
  9170  00172A  0012               	return	
  9171  00172C                     i2l219:
  9172                           
  9173                           ;Lab7.c: 443: else
  9174                           ;Lab7.c: 444: {
  9175                           ;Lab7.c: 445: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
  9176  00172C  0E15               	movlw	low STR_31
  9177  00172E  6E17               	movwf	i2printf@f,c
  9178  001730  0E7E               	movlw	high STR_31
  9179  001732  6E18               	movwf	i2printf@f+1,c
  9180  001734  ECD2  F004         	call	i2_printf	;wreg free
  9181  001738  D7AF               	goto	i2_password
  9182  00173A                     __end_ofi2_password:
  9183                           	opt stack 0
  9184                           pclatu	equ	0xFFB
  9185                           pclath	equ	0xFFA
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           intcon	equ	0xFF2
  9193                           intcon2	equ	0xFF1
  9194                           intcon3	equ	0xFF0
  9195                           postinc0	equ	0xFEE
  9196                           fsr0h	equ	0xFEA
  9197                           fsr0l	equ	0xFE9
  9198                           wreg	equ	0xFE8
  9199                           postinc1	equ	0xFE6
  9200                           postdec1	equ	0xFE5
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           bsr	equ	0xFE0
  9204                           indf2	equ	0xFDF
  9205                           postinc2	equ	0xFDE
  9206                           postdec2	equ	0xFDD
  9207                           fsr2h	equ	0xFDA
  9208                           fsr2l	equ	0xFD9
  9209                           status	equ	0xFD8
  9210                           
  9211 ;; *************** function i2_strncmp *****************
  9212 ;; Defined at:
  9213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  9216 ;;		 -> pass(4), 
  9217 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  9218 ;;		 -> saved_pass(4), 
  9219 ;;  len             2    4[COMRAM] unsigned int 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  2    0[COMRAM] int 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9231 ;;      Params:         6       0       0       0       0       0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0
  9233 ;;      Temps:          3       0       0       0       0       0       0
  9234 ;;      Totals:         9       0       0       0       0       0       0
  9235 ;;Total ram usage:        9 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		i2_password
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text31
  9245  001AC6                     __ptext31:
  9246                           	opt stack 0
  9247  001AC6                     i2_strncmp:
  9248                           	opt stack 19
  9249                           
  9250                           ;incstack = 0
  9251  001AC6  D02F               	goto	i2l916
  9252  001AC8                     i2l2981:
  9253  001AC8  C001  FFD9         	movff	i2strncmp@s1,fsr2l
  9254  001ACC  C002  FFDA         	movff	i2strncmp@s1+1,fsr2h
  9255  001AD0  50DF               	movf	indf2,w,c
  9256  001AD2  B4D8               	btfsc	status,2,c
  9257  001AD4  D00C               	goto	i2u242_40
  9258  001AD6  C003  FFD9         	movff	i2strncmp@s2,fsr2l
  9259  001ADA  C004  FFDA         	movff	i2strncmp@s2+1,fsr2h
  9260  001ADE  C001  FFE1         	movff	i2strncmp@s1,fsr1l
  9261  001AE2  C002  FFE2         	movff	i2strncmp@s1+1,fsr1h
  9262  001AE6  50DE               	movf	postinc2,w,c
  9263  001AE8  18E6               	xorwf	postinc1,w,c
  9264  001AEA  B4D8               	btfsc	status,2,c
  9265  001AEC  D018               	goto	i2l918
  9266  001AEE                     i2u242_40:
  9267  001AEE  C003  FFD9         	movff	i2strncmp@s2,fsr2l
  9268  001AF2  C004  FFDA         	movff	i2strncmp@s2+1,fsr2h
  9269  001AF6  50DF               	movf	indf2,w,c
  9270  001AF8  6E07               	movwf	??i2_strncmp& (0+255),c
  9271  001AFA  6A08               	clrf	(??i2_strncmp+1)& (0+255),c
  9272  001AFC  1E07               	comf	??i2_strncmp,f,c
  9273  001AFE  1E08               	comf	??i2_strncmp+1,f,c
  9274  001B00  4A07               	infsnz	??i2_strncmp,f,c
  9275  001B02  2A08               	incf	??i2_strncmp+1,f,c
  9276  001B04  C001  FFD9         	movff	i2strncmp@s1,fsr2l
  9277  001B08  C002  FFDA         	movff	i2strncmp@s1+1,fsr2h
  9278  001B0C  50DF               	movf	indf2,w,c
  9279  001B0E  6E09               	movwf	(??i2_strncmp+2)& (0+255),c
  9280  001B10  5009               	movf	??i2_strncmp+2,w,c
  9281  001B12  2407               	addwf	??i2_strncmp,w,c
  9282  001B14  6E01               	movwf	?i2_strncmp,c
  9283  001B16  0E00               	movlw	0
  9284  001B18  2008               	addwfc	??i2_strncmp+1,w,c
  9285  001B1A  6E02               	movwf	?i2_strncmp+1,c
  9286  001B1C  0012               	return	
  9287  001B1E                     i2l918:
  9288  001B1E  4A01               	infsnz	i2strncmp@s1,f,c
  9289  001B20  2A02               	incf	i2strncmp@s1+1,f,c
  9290  001B22  4A03               	infsnz	i2strncmp@s2,f,c
  9291  001B24  2A04               	incf	i2strncmp@s2+1,f,c
  9292  001B26                     i2l916:
  9293  001B26  0605               	decf	i2strncmp@len,f,c
  9294  001B28  A0D8               	btfss	status,0,c
  9295  001B2A  0606               	decf	i2strncmp@len+1,f,c
  9296  001B2C  2805               	incf	i2strncmp@len,w,c
  9297  001B2E  E1CC               	bnz	i2l2981
  9298  001B30  2806               	incf	i2strncmp@len+1,w,c
  9299  001B32  A4D8               	btfss	status,2,c
  9300  001B34  D7C9               	goto	i2l917
  9301  001B36  0E00               	movlw	0
  9302  001B38  6E02               	movwf	?i2_strncmp+1,c
  9303  001B3A  0E00               	movlw	0
  9304  001B3C  6E01               	movwf	?i2_strncmp,c
  9305  001B3E  0012               	return	
  9306  001B40                     __end_ofi2_strncmp:
  9307                           	opt stack 0
  9308                           pclatu	equ	0xFFB
  9309                           pclath	equ	0xFFA
  9310                           tblptru	equ	0xFF8
  9311                           tblptrh	equ	0xFF7
  9312                           tblptrl	equ	0xFF6
  9313                           tablat	equ	0xFF5
  9314                           prodh	equ	0xFF4
  9315                           prodl	equ	0xFF3
  9316                           intcon	equ	0xFF2
  9317                           intcon2	equ	0xFF1
  9318                           intcon3	equ	0xFF0
  9319                           postinc0	equ	0xFEE
  9320                           fsr0h	equ	0xFEA
  9321                           fsr0l	equ	0xFE9
  9322                           wreg	equ	0xFE8
  9323                           postinc1	equ	0xFE6
  9324                           postdec1	equ	0xFE5
  9325                           fsr1h	equ	0xFE2
  9326                           fsr1l	equ	0xFE1
  9327                           bsr	equ	0xFE0
  9328                           indf2	equ	0xFDF
  9329                           postinc2	equ	0xFDE
  9330                           postdec2	equ	0xFDD
  9331                           fsr2h	equ	0xFDA
  9332                           fsr2l	equ	0xFD9
  9333                           status	equ	0xFD8
  9334                           
  9335 ;; *************** function i2_Clear *****************
  9336 ;; Defined at:
  9337 ;;		line 105 in file "Lab7.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;		None
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9351 ;;      Params:         0       0       0       0       0       0       0
  9352 ;;      Locals:         0       0       0       0       0       0       0
  9353 ;;      Temps:          0       0       0       0       0       0       0
  9354 ;;      Totals:         0       0       0       0       0       0       0
  9355 ;;Total ram usage:        0 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    2
  9358 ;; This function calls:
  9359 ;;		i2_printf
  9360 ;; This function is called by:
  9361 ;;		_alarm
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text32
  9366  001D7E                     __ptext32:
  9367                           	opt stack 0
  9368  001D7E                     i2_Clear:
  9369                           	opt stack 18
  9370                           
  9371                           ;Lab7.c: 107: printf("\033[2J");
  9372                           
  9373                           ;incstack = 0
  9374  001D7E  0EF1               	movlw	low STR_1
  9375  001D80  6E17               	movwf	i2printf@f,c
  9376  001D82  0E7F               	movlw	high STR_1
  9377  001D84  6E18               	movwf	i2printf@f+1,c
  9378  001D86  ECD2  F004         	call	i2_printf	;wreg free
  9379                           
  9380                           ;Lab7.c: 108: printf("\033[0;0H");
  9381  001D8A  0EEA               	movlw	low STR_2
  9382  001D8C  6E17               	movwf	i2printf@f,c
  9383  001D8E  0E7F               	movlw	high STR_2
  9384  001D90  6E18               	movwf	i2printf@f+1,c
  9385  001D92  ECD2  F004         	call	i2_printf	;wreg free
  9386  001D96  0012               	return		;funcret
  9387  001D98                     __end_ofi2_Clear:
  9388                           	opt stack 0
  9389                           pclatu	equ	0xFFB
  9390                           pclath	equ	0xFFA
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           intcon	equ	0xFF2
  9398                           intcon2	equ	0xFF1
  9399                           intcon3	equ	0xFF0
  9400                           postinc0	equ	0xFEE
  9401                           fsr0h	equ	0xFEA
  9402                           fsr0l	equ	0xFE9
  9403                           wreg	equ	0xFE8
  9404                           postinc1	equ	0xFE6
  9405                           postdec1	equ	0xFE5
  9406                           fsr1h	equ	0xFE2
  9407                           fsr1l	equ	0xFE1
  9408                           bsr	equ	0xFE0
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           fsr2h	equ	0xFDA
  9413                           fsr2l	equ	0xFD9
  9414                           status	equ	0xFD8
  9415                           
  9416 ;; *************** function i2_printf *****************
  9417 ;; Defined at:
  9418 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  f               2   22[COMRAM] PTR const unsigned char 
  9421 ;;		 -> STR_70(4), STR_69(23), STR_68(9), STR_67(28), 
  9422 ;;		 -> STR_66(26), STR_65(25), STR_64(133), STR_63(20), 
  9423 ;;		 -> STR_62(21), STR_61(14), STR_60(15), STR_59(23), 
  9424 ;;		 -> STR_58(3), STR_57(27), STR_56(26), STR_55(25), 
  9425 ;;		 -> STR_54(25), STR_53(151), STR_52(20), STR_51(21), 
  9426 ;;		 -> STR_50(14), STR_49(15), STR_48(23), STR_47(19), 
  9427 ;;		 -> STR_46(18), STR_45(25), STR_44(117), STR_43(20), 
  9428 ;;		 -> STR_42(21), STR_41(14), STR_40(15), STR_39(23), 
  9429 ;;		 -> STR_38(21), STR_37(25), STR_36(109), STR_35(20), 
  9430 ;;		 -> STR_34(21), STR_33(14), STR_32(15), STR_31(28), 
  9431 ;;		 -> STR_30(21), STR_29(2), STR_28(11), STR_27(54), 
  9432 ;;		 -> STR_26(25), STR_25(2), STR_24(21), STR_23(2), 
  9433 ;;		 -> STR_22(25), STR_21(23), STR_20(25), STR_19(3), 
  9434 ;;		 -> STR_18(161), STR_17(20), STR_16(21), STR_15(14), 
  9435 ;;		 -> STR_14(15), STR_13(17), STR_12(2), STR_11(15), 
  9436 ;;		 -> STR_10(39), STR_9(3), STR_8(57), STR_7(31), 
  9437 ;;		 -> STR_6(36), STR_5(39), STR_4(31), STR_3(28), 
  9438 ;;		 -> STR_2(7), STR_1(5), 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  printf          4   31[COMRAM] unsigned long 
  9441 ;;  printf          4    0        struct .
  9442 ;;  printf          3    0        PTR const unsigned char 
  9443 ;;  printf          2   28[COMRAM] PTR void [1]
  9444 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
  9445 ;;  printf          2   26[COMRAM] int 
  9446 ;;  printf          2    0        unsigned int 
  9447 ;;  printf          1   35[COMRAM] char 
  9448 ;;  printf          1   30[COMRAM] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  2   22[COMRAM] int 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9458 ;;      Params:         2       0       0       0       0       0       0
  9459 ;;      Locals:        10       0       0       0       0       0       0
  9460 ;;      Temps:          2       0       0       0       0       0       0
  9461 ;;      Totals:        14       0       0       0       0       0       0
  9462 ;;Total ram usage:       14 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    1
  9465 ;; This function calls:
  9466 ;;		i2___lldiv
  9467 ;;		i2___llmod
  9468 ;;		i2_putch
  9469 ;; This function is called by:
  9470 ;;		_alarm
  9471 ;;		i2_Clear
  9472 ;;		i2_password
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text33
  9477  0009A4                     __ptext33:
  9478                           	opt stack 0
  9479  0009A4                     i2_printf:
  9480                           	opt stack 19
  9481                           
  9482                           ;doprnt.c: 466: va_list ap;
  9483                           ;doprnt.c: 499: signed char c;
  9484                           ;doprnt.c: 504: int prec;
  9485                           ;doprnt.c: 508: unsigned char flag;
  9486                           ;doprnt.c: 523: union {
  9487                           ;doprnt.c: 524: unsigned long vd;
  9488                           ;doprnt.c: 525: double integ;
  9489                           ;doprnt.c: 526: } tmpval;
  9490                           ;doprnt.c: 528: unsigned long val;
  9491                           ;doprnt.c: 529: unsigned len;
  9492                           ;doprnt.c: 530: const char * cp;
  9493                           ;doprnt.c: 533: *ap = __va_start();
  9494                           
  9495                           ;incstack = 0
  9496  0009A4  0E19               	movlw	low (?i2_printf+2)
  9497  0009A6  6E1D               	movwf	i2printf@ap,c
  9498  0009A8  0E00               	movlw	high (?i2_printf+2)
  9499  0009AA  6E1E               	movwf	i2printf@ap+1,c
  9500                           
  9501                           ;doprnt.c: 536: while(c = *f++) {
  9502  0009AC  D0C3               	goto	i2u236_40
  9503  0009AE                     
  9504                           ;doprnt.c: 538: if(c != '%')
  9505  0009AE  0E25               	movlw	37
  9506  0009B0  1824               	xorwf	i2printf@c,w,c
  9507  0009B2  B4D8               	btfsc	status,2,c
  9508  0009B4  D004               	goto	i2l347
  9509                           
  9510                           ;doprnt.c: 540: {
  9511                           ;doprnt.c: 541: (putch(c) );
  9512  0009B6  5024               	movf	i2printf@c,w,c
  9513  0009B8  ECDA  F00E         	call	i2_putch
  9514                           
  9515                           ;doprnt.c: 542: continue;
  9516  0009BC  D0BB               	goto	i2u236_40
  9517  0009BE                     i2l347:
  9518                           
  9519                           ;doprnt.c: 543: }
  9520                           ;doprnt.c: 548: flag = 0;
  9521  0009BE  0E00               	movlw	0
  9522  0009C0  6E1F               	movwf	i2printf@flag,c
  9523                           
  9524                           ;doprnt.c: 635: switch(c = *f++) {
  9525                           
  9526                           ;doprnt.c: 633: loop:
  9527  0009C2  D001               	goto	i2l349
  9528  0009C4                     
  9529                           ;doprnt.c: 643: flag |= 0x10;
  9530  0009C4  881F               	bsf	i2printf@flag,4,c
  9531  0009C6                     i2l349:
  9532  0009C6  C017  FFF6         	movff	i2printf@f,tblptrl
  9533  0009CA  C018  FFF7         	movff	i2printf@f+1,tblptrh
  9534  0009CE  4A17               	infsnz	i2printf@f,f,c
  9535  0009D0  2A18               	incf	i2printf@f+1,f,c
  9536  0009D2                     	if	0	;tblptru may be non-zero
  9537  0009D2                     	endif
  9538  0009D2                     	if	0	;tblptru may be non-zero
  9539  0009D2                     	endif
  9540  0009D2  0008               	tblrd		*
  9541  0009D4  CFF5 F024          	movff	tablat,i2printf@c
  9542  0009D8  5024               	movf	i2printf@c,w,c
  9543                           
  9544                           ; Switch size 1, requested type "space"
  9545                           ; Number of cases is 4, Range of values is 0 to 108
  9546                           ; switch strategies available:
  9547                           ; Name         Instructions Cycles
  9548                           ; simple_byte           13     7 (average)
  9549                           ;	Chosen strategy is simple_byte
  9550  0009DA  0A00               	xorlw	0	; case 0
  9551  0009DC  B4D8               	btfsc	status,2,c
  9552  0009DE  0012               	return	
  9553  0009E0  0A64               	xorlw	100	; case 100
  9554  0009E2  B4D8               	btfsc	status,2,c
  9555  0009E4  D007               	goto	i2l355
  9556  0009E6  0A0D               	xorlw	13	; case 105
  9557  0009E8  B4D8               	btfsc	status,2,c
  9558  0009EA  D004               	goto	i2l355
  9559  0009EC  0A05               	xorlw	5	; case 108
  9560  0009EE  B4D8               	btfsc	status,2,c
  9561  0009F0  D7E9               	goto	i2l352
  9562  0009F2  D0A0               	goto	i2u236_40
  9563  0009F4                     i2l355:
  9564                           
  9565                           ;doprnt.c: 1253: {
  9566                           ;doprnt.c: 1255: if(flag & 0x10)
  9567  0009F4  A81F               	btfss	i2printf@flag,4,c
  9568  0009F6  D00E               	goto	i2l357
  9569                           
  9570                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  9571  0009F8  C01D  FFD9         	movff	i2printf@ap,fsr2l
  9572  0009FC  C01E  FFDA         	movff	i2printf@ap+1,fsr2h
  9573  000A00  CFDE F020          	movff	postinc2,i2printf@val
  9574  000A04  CFDE F021          	movff	postinc2,i2printf@val+1
  9575  000A08  CFDE F022          	movff	postinc2,i2printf@val+2
  9576  000A0C  CFDE F023          	movff	postinc2,i2printf@val+3
  9577  000A10  0E04               	movlw	4
  9578  000A12  D00E               	goto	L7
  9579  000A14                     i2l357:
  9580                           
  9581                           ;doprnt.c: 1257: else
  9582                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9583  000A14  C01D  FFD9         	movff	i2printf@ap,fsr2l
  9584  000A18  C01E  FFDA         	movff	i2printf@ap+1,fsr2h
  9585  000A1C  CFDE F020          	movff	postinc2,i2printf@val
  9586  000A20  CFDD F021          	movff	postdec2,i2printf@val+1
  9587  000A24  0E00               	movlw	0
  9588  000A26  BE21               	btfsc	i2printf@val+1,7,c
  9589  000A28  0EFF               	movlw	-1
  9590  000A2A  6E22               	movwf	i2printf@val+2,c
  9591  000A2C  6E23               	movwf	i2printf@val+3,c
  9592  000A2E  0E02               	movlw	2
  9593  000A30                     L7:
  9594  000A30  261D               	addwf	i2printf@ap,f,c
  9595  000A32  0E00               	movlw	0
  9596  000A34  221E               	addwfc	i2printf@ap+1,f,c
  9597                           
  9598                           ;doprnt.c: 1261: if((long)val < 0) {
  9599  000A36  AE23               	btfss	i2printf@val+3,7,c
  9600  000A38  D00A               	goto	i2l359
  9601                           
  9602                           ;doprnt.c: 1262: flag |= 0x03;
  9603  000A3A  0E03               	movlw	3
  9604  000A3C  121F               	iorwf	i2printf@flag,f,c
  9605                           
  9606                           ;doprnt.c: 1263: val = -val;
  9607  000A3E  1E23               	comf	i2printf@val+3,f,c
  9608  000A40  1E22               	comf	i2printf@val+2,f,c
  9609  000A42  1E21               	comf	i2printf@val+1,f,c
  9610  000A44  6C20               	negf	i2printf@val,c
  9611  000A46  0E00               	movlw	0
  9612  000A48  2221               	addwfc	i2printf@val+1,f,c
  9613  000A4A  2222               	addwfc	i2printf@val+2,f,c
  9614  000A4C  2223               	addwfc	i2printf@val+3,f,c
  9615  000A4E                     i2l359:
  9616                           
  9617                           ;doprnt.c: 1264: }
  9618                           ;doprnt.c: 1266: }
  9619                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9620  000A4E  0E01               	movlw	1
  9621  000A50  6E24               	movwf	i2printf@c,c
  9622  000A52                     i2l2935:
  9623  000A52  0E0A               	movlw	10
  9624  000A54  1824               	xorwf	i2printf@c,w,c
  9625  000A56  B4D8               	btfsc	status,2,c
  9626  000A58  D018               	goto	i2u234_40
  9627                           
  9628                           ;doprnt.c: 1306: if(val < dpowers[c])
  9629  000A5A  5024               	movf	i2printf@c,w,c
  9630  000A5C  0D04               	mullw	4
  9631  000A5E  0E59               	movlw	low _dpowers
  9632  000A60  24F3               	addwf	prodl,w,c
  9633  000A62  6EF6               	movwf	tblptrl,c
  9634  000A64  0E7A               	movlw	high _dpowers
  9635  000A66  20F4               	addwfc	prodh,w,c
  9636  000A68  6EF7               	movwf	tblptrh,c
  9637  000A6A                     	if	0	;There are less than 3 active tblptr bytes
  9638  000A6A                     	endif
  9639  000A6A  0009               	tblrd		*+
  9640  000A6C  50F5               	movf	tablat,w,c
  9641  000A6E  5C20               	subwf	i2printf@val,w,c
  9642  000A70  0009               	tblrd		*+
  9643  000A72  50F5               	movf	tablat,w,c
  9644  000A74  5821               	subwfb	i2printf@val+1,w,c
  9645  000A76  0009               	tblrd		*+
  9646  000A78  50F5               	movf	tablat,w,c
  9647  000A7A  5822               	subwfb	i2printf@val+2,w,c
  9648  000A7C  0009               	tblrd		*+
  9649  000A7E  50F5               	movf	tablat,w,c
  9650  000A80  5823               	subwfb	i2printf@val+3,w,c
  9651  000A82  A0D8               	btfss	status,0,c
  9652  000A84  D002               	goto	i2u234_40
  9653                           
  9654                           ;doprnt.c: 1307: break;
  9655  000A86  2A24               	incf	i2printf@c,f,c
  9656  000A88  D7E4               	goto	i2l2935
  9657  000A8A                     i2u234_40:
  9658                           
  9659                           ;doprnt.c: 1422: {
  9660                           ;doprnt.c: 1438: if(flag & 0x03)
  9661  000A8A  C01F  F019         	movff	i2printf@flag,??i2_printf
  9662  000A8E  0E03               	movlw	3
  9663  000A90  1619               	andwf	??i2_printf,f,c
  9664  000A92  B4D8               	btfsc	status,2,c
  9665  000A94  D003               	goto	i2l363
  9666                           
  9667                           ;doprnt.c: 1439: (putch('-') );
  9668  000A96  0E2D               	movlw	45
  9669  000A98  ECDA  F00E         	call	i2_putch
  9670  000A9C                     i2l363:
  9671                           
  9672                           ;doprnt.c: 1469: }
  9673                           ;doprnt.c: 1472: prec = c;
  9674  000A9C  5024               	movf	i2printf@c,w,c
  9675  000A9E  6E1B               	movwf	i2printf@prec,c
  9676  000AA0  6A1C               	clrf	i2printf@prec+1,c
  9677  000AA2  BE1B               	btfsc	i2printf@prec,7,c
  9678  000AA4  061C               	decf	i2printf@prec+1,f,c
  9679                           
  9680                           ;doprnt.c: 1474: while(prec--) {
  9681  000AA6  D03E               	goto	i2l364
  9682  000AA8                     i2l2953:
  9683                           
  9684                           ;doprnt.c: 1478: {
  9685                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9686  000AA8  C01B  F019         	movff	i2printf@prec,??i2_printf
  9687  000AAC  C01C  F01A         	movff	i2printf@prec+1,??i2_printf+1
  9688  000AB0  90D8               	bcf	status,0,c
  9689  000AB2  3619               	rlcf	??i2_printf,f,c
  9690  000AB4  361A               	rlcf	??i2_printf+1,f,c
  9691  000AB6  90D8               	bcf	status,0,c
  9692  000AB8  3619               	rlcf	??i2_printf,f,c
  9693  000ABA  361A               	rlcf	??i2_printf+1,f,c
  9694  000ABC  0E59               	movlw	low _dpowers
  9695  000ABE  2419               	addwf	??i2_printf,w,c
  9696  000AC0  6EF6               	movwf	tblptrl,c
  9697  000AC2  0E7A               	movlw	high _dpowers
  9698  000AC4  201A               	addwfc	??i2_printf+1,w,c
  9699  000AC6  6EF7               	movwf	tblptrh,c
  9700  000AC8                     	if	0	;There are less than 3 active tblptr bytes
  9701  000AC8                     	endif
  9702  000AC8  0009               	tblrd		*+
  9703  000ACA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
  9704  000ACE  0009               	tblrd		*+
  9705  000AD0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
  9706  000AD4  0009               	tblrd		*+
  9707  000AD6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
  9708  000ADA  000A               	tblrd		*-
  9709  000ADC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
  9710  000AE0  C020  F001         	movff	i2printf@val,i2___lldiv@dividend
  9711  000AE4  C021  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
  9712  000AE8  C022  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
  9713  000AEC  C023  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
  9714  000AF0  EC65  F00C         	call	i2___lldiv	;wreg free
  9715  000AF4  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
  9716  000AF8  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
  9717  000AFC  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
  9718  000B00  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
  9719  000B04  0E0A               	movlw	10
  9720  000B06  6E12               	movwf	i2___llmod@divisor,c
  9721  000B08  0E00               	movlw	0
  9722  000B0A  6E13               	movwf	i2___llmod@divisor+1,c
  9723  000B0C  0E00               	movlw	0
  9724  000B0E  6E14               	movwf	i2___llmod@divisor+2,c
  9725  000B10  0E00               	movlw	0
  9726  000B12  6E15               	movwf	i2___llmod@divisor+3,c
  9727  000B14  EC08  F00E         	call	i2___llmod	;wreg free
  9728  000B18  500E               	movf	?i2___llmod,w,c
  9729  000B1A  0F30               	addlw	48
  9730  000B1C  6E24               	movwf	i2printf@c,c
  9731                           
  9732                           ;doprnt.c: 1523: }
  9733                           ;doprnt.c: 1524: (putch(c) );
  9734  000B1E  5024               	movf	i2printf@c,w,c
  9735  000B20  ECDA  F00E         	call	i2_putch
  9736  000B24                     i2l364:
  9737  000B24  061B               	decf	i2printf@prec,f,c
  9738  000B26  A0D8               	btfss	status,0,c
  9739  000B28  061C               	decf	i2printf@prec+1,f,c
  9740  000B2A  281B               	incf	i2printf@prec,w,c
  9741  000B2C  E1BD               	bnz	i2l2953
  9742  000B2E  281C               	incf	i2printf@prec+1,w,c
  9743  000B30  A4D8               	btfss	status,2,c
  9744  000B32  D7BA               	goto	i2l365
  9745  000B34                     i2u236_40:
  9746  000B34  C017  FFF6         	movff	i2printf@f,tblptrl
  9747  000B38  C018  FFF7         	movff	i2printf@f+1,tblptrh
  9748  000B3C  4A17               	infsnz	i2printf@f,f,c
  9749  000B3E  2A18               	incf	i2printf@f+1,f,c
  9750  000B40                     	if	0	;tblptru may be non-zero
  9751  000B40                     	endif
  9752  000B40                     	if	0	;tblptru may be non-zero
  9753  000B40                     	endif
  9754  000B40  0008               	tblrd		*
  9755  000B42  CFF5 F024          	movff	tablat,i2printf@c
  9756  000B46  5024               	movf	i2printf@c,w,c
  9757  000B48  B4D8               	btfsc	status,2,c
  9758  000B4A  0012               	return	
  9759  000B4C  D730               	goto	i2l346
  9760  000B4E                     __end_ofi2_printf:
  9761                           	opt stack 0
  9762                           pclatu	equ	0xFFB
  9763                           pclath	equ	0xFFA
  9764                           tblptru	equ	0xFF8
  9765                           tblptrh	equ	0xFF7
  9766                           tblptrl	equ	0xFF6
  9767                           tablat	equ	0xFF5
  9768                           prodh	equ	0xFF4
  9769                           prodl	equ	0xFF3
  9770                           intcon	equ	0xFF2
  9771                           intcon2	equ	0xFF1
  9772                           intcon3	equ	0xFF0
  9773                           postinc0	equ	0xFEE
  9774                           fsr0h	equ	0xFEA
  9775                           fsr0l	equ	0xFE9
  9776                           wreg	equ	0xFE8
  9777                           postinc1	equ	0xFE6
  9778                           postdec1	equ	0xFE5
  9779                           fsr1h	equ	0xFE2
  9780                           fsr1l	equ	0xFE1
  9781                           bsr	equ	0xFE0
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           postdec2	equ	0xFDD
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function i2_putch *****************
  9790 ;; Defined at:
  9791 ;;		line 99 in file "Lab7.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  data            1    wreg     unsigned char 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  data            1    0[COMRAM] unsigned char 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9805 ;;      Params:         0       0       0       0       0       0       0
  9806 ;;      Locals:         1       0       0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0
  9808 ;;      Totals:         1       0       0       0       0       0       0
  9809 ;;Total ram usage:        1 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		i2_printf
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text34
  9819  001DB4                     __ptext34:
  9820                           	opt stack 0
  9821  001DB4                     i2_putch:
  9822                           	opt stack 19
  9823                           
  9824                           ;incstack = 0
  9825                           ;i2putch@data stored from wreg
  9826  001DB4  6E01               	movwf	i2putch@data,c
  9827  001DB6                     
  9828                           ;Lab7.c: 102: continue;
  9829                           
  9830                           ;Lab7.c: 101: while(!PIR1bits.TXIF)
  9831  001DB6  A89E               	btfss	3998,4,c	;volatile
  9832  001DB8  D7FE               	goto	i2l2559
  9833                           
  9834                           ;Lab7.c: 103: TXREG = data;
  9835  001DBA  C001  FFAD         	movff	i2putch@data,4013	;volatile
  9836  001DBE  0012               	return		;funcret
  9837  001DC0                     __end_ofi2_putch:
  9838                           	opt stack 0
  9839                           pclatu	equ	0xFFB
  9840                           pclath	equ	0xFFA
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           intcon2	equ	0xFF1
  9849                           intcon3	equ	0xFF0
  9850                           postinc0	equ	0xFEE
  9851                           fsr0h	equ	0xFEA
  9852                           fsr0l	equ	0xFE9
  9853                           wreg	equ	0xFE8
  9854                           postinc1	equ	0xFE6
  9855                           postdec1	equ	0xFE5
  9856                           fsr1h	equ	0xFE2
  9857                           fsr1l	equ	0xFE1
  9858                           bsr	equ	0xFE0
  9859                           indf2	equ	0xFDF
  9860                           postinc2	equ	0xFDE
  9861                           postdec2	equ	0xFDD
  9862                           fsr2h	equ	0xFDA
  9863                           fsr2l	equ	0xFD9
  9864                           status	equ	0xFD8
  9865                           
  9866 ;; *************** function i2___llmod *****************
  9867 ;; Defined at:
  9868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  dividend        4   13[COMRAM] unsigned long 
  9871 ;;  divisor         4   17[COMRAM] unsigned long 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  __llmod         1   21[COMRAM] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  4   13[COMRAM] unsigned long 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9883 ;;      Params:         8       0       0       0       0       0       0
  9884 ;;      Locals:         1       0       0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0
  9886 ;;      Totals:         9       0       0       0       0       0       0
  9887 ;;Total ram usage:        9 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		i2_printf
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text35
  9897  001C10                     __ptext35:
  9898                           	opt stack 0
  9899  001C10                     i2___llmod:
  9900                           	opt stack 19
  9901                           
  9902                           ;incstack = 0
  9903  001C10  5012               	movf	i2___llmod@divisor,w,c
  9904  001C12  1013               	iorwf	i2___llmod@divisor+1,w,c
  9905  001C14  1014               	iorwf	i2___llmod@divisor+2,w,c
  9906  001C16  1015               	iorwf	i2___llmod@divisor+3,w,c
  9907  001C18  B4D8               	btfsc	status,2,c
  9908  001C1A  D024               	goto	i2l734
  9909  001C1C  0E01               	movlw	1
  9910  001C1E  6E16               	movwf	i2___llmod@counter,c
  9911  001C20  D006               	goto	i2l729
  9912  001C22  90D8               	bcf	status,0,c
  9913  001C24  3612               	rlcf	i2___llmod@divisor,f,c
  9914  001C26  3613               	rlcf	i2___llmod@divisor+1,f,c
  9915  001C28  3614               	rlcf	i2___llmod@divisor+2,f,c
  9916  001C2A  3615               	rlcf	i2___llmod@divisor+3,f,c
  9917  001C2C  2A16               	incf	i2___llmod@counter,f,c
  9918  001C2E                     i2l729:
  9919  001C2E  AE15               	btfss	i2___llmod@divisor+3,7,c
  9920  001C30  D7F8               	goto	i2l730
  9921  001C32                     i2u187_40:
  9922  001C32  5012               	movf	i2___llmod@divisor,w,c
  9923  001C34  5C0E               	subwf	i2___llmod@dividend,w,c
  9924  001C36  5013               	movf	i2___llmod@divisor+1,w,c
  9925  001C38  580F               	subwfb	i2___llmod@dividend+1,w,c
  9926  001C3A  5014               	movf	i2___llmod@divisor+2,w,c
  9927  001C3C  5810               	subwfb	i2___llmod@dividend+2,w,c
  9928  001C3E  5015               	movf	i2___llmod@divisor+3,w,c
  9929  001C40  5811               	subwfb	i2___llmod@dividend+3,w,c
  9930  001C42  A0D8               	btfss	status,0,c
  9931  001C44  D008               	goto	i2l733
  9932  001C46  5012               	movf	i2___llmod@divisor,w,c
  9933  001C48  5E0E               	subwf	i2___llmod@dividend,f,c
  9934  001C4A  5013               	movf	i2___llmod@divisor+1,w,c
  9935  001C4C  5A0F               	subwfb	i2___llmod@dividend+1,f,c
  9936  001C4E  5014               	movf	i2___llmod@divisor+2,w,c
  9937  001C50  5A10               	subwfb	i2___llmod@dividend+2,f,c
  9938  001C52  5015               	movf	i2___llmod@divisor+3,w,c
  9939  001C54  5A11               	subwfb	i2___llmod@dividend+3,f,c
  9940  001C56                     i2l733:
  9941  001C56  90D8               	bcf	status,0,c
  9942  001C58  3215               	rrcf	i2___llmod@divisor+3,f,c
  9943  001C5A  3214               	rrcf	i2___llmod@divisor+2,f,c
  9944  001C5C  3213               	rrcf	i2___llmod@divisor+1,f,c
  9945  001C5E  3212               	rrcf	i2___llmod@divisor,f,c
  9946  001C60  2E16               	decfsz	i2___llmod@counter,f,c
  9947  001C62  D7E7               	goto	i2u187_40
  9948  001C64                     i2l734:
  9949  001C64  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
  9950  001C68  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
  9951  001C6C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
  9952  001C70  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
  9953  001C74  0012               	return		;funcret
  9954  001C76                     __end_ofi2___llmod:
  9955                           	opt stack 0
  9956                           pclatu	equ	0xFFB
  9957                           pclath	equ	0xFFA
  9958                           tblptru	equ	0xFF8
  9959                           tblptrh	equ	0xFF7
  9960                           tblptrl	equ	0xFF6
  9961                           tablat	equ	0xFF5
  9962                           prodh	equ	0xFF4
  9963                           prodl	equ	0xFF3
  9964                           intcon	equ	0xFF2
  9965                           intcon2	equ	0xFF1
  9966                           intcon3	equ	0xFF0
  9967                           postinc0	equ	0xFEE
  9968                           fsr0h	equ	0xFEA
  9969                           fsr0l	equ	0xFE9
  9970                           wreg	equ	0xFE8
  9971                           postinc1	equ	0xFE6
  9972                           postdec1	equ	0xFE5
  9973                           fsr1h	equ	0xFE2
  9974                           fsr1l	equ	0xFE1
  9975                           bsr	equ	0xFE0
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           postdec2	equ	0xFDD
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function i2___lldiv *****************
  9984 ;; Defined at:
  9985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  dividend        4    0[COMRAM] unsigned long 
  9988 ;;  divisor         4    4[COMRAM] unsigned long 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  __lldiv         4    8[COMRAM] unsigned long 
  9991 ;;  __lldiv         1   12[COMRAM] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  4    0[COMRAM] unsigned long 
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10001 ;;      Params:         8       0       0       0       0       0       0
 10002 ;;      Locals:         5       0       0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0
 10004 ;;      Totals:        13       0       0       0       0       0       0
 10005 ;;Total ram usage:       13 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		i2_printf
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text36
 10015  0018CA                     __ptext36:
 10016                           	opt stack 0
 10017  0018CA                     i2___lldiv:
 10018                           	opt stack 19
 10019                           
 10020                           ;incstack = 0
 10021  0018CA  0E00               	movlw	0
 10022  0018CC  6E09               	movwf	i2___lldiv@quotient,c
 10023  0018CE  0E00               	movlw	0
 10024  0018D0  6E0A               	movwf	i2___lldiv@quotient+1,c
 10025  0018D2  0E00               	movlw	0
 10026  0018D4  6E0B               	movwf	i2___lldiv@quotient+2,c
 10027  0018D6  0E00               	movlw	0
 10028  0018D8  6E0C               	movwf	i2___lldiv@quotient+3,c
 10029  0018DA  5005               	movf	i2___lldiv@divisor,w,c
 10030  0018DC  1006               	iorwf	i2___lldiv@divisor+1,w,c
 10031  0018DE  1007               	iorwf	i2___lldiv@divisor+2,w,c
 10032  0018E0  1008               	iorwf	i2___lldiv@divisor+3,w,c
 10033  0018E2  B4D8               	btfsc	status,2,c
 10034  0018E4  D02A               	goto	i2l724
 10035  0018E6  0E01               	movlw	1
 10036  0018E8  6E0D               	movwf	i2___lldiv@counter,c
 10037  0018EA  D006               	goto	i2l719
 10038  0018EC  90D8               	bcf	status,0,c
 10039  0018EE  3605               	rlcf	i2___lldiv@divisor,f,c
 10040  0018F0  3606               	rlcf	i2___lldiv@divisor+1,f,c
 10041  0018F2  3607               	rlcf	i2___lldiv@divisor+2,f,c
 10042  0018F4  3608               	rlcf	i2___lldiv@divisor+3,f,c
 10043  0018F6  2A0D               	incf	i2___lldiv@counter,f,c
 10044  0018F8                     i2l719:
 10045  0018F8  AE08               	btfss	i2___lldiv@divisor+3,7,c
 10046  0018FA  D7F8               	goto	i2l720
 10047  0018FC                     i2u181_40:
 10048  0018FC  90D8               	bcf	status,0,c
 10049  0018FE  3609               	rlcf	i2___lldiv@quotient,f,c
 10050  001900  360A               	rlcf	i2___lldiv@quotient+1,f,c
 10051  001902  360B               	rlcf	i2___lldiv@quotient+2,f,c
 10052  001904  360C               	rlcf	i2___lldiv@quotient+3,f,c
 10053  001906  5005               	movf	i2___lldiv@divisor,w,c
 10054  001908  5C01               	subwf	i2___lldiv@dividend,w,c
 10055  00190A  5006               	movf	i2___lldiv@divisor+1,w,c
 10056  00190C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 10057  00190E  5007               	movf	i2___lldiv@divisor+2,w,c
 10058  001910  5803               	subwfb	i2___lldiv@dividend+2,w,c
 10059  001912  5008               	movf	i2___lldiv@divisor+3,w,c
 10060  001914  5804               	subwfb	i2___lldiv@dividend+3,w,c
 10061  001916  A0D8               	btfss	status,0,c
 10062  001918  D009               	goto	i2l723
 10063  00191A  5005               	movf	i2___lldiv@divisor,w,c
 10064  00191C  5E01               	subwf	i2___lldiv@dividend,f,c
 10065  00191E  5006               	movf	i2___lldiv@divisor+1,w,c
 10066  001920  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 10067  001922  5007               	movf	i2___lldiv@divisor+2,w,c
 10068  001924  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 10069  001926  5008               	movf	i2___lldiv@divisor+3,w,c
 10070  001928  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 10071  00192A  8009               	bsf	i2___lldiv@quotient,0,c
 10072  00192C                     i2l723:
 10073  00192C  90D8               	bcf	status,0,c
 10074  00192E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 10075  001930  3207               	rrcf	i2___lldiv@divisor+2,f,c
 10076  001932  3206               	rrcf	i2___lldiv@divisor+1,f,c
 10077  001934  3205               	rrcf	i2___lldiv@divisor,f,c
 10078  001936  2E0D               	decfsz	i2___lldiv@counter,f,c
 10079  001938  D7E1               	goto	i2u181_40
 10080  00193A                     i2l724:
 10081  00193A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 10082  00193E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 10083  001942  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 10084  001946  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 10085  00194A  0012               	return		;funcret
 10086  00194C                     __end_ofi2___lldiv:
 10087                           	opt stack 0
 10088                           pclatu	equ	0xFFB
 10089                           pclath	equ	0xFFA
 10090                           tblptru	equ	0xFF8
 10091                           tblptrh	equ	0xFF7
 10092                           tblptrl	equ	0xFF6
 10093                           tablat	equ	0xFF5
 10094                           prodh	equ	0xFF4
 10095                           prodl	equ	0xFF3
 10096                           intcon	equ	0xFF2
 10097                           intcon2	equ	0xFF1
 10098                           intcon3	equ	0xFF0
 10099                           postinc0	equ	0xFEE
 10100                           fsr0h	equ	0xFEA
 10101                           fsr0l	equ	0xFE9
 10102                           wreg	equ	0xFE8
 10103                           postinc1	equ	0xFE6
 10104                           postdec1	equ	0xFE5
 10105                           fsr1h	equ	0xFE2
 10106                           fsr1l	equ	0xFE1
 10107                           bsr	equ	0xFE0
 10108                           indf2	equ	0xFDF
 10109                           postinc2	equ	0xFDE
 10110                           postdec2	equ	0xFDD
 10111                           fsr2h	equ	0xFDA
 10112                           fsr2l	equ	0xFD9
 10113                           status	equ	0xFD8
 10114                           pclatu	equ	0xFFB
 10115                           pclath	equ	0xFFA
 10116                           tblptru	equ	0xFF8
 10117                           tblptrh	equ	0xFF7
 10118                           tblptrl	equ	0xFF6
 10119                           tablat	equ	0xFF5
 10120                           prodh	equ	0xFF4
 10121                           prodl	equ	0xFF3
 10122                           intcon	equ	0xFF2
 10123                           intcon2	equ	0xFF1
 10124                           intcon3	equ	0xFF0
 10125                           postinc0	equ	0xFEE
 10126                           fsr0h	equ	0xFEA
 10127                           fsr0l	equ	0xFE9
 10128                           wreg	equ	0xFE8
 10129                           postinc1	equ	0xFE6
 10130                           postdec1	equ	0xFE5
 10131                           fsr1h	equ	0xFE2
 10132                           fsr1l	equ	0xFE1
 10133                           bsr	equ	0xFE0
 10134                           indf2	equ	0xFDF
 10135                           postinc2	equ	0xFDE
 10136                           postdec2	equ	0xFDD
 10137                           fsr2h	equ	0xFDA
 10138                           fsr2l	equ	0xFD9
 10139                           status	equ	0xFD8
 10140                           
 10141                           	psect	rparam
 10142  0000                     pclatu	equ	0xFFB
 10143                           pclath	equ	0xFFA
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           intcon	equ	0xFF2
 10151                           intcon2	equ	0xFF1
 10152                           intcon3	equ	0xFF0
 10153                           postinc0	equ	0xFEE
 10154                           fsr0h	equ	0xFEA
 10155                           fsr0l	equ	0xFE9
 10156                           wreg	equ	0xFE8
 10157                           postinc1	equ	0xFE6
 10158                           postdec1	equ	0xFE5
 10159                           fsr1h	equ	0xFE2
 10160                           fsr1l	equ	0xFE1
 10161                           bsr	equ	0xFE0
 10162                           indf2	equ	0xFDF
 10163                           postinc2	equ	0xFDE
 10164                           postdec2	equ	0xFDD
 10165                           fsr2h	equ	0xFDA
 10166                           fsr2l	equ	0xFD9
 10167                           status	equ	0xFD8
 10168                           
 10169                           	psect	temp
 10170  00004B                     btemp:
 10171                           	opt stack 0
 10172  00004B                     	ds	1
 10173  0000                     int$flags	set	btemp
 10174  0000                     wtemp6	set	btemp+1
 10175                           pclatu	equ	0xFFB
 10176                           pclath	equ	0xFFA
 10177                           tblptru	equ	0xFF8
 10178                           tblptrh	equ	0xFF7
 10179                           tblptrl	equ	0xFF6
 10180                           tablat	equ	0xFF5
 10181                           prodh	equ	0xFF4
 10182                           prodl	equ	0xFF3
 10183                           intcon	equ	0xFF2
 10184                           intcon2	equ	0xFF1
 10185                           intcon3	equ	0xFF0
 10186                           postinc0	equ	0xFEE
 10187                           fsr0h	equ	0xFEA
 10188                           fsr0l	equ	0xFE9
 10189                           wreg	equ	0xFE8
 10190                           postinc1	equ	0xFE6
 10191                           postdec1	equ	0xFE5
 10192                           fsr1h	equ	0xFE2
 10193                           fsr1l	equ	0xFE1
 10194                           bsr	equ	0xFE0
 10195                           indf2	equ	0xFDF
 10196                           postinc2	equ	0xFDE
 10197                           postdec2	equ	0xFDD
 10198                           fsr2h	equ	0xFDA
 10199                           fsr2l	equ	0xFD9
 10200                           status	equ	0xFD8


Data Sizes:
    Strings     1406
    Constant    40
    Data        9
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56      74
    BANK0           128     80      90
    BANK1           256     56      71
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> saved_pass(BANK1[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> pass(BANK1[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 161
		 -> STR_70(CODE[4]), STR_69(CODE[23]), STR_68(CODE[9]), STR_67(CODE[28]), 
		 -> STR_66(CODE[26]), STR_65(CODE[25]), STR_64(CODE[133]), STR_63(CODE[20]), 
		 -> STR_62(CODE[21]), STR_61(CODE[14]), STR_60(CODE[15]), STR_59(CODE[23]), 
		 -> STR_58(CODE[3]), STR_57(CODE[27]), STR_56(CODE[26]), STR_55(CODE[25]), 
		 -> STR_54(CODE[25]), STR_53(CODE[151]), STR_52(CODE[20]), STR_51(CODE[21]), 
		 -> STR_50(CODE[14]), STR_49(CODE[15]), STR_48(CODE[23]), STR_47(CODE[19]), 
		 -> STR_46(CODE[18]), STR_45(CODE[25]), STR_44(CODE[117]), STR_43(CODE[20]), 
		 -> STR_42(CODE[21]), STR_41(CODE[14]), STR_40(CODE[15]), STR_39(CODE[23]), 
		 -> STR_38(CODE[21]), STR_37(CODE[25]), STR_36(CODE[109]), STR_35(CODE[20]), 
		 -> STR_34(CODE[21]), STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[28]), 
		 -> STR_30(CODE[21]), STR_29(CODE[2]), STR_28(CODE[11]), STR_27(CODE[54]), 
		 -> STR_26(CODE[25]), STR_25(CODE[2]), STR_24(CODE[21]), STR_23(CODE[2]), 
		 -> STR_22(CODE[25]), STR_21(CODE[23]), STR_20(CODE[25]), STR_19(CODE[3]), 
		 -> STR_18(CODE[161]), STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[14]), 
		 -> STR_14(CODE[15]), STR_13(CODE[17]), STR_12(CODE[2]), STR_11(CODE[15]), 
		 -> STR_10(CODE[39]), STR_9(CODE[3]), STR_8(CODE[57]), STR_7(CODE[31]), 
		 -> STR_6(CODE[36]), STR_5(CODE[39]), STR_4(CODE[31]), STR_3(CODE[28]), 
		 -> STR_2(CODE[7]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?i1_printf(BANK0[2]), ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _temp_sensor in COMRAM

    None.

Critical Paths under _alarm in COMRAM

    _alarm->i2_password
    i2_password->i2_printf
    i2_Clear->i2_printf
    i2_printf->i2___llmod
    i2___llmod->i2___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _temp_sensor in BANK0

    _temp_sensor->_ADC
    i1_Clear->i1_printf
    _password->i1_printf
    i1_printf->i1___llmod
    i1___llmod->i1___lldiv
    _ADC->___fttol
    ___fttol->___ftmul
    ___ftmul->___altoft
    ___altoft->___ftpack

Critical Paths under _alarm in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_password_options
    _temp_options->_printf
    _password_options->_password_change
    _password_change->_printf
    _keypad->_printf
    _input_options->_printf
    _alarm_options->_printf
    _Clear->_printf
    _printf->___llmod
    ___llmod->___lldiv

Critical Paths under _temp_sensor in BANK1

    None.

Critical Paths under _alarm in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _temp_sensor in BANK2

    None.

Critical Paths under _alarm in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _temp_sensor in BANK3

    None.

Critical Paths under _alarm in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _temp_sensor in BANK4

    None.

Critical Paths under _alarm in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _temp_sensor in BANK5

    None.

Critical Paths under _alarm in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   80094
                                             50 BANK1      6     6      0
                              _Clear
                      _alarm_options
                      _input_options
                             _keypad
                   _password_options
                             _printf
                       _temp_options
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_eeprom                                         3     2      1     120
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _temp_options                                         4     4      0   12222
                                             42 BANK1      4     4      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (1) _password_options                                     2     2      0   25000
                                             48 BANK1      2     2      0
                              _Clear
                    _password_change
                             _printf
 ---------------------------------------------------------------------------------
 (2) _password_change                                      6     6      0   12824
                                             42 BANK1      6     6      0
                              _Clear
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     512
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _keypad                                               2     0      2    6088
                                             42 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _input_options                                        2     2      0   12176
                                             42 BANK1      2     2      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (1) _alarm_options                                        2     2      0   12176
                                             42 BANK1      2     2      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Clear                                                0     0      0    6088
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              29    21      8    6088
                                             22 BANK1     20    12      8
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             13 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _temp_sensor                                         28    28      0   13510
                                             52 BANK0     28    28      0
                                _ADC
                           _password
                            i1_Clear
                           i1_printf
 ---------------------------------------------------------------------------------
 (7) i1_Clear                                              0     0      0    1663
                           i1_printf
 ---------------------------------------------------------------------------------
 (7) _password                                             2     2      0    2059
                                             38 BANK0      2     2      0
                           i1_printf
                          i1_strncmp
 ---------------------------------------------------------------------------------
 (8) i1_strncmp                                            9     3      6     297
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (7) i1_printf                                            25    21      4    1663
                                             22 BANK0     16    12      4
                          i1___lldiv
                          i1___llmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (8) i1_putch                                              1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) i1___llmod                                            9     1      8     302
                                             13 BANK0      9     1      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lldiv                                           13     5      8     311
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (7) _ADC                                                  4     4      0    8057
                                             48 BANK0      4     4      0
                            ___aldiv
                           ___altoft
                            ___ftmul
                            ___fttol
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8     456
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             15    11      4     328
                                             33 BANK0     15    11      4
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    3581
                                             18 BANK0     15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___altoft                                            10     6      4    3067
                                              8 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2773
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _alarm                                              18    18      0    3622
                                             38 COMRAM    18    18      0
                            i2_Clear
                         i2_password
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_password                                          2     2      0    1394
                                             36 COMRAM     2     2      0
                           i2_printf
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (12) i2_strncmp                                           9     3      6     212
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (11) i2_Clear                                             0     0      0    1114
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_printf                                           23    21      2    1114
                                             22 COMRAM    14    12      2
                          i2___lldiv
                          i2___llmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (12) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2___llmod                                           9     1      8     211
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _alarm_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _input_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _keypad
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _password_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _password_change
       _Clear
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
       _strncmp
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
   _temp_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _write_eeprom

 _temp_sensor (ROOT)
   _ADC
     ___aldiv
     ___altoft
       ___ftpack
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___lmul
   _password
     i1_printf
       i1___lldiv
       i1___llmod
         i1___lldiv (ARG)
       i1_putch
     i1_strncmp
   i1_Clear
     i1_printf
       i1___lldiv
       i1___llmod
         i1___lldiv (ARG)
       i1_putch
   i1_printf
     i1___lldiv
     i1___llmod
       i1___lldiv (ARG)
     i1_putch

 _alarm (ROOT)
   i2_Clear
     i2_printf
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2_putch
   i2_password
     i2_printf
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2_putch
     i2_strncmp
   i2_printf
     i2___lldiv
     i2___llmod
       i2___lldiv (ARG)
     i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     38      47       7       27.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     50      5A       5       70.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      4A       1       58.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      15        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 08 13:37:03 2018

             ___altoft@exp 0090              ___altoft@sign 0091                         bsr 000FE0  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
         password_change@i 012C                        l201 0F3A                        l202 0EF4  
                      l310 0C86                        l230 10EA                        l303 0CB4  
                      l304 0BFC                        l232 1110                        l241 115C  
                      l306 0C26                        l226 109C                        l170 0358  
                      l251 0D5A                        l307 0C52                        l227 10B4  
                      l171 0366                        l260 0DE0                        l308 0C80  
                      l236 118A                        l228 10C2                        l172 03CE  
                      l164 02EA                        l245 0CE6                        l317 1CF4  
                      l237 1142                        l229 10DC                        l262 0DE6  
                      l246 0CFE                        l270 04C6                        l182 0446  
                      l166 0314                        l255 0E14                        l247 0D0C  
                      l239 1156                        l183 0400                        l167 0318  
                      l159 029A                        _ADC 0F68                        l352 0658  
                      l256 0D8C                        l248 0D26                        l272 04EC  
                      l168 0330                        l257 0DA8                        l249 0D34  
                      l281 0578                        l185 0406                        l169 033E  
                      l346 0640                        l282 059C                        l266 0478  
                      l186 040C                        l363 0730                        l355 0688  
                      l347 0650                        l267 0490                        l187 0412  
                      l364 07BE                        l196 0E62                        l276 060C  
                      l268 049E                        l188 0418                        l365 073E  
                      l357 06A8                        l349 065A                        l293 0B52  
                      l277 051E                        l269 04B8                        l294 0B6E  
                      l278 0540                        l359 06E2                        l295 0B7C  
                      l287 05D8                        l279 0558                        l720 17E6  
                      l296 0B96                        l297 0BA4                        l289 05DE  
                      l730 1B54                        l723 1826                        l299 0BCA  
                      l724 1834                        l733 1B88                        l734 1B96  
                      l719 17F2                        l729 1B60                        l916 19B0  
                      l917 194E                        l918 19A6               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000                        wreg 000FE8                       ?_ADC 0001  
             __CFG_LVP$OFF 000000      __end_of_input_options 0CE2               __CFG_WDT$OFF 000000  
                     l2401 1D9C                       l2503 194E                       l2473 06E6  
                     l2491 073E                       l2655 0E9A                       l3625 02D2  
                     l2675 0F2C                       l3627 02DA                       l3637 0308  
                     STR_1 7FF1                       STR_2 7FEA                       STR_3 7DF9  
                     STR_4 7DDA                       STR_5 7D8F                       STR_6 7DB6  
                     STR_7 7DDA                       STR_8 7D20                       STR_9 7FFA  
                     u1500 17F6                       u1600 071E                       u1530 1B64  
                     u1620 07D0                       u1650 1974                       u1910 0E9A  
                     u3507 039C                       u2660 059A                       u3517 0432  
                     u1950 0F2C                       u3607 0CA0                       u3527 1D34  
                     u2680 05D6                       u2920 0390                       u3617 0DCC  
                     u3537 0564                       u3627 0E00                       u3547 05F8  
                     u3557 1176                       u2870 02D2                       u3567 0F54  
                     u3577 0C18                       u2890 0308                       u3587 0C44  
                     u3597 0C70            __end_ofi1_Clear 1D7E            __end_ofi2_Clear 1D98  
        i1___lldiv@divisor 0084                       _main 01F0               ___ftpack@arg 0080  
                     _pass 013F               ___ftpack@exp 0083                       _temp 0047  
                     _test 0045                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004B  
        i1___lldiv@counter 008C                       prodh 000FF4                       prodl 000FF3  
                     start 01EC              __CFG_IESO$OFF 000000                 i2_password 1698  
          __end_ofi1_putch 1DB4            __end_ofi2_putch 1DC0              __CFG_MCLRE$ON 000000  
             ___ftmul@cntr 009F               ___param_bank 000000               ___ftmul@sign 00A0  
 __size_of_password_change 0132                      ??_ADC 00B0               ___fttol@exp1 00AF  
             ___fttol@lval 00AB            __end_of___aldiv 153A                      ?_main 0001  
                    _EEADR 000FA9                      STR_10 7D8F                      STR_11 7FB5  
                    STR_12 7FFD                      STR_20 7EB5                      STR_13 7FA4  
                    STR_21 7F00                      STR_14 7FC4                      STR_30 7F17  
                    STR_22 7EE7                      STR_23 7FFD                      STR_15 7FD3  
                    STR_31 7E15                      STR_40 7FC4                      STR_32 7FC4  
                    STR_24 7F56                      STR_16 7F41                      STR_41 7FD3  
                    STR_33 7FD3                      STR_25 7FFD                      STR_17 7F6B  
                    STR_42 7F41                      STR_34 7F41                      STR_50 7FD3  
                    STR_26 7E9C                      STR_18 7A81                      STR_51 7F41  
                    STR_43 7F6B                      STR_35 7F6B                      STR_19 7FFA  
                    STR_27 7D59                      STR_28 7FB9                      STR_60 7FC4  
                    STR_52 7F6B                      STR_36 7CB3                      STR_44 7C3E  
                    STR_45 7EB5                      STR_37 7EB5                      STR_61 7FD3  
                    STR_29 7FFD                      STR_53 7B22                      STR_54 7EB5  
                    STR_62 7F41                      STR_70 7FF6                      STR_46 7F92  
                    STR_38 7F2C                      STR_63 7F6B                      STR_39 7F00  
                    STR_47 7F7F                      STR_55 7ECE                      STR_48 7F00  
                    STR_56 7E68                      STR_64 7BB9                      STR_65 7EB5  
                    STR_49 7FC4                      STR_57 7E4D                      STR_58 7FFA  
                    STR_66 7E82                      STR_59 7F00                      STR_67 7E31  
                    STR_68 7FE1                      STR_69 7F00            __end_of___lldiv 1846  
          __end_of___ftmul 139A            __end_of___llmod 1BA8            __end_of___fttol 12A4  
                    i1l141 0180                      i1l214 1612                      i1l142 0148  
                    i1l137 018E                      i1l219 1688                      i1l147 018C  
                    i1l139 012A                      i1l431 1504                      i1l432 1512  
                    i1l424 148A                      i1l352 0810                      i1l433 1528  
                    i1l425 14A2                      i1l346 07F8                      i1l427 14D0  
                    i1l363 08E8                      i1l355 0840                      i1l347 0808  
                    i1l428 14C4                      i1l380 1C88                      i1l364 0976  
                    i1l453 1A7C                      i1l381 1C9C                      i1l365 08F6  
                    i1l357 0860                      i1l349 0812                      i2l214 16BC  
                    i1l454 1A70                      i1l359 089A                      i1l720 186A  
                    i1l730 1BBC                      i2l219 172C                      i1l723 18AA  
                    i1l724 18B8                      i1l733 1BF0                      i1l590 15B6  
                    i1l662 12CE                      i1l734 1BFE                      i1l583 1564  
                    i1l719 1876                      i2l352 09C4                      i1l584 155A  
                    i1l664 12F6                      i1l665 1328                      i1l729 1BC8  
                    i2l346 09AE                      i1l586 1598                      i1l666 1338  
                    i2l363 0A9C                      i2l355 09F4                      i2l347 09BE  
                    i1l587 1582                      i1l691 1276                      i1l683 11DA  
                    i2l364 0B24                      i1l668 1350                      i1l692 126A  
                    i1l916 1A30                      i2l365 0AA8                      i2l357 0A14  
                    i2l349 09C6                      i1l589 15C0                      i1l669 1360  
                    i1l685 1252                      i1l917 19CE                      i1l694 1292  
                    i1l686 1242                      i1l918 1A26                      i2l359 0A4E  
                    i2l720 18EC                      i2l730 1C22                      i2l723 192C  
                    i2l724 193A                      i2l733 1C56                      i2l734 1C64  
                    i2l719 18F8                      i2l729 1C2E                      i2l916 1B26  
                    i2l917 1AC8                      i2l918 1B1E                      _RCREG 000FAE  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _SPBRG 000FAF  
                    _TRISB 000F93                      _TRISD 000F95                      _TXREG 000FAD  
            __CFG_PWRT$OFF 000000                      _Clear 1D42              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000        ___lmul@multiplicand 0084  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _adLow 0041              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000         i1___lldiv@dividend 0080                      _check 013C  
           __CFG_EBTRB$OFF 000000                      _alarm 0008            __end_of_dpowers 7A81  
            ___ftpack@sign 0084                      _putch 1D98                      main@i 0134  
           __CFG_BOREN$OFF 000000                      pclath 000FFA                      tablat 000FF5  
                    status 000FD8                      wtemp6 004C            __end_of_strncmp 19CC  
       __size_ofi1___lldiv 0084      __end_of_alarm_options 0E36         __size_ofi1___llmod 0068  
         __end_ofi1_printf 09A4         __size_ofi2___lldiv 0082         __size_ofi2___llmod 0066  
         __end_ofi2_printf 0B4E                 i1printf@ap 009E            __initialization 173A  
        i2___lldiv@divisor 0005               __end_of_main 0474          i2___lldiv@counter 000D  
               i2printf@ap 001D         i1___lldiv@quotient 0088      __size_of_write_eeprom 0034  
                   ??_main 0132              ___fttol@sign1 00AA              __activetblptr 000002  
       __size_ofi1_strncmp 0080         __size_ofi2_strncmp 007A                     ?_Clear 0001  
                ??i1_Clear 00A6                     ?_alarm 0001                  ??i2_Clear 0025  
         __end_of___altoft 1AC6           ___llmod@dividend 010D                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _EEDATA 000FA8                     _EECON2 000FA7  
                   ?_putch 0001           __end_of___ftpack 15EA          i1___llmod@divisor 0091  
                   i1l4029 089E                     i1l4047 08F6                     i1l4057 19CE  
                   i1l4165 016E                     i1l4089 164A                     i1l4169 018C  
                   u212_21 11BE                     i1l3839 1DAA                     i2l3419 16F0  
                   i2l2559 1DB6                     i2l2935 0A52                     i2l2953 0AA8  
                   u320_21 12B6                     i2l2981 1AC8                     u322_21 12DE  
        i1___llmod@counter 0095                  ??i1_putch 0080                  ??i2_putch 0001  
 __end_of_password_options 11AC               _write_eeprom 1D0E                ?i2_password 0001  
           __CFG_XINST$OFF 000000                     _adHigh 003D                     ___lmul 1C76  
                ??___aldiv 0088             __CFG_STVREN$ON 000000                  ??___lldiv 0108  
                ??___ftmul 0098                     _choice 00D6                  ??___llmod 0115  
                ??___fttol 00A5                     _keypad 1CCE                     clear_0 1796  
                   clear_1 17A2                     clear_2 17AE               ?_temp_sensor 0001  
                   _printf 0634          ??_password_change 012A      ___ftmul@f3_as_product 009C  
         __end_of_password 1698          __end_ofi1___lldiv 18CA          __end_ofi1___llmod 1C10  
             __pdataCOMRAM 0048          __end_ofi2___lldiv 194C          __end_ofi2___llmod 1C76  
             __mediumconst 7A58                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_strncmp 0106                i2password@i 0025  
               __accesstop 0080    __end_of__initialization 17B4                 ___altoft@c 0088  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001          __end_ofi1_strncmp 1A4C  
        i2___llmod@divisor 0012          __end_ofi2_strncmp 1B40                i1printf@val 00A1  
        i2___llmod@counter 0016              __end_of_Clear 1D60                 ___ftmul@f1 0092  
               ___ftmul@f2 0095                 ___fttol@f1 00A1             __pcstackCOMRAM 0001  
       i2___lldiv@dividend 0001               __pidataBANK0 1DC7               __pidataBANK1 1DC0  
            __end_of_alarm 146C                i1putch@data 0080              __end_of_putch 1DA6  
              i2printf@val 0020                i2putch@data 0001                    ??_Clear 012A  
                ?i1_printf 0096        __size_ofi2_password 00A2                  ?i2_printf 0017  
                  ??_alarm 0027                    ??_putch 0100         i2___lldiv@quotient 0009  
               __pbssBANK0 00D0                 __pbssBANK1 0138                i1strncmp@s1 0080  
              i1strncmp@s2 0082                i2strncmp@s1 0001                i2strncmp@s2 0003  
                  ?___lmul 0080                  ?___altoft 0088                    ?_keypad 012A  
           ___lmul@product 0088                  ?___ftpack 0080                    ?_printf 0116  
       i1___llmod@dividend 008D                 ??i1_printf 009A                 ??i2_printf 0019  
                  i1_Clear 1D60                    i2_Clear 1D7E           write_eeprom@data 0100  
                  i1_putch 1DA6                    i2_putch 1DB4                    __Hparam 0000  
                ?_password 0001                    __Lparam 0000                    ___aldiv 146C  
          __size_of___lmul 0058                    ___lldiv 17C2                    ___ftmul 12A4  
                  ___llmod 1B40                    ___fttol 11AC                 ??___altoft 008C  
   __size_of_input_options 0194                    _decimal 0039                    __pcinit 173A  
               ??___ftpack 0085            __size_of_keypad 0040                    __ramtop 0600  
                  __ptext0 01F0                    __ptext1 1D0E                    __ptext2 0474  
                  __ptext3 1098                    __ptext4 0E36                    __ptext5 194C  
                  __ptext6 1CCE                    __ptext7 0B4E                    __ptext8 0CE2  
                  __ptext9 1D42            __size_of_printf 01B8                  _T0CONbits 000FD5  
             __size_of_ADC 0130                    _dpowers 7A59       __size_of_temp_sensor 01D4  
         ___aldiv@dividend 0080              ?_temp_options 0001                    _voltage 00D0  
                  _strncmp 194C             __pintcode_body 139A       end_of_initialization 17B4  
            __Lmediumconst 7A58                    int_func 139A                 _saved_pass 0143  
        ?_password_options 0001            ___lldiv@divisor 0104               ??i2_password 0025  
               ??_password 00A6            ___lldiv@counter 010C         ??_password_options 0130  
          _password_change 0E36                  _RCSTAbits 000FAB                    printf@c 0129  
                  printf@f 0116           ___aldiv@quotient 008A                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                  _PORTBbits 000F81                  _PORTDbits 000F83  
   __size_of_alarm_options 0154             ??_temp_options 012A                  _TRISCbits 000F94  
                _TRISDbits 000F95                  i1___lldiv 1846         __end_ofi2_password 173A  
                i1___llmod 1BA8                 main@i_1064 0136                  i2___lldiv 18CA  
                i2___llmod 1C10              _input_options 0B4E                  _TXSTAbits 000FAC  
       i2___llmod@dividend 000E               i1printf@flag 00A0               i1printf@prec 009C  
              ___ftmul@exp 009B                  i1_strncmp 19CC                  i2_strncmp 1AC6  
           __end_of___lmul 1CCE              __pidataCOMRAM 1DC4             __end_of_keypad 1D0E  
           __end_of_printf 07EC               i2printf@flag 001F               i2printf@prec 001B  
      start_initialization 173A                __end_of_ADC 1098                  i1printf@c 00A5  
                i1printf@f 0096                  i2printf@c 0024                  i2printf@f 0017  
               ?i1___lldiv 0080                 ?i1___llmod 008D                 ?i2___lldiv 0001  
           ?_input_options 0001                 ?i2___llmod 000E          __size_ofi1_printf 01B8  
        __size_ofi2_printf 01AA    __end_of_password_change 0F68            ___llmod@divisor 0111  
          ___llmod@counter 0115              _alarm_options 0CE2                   ??___lmul 0088  
               ?i1_strncmp 0080                 ?i2_strncmp 0001      password_change@i_1080 012E  
              __pdataBANK0 00D8                __pdataBANK1 0143             _temp_threshold 00D8  
         __CFG_LPT1OSC$OFF 000000                   ??_keypad 012C                   ??_printf 011E  
        __size_of___altoft 007A          __size_of___ftpack 00B0               i1strncmp@len 0084  
              __pbssCOMRAM 0039              __pcstackBANK0 0080              __pcstackBANK1 0100  
                 ?i1_Clear 0001                   ?i2_Clear 0001                   ?i1_putch 0001  
                 ?i2_putch 0001             ?_alarm_options 0001               i2strncmp@len 0005  
                _alarm_loc 004A                  _alarm_set 0138          __CFG_CCP2MX$PORTC 000000  
     __end_of_temp_options 0634                  __pintcode 0008              __pmediumconst 7A58  
                 ?___aldiv 0080          __size_of_password 00AE                   ?___lldiv 0100  
                 ?___ftmul 0092                   ?___llmod 010D                   ?___fttol 00A1  
              __pintcodelo 0018             __size_of_Clear 001E            ??_input_options 012A  
              ??i1___lldiv 0088                ??i1___llmod 0095             __size_of_alarm 1464  
              ??i2___lldiv 0009                ??i2___llmod 0016                   ?_strncmp 0100  
           __size_of_putch 000E            ___aldiv@divisor 0084           ?_password_change 0001  
          ___aldiv@counter 0088                   _IPR1bits 000F9F                   _PIE1bits 000F9D  
            ?_write_eeprom 0100                   i1u300_20 15CA                   i1u214_20 11F8  
                 i1u214_25 11F0                   i1u305_20 187A                   i1u218_20 127C  
                 i1u315_20 14D4                   i1u331_20 08D6                   i1u308_20 1BCC  
                 i1u340_20 164A                   i1u333_20 0988                   i1u336_20 19F4  
                 i1u363_27 007C                   i1u364_27 0090                   i1u296_20 154C  
                 i2u234_40 0A8A                   i2u242_40 1AEE                   i2u236_40 0B34  
                 i2u181_40 18FC                   _PIR1bits 000F9E                   i2u187_40 1C32  
                 i2u275_40 16F0                   _RCONbits 000FD0           __CFG_WDTPS$32768 000000  
              ??i1_strncmp 0086                ??i2_strncmp 0007              ??_temp_sensor 00B4  
               _ADCON0bits 000FC2                 _ADCON1bits 000FC1  __size_of_password_options 0114  
               _ADCON2bits 000FC0                  _triggered 013A                 printf@flag 0124  
               printf@prec 0120                   i1_printf 07EC                   i2_printf 09A4  
         __size_ofi1_Clear 001E          ___lmul@multiplier 0080                _INTCON2bits 000FF1  
              _INTCON3bits 000FF0           __size_ofi2_Clear 001A                  copy_data0 174E  
          ??_alarm_options 012A           __size_ofi1_putch 000E             ??_write_eeprom 0101  
         __size_ofi2_putch 000C                 _EECON1bits 000FA6                   __Hrparam 0000  
                 __Lrparam 0000           __size_of___aldiv 00CE           __size_of___lldiv 0084  
                 ___altoft 1A4C           __size_of___ftmul 00F6           __size_of___llmod 0068  
         __size_of___fttol 00F8                   ___ftpack 153A        __end_of_temp_sensor 01EC  
                 __ptext10 0634                   __ptext11 1D98                   __ptext20 1BA8  
                 __ptext12 1B40                   __ptext21 1846                   __ptext13 17C2  
                 __ptext30 1698                   __ptext22 0F68                   __ptext31 1AC6  
                 __ptext23 1C76                   __ptext15 1D60                   __ptext32 1D7E  
                 __ptext24 11AC                   __ptext16 15EA                   __ptext33 09A4  
                 __ptext25 12A4                   __ptext17 19CC                   __ptext34 1DB4  
                 __ptext26 1A4C                   __ptext18 07EC                   __ptext35 1C10  
                 __ptext27 153A                   __ptext19 1DA6                   __ptext36 18CA  
                 __ptext28 146C                  password@i 00A6           __size_of_strncmp 0080  
    __size_of_temp_options 01C0              __size_of_main 0284                 strncmp@len 0104  
                 _pass_loc 013E                   _password 15EA                   _temp_loc 0049  
                 _temp_set 00D4                   int$flags 004B              temp_options@i 012C  
                printf@val 0125                  putch@data 0100                 _INTCONbits 000FF2  
             _temp_options 0474                   intlevel1 0000                   intlevel2 0000  
         ___lldiv@dividend 0100                  strncmp@s1 0100                  strncmp@s2 0102  
             temp_sensor@i 00CE                   printf@ap 0122                _temp_sensor 0018  
         _password_options 1098       __end_of_write_eeprom 1D42              _threshold_loc 0048  
         ___lldiv@quotient 0108               ___aldiv@sign 0089        write_eeprom@address 0102  
