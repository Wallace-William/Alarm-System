

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 06 22:19:39 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  0010E2                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _saved_pass
    81  0010E2  31                 	db	49
    82  0010E3  32                 	db	50
    83  0010E4  33                 	db	51
    84  0010E5  34                 	db	52
    85                           
    86                           	psect	mediumconst
    87  007BB8                     __pmediumconst:
    88                           	opt stack 0
    89  007BB8  00                 	db	0
    90  007BB9                     _dpowers:
    91                           	opt stack 0
    92  007BB9  0001               	dw	1
    93  007BBB  000A               	dw	10
    94  007BBD  0064               	dw	100
    95  007BBF  03E8               	dw	1000
    96  007BC1  2710               	dw	10000
    97  007BC3                     __end_of_dpowers:
    98                           	opt stack 0
    99  0000                     _PORTDbits	set	3971
   100  0000                     _RCREG	set	4014
   101  0000                     _TMR0L	set	4054
   102  0000                     _TMR0H	set	4055
   103  0000                     _INTCON2bits	set	4081
   104  0000                     _T0CONbits	set	4053
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _ADCON1bits	set	4033
   107  0000                     _IPR1bits	set	3999
   108  0000                     _PIE1bits	set	3997
   109  0000                     _RCONbits	set	4048
   110  0000                     _SPBRG	set	4015
   111  0000                     _TRISCbits	set	3988
   112  0000                     _TRISD	set	3989
   113  0000                     _TRISB	set	3987
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _TXSTAbits	set	4012
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADRESL	set	4035
   118  0000                     _ADCON0bits	set	4034
   119  0000                     _INTCONbits	set	4082
   120  0000                     _INTCON3bits	set	4080
   121  0000                     _PORTBbits	set	3969
   122  0000                     _TXREG	set	4013
   123  0000                     _PIR1bits	set	3998
   124  007BC3                     STR_13:
   125  007BC3  43                 	db	67	;'C'
   126  007BC4  75                 	db	117	;'u'
   127  007BC5  72                 	db	114	;'r'
   128  007BC6  72                 	db	114	;'r'
   129  007BC7  65                 	db	101	;'e'
   130  007BC8  6E                 	db	110	;'n'
   131  007BC9  74                 	db	116	;'t'
   132  007BCA  20                 	db	32
   133  007BCB  54                 	db	84	;'T'
   134  007BCC  65                 	db	101	;'e'
   135  007BCD  6D                 	db	109	;'m'
   136  007BCE  70                 	db	112	;'p'
   137  007BCF  20                 	db	32
   138  007BD0  5B                 	db	91	;'['
   139  007BD1  46                 	db	70	;'F'
   140  007BD2  5D                 	db	93	;']'
   141  007BD3  3A                 	db	58	;':'
   142  007BD4  20                 	db	32
   143  007BD5  25                 	db	37
   144  007BD6  64                 	db	100	;'d'
   145  007BD7  0A                 	db	10
   146  007BD8  0D                 	db	13
   147  007BD9  0A                 	db	10
   148  007BDA  0D                 	db	13
   149  007BDB  41                 	db	65	;'A'
   150  007BDC  6C                 	db	108	;'l'
   151  007BDD  61                 	db	97	;'a'
   152  007BDE  72                 	db	114	;'r'
   153  007BDF  6D                 	db	109	;'m'
   154  007BE0  20                 	db	32
   155  007BE1  53                 	db	83	;'S'
   156  007BE2  79                 	db	121	;'y'
   157  007BE3  73                 	db	115	;'s'
   158  007BE4  74                 	db	116	;'t'
   159  007BE5  65                 	db	101	;'e'
   160  007BE6  6D                 	db	109	;'m'
   161  007BE7  0A                 	db	10
   162  007BE8  0D                 	db	13
   163  007BE9  2D                 	db	45
   164  007BEA  2D                 	db	45
   165  007BEB  2D                 	db	45
   166  007BEC  2D                 	db	45
   167  007BED  2D                 	db	45
   168  007BEE  2D                 	db	45
   169  007BEF  2D                 	db	45
   170  007BF0  2D                 	db	45
   171  007BF1  2D                 	db	45
   172  007BF2  2D                 	db	45
   173  007BF3  2D                 	db	45
   174  007BF4  2D                 	db	45
   175  007BF5  2D                 	db	45
   176  007BF6  2D                 	db	45
   177  007BF7  2D                 	db	45
   178  007BF8  2D                 	db	45
   179  007BF9  2D                 	db	45
   180  007BFA  0A                 	db	10
   181  007BFB  0D                 	db	13
   182  007BFC  31                 	db	49	;'1'
   183  007BFD  29                 	db	41
   184  007BFE  50                 	db	80	;'P'
   185  007BFF  61                 	db	97	;'a'
   186  007C00  73                 	db	115	;'s'
   187  007C01  73                 	db	115	;'s'
   188  007C02  77                 	db	119	;'w'
   189  007C03  6F                 	db	111	;'o'
   190  007C04  72                 	db	114	;'r'
   191  007C05  64                 	db	100	;'d'
   192  007C06  0A                 	db	10
   193  007C07  0D                 	db	13
   194  007C08  32                 	db	50	;'2'
   195  007C09  29                 	db	41
   196  007C0A  50                 	db	80	;'P'
   197  007C0B  49                 	db	73	;'I'
   198  007C0C  52                 	db	82	;'R'
   199  007C0D  20                 	db	32
   200  007C0E  53                 	db	83	;'S'
   201  007C0F  65                 	db	101	;'e'
   202  007C10  6E                 	db	110	;'n'
   203  007C11  73                 	db	115	;'s'
   204  007C12  6F                 	db	111	;'o'
   205  007C13  72                 	db	114	;'r'
   206  007C14  0A                 	db	10
   207  007C15  0D                 	db	13
   208  007C16  33                 	db	51	;'3'
   209  007C17  29                 	db	41
   210  007C18  54                 	db	84	;'T'
   211  007C19  65                 	db	101	;'e'
   212  007C1A  6D                 	db	109	;'m'
   213  007C1B  70                 	db	112	;'p'
   214  007C1C  20                 	db	32
   215  007C1D  53                 	db	83	;'S'
   216  007C1E  65                 	db	101	;'e'
   217  007C1F  6E                 	db	110	;'n'
   218  007C20  73                 	db	115	;'s'
   219  007C21  6F                 	db	111	;'o'
   220  007C22  72                 	db	114	;'r'
   221  007C23  0A                 	db	10
   222  007C24  0D                 	db	13
   223  007C25  34                 	db	52	;'4'
   224  007C26  29                 	db	41
   225  007C27  49                 	db	73	;'I'
   226  007C28  6E                 	db	110	;'n'
   227  007C29  70                 	db	112	;'p'
   228  007C2A  75                 	db	117	;'u'
   229  007C2B  74                 	db	116	;'t'
   230  007C2C  20                 	db	32
   231  007C2D  4D                 	db	77	;'M'
   232  007C2E  65                 	db	101	;'e'
   233  007C2F  74                 	db	116	;'t'
   234  007C30  68                 	db	104	;'h'
   235  007C31  6F                 	db	111	;'o'
   236  007C32  64                 	db	100	;'d'
   237  007C33  0A                 	db	10
   238  007C34  0D                 	db	13
   239  007C35  2D                 	db	45
   240  007C36  2D                 	db	45
   241  007C37  2D                 	db	45
   242  007C38  2D                 	db	45
   243  007C39  2D                 	db	45
   244  007C3A  2D                 	db	45
   245  007C3B  2D                 	db	45
   246  007C3C  2D                 	db	45
   247  007C3D  2D                 	db	45
   248  007C3E  2D                 	db	45
   249  007C3F  2D                 	db	45
   250  007C40  2D                 	db	45
   251  007C41  2D                 	db	45
   252  007C42  2D                 	db	45
   253  007C43  2D                 	db	45
   254  007C44  2D                 	db	45
   255  007C45  0A                 	db	10
   256  007C46  0D                 	db	13
   257  007C47  00                 	db	0
   258  007C48                     STR_47:
   259  007C48  0A                 	db	10
   260  007C49  0D                 	db	13
   261  007C4A  54                 	db	84	;'T'
   262  007C4B  65                 	db	101	;'e'
   263  007C4C  6D                 	db	109	;'m'
   264  007C4D  70                 	db	112	;'p'
   265  007C4E  65                 	db	101	;'e'
   266  007C4F  72                 	db	114	;'r'
   267  007C50  61                 	db	97	;'a'
   268  007C51  74                 	db	116	;'t'
   269  007C52  75                 	db	117	;'u'
   270  007C53  72                 	db	114	;'r'
   271  007C54  65                 	db	101	;'e'
   272  007C55  20                 	db	32
   273  007C56  53                 	db	83	;'S'
   274  007C57  65                 	db	101	;'e'
   275  007C58  6E                 	db	110	;'n'
   276  007C59  73                 	db	115	;'s'
   277  007C5A  6F                 	db	111	;'o'
   278  007C5B  72                 	db	114	;'r'
   279  007C5C  20                 	db	32
   280  007C5D  4F                 	db	79	;'O'
   281  007C5E  50                 	db	80	;'P'
   282  007C5F  54                 	db	84	;'T'
   283  007C60  49                 	db	73	;'I'
   284  007C61  4F                 	db	79	;'O'
   285  007C62  4E                 	db	78	;'N'
   286  007C63  53                 	db	83	;'S'
   287  007C64  0A                 	db	10
   288  007C65  0D                 	db	13
   289  007C66  31                 	db	49	;'1'
   290  007C67  29                 	db	41
   291  007C68  20                 	db	32
   292  007C69  45                 	db	69	;'E'
   293  007C6A  6E                 	db	110	;'n'
   294  007C6B  61                 	db	97	;'a'
   295  007C6C  62                 	db	98	;'b'
   296  007C6D  6C                 	db	108	;'l'
   297  007C6E  65                 	db	101	;'e'
   298  007C6F  2F                 	db	47
   299  007C70  44                 	db	68	;'D'
   300  007C71  69                 	db	105	;'i'
   301  007C72  73                 	db	115	;'s'
   302  007C73  61                 	db	97	;'a'
   303  007C74  62                 	db	98	;'b'
   304  007C75  6C                 	db	108	;'l'
   305  007C76  65                 	db	101	;'e'
   306  007C77  20                 	db	32
   307  007C78  41                 	db	65	;'A'
   308  007C79  6C                 	db	108	;'l'
   309  007C7A  61                 	db	97	;'a'
   310  007C7B  72                 	db	114	;'r'
   311  007C7C  6D                 	db	109	;'m'
   312  007C7D  0A                 	db	10
   313  007C7E  0D                 	db	13
   314  007C7F  32                 	db	50	;'2'
   315  007C80  29                 	db	41
   316  007C81  20                 	db	32
   317  007C82  54                 	db	84	;'T'
   318  007C83  65                 	db	101	;'e'
   319  007C84  6D                 	db	109	;'m'
   320  007C85  70                 	db	112	;'p'
   321  007C86  65                 	db	101	;'e'
   322  007C87  72                 	db	114	;'r'
   323  007C88  61                 	db	97	;'a'
   324  007C89  74                 	db	116	;'t'
   325  007C8A  75                 	db	117	;'u'
   326  007C8B  72                 	db	114	;'r'
   327  007C8C  65                 	db	101	;'e'
   328  007C8D  20                 	db	32
   329  007C8E  54                 	db	84	;'T'
   330  007C8F  68                 	db	104	;'h'
   331  007C90  72                 	db	114	;'r'
   332  007C91  65                 	db	101	;'e'
   333  007C92  73                 	db	115	;'s'
   334  007C93  68                 	db	104	;'h'
   335  007C94  6F                 	db	111	;'o'
   336  007C95  6C                 	db	108	;'l'
   337  007C96  64                 	db	100	;'d'
   338  007C97  0A                 	db	10
   339  007C98  0D                 	db	13
   340  007C99  33                 	db	51	;'3'
   341  007C9A  29                 	db	41
   342  007C9B  20                 	db	32
   343  007C9C  52                 	db	82	;'R'
   344  007C9D  65                 	db	101	;'e'
   345  007C9E  74                 	db	116	;'t'
   346  007C9F  75                 	db	117	;'u'
   347  007CA0  72                 	db	114	;'r'
   348  007CA1  6E                 	db	110	;'n'
   349  007CA2  20                 	db	32
   350  007CA3  74                 	db	116	;'t'
   351  007CA4  6F                 	db	111	;'o'
   352  007CA5  20                 	db	32
   353  007CA6  4D                 	db	77	;'M'
   354  007CA7  65                 	db	101	;'e'
   355  007CA8  6E                 	db	110	;'n'
   356  007CA9  75                 	db	117	;'u'
   357  007CAA  0A                 	db	10
   358  007CAB  0D                 	db	13
   359  007CAC  00                 	db	0
   360  007CAD                     STR_58:
   361  007CAD  0A                 	db	10
   362  007CAE  0D                 	db	13
   363  007CAF  0A                 	db	10
   364  007CB0  0D                 	db	13
   365  007CB1  49                 	db	73	;'I'
   366  007CB2  4E                 	db	78	;'N'
   367  007CB3  50                 	db	80	;'P'
   368  007CB4  55                 	db	85	;'U'
   369  007CB5  54                 	db	84	;'T'
   370  007CB6  20                 	db	32
   371  007CB7  4F                 	db	79	;'O'
   372  007CB8  50                 	db	80	;'P'
   373  007CB9  54                 	db	84	;'T'
   374  007CBA  49                 	db	73	;'I'
   375  007CBB  4F                 	db	79	;'O'
   376  007CBC  4E                 	db	78	;'N'
   377  007CBD  53                 	db	83	;'S'
   378  007CBE  3A                 	db	58	;':'
   379  007CBF  0A                 	db	10
   380  007CC0  0D                 	db	13
   381  007CC1  31                 	db	49	;'1'
   382  007CC2  29                 	db	41
   383  007CC3  20                 	db	32
   384  007CC4  55                 	db	85	;'U'
   385  007CC5  73                 	db	115	;'s'
   386  007CC6  65                 	db	101	;'e'
   387  007CC7  20                 	db	32
   388  007CC8  4B                 	db	75	;'K'
   389  007CC9  65                 	db	101	;'e'
   390  007CCA  79                 	db	121	;'y'
   391  007CCB  70                 	db	112	;'p'
   392  007CCC  61                 	db	97	;'a'
   393  007CCD  64                 	db	100	;'d'
   394  007CCE  0A                 	db	10
   395  007CCF  0D                 	db	13
   396  007CD0  32                 	db	50	;'2'
   397  007CD1  29                 	db	41
   398  007CD2  20                 	db	32
   399  007CD3  55                 	db	85	;'U'
   400  007CD4  73                 	db	115	;'s'
   401  007CD5  65                 	db	101	;'e'
   402  007CD6  20                 	db	32
   403  007CD7  4B                 	db	75	;'K'
   404  007CD8  65                 	db	101	;'e'
   405  007CD9  79                 	db	121	;'y'
   406  007CDA  62                 	db	98	;'b'
   407  007CDB  6F                 	db	111	;'o'
   408  007CDC  61                 	db	97	;'a'
   409  007CDD  72                 	db	114	;'r'
   410  007CDE  64                 	db	100	;'d'
   411  007CDF  0A                 	db	10
   412  007CE0  0D                 	db	13
   413  007CE1  33                 	db	51	;'3'
   414  007CE2  29                 	db	41
   415  007CE3  20                 	db	32
   416  007CE4  55                 	db	85	;'U'
   417  007CE5  73                 	db	115	;'s'
   418  007CE6  65                 	db	101	;'e'
   419  007CE7  20                 	db	32
   420  007CE8  42                 	db	66	;'B'
   421  007CE9  4F                 	db	79	;'O'
   422  007CEA  54                 	db	84	;'T'
   423  007CEB  48                 	db	72	;'H'
   424  007CEC  0A                 	db	10
   425  007CED  0D                 	db	13
   426  007CEE  34                 	db	52	;'4'
   427  007CEF  29                 	db	41
   428  007CF0  20                 	db	32
   429  007CF1  52                 	db	82	;'R'
   430  007CF2  65                 	db	101	;'e'
   431  007CF3  74                 	db	116	;'t'
   432  007CF4  75                 	db	117	;'u'
   433  007CF5  72                 	db	114	;'r'
   434  007CF6  6E                 	db	110	;'n'
   435  007CF7  20                 	db	32
   436  007CF8  74                 	db	116	;'t'
   437  007CF9  6F                 	db	111	;'o'
   438  007CFA  20                 	db	32
   439  007CFB  4D                 	db	77	;'M'
   440  007CFC  65                 	db	101	;'e'
   441  007CFD  6E                 	db	110	;'n'
   442  007CFE  75                 	db	117	;'u'
   443  007CFF  0A                 	db	10
   444  007D00  0D                 	db	13
   445  007D01  00                 	db	0
   446  007D02                     STR_38:
   447  007D02  0A                 	db	10
   448  007D03  0D                 	db	13
   449  007D04  50                 	db	80	;'P'
   450  007D05  49                 	db	73	;'I'
   451  007D06  52                 	db	82	;'R'
   452  007D07  20                 	db	32
   453  007D08  53                 	db	83	;'S'
   454  007D09  65                 	db	101	;'e'
   455  007D0A  6E                 	db	110	;'n'
   456  007D0B  73                 	db	115	;'s'
   457  007D0C  6F                 	db	111	;'o'
   458  007D0D  72                 	db	114	;'r'
   459  007D0E  20                 	db	32
   460  007D0F  4F                 	db	79	;'O'
   461  007D10  50                 	db	80	;'P'
   462  007D11  54                 	db	84	;'T'
   463  007D12  49                 	db	73	;'I'
   464  007D13  4F                 	db	79	;'O'
   465  007D14  4E                 	db	78	;'N'
   466  007D15  53                 	db	83	;'S'
   467  007D16  0A                 	db	10
   468  007D17  0D                 	db	13
   469  007D18  31                 	db	49	;'1'
   470  007D19  29                 	db	41
   471  007D1A  20                 	db	32
   472  007D1B  45                 	db	69	;'E'
   473  007D1C  6E                 	db	110	;'n'
   474  007D1D  61                 	db	97	;'a'
   475  007D1E  62                 	db	98	;'b'
   476  007D1F  6C                 	db	108	;'l'
   477  007D20  65                 	db	101	;'e'
   478  007D21  2F                 	db	47
   479  007D22  44                 	db	68	;'D'
   480  007D23  69                 	db	105	;'i'
   481  007D24  73                 	db	115	;'s'
   482  007D25  61                 	db	97	;'a'
   483  007D26  62                 	db	98	;'b'
   484  007D27  6C                 	db	108	;'l'
   485  007D28  65                 	db	101	;'e'
   486  007D29  20                 	db	32
   487  007D2A  41                 	db	65	;'A'
   488  007D2B  6C                 	db	108	;'l'
   489  007D2C  61                 	db	97	;'a'
   490  007D2D  72                 	db	114	;'r'
   491  007D2E  6D                 	db	109	;'m'
   492  007D2F  0A                 	db	10
   493  007D30  0D                 	db	13
   494  007D31  32                 	db	50	;'2'
   495  007D32  29                 	db	41
   496  007D33  20                 	db	32
   497  007D34  52                 	db	82	;'R'
   498  007D35  65                 	db	101	;'e'
   499  007D36  74                 	db	116	;'t'
   500  007D37  75                 	db	117	;'u'
   501  007D38  72                 	db	114	;'r'
   502  007D39  6E                 	db	110	;'n'
   503  007D3A  20                 	db	32
   504  007D3B  74                 	db	116	;'t'
   505  007D3C  6F                 	db	111	;'o'
   506  007D3D  20                 	db	32
   507  007D3E  4D                 	db	77	;'M'
   508  007D3F  65                 	db	101	;'e'
   509  007D40  6E                 	db	110	;'n'
   510  007D41  75                 	db	117	;'u'
   511  007D42  0A                 	db	10
   512  007D43  0D                 	db	13
   513  007D44  00                 	db	0
   514  007D45                     STR_30:
   515  007D45  0A                 	db	10
   516  007D46  0D                 	db	13
   517  007D47  50                 	db	80	;'P'
   518  007D48  41                 	db	65	;'A'
   519  007D49  53                 	db	83	;'S'
   520  007D4A  53                 	db	83	;'S'
   521  007D4B  57                 	db	87	;'W'
   522  007D4C  4F                 	db	79	;'O'
   523  007D4D  52                 	db	82	;'R'
   524  007D4E  44                 	db	68	;'D'
   525  007D4F  20                 	db	32
   526  007D50  4F                 	db	79	;'O'
   527  007D51  50                 	db	80	;'P'
   528  007D52  54                 	db	84	;'T'
   529  007D53  49                 	db	73	;'I'
   530  007D54  4F                 	db	79	;'O'
   531  007D55  4E                 	db	78	;'N'
   532  007D56  53                 	db	83	;'S'
   533  007D57  0A                 	db	10
   534  007D58  0D                 	db	13
   535  007D59  31                 	db	49	;'1'
   536  007D5A  29                 	db	41
   537  007D5B  43                 	db	67	;'C'
   538  007D5C  68                 	db	104	;'h'
   539  007D5D  61                 	db	97	;'a'
   540  007D5E  6E                 	db	110	;'n'
   541  007D5F  67                 	db	103	;'g'
   542  007D60  65                 	db	101	;'e'
   543  007D61  20                 	db	32
   544  007D62  50                 	db	80	;'P'
   545  007D63  61                 	db	97	;'a'
   546  007D64  73                 	db	115	;'s'
   547  007D65  73                 	db	115	;'s'
   548  007D66  77                 	db	119	;'w'
   549  007D67  6F                 	db	111	;'o'
   550  007D68  72                 	db	114	;'r'
   551  007D69  64                 	db	100	;'d'
   552  007D6A  0A                 	db	10
   553  007D6B  0D                 	db	13
   554  007D6C  32                 	db	50	;'2'
   555  007D6D  29                 	db	41
   556  007D6E  20                 	db	32
   557  007D6F  52                 	db	82	;'R'
   558  007D70  65                 	db	101	;'e'
   559  007D71  74                 	db	116	;'t'
   560  007D72  75                 	db	117	;'u'
   561  007D73  72                 	db	114	;'r'
   562  007D74  6E                 	db	110	;'n'
   563  007D75  20                 	db	32
   564  007D76  74                 	db	116	;'t'
   565  007D77  6F                 	db	111	;'o'
   566  007D78  20                 	db	32
   567  007D79  4D                 	db	77	;'M'
   568  007D7A  65                 	db	101	;'e'
   569  007D7B  6E                 	db	110	;'n'
   570  007D7C  75                 	db	117	;'u'
   571  007D7D  0A                 	db	10
   572  007D7E  0D                 	db	13
   573  007D7F  00                 	db	0
   574  007D80                     STR_21:
   575  007D80  0A                 	db	10
   576  007D81  0D                 	db	13
   577  007D82  50                 	db	80	;'P'
   578  007D83  61                 	db	97	;'a'
   579  007D84  73                 	db	115	;'s'
   580  007D85  73                 	db	115	;'s'
   581  007D86  77                 	db	119	;'w'
   582  007D87  6F                 	db	111	;'o'
   583  007D88  72                 	db	114	;'r'
   584  007D89  64                 	db	100	;'d'
   585  007D8A  20                 	db	32
   586  007D8B  49                 	db	73	;'I'
   587  007D8C  6E                 	db	110	;'n'
   588  007D8D  76                 	db	118	;'v'
   589  007D8E  61                 	db	97	;'a'
   590  007D8F  6C                 	db	108	;'l'
   591  007D90  69                 	db	105	;'i'
   592  007D91  64                 	db	100	;'d'
   593  007D92  2E                 	db	46
   594  007D93  20                 	db	32
   595  007D94  47                 	db	71	;'G'
   596  007D95  6F                 	db	111	;'o'
   597  007D96  69                 	db	105	;'i'
   598  007D97  6E                 	db	110	;'n'
   599  007D98  67                 	db	103	;'g'
   600  007D99  20                 	db	32
   601  007D9A  62                 	db	98	;'b'
   602  007D9B  61                 	db	97	;'a'
   603  007D9C  63                 	db	99	;'c'
   604  007D9D  6B                 	db	107	;'k'
   605  007D9E  20                 	db	32
   606  007D9F  74                 	db	116	;'t'
   607  007DA0  6F                 	db	111	;'o'
   608  007DA1  20                 	db	32
   609  007DA2  50                 	db	80	;'P'
   610  007DA3  61                 	db	97	;'a'
   611  007DA4  73                 	db	115	;'s'
   612  007DA5  73                 	db	115	;'s'
   613  007DA6  77                 	db	119	;'w'
   614  007DA7  6F                 	db	111	;'o'
   615  007DA8  72                 	db	114	;'r'
   616  007DA9  64                 	db	100	;'d'
   617  007DAA  20                 	db	32
   618  007DAB  4D                 	db	77	;'M'
   619  007DAC  65                 	db	101	;'e'
   620  007DAD  6E                 	db	110	;'n'
   621  007DAE  75                 	db	117	;'u'
   622  007DAF  2E                 	db	46
   623  007DB0  2E                 	db	46
   624  007DB1  2E                 	db	46
   625  007DB2  2E                 	db	46
   626  007DB3  0A                 	db	10
   627  007DB4  0D                 	db	13
   628  007DB5  00                 	db	0
   629  007DB6                     STR_5:
   630  007DB6  0A                 	db	10
   631  007DB7  0D                 	db	13
   632  007DB8  50                 	db	80	;'P'
   633  007DB9  72                 	db	114	;'r'
   634  007DBA  65                 	db	101	;'e'
   635  007DBB  73                 	db	115	;'s'
   636  007DBC  73                 	db	115	;'s'
   637  007DBD  20                 	db	32
   638  007DBE  41                 	db	65	;'A'
   639  007DBF  6E                 	db	110	;'n'
   640  007DC0  79                 	db	121	;'y'
   641  007DC1  20                 	db	32
   642  007DC2  42                 	db	66	;'B'
   643  007DC3  75                 	db	117	;'u'
   644  007DC4  74                 	db	116	;'t'
   645  007DC5  74                 	db	116	;'t'
   646  007DC6  6F                 	db	111	;'o'
   647  007DC7  6E                 	db	110	;'n'
   648  007DC8  20                 	db	32
   649  007DC9  74                 	db	116	;'t'
   650  007DCA  6F                 	db	111	;'o'
   651  007DCB  20                 	db	32
   652  007DCC  72                 	db	114	;'r'
   653  007DCD  65                 	db	101	;'e'
   654  007DCE  74                 	db	116	;'t'
   655  007DCF  75                 	db	117	;'u'
   656  007DD0  72                 	db	114	;'r'
   657  007DD1  6E                 	db	110	;'n'
   658  007DD2  20                 	db	32
   659  007DD3  74                 	db	116	;'t'
   660  007DD4  6F                 	db	111	;'o'
   661  007DD5  20                 	db	32
   662  007DD6  4D                 	db	77	;'M'
   663  007DD7  65                 	db	101	;'e'
   664  007DD8  6E                 	db	110	;'n'
   665  007DD9  75                 	db	117	;'u'
   666  007DDA  0A                 	db	10
   667  007DDB  0D                 	db	13
   668  007DDC  00                 	db	0
   669  007DDD                     STR_4:
   670  007DDD  0A                 	db	10
   671  007DDE  0D                 	db	13
   672  007DDF  45                 	db	69	;'E'
   673  007DE0  4E                 	db	78	;'N'
   674  007DE1  54                 	db	84	;'T'
   675  007DE2  45                 	db	69	;'E'
   676  007DE3  52                 	db	82	;'R'
   677  007DE4  20                 	db	32
   678  007DE5  50                 	db	80	;'P'
   679  007DE6  41                 	db	65	;'A'
   680  007DE7  53                 	db	83	;'S'
   681  007DE8  53                 	db	83	;'S'
   682  007DE9  57                 	db	87	;'W'
   683  007DEA  4F                 	db	79	;'O'
   684  007DEB  52                 	db	82	;'R'
   685  007DEC  44                 	db	68	;'D'
   686  007DED  20                 	db	32
   687  007DEE  54                 	db	84	;'T'
   688  007DEF  4F                 	db	79	;'O'
   689  007DF0  20                 	db	32
   690  007DF1  43                 	db	67	;'C'
   691  007DF2  4F                 	db	79	;'O'
   692  007DF3  4E                 	db	78	;'N'
   693  007DF4  54                 	db	84	;'T'
   694  007DF5  49                 	db	73	;'I'
   695  007DF6  4E                 	db	78	;'N'
   696  007DF7  55                 	db	85	;'U'
   697  007DF8  45                 	db	69	;'E'
   698  007DF9  0A                 	db	10
   699  007DFA  0D                 	db	13
   700  007DFB  00                 	db	0
   701  007DFC                     STR_3:
   702  007DFC  0A                 	db	10
   703  007DFD  0D                 	db	13
   704  007DFE  0A                 	db	10
   705  007DFF  0D                 	db	13
   706  007E00  0A                 	db	10
   707  007E01  0D                 	db	13
   708  007E02  41                 	db	65	;'A'
   709  007E03  4C                 	db	76	;'L'
   710  007E04  41                 	db	65	;'A'
   711  007E05  52                 	db	82	;'R'
   712  007E06  4D                 	db	77	;'M'
   713  007E07  20                 	db	32
   714  007E08  54                 	db	84	;'T'
   715  007E09  52                 	db	82	;'R'
   716  007E0A  49                 	db	73	;'I'
   717  007E0B  47                 	db	71	;'G'
   718  007E0C  47                 	db	71	;'G'
   719  007E0D  45                 	db	69	;'E'
   720  007E0E  52                 	db	82	;'R'
   721  007E0F  45                 	db	69	;'E'
   722  007E10  44                 	db	68	;'D'
   723  007E11  0A                 	db	10
   724  007E12  0D                 	db	13
   725  007E13  0A                 	db	10
   726  007E14  0D                 	db	13
   727  007E15  0A                 	db	10
   728  007E16  0D                 	db	13
   729  007E17  00                 	db	0
   730  007E18                     STR_25:
   731  007E18  0A                 	db	10
   732  007E19  0D                 	db	13
   733  007E1A  78                 	db	120	;'x'
   734  007E1B  78                 	db	120	;'x'
   735  007E1C  78                 	db	120	;'x'
   736  007E1D  78                 	db	120	;'x'
   737  007E1E  78                 	db	120	;'x'
   738  007E1F  78                 	db	120	;'x'
   739  007E20  78                 	db	120	;'x'
   740  007E21  49                 	db	73	;'I'
   741  007E22  4E                 	db	78	;'N'
   742  007E23  56                 	db	86	;'V'
   743  007E24  41                 	db	65	;'A'
   744  007E25  4C                 	db	76	;'L'
   745  007E26  49                 	db	73	;'I'
   746  007E27  44                 	db	68	;'D'
   747  007E28  78                 	db	120	;'x'
   748  007E29  78                 	db	120	;'x'
   749  007E2A  78                 	db	120	;'x'
   750  007E2B  78                 	db	120	;'x'
   751  007E2C  78                 	db	120	;'x'
   752  007E2D  78                 	db	120	;'x'
   753  007E2E  78                 	db	120	;'x'
   754  007E2F  0A                 	db	10
   755  007E30  0D                 	db	13
   756  007E31  0A                 	db	10
   757  007E32  0D                 	db	13
   758  007E33  00                 	db	0
   759  007E34                     STR_61:
   760  007E34  0A                 	db	10
   761  007E35  0D                 	db	13
   762  007E36  55                 	db	85	;'U'
   763  007E37  73                 	db	115	;'s'
   764  007E38  69                 	db	105	;'i'
   765  007E39  6E                 	db	110	;'n'
   766  007E3A  67                 	db	103	;'g'
   767  007E3B  20                 	db	32
   768  007E3C  4B                 	db	75	;'K'
   769  007E3D  65                 	db	101	;'e'
   770  007E3E  79                 	db	121	;'y'
   771  007E3F  62                 	db	98	;'b'
   772  007E40  6F                 	db	111	;'o'
   773  007E41  61                 	db	97	;'a'
   774  007E42  72                 	db	114	;'r'
   775  007E43  64                 	db	100	;'d'
   776  007E44  20                 	db	32
   777  007E45  61                 	db	97	;'a'
   778  007E46  73                 	db	115	;'s'
   779  007E47  20                 	db	32
   780  007E48  49                 	db	73	;'I'
   781  007E49  6E                 	db	110	;'n'
   782  007E4A  70                 	db	112	;'p'
   783  007E4B  75                 	db	117	;'u'
   784  007E4C  74                 	db	116	;'t'
   785  007E4D  0A                 	db	10
   786  007E4E  0D                 	db	13
   787  007E4F  00                 	db	0
   788  007E50                     STR_51:
   789  007E50  45                 	db	69	;'E'
   790  007E51  6E                 	db	110	;'n'
   791  007E52  74                 	db	116	;'t'
   792  007E53  65                 	db	101	;'e'
   793  007E54  72                 	db	114	;'r'
   794  007E55  20                 	db	32
   795  007E56  6E                 	db	110	;'n'
   796  007E57  65                 	db	101	;'e'
   797  007E58  77                 	db	119	;'w'
   798  007E59  20                 	db	32
   799  007E5A  74                 	db	116	;'t'
   800  007E5B  65                 	db	101	;'e'
   801  007E5C  6D                 	db	109	;'m'
   802  007E5D  70                 	db	112	;'p'
   803  007E5E  20                 	db	32
   804  007E5F  74                 	db	116	;'t'
   805  007E60  68                 	db	104	;'h'
   806  007E61  72                 	db	114	;'r'
   807  007E62  65                 	db	101	;'e'
   808  007E63  73                 	db	115	;'s'
   809  007E64  68                 	db	104	;'h'
   810  007E65  6F                 	db	111	;'o'
   811  007E66  6C                 	db	108	;'l'
   812  007E67  64                 	db	100	;'d'
   813  007E68  0A                 	db	10
   814  007E69  0D                 	db	13
   815  007E6A  00                 	db	0
   816  007E6B                     STR_50:
   817  007E6B  0A                 	db	10
   818  007E6C  0D                 	db	13
   819  007E6D  54                 	db	84	;'T'
   820  007E6E  65                 	db	101	;'e'
   821  007E6F  6D                 	db	109	;'m'
   822  007E70  70                 	db	112	;'p'
   823  007E71  65                 	db	101	;'e'
   824  007E72  72                 	db	114	;'r'
   825  007E73  61                 	db	97	;'a'
   826  007E74  74                 	db	116	;'t'
   827  007E75  75                 	db	117	;'u'
   828  007E76  72                 	db	114	;'r'
   829  007E77  65                 	db	101	;'e'
   830  007E78  20                 	db	32
   831  007E79  41                 	db	65	;'A'
   832  007E7A  6C                 	db	108	;'l'
   833  007E7B  61                 	db	97	;'a'
   834  007E7C  72                 	db	114	;'r'
   835  007E7D  6D                 	db	109	;'m'
   836  007E7E  20                 	db	32
   837  007E7F  4F                 	db	79	;'O'
   838  007E80  46                 	db	70	;'F'
   839  007E81  46                 	db	70	;'F'
   840  007E82  0A                 	db	10
   841  007E83  0D                 	db	13
   842  007E84  00                 	db	0
   843  007E85                     STR_60:
   844  007E85  0A                 	db	10
   845  007E86  0D                 	db	13
   846  007E87  55                 	db	85	;'U'
   847  007E88  73                 	db	115	;'s'
   848  007E89  69                 	db	105	;'i'
   849  007E8A  6E                 	db	110	;'n'
   850  007E8B  67                 	db	103	;'g'
   851  007E8C  20                 	db	32
   852  007E8D  4B                 	db	75	;'K'
   853  007E8E  65                 	db	101	;'e'
   854  007E8F  79                 	db	121	;'y'
   855  007E90  70                 	db	112	;'p'
   856  007E91  61                 	db	97	;'a'
   857  007E92  64                 	db	100	;'d'
   858  007E93  20                 	db	32
   859  007E94  61                 	db	97	;'a'
   860  007E95  73                 	db	115	;'s'
   861  007E96  20                 	db	32
   862  007E97  49                 	db	73	;'I'
   863  007E98  6E                 	db	110	;'n'
   864  007E99  70                 	db	112	;'p'
   865  007E9A  75                 	db	117	;'u'
   866  007E9B  74                 	db	116	;'t'
   867  007E9C  0A                 	db	10
   868  007E9D  0D                 	db	13
   869  007E9E  00                 	db	0
   870  007E9F                     STR_20:
   871  007E9F  0A                 	db	10
   872  007EA0  0D                 	db	13
   873  007EA1  0A                 	db	10
   874  007EA2  0D                 	db	13
   875  007EA3  50                 	db	80	;'P'
   876  007EA4  61                 	db	97	;'a'
   877  007EA5  73                 	db	115	;'s'
   878  007EA6  73                 	db	115	;'s'
   879  007EA7  77                 	db	119	;'w'
   880  007EA8  6F                 	db	111	;'o'
   881  007EA9  72                 	db	114	;'r'
   882  007EAA  64                 	db	100	;'d'
   883  007EAB  20                 	db	32
   884  007EAC  43                 	db	67	;'C'
   885  007EAD  68                 	db	104	;'h'
   886  007EAE  61                 	db	97	;'a'
   887  007EAF  6E                 	db	110	;'n'
   888  007EB0  67                 	db	103	;'g'
   889  007EB1  65                 	db	101	;'e'
   890  007EB2  64                 	db	100	;'d'
   891  007EB3  0A                 	db	10
   892  007EB4  0D                 	db	13
   893  007EB5  0A                 	db	10
   894  007EB6  0D                 	db	13
   895  007EB7  00                 	db	0
   896  007EB8                     STR_14:
   897  007EB8  0A                 	db	10
   898  007EB9  0D                 	db	13
   899  007EBA  52                 	db	82	;'R'
   900  007EBB  65                 	db	101	;'e'
   901  007EBC  74                 	db	116	;'t'
   902  007EBD  75                 	db	117	;'u'
   903  007EBE  72                 	db	114	;'r'
   904  007EBF  6E                 	db	110	;'n'
   905  007EC0  69                 	db	105	;'i'
   906  007EC1  6E                 	db	110	;'n'
   907  007EC2  67                 	db	103	;'g'
   908  007EC3  20                 	db	32
   909  007EC4  74                 	db	116	;'t'
   910  007EC5  6F                 	db	111	;'o'
   911  007EC6  20                 	db	32
   912  007EC7  4D                 	db	77	;'M'
   913  007EC8  65                 	db	101	;'e'
   914  007EC9  6E                 	db	110	;'n'
   915  007ECA  75                 	db	117	;'u'
   916  007ECB  2E                 	db	46
   917  007ECC  2E                 	db	46
   918  007ECD  2E                 	db	46
   919  007ECE  0A                 	db	10
   920  007ECF  0D                 	db	13
   921  007ED0  00                 	db	0
   922  007ED1                     STR_49:
   923  007ED1  0A                 	db	10
   924  007ED2  0D                 	db	13
   925  007ED3  54                 	db	84	;'T'
   926  007ED4  65                 	db	101	;'e'
   927  007ED5  6D                 	db	109	;'m'
   928  007ED6  70                 	db	112	;'p'
   929  007ED7  65                 	db	101	;'e'
   930  007ED8  72                 	db	114	;'r'
   931  007ED9  61                 	db	97	;'a'
   932  007EDA  74                 	db	116	;'t'
   933  007EDB  75                 	db	117	;'u'
   934  007EDC  72                 	db	114	;'r'
   935  007EDD  65                 	db	101	;'e'
   936  007EDE  20                 	db	32
   937  007EDF  41                 	db	65	;'A'
   938  007EE0  6C                 	db	108	;'l'
   939  007EE1  61                 	db	97	;'a'
   940  007EE2  72                 	db	114	;'r'
   941  007EE3  6D                 	db	109	;'m'
   942  007EE4  20                 	db	32
   943  007EE5  4F                 	db	79	;'O'
   944  007EE6  4E                 	db	78	;'N'
   945  007EE7  0A                 	db	10
   946  007EE8  0D                 	db	13
   947  007EE9  00                 	db	0
   948  007EEA                     STR_16:
   949  007EEA  45                 	db	69	;'E'
   950  007EEB  6E                 	db	110	;'n'
   951  007EEC  74                 	db	116	;'t'
   952  007EED  65                 	db	101	;'e'
   953  007EEE  72                 	db	114	;'r'
   954  007EEF  20                 	db	32
   955  007EF0  43                 	db	67	;'C'
   956  007EF1  75                 	db	117	;'u'
   957  007EF2  72                 	db	114	;'r'
   958  007EF3  72                 	db	114	;'r'
   959  007EF4  65                 	db	101	;'e'
   960  007EF5  6E                 	db	110	;'n'
   961  007EF6  74                 	db	116	;'t'
   962  007EF7  20                 	db	32
   963  007EF8  50                 	db	80	;'P'
   964  007EF9  61                 	db	97	;'a'
   965  007EFA  73                 	db	115	;'s'
   966  007EFB  73                 	db	115	;'s'
   967  007EFC  77                 	db	119	;'w'
   968  007EFD  6F                 	db	111	;'o'
   969  007EFE  72                 	db	114	;'r'
   970  007EFF  64                 	db	100	;'d'
   971  007F00  3A                 	db	58	;':'
   972  007F01  20                 	db	32
   973  007F02  00                 	db	0
   974  007F03                     STR_15:
   975  007F03  0A                 	db	10
   976  007F04  45                 	db	69	;'E'
   977  007F05  52                 	db	82	;'R'
   978  007F06  52                 	db	82	;'R'
   979  007F07  4F                 	db	79	;'O'
   980  007F08  52                 	db	82	;'R'
   981  007F09  20                 	db	32
   982  007F0A  49                 	db	73	;'I'
   983  007F0B  4E                 	db	78	;'N'
   984  007F0C  56                 	db	86	;'V'
   985  007F0D  41                 	db	65	;'A'
   986  007F0E  4C                 	db	76	;'L'
   987  007F0F  49                 	db	73	;'I'
   988  007F10  44                 	db	68	;'D'
   989  007F11  20                 	db	32
   990  007F12  49                 	db	73	;'I'
   991  007F13  4E                 	db	78	;'N'
   992  007F14  50                 	db	80	;'P'
   993  007F15  55                 	db	85	;'U'
   994  007F16  54                 	db	84	;'T'
   995  007F17  0A                 	db	10
   996  007F18  0D                 	db	13
   997  007F19  00                 	db	0
   998  007F1A                     STR_24:
   999  007F1A  0A                 	db	10
  1000  007F1B  0D                 	db	13
  1001  007F1C  50                 	db	80	;'P'
  1002  007F1D  41                 	db	65	;'A'
  1003  007F1E  53                 	db	83	;'S'
  1004  007F1F  53                 	db	83	;'S'
  1005  007F20  57                 	db	87	;'W'
  1006  007F21  4F                 	db	79	;'O'
  1007  007F22  52                 	db	82	;'R'
  1008  007F23  44                 	db	68	;'D'
  1009  007F24  20                 	db	32
  1010  007F25  56                 	db	86	;'V'
  1011  007F26  41                 	db	65	;'A'
  1012  007F27  4C                 	db	76	;'L'
  1013  007F28  49                 	db	73	;'I'
  1014  007F29  44                 	db	68	;'D'
  1015  007F2A  0A                 	db	10
  1016  007F2B  0D                 	db	13
  1017  007F2C  0A                 	db	10
  1018  007F2D  0D                 	db	13
  1019  007F2E  00                 	db	0
  1020  007F2F                     STR_32:
  1021  007F2F  43                 	db	67	;'C'
  1022  007F30  68                 	db	104	;'h'
  1023  007F31  61                 	db	97	;'a'
  1024  007F32  6E                 	db	110	;'n'
  1025  007F33  67                 	db	103	;'g'
  1026  007F34  65                 	db	101	;'e'
  1027  007F35  64                 	db	100	;'d'
  1028  007F36  20                 	db	32
  1029  007F37  50                 	db	80	;'P'
  1030  007F38  61                 	db	97	;'a'
  1031  007F39  73                 	db	115	;'s'
  1032  007F3A  73                 	db	115	;'s'
  1033  007F3B  77                 	db	119	;'w'
  1034  007F3C  6F                 	db	111	;'o'
  1035  007F3D  72                 	db	114	;'r'
  1036  007F3E  64                 	db	100	;'d'
  1037  007F3F  0A                 	db	10
  1038  007F40  0D                 	db	13
  1039  007F41  0A                 	db	10
  1040  007F42  0D                 	db	13
  1041  007F43  00                 	db	0
  1042  007F44                     STR_11:
  1043  007F44  54                 	db	84	;'T'
  1044  007F45  65                 	db	101	;'e'
  1045  007F46  6D                 	db	109	;'m'
  1046  007F47  70                 	db	112	;'p'
  1047  007F48  20                 	db	32
  1048  007F49  53                 	db	83	;'S'
  1049  007F4A  65                 	db	101	;'e'
  1050  007F4B  6E                 	db	110	;'n'
  1051  007F4C  73                 	db	115	;'s'
  1052  007F4D  6F                 	db	111	;'o'
  1053  007F4E  72                 	db	114	;'r'
  1054  007F4F  20                 	db	32
  1055  007F50  69                 	db	105	;'i'
  1056  007F51  73                 	db	115	;'s'
  1057  007F52  20                 	db	32
  1058  007F53  4F                 	db	79	;'O'
  1059  007F54  46                 	db	70	;'F'
  1060  007F55  46                 	db	70	;'F'
  1061  007F56  0A                 	db	10
  1062  007F57  0D                 	db	13
  1063  007F58  00                 	db	0
  1064  007F59                     STR_18:
  1065  007F59  45                 	db	69	;'E'
  1066  007F5A  6E                 	db	110	;'n'
  1067  007F5B  74                 	db	116	;'t'
  1068  007F5C  65                 	db	101	;'e'
  1069  007F5D  72                 	db	114	;'r'
  1070  007F5E  20                 	db	32
  1071  007F5F  4E                 	db	78	;'N'
  1072  007F60  65                 	db	101	;'e'
  1073  007F61  77                 	db	119	;'w'
  1074  007F62  20                 	db	32
  1075  007F63  50                 	db	80	;'P'
  1076  007F64  61                 	db	97	;'a'
  1077  007F65  73                 	db	115	;'s'
  1078  007F66  73                 	db	115	;'s'
  1079  007F67  77                 	db	119	;'w'
  1080  007F68  6F                 	db	111	;'o'
  1081  007F69  72                 	db	114	;'r'
  1082  007F6A  64                 	db	100	;'d'
  1083  007F6B  3A                 	db	58	;':'
  1084  007F6C  20                 	db	32
  1085  007F6D  00                 	db	0
  1086  007F6E                     STR_12:
  1087  007F6E  54                 	db	84	;'T'
  1088  007F6F  65                 	db	101	;'e'
  1089  007F70  6D                 	db	109	;'m'
  1090  007F71  70                 	db	112	;'p'
  1091  007F72  20                 	db	32
  1092  007F73  53                 	db	83	;'S'
  1093  007F74  65                 	db	101	;'e'
  1094  007F75  6E                 	db	110	;'n'
  1095  007F76  73                 	db	115	;'s'
  1096  007F77  6F                 	db	111	;'o'
  1097  007F78  72                 	db	114	;'r'
  1098  007F79  20                 	db	32
  1099  007F7A  69                 	db	105	;'i'
  1100  007F7B  73                 	db	115	;'s'
  1101  007F7C  20                 	db	32
  1102  007F7D  4F                 	db	79	;'O'
  1103  007F7E  4E                 	db	78	;'N'
  1104  007F7F  0A                 	db	10
  1105  007F80  0D                 	db	13
  1106  007F81  00                 	db	0
  1107  007F82                     STR_41:
  1108  007F82  41                 	db	65	;'A'
  1109  007F83  6C                 	db	108	;'l'
  1110  007F84  61                 	db	97	;'a'
  1111  007F85  72                 	db	114	;'r'
  1112  007F86  6D                 	db	109	;'m'
  1113  007F87  20                 	db	32
  1114  007F88  44                 	db	68	;'D'
  1115  007F89  69                 	db	105	;'i'
  1116  007F8A  73                 	db	115	;'s'
  1117  007F8B  61                 	db	97	;'a'
  1118  007F8C  62                 	db	98	;'b'
  1119  007F8D  6C                 	db	108	;'l'
  1120  007F8E  65                 	db	101	;'e'
  1121  007F8F  64                 	db	100	;'d'
  1122  007F90  0A                 	db	10
  1123  007F91  0A                 	db	10
  1124  007F92  0D                 	db	13
  1125  007F93  0D                 	db	13
  1126  007F94  00                 	db	0
  1127  007F95                     STR_40:
  1128  007F95  41                 	db	65	;'A'
  1129  007F96  6C                 	db	108	;'l'
  1130  007F97  61                 	db	97	;'a'
  1131  007F98  72                 	db	114	;'r'
  1132  007F99  6D                 	db	109	;'m'
  1133  007F9A  20                 	db	32
  1134  007F9B  45                 	db	69	;'E'
  1135  007F9C  6E                 	db	110	;'n'
  1136  007F9D  61                 	db	97	;'a'
  1137  007F9E  62                 	db	98	;'b'
  1138  007F9F  6C                 	db	108	;'l'
  1139  007FA0  65                 	db	101	;'e'
  1140  007FA1  64                 	db	100	;'d'
  1141  007FA2  0A                 	db	10
  1142  007FA3  0A                 	db	10
  1143  007FA4  0D                 	db	13
  1144  007FA5  0D                 	db	13
  1145  007FA6  00                 	db	0
  1146  007FA7                     STR_8:
  1147  007FA7  0A                 	db	10
  1148  007FA8  0D                 	db	13
  1149  007FA9  50                 	db	80	;'P'
  1150  007FAA  61                 	db	97	;'a'
  1151  007FAB  73                 	db	115	;'s'
  1152  007FAC  73                 	db	115	;'s'
  1153  007FAD  77                 	db	119	;'w'
  1154  007FAE  6F                 	db	111	;'o'
  1155  007FAF  72                 	db	114	;'r'
  1156  007FB0  64                 	db	100	;'d'
  1157  007FB1  20                 	db	32
  1158  007FB2  53                 	db	83	;'S'
  1159  007FB3  45                 	db	69	;'E'
  1160  007FB4  54                 	db	84	;'T'
  1161  007FB5  0A                 	db	10
  1162  007FB6  0D                 	db	13
  1163  007FB7  00                 	db	0
  1164  007FB8                     STR_6:
  1165  007FB8  53                 	db	83	;'S'
  1166  007FB9  45                 	db	69	;'E'
  1167  007FBA  54                 	db	84	;'T'
  1168  007FBB  20                 	db	32
  1169  007FBC  50                 	db	80	;'P'
  1170  007FBD  41                 	db	65	;'A'
  1171  007FBE  53                 	db	83	;'S'
  1172  007FBF  53                 	db	83	;'S'
  1173  007FC0  57                 	db	87	;'W'
  1174  007FC1  4F                 	db	79	;'O'
  1175  007FC2  52                 	db	82	;'R'
  1176  007FC3  44                 	db	68	;'D'
  1177  007FC4  3A                 	db	58	;':'
  1178  007FC5  09                 	db	9
  1179  007FC6  00                 	db	0
  1180  007FC7                     STR_9:
  1181  007FC7  41                 	db	65	;'A'
  1182  007FC8  6C                 	db	108	;'l'
  1183  007FC9  61                 	db	97	;'a'
  1184  007FCA  72                 	db	114	;'r'
  1185  007FCB  6D                 	db	109	;'m'
  1186  007FCC  20                 	db	32
  1187  007FCD  69                 	db	105	;'i'
  1188  007FCE  73                 	db	115	;'s'
  1189  007FCF  20                 	db	32
  1190  007FD0  4F                 	db	79	;'O'
  1191  007FD1  46                 	db	70	;'F'
  1192  007FD2  46                 	db	70	;'F'
  1193  007FD3  0A                 	db	10
  1194  007FD4  0D                 	db	13
  1195  007FD5  00                 	db	0
  1196  007FD6                     STR_10:
  1197  007FD6  41                 	db	65	;'A'
  1198  007FD7  6C                 	db	108	;'l'
  1199  007FD8  61                 	db	97	;'a'
  1200  007FD9  72                 	db	114	;'r'
  1201  007FDA  6D                 	db	109	;'m'
  1202  007FDB  20                 	db	32
  1203  007FDC  69                 	db	105	;'i'
  1204  007FDD  73                 	db	115	;'s'
  1205  007FDE  20                 	db	32
  1206  007FDF  4F                 	db	79	;'O'
  1207  007FE0  4E                 	db	78	;'N'
  1208  007FE1  0A                 	db	10
  1209  007FE2  0D                 	db	13
  1210  007FE3  00                 	db	0
  1211  007FE4                     STR_62:
  1212  007FE4  0A                 	db	10
  1213  007FE5  0D                 	db	13
  1214  007FE6  42                 	db	66	;'B'
  1215  007FE7  4F                 	db	79	;'O'
  1216  007FE8  54                 	db	84	;'T'
  1217  007FE9  48                 	db	72	;'H'
  1218  007FEA  0A                 	db	10
  1219  007FEB  0D                 	db	13
  1220  007FEC  00                 	db	0
  1221  007FED                     STR_2:
  1222  007FED  1B                 	db	27
  1223  007FEE  5B                 	db	91	;'['
  1224  007FEF  30                 	db	48	;'0'
  1225  007FF0  3B                 	db	59	;';'
  1226  007FF1  30                 	db	48	;'0'
  1227  007FF2  48                 	db	72	;'H'
  1228  007FF3  00                 	db	0
  1229  007FF4                     STR_1:
  1230  007FF4  1B                 	db	27
  1231  007FF5  5B                 	db	91	;'['
  1232  007FF6  32                 	db	50	;'2'
  1233  007FF7  4A                 	db	74	;'J'
  1234  007FF8  00                 	db	0
  1235  007FF9                     STR_52:
  1236  007FF9  25                 	db	37
  1237  007FFA  64                 	db	100	;'d'
  1238  007FFB  00                 	db	0
  1239  007FFC                     STR_7:
  1240  007FFC  2A                 	db	42
  1241  007FFD  00                 	db	0
  1242  0000                     
  1243                           ; #config settings
  1244  007FFE  00                 	db	0	; dummy byte at the end
  1245  0000                     
  1246                           	psect	cinit
  1247  000FA0                     __pcinit:
  1248                           	opt stack 0
  1249  000FA0                     start_initialization:
  1250                           	opt stack 0
  1251  000FA0                     __initialization:
  1252                           	opt stack 0
  1253                           
  1254                           ; Initialize objects allocated to BANK0 (4 bytes)
  1255                           ; load TBLPTR registers with __pidataBANK0
  1256  000FA0  0EE2               	movlw	low __pidataBANK0
  1257  000FA2  6EF6               	movwf	tblptrl,c
  1258  000FA4  0E10               	movlw	high __pidataBANK0
  1259  000FA6  6EF7               	movwf	tblptrh,c
  1260  000FA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1261  000FAA  6EF8               	movwf	tblptru,c
  1262  000FAC  EE00  F0C7         	lfsr	0,__pdataBANK0
  1263  000FB0  EE10 F004          	lfsr	1,4
  1264  000FB4                     copy_data0:
  1265  000FB4  0009               	tblrd		*+
  1266  000FB6  CFF5 FFEE          	movff	tablat,postinc0
  1267  000FBA  50E5               	movf	postdec1,w,c
  1268  000FBC  50E1               	movf	fsr1l,w,c
  1269  000FBE  E1FA               	bnz	copy_data0
  1270                           
  1271                           ; Clear objects allocated to BANK0 (18 bytes)
  1272  000FC0  EE00  F0B5         	lfsr	0,__pbssBANK0
  1273  000FC4  0E12               	movlw	18
  1274  000FC6                     clear_0:
  1275  000FC6  6AEE               	clrf	postinc0,c
  1276  000FC8  06E8               	decf	wreg,f,c
  1277  000FCA  E1FD               	bnz	clear_0
  1278                           
  1279                           ; Clear objects allocated to COMRAM (8 bytes)
  1280  000FCC  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1281  000FD0  0E08               	movlw	8
  1282  000FD2                     clear_1:
  1283  000FD2  6AEE               	clrf	postinc0,c
  1284  000FD4  06E8               	decf	wreg,f,c
  1285  000FD6  E1FD               	bnz	clear_1
  1286  000FD8                     end_of_initialization:
  1287                           	opt stack 0
  1288  000FD8                     __end_of__initialization:
  1289                           	opt stack 0
  1290  000FD8  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1291  000FDA  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1292  000FDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1293  000FDE  6EF8               	movwf	tblptru,c
  1294  000FE0  0100               	movlb	0
  1295  000FE2  EFA6  F000         	goto	_main	;jump to C main() function
  1296                           tblptru	equ	0xFF8
  1297                           tblptrh	equ	0xFF7
  1298                           tblptrl	equ	0xFF6
  1299                           tablat	equ	0xFF5
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           postdec1	equ	0xFE5
  1303                           fsr1l	equ	0xFE1
  1304                           
  1305                           	psect	bssCOMRAM
  1306  00003E                     __pbssCOMRAM:
  1307                           	opt stack 0
  1308  00003E                     _decimal:
  1309                           	opt stack 0
  1310  00003E                     	ds	2
  1311  000040                     _adHigh:
  1312                           	opt stack 0
  1313  000040                     	ds	2
  1314  000042                     _adLow:
  1315                           	opt stack 0
  1316  000042                     	ds	2
  1317  000044                     _test:
  1318                           	opt stack 0
  1319  000044                     	ds	2
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           
  1329                           	psect	bssBANK0
  1330  0000B5                     __pbssBANK0:
  1331                           	opt stack 0
  1332  0000B5                     _temp_threshold:
  1333                           	opt stack 0
  1334  0000B5                     	ds	2
  1335  0000B7                     _temp_set:
  1336                           	opt stack 0
  1337  0000B7                     	ds	2
  1338  0000B9                     _alarm_set:
  1339                           	opt stack 0
  1340  0000B9                     	ds	2
  1341  0000BB                     _triggered:
  1342                           	opt stack 0
  1343  0000BB                     	ds	2
  1344  0000BD                     _voltage:
  1345                           	opt stack 0
  1346  0000BD                     	ds	2
  1347  0000BF                     _check:
  1348                           	opt stack 0
  1349  0000BF                     	ds	2
  1350  0000C1                     _choice:
  1351                           	opt stack 0
  1352  0000C1                     	ds	2
  1353  0000C3                     _pass:
  1354                           	opt stack 0
  1355  0000C3                     	ds	4
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           
  1365                           	psect	dataBANK0
  1366  0000C7                     __pdataBANK0:
  1367                           	opt stack 0
  1368  0000C7                     _saved_pass:
  1369                           	opt stack 0
  1370  0000C7                     	ds	4
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1l	equ	0xFE1
  1379                           
  1380                           	psect	cstackBANK0
  1381  000080                     __pcstackBANK0:
  1382                           	opt stack 0
  1383  000080                     ??_temp_sensor:
  1384                           
  1385                           ; 1 bytes @ 0x0
  1386  000080                     	ds	22
  1387  000096                     ?_strncmp:
  1388                           	opt stack 0
  1389  000096                     ?___lwdiv:
  1390                           	opt stack 0
  1391  000096                     ___lwdiv@dividend:
  1392                           	opt stack 0
  1393  000096                     strncmp@s1:
  1394                           	opt stack 0
  1395                           
  1396                           ; 2 bytes @ 0x16
  1397  000096                     	ds	2
  1398  000098                     ___lwdiv@divisor:
  1399                           	opt stack 0
  1400  000098                     strncmp@s2:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x18
  1404  000098                     	ds	2
  1405  00009A                     ?___lwmod:
  1406                           	opt stack 0
  1407  00009A                     ___lwmod@dividend:
  1408                           	opt stack 0
  1409  00009A                     strncmp@len:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x1A
  1413  00009A                     	ds	2
  1414  00009C                     ___lwmod@divisor:
  1415                           	opt stack 0
  1416                           
  1417                           ; 2 bytes @ 0x1C
  1418  00009C                     	ds	2
  1419  00009E                     ?_printf:
  1420                           	opt stack 0
  1421  00009E                     printf@f:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x1E
  1425  00009E                     	ds	4
  1426  0000A2                     printf@ap:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x22
  1430  0000A2                     	ds	2
  1431  0000A4                     printf@flag:
  1432                           	opt stack 0
  1433                           
  1434                           ; 1 bytes @ 0x24
  1435  0000A4                     	ds	1
  1436  0000A5                     printf@prec:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x25
  1440  0000A5                     	ds	1
  1441  0000A6                     printf@val:
  1442                           	opt stack 0
  1443                           
  1444                           ; 2 bytes @ 0x26
  1445  0000A6                     	ds	2
  1446  0000A8                     printf@c:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x28
  1450  0000A8                     	ds	1
  1451  0000A9                     ??_alarm_options:
  1452  0000A9                     ??_temp_options:
  1453  0000A9                     ??_input_options:
  1454  0000A9                     ??_password_change:
  1455                           
  1456                           ; 1 bytes @ 0x29
  1457  0000A9                     	ds	2
  1458  0000AB                     password_change@i:
  1459                           	opt stack 0
  1460  0000AB                     temp_options@i:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x2B
  1464  0000AB                     	ds	2
  1465  0000AD                     password_change@i_977:
  1466                           	opt stack 0
  1467                           
  1468                           ; 2 bytes @ 0x2D
  1469  0000AD                     	ds	2
  1470  0000AF                     ??_password_options:
  1471                           
  1472                           ; 1 bytes @ 0x2F
  1473  0000AF                     	ds	2
  1474  0000B1                     ??_main:
  1475                           
  1476                           ; 1 bytes @ 0x31
  1477  0000B1                     	ds	2
  1478  0000B3                     main@i:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x33
  1482  0000B3                     	ds	2
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           fsr1l	equ	0xFE1
  1491                           
  1492                           	psect	cstackCOMRAM
  1493  000001                     __pcstackCOMRAM:
  1494                           	opt stack 0
  1495  000001                     ?i2___lwdiv:
  1496                           	opt stack 0
  1497  000001                     ?i2_strncmp:
  1498                           	opt stack 0
  1499  000001                     i2putch@data:
  1500                           	opt stack 0
  1501  000001                     i2___lwdiv@dividend:
  1502                           	opt stack 0
  1503  000001                     i2strncmp@s1:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x0
  1507  000001                     	ds	2
  1508  000003                     i2___lwdiv@divisor:
  1509                           	opt stack 0
  1510  000003                     i2strncmp@s2:
  1511                           	opt stack 0
  1512                           
  1513                           ; 2 bytes @ 0x2
  1514  000003                     	ds	2
  1515  000005                     i2___lwdiv@quotient:
  1516                           	opt stack 0
  1517  000005                     i2strncmp@len:
  1518                           	opt stack 0
  1519                           
  1520                           ; 2 bytes @ 0x4
  1521  000005                     	ds	2
  1522  000007                     ??i2_strncmp:
  1523  000007                     i2___lwdiv@counter:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x6
  1527  000007                     	ds	1
  1528  000008                     ?i2___lwmod:
  1529                           	opt stack 0
  1530  000008                     i2___lwmod@dividend:
  1531                           	opt stack 0
  1532                           
  1533                           ; 2 bytes @ 0x7
  1534  000008                     	ds	2
  1535  00000A                     i2___lwmod@divisor:
  1536                           	opt stack 0
  1537                           
  1538                           ; 2 bytes @ 0x9
  1539  00000A                     	ds	2
  1540  00000C                     i2___lwmod@counter:
  1541                           	opt stack 0
  1542                           
  1543                           ; 1 bytes @ 0xB
  1544  00000C                     	ds	1
  1545  00000D                     ?i2_printf:
  1546                           	opt stack 0
  1547  00000D                     i2printf@f:
  1548                           	opt stack 0
  1549                           
  1550                           ; 2 bytes @ 0xC
  1551  00000D                     	ds	2
  1552  00000F                     ??i2_printf:
  1553                           
  1554                           ; 1 bytes @ 0xE
  1555  00000F                     	ds	1
  1556  000010                     i2printf@ap:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0xF
  1560  000010                     	ds	2
  1561  000012                     i2printf@flag:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x11
  1565  000012                     	ds	1
  1566  000013                     i2printf@prec:
  1567                           	opt stack 0
  1568                           
  1569                           ; 1 bytes @ 0x12
  1570  000013                     	ds	1
  1571  000014                     i2printf@val:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x13
  1575  000014                     	ds	2
  1576  000016                     i2printf@c:
  1577                           	opt stack 0
  1578                           
  1579                           ; 1 bytes @ 0x15
  1580  000016                     	ds	1
  1581  000017                     password@i:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x16
  1585  000017                     	ds	2
  1586  000019                     ??_alarm:
  1587                           
  1588                           ; 1 bytes @ 0x18
  1589  000019                     	ds	18
  1590  00002B                     ?___awdiv:
  1591                           	opt stack 0
  1592  00002B                     ___awdiv@dividend:
  1593                           	opt stack 0
  1594                           
  1595                           ; 2 bytes @ 0x2A
  1596  00002B                     	ds	2
  1597  00002D                     ___awdiv@divisor:
  1598                           	opt stack 0
  1599                           
  1600                           ; 2 bytes @ 0x2C
  1601  00002D                     	ds	2
  1602  00002F                     ___awdiv@counter:
  1603                           	opt stack 0
  1604                           
  1605                           ; 1 bytes @ 0x2E
  1606  00002F                     	ds	1
  1607  000030                     ___awdiv@sign:
  1608                           	opt stack 0
  1609                           
  1610                           ; 1 bytes @ 0x2F
  1611  000030                     	ds	1
  1612  000031                     ___awdiv@quotient:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x30
  1616  000031                     	ds	2
  1617  000033                     ?___wmul:
  1618                           	opt stack 0
  1619  000033                     ___wmul@multiplier:
  1620                           	opt stack 0
  1621                           
  1622                           ; 2 bytes @ 0x32
  1623  000033                     	ds	2
  1624  000035                     ___wmul@multiplicand:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x34
  1628  000035                     	ds	2
  1629  000037                     ___wmul@product:
  1630                           	opt stack 0
  1631                           
  1632                           ; 2 bytes @ 0x36
  1633  000037                     	ds	2
  1634  000039                     ??_strncmp:
  1635  000039                     putch@data:
  1636                           	opt stack 0
  1637  000039                     ___lwdiv@counter:
  1638                           	opt stack 0
  1639                           
  1640                           ; 1 bytes @ 0x38
  1641  000039                     	ds	1
  1642  00003A                     ___lwdiv@quotient:
  1643                           	opt stack 0
  1644                           
  1645                           ; 2 bytes @ 0x39
  1646  00003A                     	ds	2
  1647  00003C                     ___lwmod@counter:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x3B
  1651  00003C                     	ds	1
  1652  00003D                     ??_printf:
  1653                           
  1654                           ; 1 bytes @ 0x3C
  1655  00003D                     	ds	1
  1656  00003E                     tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           
  1665                           ; 1 bytes @ 0x3D
  1666 ;;
  1667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1668 ;;
  1669 ;; *************** function _main *****************
  1670 ;; Defined at:
  1671 ;;		line 167 in file "Lab7.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2   51[BANK0 ] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         0       0       0       0       0       0       0
  1686 ;;      Locals:         0       2       0       0       0       0       0
  1687 ;;      Temps:          0       2       0       0       0       0       0
  1688 ;;      Totals:         0       4       0       0       0       0       0
  1689 ;;Total ram usage:        4 bytes
  1690 ;; Hardware stack levels required when called:   11
  1691 ;; This function calls:
  1692 ;;		_Clear
  1693 ;;		_alarm_options
  1694 ;;		_input_options
  1695 ;;		_password_options
  1696 ;;		_printf
  1697 ;;		_temp_options
  1698 ;; This function is called by:
  1699 ;;		Startup code after reset
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text0
  1704  00014C                     __ptext0:
  1705                           	opt stack 0
  1706  00014C                     _main:
  1707                           	opt stack 20
  1708                           
  1709                           ;Lab7.c: 170: TXSTAbits.TXEN = 1;
  1710                           
  1711                           ;incstack = 0
  1712  00014C  8AAC               	bsf	4012,5,c	;volatile
  1713                           
  1714                           ;Lab7.c: 171: RCSTAbits.SPEN = 1;
  1715  00014E  8EAB               	bsf	4011,7,c	;volatile
  1716                           
  1717                           ;Lab7.c: 173: TRISB = 0b00000010;
  1718  000150  0E02               	movlw	2
  1719  000152  6E93               	movwf	3987,c	;volatile
  1720                           
  1721                           ;Lab7.c: 174: TRISD = 0b00000000;
  1722  000154  0E00               	movlw	0
  1723  000156  6E95               	movwf	3989,c	;volatile
  1724                           
  1725                           ;Lab7.c: 176: PORTBbits.RB2 = 0;
  1726  000158  9481               	bcf	3969,2,c	;volatile
  1727                           
  1728                           ;Lab7.c: 177: PORTBbits.RB3 = 0;
  1729  00015A  9681               	bcf	3969,3,c	;volatile
  1730                           
  1731                           ;Lab7.c: 178: PORTBbits.RB4 = 0;
  1732  00015C  9881               	bcf	3969,4,c	;volatile
  1733                           
  1734                           ;Lab7.c: 179: PORTBbits.RB5 = 0;
  1735  00015E  9A81               	bcf	3969,5,c	;volatile
  1736                           
  1737                           ;Lab7.c: 182: TRISCbits.RC7 = 1;
  1738  000160  8E94               	bsf	3988,7,c	;volatile
  1739                           
  1740                           ;Lab7.c: 183: TRISCbits.RC6 = 0;
  1741  000162  9C94               	bcf	3988,6,c	;volatile
  1742                           
  1743                           ;Lab7.c: 184: SPBRG = 31;
  1744  000164  0E1F               	movlw	31
  1745  000166  6EAF               	movwf	4015,c	;volatile
  1746                           
  1747                           ;Lab7.c: 185: TXSTAbits.SYNC = 0;
  1748  000168  98AC               	bcf	4012,4,c	;volatile
  1749                           
  1750                           ;Lab7.c: 186: TXSTAbits.BRGH = 0;
  1751  00016A  94AC               	bcf	4012,2,c	;volatile
  1752                           
  1753                           ;Lab7.c: 187: RCSTAbits.RX9 = 0;
  1754  00016C  9CAB               	bcf	4011,6,c	;volatile
  1755                           
  1756                           ;Lab7.c: 188: RCSTAbits.SPEN = 1;
  1757  00016E  8EAB               	bsf	4011,7,c	;volatile
  1758                           
  1759                           ;Lab7.c: 189: RCSTAbits.CREN = 1;
  1760  000170  88AB               	bsf	4011,4,c	;volatile
  1761                           
  1762                           ;Lab7.c: 192: INTCONbits.GIE = 0;
  1763  000172  9EF2               	bcf	intcon,7,c	;volatile
  1764                           
  1765                           ;Lab7.c: 193: INTCONbits.PEIE = 0;
  1766  000174  9CF2               	bcf	intcon,6,c	;volatile
  1767                           
  1768                           ;Lab7.c: 194: RCONbits.IPEN = 1;
  1769  000176  8ED0               	bsf	4048,7,c	;volatile
  1770                           
  1771                           ;Lab7.c: 196: PIR1bits.ADIF = 0;
  1772  000178  9C9E               	bcf	3998,6,c	;volatile
  1773                           
  1774                           ;Lab7.c: 197: PIE1bits.ADIE = 0;
  1775  00017A  9C9D               	bcf	3997,6,c	;volatile
  1776                           
  1777                           ;Lab7.c: 198: IPR1bits.ADIP = 0;
  1778  00017C  9C9F               	bcf	3999,6,c	;volatile
  1779                           
  1780                           ;Lab7.c: 200: INTCON3bits.INT1IP = 1;
  1781  00017E  8CF0               	bsf	intcon3,6,c	;volatile
  1782                           
  1783                           ;Lab7.c: 201: INTCON3bits.INT1IE = 0;
  1784  000180  96F0               	bcf	intcon3,3,c	;volatile
  1785                           
  1786                           ;Lab7.c: 202: INTCON3bits.INT1IF = 0;
  1787  000182  90F0               	bcf	intcon3,0,c	;volatile
  1788                           
  1789                           ;Lab7.c: 204: ADCON0bits.CHS3 = 0;
  1790  000184  9AC2               	bcf	4034,5,c	;volatile
  1791                           
  1792                           ;Lab7.c: 205: ADCON0bits.CHS2 = 0;
  1793  000186  98C2               	bcf	4034,4,c	;volatile
  1794                           
  1795                           ;Lab7.c: 206: ADCON0bits.CHS1 = 0;
  1796  000188  96C2               	bcf	4034,3,c	;volatile
  1797                           
  1798                           ;Lab7.c: 207: ADCON0bits.CHS0 = 0;
  1799  00018A  94C2               	bcf	4034,2,c	;volatile
  1800                           
  1801                           ;Lab7.c: 209: ADCON0bits.GO = 0;
  1802  00018C  92C2               	bcf	4034,1,c	;volatile
  1803                           
  1804                           ;Lab7.c: 210: ADCON0bits.ADON = 1;
  1805  00018E  80C2               	bsf	4034,0,c	;volatile
  1806                           
  1807                           ;Lab7.c: 211: ADCON1bits.VCFG1 = 0;
  1808  000190  9AC1               	bcf	4033,5,c	;volatile
  1809                           
  1810                           ;Lab7.c: 212: ADCON1bits.VCFG0 = 0;
  1811  000192  98C1               	bcf	4033,4,c	;volatile
  1812                           
  1813                           ;Lab7.c: 214: ADCON1bits.PCFG3 = 1;
  1814  000194  86C1               	bsf	4033,3,c	;volatile
  1815                           
  1816                           ;Lab7.c: 215: ADCON1bits.PCFG2 = 1;
  1817  000196  84C1               	bsf	4033,2,c	;volatile
  1818                           
  1819                           ;Lab7.c: 216: ADCON1bits.PCFG1 = 1;
  1820  000198  82C1               	bsf	4033,1,c	;volatile
  1821                           
  1822                           ;Lab7.c: 217: ADCON1bits.PCFG0 = 0;
  1823  00019A  90C1               	bcf	4033,0,c	;volatile
  1824                           
  1825                           ;Lab7.c: 219: ADCON2bits.ADFM = 1;
  1826  00019C  8EC0               	bsf	4032,7,c	;volatile
  1827                           
  1828                           ;Lab7.c: 221: ADCON2bits.ACQT2 = 1;
  1829  00019E  8AC0               	bsf	4032,5,c	;volatile
  1830                           
  1831                           ;Lab7.c: 222: ADCON2bits.ACQT2 = 0;
  1832  0001A0  9AC0               	bcf	4032,5,c	;volatile
  1833                           
  1834                           ;Lab7.c: 223: ADCON2bits.ACQT2 = 0;
  1835  0001A2  9AC0               	bcf	4032,5,c	;volatile
  1836                           
  1837                           ;Lab7.c: 225: ADCON2bits.ADCS2 = 1;
  1838  0001A4  84C0               	bsf	4032,2,c	;volatile
  1839                           
  1840                           ;Lab7.c: 226: ADCON2bits.ADCS1 = 0;
  1841  0001A6  92C0               	bcf	4032,1,c	;volatile
  1842                           
  1843                           ;Lab7.c: 227: ADCON2bits.ADCS0 = 0;
  1844  0001A8  90C0               	bcf	4032,0,c	;volatile
  1845                           
  1846                           ;Lab7.c: 229: T0CONbits.TMR0ON = 0;
  1847  0001AA  9ED5               	bcf	4053,7,c	;volatile
  1848                           
  1849                           ;Lab7.c: 230: T0CONbits.T08BIT = 0;
  1850  0001AC  9CD5               	bcf	4053,6,c	;volatile
  1851                           
  1852                           ;Lab7.c: 231: T0CONbits.T0CS = 0;
  1853  0001AE  9AD5               	bcf	4053,5,c	;volatile
  1854                           
  1855                           ;Lab7.c: 232: T0CONbits.PSA = 0;
  1856  0001B0  96D5               	bcf	4053,3,c	;volatile
  1857                           
  1858                           ;Lab7.c: 234: T0CONbits.T0PS2 = 1;
  1859  0001B2  84D5               	bsf	4053,2,c	;volatile
  1860                           
  1861                           ;Lab7.c: 235: T0CONbits.T0PS1 = 0;
  1862  0001B4  92D5               	bcf	4053,1,c	;volatile
  1863                           
  1864                           ;Lab7.c: 236: T0CONbits.T0PS0 = 1;
  1865  0001B6  80D5               	bsf	4053,0,c	;volatile
  1866                           
  1867                           ;Lab7.c: 238: INTCONbits.TMR0IE = 1;
  1868  0001B8  8AF2               	bsf	intcon,5,c	;volatile
  1869                           
  1870                           ;Lab7.c: 239: INTCONbits.TMR0IF = 0;
  1871  0001BA  94F2               	bcf	intcon,2,c	;volatile
  1872                           
  1873                           ;Lab7.c: 240: INTCON2bits.TMR0IP = 0;
  1874  0001BC  94F1               	bcf	intcon2,2,c	;volatile
  1875                           
  1876                           ;Lab7.c: 242: INTCONbits.GIE = 1;
  1877  0001BE  8EF2               	bsf	intcon,7,c	;volatile
  1878                           
  1879                           ;Lab7.c: 243: INTCONbits.PEIE = 1;
  1880  0001C0  8CF2               	bsf	intcon,6,c	;volatile
  1881                           
  1882                           ;Lab7.c: 246: TMR0H = 0x67;
  1883  0001C2  0E67               	movlw	103
  1884  0001C4  6ED7               	movwf	4055,c	;volatile
  1885                           
  1886                           ;Lab7.c: 247: TMR0L = 0x6A;
  1887  0001C6  0E6A               	movlw	106
  1888  0001C8  6ED6               	movwf	4054,c	;volatile
  1889                           
  1890                           ;Lab7.c: 249: Clear();
  1891  0001CA  EC49  F008         	call	_Clear	;wreg free
  1892                           
  1893                           ;Lab7.c: 252: printf("SET PASSWORD:\t");
  1894  0001CE  0EB8               	movlw	low STR_6
  1895  0001D0  0100               	movlb	0	; () banked
  1896  0001D2  6F9E               	movwf	printf@f& (0+255),b
  1897  0001D4  0E7F               	movlw	high STR_6
  1898  0001D6  6F9F               	movwf	(printf@f+1)& (0+255),b
  1899  0001D8  EC63  F004         	call	_printf	;wreg free
  1900                           
  1901                           ;Lab7.c: 253: for(int i = 0;i < 4;i++){
  1902  0001DC  0E00               	movlw	0
  1903  0001DE  0100               	movlb	0	; () banked
  1904  0001E0  6FB4               	movwf	(main@i+1)& (0+255),b
  1905  0001E2  0E00               	movlw	0
  1906  0001E4  6FB3               	movwf	main@i& (0+255),b
  1907                           
  1908                           ; BSR set to: 0
  1909  0001E6  BFB4               	btfsc	(main@i+1)& (0+255),7,b
  1910  0001E8  D006               	goto	l120
  1911  0001EA  51B4               	movf	(main@i+1)& (0+255),w,b
  1912  0001EC  E120               	bnz	l3209
  1913  0001EE  0E04               	movlw	4
  1914  0001F0  5DB3               	subwf	main@i& (0+255),w,b
  1915  0001F2  B0D8               	btfsc	status,0,c
  1916  0001F4  D01C               	goto	u2180
  1917  0001F6                     l120:
  1918                           
  1919                           ; BSR set to: 0
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Lab7.c: 254: while(PIR1bits.RCIF == 0);
  1923  0001F6  AA9E               	btfss	3998,5,c	;volatile
  1924  0001F8  D7FE               	goto	l120
  1925                           
  1926                           ;Lab7.c: 255: saved_pass[i] = RCREG;
  1927  0001FA  0EC7               	movlw	low _saved_pass
  1928  0001FC  0100               	movlb	0	; () banked
  1929  0001FE  25B3               	addwf	main@i& (0+255),w,b
  1930  000200  6ED9               	movwf	fsr2l,c
  1931  000202  0E00               	movlw	high _saved_pass
  1932  000204  21B4               	addwfc	(main@i+1)& (0+255),w,b
  1933  000206  6EDA               	movwf	fsr2h,c
  1934  000208  CFAE FFDF          	movff	4014,indf2	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;Lab7.c: 256: printf("*");
  1938  00020C  0EFC               	movlw	low STR_7
  1939  00020E  6F9E               	movwf	printf@f& (0+255),b
  1940  000210  0E7F               	movlw	high STR_7
  1941  000212  6F9F               	movwf	(printf@f+1)& (0+255),b
  1942  000214  EC63  F004         	call	_printf	;wreg free
  1943  000218  0100               	movlb	0	; () banked
  1944  00021A  4BB3               	infsnz	main@i& (0+255),f,b
  1945  00021C  2BB4               	incf	(main@i+1)& (0+255),f,b
  1946                           
  1947                           ; BSR set to: 0
  1948  00021E  BFB4               	btfsc	(main@i+1)& (0+255),7,b
  1949  000220  D7EA               	goto	l120
  1950  000222  51B4               	movf	(main@i+1)& (0+255),w,b
  1951  000224  E104               	bnz	l3209
  1952  000226  0E04               	movlw	4
  1953  000228  5DB3               	subwf	main@i& (0+255),w,b
  1954  00022A  A0D8               	btfss	status,0,c
  1955  00022C  D7E4               	goto	l120
  1956  00022E                     u2180:
  1957  00022E                     l3209:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;Lab7.c: 257: }
  1961                           ;Lab7.c: 263: printf("\n\rPassword SET\n\r");
  1962  00022E  0EA7               	movlw	low STR_8
  1963  000230  6F9E               	movwf	printf@f& (0+255),b
  1964  000232  0E7F               	movlw	high STR_8
  1965  000234  6F9F               	movwf	(printf@f+1)& (0+255),b
  1966  000236  EC63  F004         	call	_printf	;wreg free
  1967  00023A                     
  1968                           ;Lab7.c: 266: {
  1969                           ;Lab7.c: 267: PORTBbits.RB3 = 1;
  1970  00023A  8681               	bsf	3969,3,c	;volatile
  1971                           
  1972                           ;Lab7.c: 268: T0CONbits.TMR0ON = 1;
  1973  00023C  8ED5               	bsf	4053,7,c	;volatile
  1974  00023E                     
  1975                           ;Lab7.c: 272: {
  1976                           ;Lab7.c: 277: if(alarm_set == 0){
  1977  00023E  0100               	movlb	0	; () banked
  1978  000240  51B9               	movf	_alarm_set& (0+255),w,b
  1979  000242  11BA               	iorwf	(_alarm_set+1)& (0+255),w,b
  1980  000244  A4D8               	btfss	status,2,c
  1981  000246  D007               	goto	l127
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;Lab7.c: 278: printf("Alarm is OFF\n\r");
  1985  000248  0EC7               	movlw	low STR_9
  1986  00024A  6F9E               	movwf	printf@f& (0+255),b
  1987  00024C  0E7F               	movlw	high STR_9
  1988  00024E  6F9F               	movwf	(printf@f+1)& (0+255),b
  1989  000250  EC63  F004         	call	_printf	;wreg free
  1990                           
  1991                           ;Lab7.c: 279: }
  1992  000254  D007               	goto	l128
  1993  000256                     l127:
  1994                           
  1995                           ;Lab7.c: 280: else
  1996                           ;Lab7.c: 281: {
  1997                           ;Lab7.c: 282: printf("Alarm is ON\n\r");
  1998  000256  0ED6               	movlw	low STR_10
  1999  000258  0100               	movlb	0	; () banked
  2000  00025A  6F9E               	movwf	printf@f& (0+255),b
  2001  00025C  0E7F               	movlw	high STR_10
  2002  00025E  6F9F               	movwf	(printf@f+1)& (0+255),b
  2003  000260  EC63  F004         	call	_printf	;wreg free
  2004  000264                     l128:
  2005                           
  2006                           ;Lab7.c: 283: }
  2007                           ;Lab7.c: 284: if(temp_set == 0){
  2008  000264  0100               	movlb	0	; () banked
  2009  000266  51B7               	movf	_temp_set& (0+255),w,b
  2010  000268  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  2011  00026A  A4D8               	btfss	status,2,c
  2012  00026C  D007               	goto	l129
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;Lab7.c: 285: printf("Temp Sensor is OFF\n\r");
  2016  00026E  0E44               	movlw	low STR_11
  2017  000270  6F9E               	movwf	printf@f& (0+255),b
  2018  000272  0E7F               	movlw	high STR_11
  2019  000274  6F9F               	movwf	(printf@f+1)& (0+255),b
  2020  000276  EC63  F004         	call	_printf	;wreg free
  2021                           
  2022                           ;Lab7.c: 286: }
  2023  00027A  D007               	goto	l130
  2024  00027C                     l129:
  2025                           
  2026                           ;Lab7.c: 287: else
  2027                           ;Lab7.c: 288: {
  2028                           ;Lab7.c: 289: printf("Temp Sensor is ON\n\r");
  2029  00027C  0E6E               	movlw	low STR_12
  2030  00027E  0100               	movlb	0	; () banked
  2031  000280  6F9E               	movwf	printf@f& (0+255),b
  2032  000282  0E7F               	movlw	high STR_12
  2033  000284  6F9F               	movwf	(printf@f+1)& (0+255),b
  2034  000286  EC63  F004         	call	_printf	;wreg free
  2035  00028A                     l130:
  2036                           
  2037                           ;Lab7.c: 290: }
  2038                           ;Lab7.c: 291: printf(
  2039                           ;Lab7.c: 292: "Current Temp [F]: %d"
  2040                           ;Lab7.c: 293: "\n\r\n\r"
  2041                           ;Lab7.c: 294: "Alarm System"
  2042                           ;Lab7.c: 295: "\n\r-----------------\n\r"
  2043                           ;Lab7.c: 296: "1)Password\n\r"
  2044                           ;Lab7.c: 297: "2)PIR Sensor\n\r"
  2045                           ;Lab7.c: 298: "3)Temp Sensor\n\r"
  2046                           ;Lab7.c: 299: "4)Input Method\n\r"
  2047                           ;Lab7.c: 300: "----------------\n\r",voltage
  2048                           ;Lab7.c: 301: );
  2049  00028A  0EC3               	movlw	low STR_13
  2050  00028C  0100               	movlb	0	; () banked
  2051  00028E  6F9E               	movwf	printf@f& (0+255),b
  2052  000290  0E7B               	movlw	high STR_13
  2053  000292  6F9F               	movwf	(printf@f+1)& (0+255),b
  2054  000294  C0BD  F0A0         	movff	_voltage,?_printf+2
  2055  000298  C0BE  F0A1         	movff	_voltage+1,?_printf+3
  2056  00029C  EC63  F004         	call	_printf	;wreg free
  2057  0002A0  AA9E               	btfss	3998,5,c	;volatile
  2058  0002A2  D7FE               	goto	l132
  2059                           
  2060                           ;Lab7.c: 313: choice = RCREG;
  2061  0002A4  CFAE F0C1          	movff	4014,_choice	;volatile
  2062  0002A8  0100               	movlb	0	; () banked
  2063  0002AA  6BC2               	clrf	(_choice+1)& (0+255),b
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;Lab7.c: 316: if(triggered == 1)
  2067  0002AC  05BB               	decf	_triggered& (0+255),w,b
  2068  0002AE  11BC               	iorwf	(_triggered+1)& (0+255),w,b
  2069  0002B0  A4D8               	btfss	status,2,c
  2070  0002B2  D031               	goto	l136
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;Lab7.c: 317: {
  2074                           ;Lab7.c: 318: printf("\n\rReturning to Menu...\n\r");
  2075  0002B4  0EB8               	movlw	low STR_14
  2076  0002B6  6F9E               	movwf	printf@f& (0+255),b
  2077  0002B8  0E7E               	movlw	high STR_14
  2078  0002BA  6F9F               	movwf	(printf@f+1)& (0+255),b
  2079  0002BC  EC63  F004         	call	_printf	;wreg free
  2080                           
  2081                           ;Lab7.c: 319: triggered = 0;
  2082  0002C0  0E00               	movlw	0
  2083  0002C2  0100               	movlb	0	; () banked
  2084  0002C4  6FBC               	movwf	(_triggered+1)& (0+255),b
  2085  0002C6  0E00               	movlw	0
  2086  0002C8  6FBB               	movwf	_triggered& (0+255),b
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;Lab7.c: 320: Clear();
  2090  0002CA  EC49  F008         	call	_Clear	;wreg free
  2091                           
  2092                           ;Lab7.c: 321: break;
  2093  0002CE  D7B5               	goto	l125
  2094  0002D0                     
  2095                           ;Lab7.c: 325: password_options();
  2096  0002D0  EC88  F005         	call	_password_options	;wreg free
  2097                           
  2098                           ;Lab7.c: 326: break;
  2099  0002D4  D7B4               	goto	l126
  2100  0002D6                     
  2101                           ;Lab7.c: 328: alarm_options();
  2102  0002D6  EC2E  F003         	call	_alarm_options	;wreg free
  2103                           
  2104                           ;Lab7.c: 329: break;
  2105  0002DA  D7B1               	goto	l126
  2106  0002DC                     
  2107                           ;Lab7.c: 331: temp_options();
  2108  0002DC  ECA2  F001         	call	_temp_options	;wreg free
  2109                           
  2110                           ;Lab7.c: 332: break;
  2111  0002E0  D7AE               	goto	l126
  2112  0002E2                     
  2113                           ;Lab7.c: 334: input_options();
  2114  0002E2  EC70  F002         	call	_input_options	;wreg free
  2115                           
  2116                           ;Lab7.c: 335: break;
  2117  0002E6  D7AB               	goto	l126
  2118  0002E8                     
  2119                           ;Lab7.c: 337: printf("\nERROR INVALID INPUT\n\r");
  2120  0002E8  0E03               	movlw	low STR_15
  2121  0002EA  0100               	movlb	0	; () banked
  2122  0002EC  6F9E               	movwf	printf@f& (0+255),b
  2123  0002EE  0E7F               	movlw	high STR_15
  2124  0002F0  6F9F               	movwf	(printf@f+1)& (0+255),b
  2125  0002F2  EC63  F004         	call	_printf	;wreg free
  2126                           
  2127                           ;Lab7.c: 338: _delay((unsigned long)((500)*(20000000/4000.0)));
  2128  0002F6  0E0D               	movlw	13
  2129  0002F8  0100               	movlb	0	; () banked
  2130  0002FA  6FB2               	movwf	(??_main+1)& (0+255),b
  2131  0002FC  0EAF               	movlw	175
  2132  0002FE  6FB1               	movwf	??_main& (0+255),b
  2133  000300  0EB6               	movlw	182
  2134  000302                     u2237:
  2135  000302  2EE8               	decfsz	wreg,f,c
  2136  000304  D7FE               	bra	u2237
  2137  000306  2FB1               	decfsz	??_main& (0+255),f,b
  2138  000308  D7FC               	bra	u2237
  2139  00030A  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  2140  00030C  D7FA               	bra	u2237
  2141  00030E  F000               	nop	
  2142                           
  2143                           ;Lab7.c: 339: Clear();
  2144  000310  EC49  F008         	call	_Clear	;wreg free
  2145                           
  2146                           ;Lab7.c: 341: }
  2147                           
  2148                           ;Lab7.c: 340: break;
  2149  000314  D794               	goto	l126
  2150  000316                     l136:
  2151  000316  C0C1  F0B1         	movff	_choice,??_main
  2152  00031A  C0C2  F0B2         	movff	_choice+1,??_main+1
  2153                           
  2154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2155                           ; Switch size 1, requested type "space"
  2156                           ; Number of cases is 1, Range of values is 0 to 0
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte            4     3 (average)
  2160                           ;	Chosen strategy is simple_byte
  2161  00031E  0100               	movlb	0	; () banked
  2162  000320  51B2               	movf	(??_main+1)& (0+255),w,b
  2163  000322  0A00               	xorlw	0	; case 0
  2164  000324  A4D8               	btfss	status,2,c
  2165  000326  D7E0               	goto	l142
  2166                           
  2167                           ; BSR set to: 0
  2168                           ; Switch size 1, requested type "space"
  2169                           ; Number of cases is 4, Range of values is 49 to 52
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte           13     7 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174  000328  51B1               	movf	??_main& (0+255),w,b
  2175  00032A  0A31               	xorlw	49	; case 49
  2176  00032C  B4D8               	btfsc	status,2,c
  2177  00032E  D7D0               	goto	l137
  2178  000330  0A03               	xorlw	3	; case 50
  2179  000332  B4D8               	btfsc	status,2,c
  2180  000334  D7D0               	goto	l139
  2181  000336  0A01               	xorlw	1	; case 51
  2182  000338  B4D8               	btfsc	status,2,c
  2183  00033A  D7D0               	goto	l140
  2184  00033C  0A07               	xorlw	7	; case 52
  2185  00033E  B4D8               	btfsc	status,2,c
  2186  000340  D7D0               	goto	l141
  2187  000342  D7D2               	goto	l142
  2188  000344                     __end_of_main:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           intcon	equ	0xFF2
  2195                           intcon2	equ	0xFF1
  2196                           intcon3	equ	0xFF0
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           postdec1	equ	0xFE5
  2200                           fsr1l	equ	0xFE1
  2201                           indf2	equ	0xFDF
  2202                           fsr2h	equ	0xFDA
  2203                           fsr2l	equ	0xFD9
  2204                           status	equ	0xFD8
  2205                           
  2206 ;; *************** function _temp_options *****************
  2207 ;; Defined at:
  2208 ;;		line 516 in file "Lab7.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  i               2   43[BANK0 ] int 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2222 ;;      Params:         0       0       0       0       0       0       0
  2223 ;;      Locals:         0       2       0       0       0       0       0
  2224 ;;      Temps:          0       2       0       0       0       0       0
  2225 ;;      Totals:         0       4       0       0       0       0       0
  2226 ;;Total ram usage:        4 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    9
  2229 ;; This function calls:
  2230 ;;		_Clear
  2231 ;;		_printf
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text1
  2238  000344                     __ptext1:
  2239                           	opt stack 0
  2240  000344                     _temp_options:
  2241                           	opt stack 21
  2242                           
  2243                           ;Lab7.c: 518: Clear();
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;incstack = 0
  2247  000344  EC49  F008         	call	_Clear	;wreg free
  2248  000348                     
  2249                           ;Lab7.c: 520: {
  2250                           ;Lab7.c: 521: if(alarm_set == 0){
  2251  000348  0100               	movlb	0	; () banked
  2252  00034A  51B9               	movf	_alarm_set& (0+255),w,b
  2253  00034C  11BA               	iorwf	(_alarm_set+1)& (0+255),w,b
  2254  00034E  A4D8               	btfss	status,2,c
  2255  000350  D007               	goto	l221
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;Lab7.c: 522: printf("Alarm is OFF\n\r");
  2259  000352  0EC7               	movlw	low STR_9
  2260  000354  6F9E               	movwf	printf@f& (0+255),b
  2261  000356  0E7F               	movlw	high STR_9
  2262  000358  6F9F               	movwf	(printf@f+1)& (0+255),b
  2263  00035A  EC63  F004         	call	_printf	;wreg free
  2264                           
  2265                           ;Lab7.c: 523: }
  2266  00035E  D007               	goto	l222
  2267  000360                     l221:
  2268                           
  2269                           ;Lab7.c: 524: else
  2270                           ;Lab7.c: 525: {
  2271                           ;Lab7.c: 526: printf("Alarm is ON\n\r");
  2272  000360  0ED6               	movlw	low STR_10
  2273  000362  0100               	movlb	0	; () banked
  2274  000364  6F9E               	movwf	printf@f& (0+255),b
  2275  000366  0E7F               	movlw	high STR_10
  2276  000368  6F9F               	movwf	(printf@f+1)& (0+255),b
  2277  00036A  EC63  F004         	call	_printf	;wreg free
  2278  00036E                     l222:
  2279                           
  2280                           ;Lab7.c: 527: }
  2281                           ;Lab7.c: 528: if(temp_set == 0){
  2282  00036E  0100               	movlb	0	; () banked
  2283  000370  51B7               	movf	_temp_set& (0+255),w,b
  2284  000372  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  2285  000374  A4D8               	btfss	status,2,c
  2286  000376  D007               	goto	l223
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;Lab7.c: 529: printf("Temp Sensor is OFF\n\r");
  2290  000378  0E44               	movlw	low STR_11
  2291  00037A  6F9E               	movwf	printf@f& (0+255),b
  2292  00037C  0E7F               	movlw	high STR_11
  2293  00037E  6F9F               	movwf	(printf@f+1)& (0+255),b
  2294  000380  EC63  F004         	call	_printf	;wreg free
  2295                           
  2296                           ;Lab7.c: 530: }
  2297  000384  D007               	goto	l224
  2298  000386                     l223:
  2299                           
  2300                           ;Lab7.c: 531: else
  2301                           ;Lab7.c: 532: {
  2302                           ;Lab7.c: 533: printf("Temp Sensor is ON\n\r");
  2303  000386  0E6E               	movlw	low STR_12
  2304  000388  0100               	movlb	0	; () banked
  2305  00038A  6F9E               	movwf	printf@f& (0+255),b
  2306  00038C  0E7F               	movlw	high STR_12
  2307  00038E  6F9F               	movwf	(printf@f+1)& (0+255),b
  2308  000390  EC63  F004         	call	_printf	;wreg free
  2309  000394                     l224:
  2310                           
  2311                           ;Lab7.c: 534: }
  2312                           ;Lab7.c: 535: printf("\n\r"
  2313                           ;Lab7.c: 536: "Temperature Sensor OPTIONS\n\r"
  2314                           ;Lab7.c: 537: "1) Enable/Disable Alarm\n\r"
  2315                           ;Lab7.c: 538: "2) Temperature Threshold\n\r"
  2316                           ;Lab7.c: 539: "3) Return to Menu\n\r");
  2317  000394  0E48               	movlw	low STR_47
  2318  000396  0100               	movlb	0	; () banked
  2319  000398  6F9E               	movwf	printf@f& (0+255),b
  2320  00039A  0E7C               	movlw	high STR_47
  2321  00039C  6F9F               	movwf	(printf@f+1)& (0+255),b
  2322  00039E  EC63  F004         	call	_printf	;wreg free
  2323  0003A2  AA9E               	btfss	3998,5,c	;volatile
  2324  0003A4  D7FE               	goto	l226
  2325                           
  2326                           ;Lab7.c: 542: choice = RCREG;
  2327  0003A6  CFAE F0C1          	movff	4014,_choice	;volatile
  2328  0003AA  0100               	movlb	0	; () banked
  2329  0003AC  6BC2               	clrf	(_choice+1)& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;Lab7.c: 543: if(triggered == 1)
  2333  0003AE  05BB               	decf	_triggered& (0+255),w,b
  2334  0003B0  11BC               	iorwf	(_triggered+1)& (0+255),w,b
  2335  0003B2  A4D8               	btfss	status,2,c
  2336  0003B4  D081               	goto	l230
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;Lab7.c: 544: {
  2340                           ;Lab7.c: 545: printf("\n\rReturning to Menu...\n\r");
  2341  0003B6  0EB8               	movlw	low STR_14
  2342  0003B8  6F9E               	movwf	printf@f& (0+255),b
  2343  0003BA  0E7E               	movlw	high STR_14
  2344  0003BC  6F9F               	movwf	(printf@f+1)& (0+255),b
  2345  0003BE  EC63  F004         	call	_printf	;wreg free
  2346                           
  2347                           ;Lab7.c: 546: triggered = 0;
  2348  0003C2  0E00               	movlw	0
  2349  0003C4  0100               	movlb	0	; () banked
  2350  0003C6  6FBC               	movwf	(_triggered+1)& (0+255),b
  2351  0003C8  0E00               	movlw	0
  2352  0003CA  6FBB               	movwf	_triggered& (0+255),b
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;Lab7.c: 547: Clear();
  2356  0003CC  EC49  F008         	call	_Clear	;wreg free
  2357                           
  2358                           ;Lab7.c: 548: break;
  2359  0003D0  0012               	return	
  2360  0003D2                     
  2361                           ;Lab7.c: 552: if(temp_set == 0)
  2362  0003D2  0100               	movlb	0	; () banked
  2363  0003D4  51B7               	movf	_temp_set& (0+255),w,b
  2364  0003D6  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  2365  0003D8  A4D8               	btfss	status,2,c
  2366  0003DA  D00B               	goto	l232
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;Lab7.c: 553: {
  2370                           ;Lab7.c: 554: temp_set = 1;
  2371  0003DC  0E00               	movlw	0
  2372  0003DE  6FB8               	movwf	(_temp_set+1)& (0+255),b
  2373  0003E0  0E01               	movlw	1
  2374  0003E2  6FB7               	movwf	_temp_set& (0+255),b
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;Lab7.c: 555: printf("\n\rTemperature Alarm ON\n\r");
  2378  0003E4  0ED1               	movlw	low STR_49
  2379  0003E6  6F9E               	movwf	printf@f& (0+255),b
  2380  0003E8  0E7E               	movlw	high STR_49
  2381  0003EA  6F9F               	movwf	(printf@f+1)& (0+255),b
  2382  0003EC  EC63  F004         	call	_printf	;wreg free
  2383                           
  2384                           ;Lab7.c: 556: }
  2385  0003F0  D00B               	goto	l233
  2386  0003F2                     l232:
  2387                           
  2388                           ;Lab7.c: 557: else
  2389                           ;Lab7.c: 558: {
  2390                           ;Lab7.c: 559: temp_set = 0;
  2391  0003F2  0E00               	movlw	0
  2392  0003F4  0100               	movlb	0	; () banked
  2393  0003F6  6FB8               	movwf	(_temp_set+1)& (0+255),b
  2394  0003F8  0E00               	movlw	0
  2395  0003FA  6FB7               	movwf	_temp_set& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;Lab7.c: 560: printf("\n\rTemperature Alarm OFF\n\r");
  2399  0003FC  0E6B               	movlw	low STR_50
  2400  0003FE  6F9E               	movwf	printf@f& (0+255),b
  2401  000400  0E7E               	movlw	high STR_50
  2402  000402  6F9F               	movwf	(printf@f+1)& (0+255),b
  2403  000404  EC63  F004         	call	_printf	;wreg free
  2404  000408                     l233:
  2405                           
  2406                           ;Lab7.c: 561: }
  2407                           ;Lab7.c: 562: _delay((unsigned long)((500)*(20000000/4000.0)));
  2408  000408  0E0D               	movlw	13
  2409  00040A  0100               	movlb	0	; () banked
  2410  00040C  6FAA               	movwf	(??_temp_options+1)& (0+255),b
  2411  00040E  0EAF               	movlw	175
  2412  000410  6FA9               	movwf	??_temp_options& (0+255),b
  2413  000412  0EB6               	movlw	182
  2414  000414                     u2247:
  2415  000414  2EE8               	decfsz	wreg,f,c
  2416  000416  D7FE               	bra	u2247
  2417  000418  2FA9               	decfsz	??_temp_options& (0+255),f,b
  2418  00041A  D7FC               	bra	u2247
  2419  00041C  2FAA               	decfsz	(??_temp_options+1)& (0+255),f,b
  2420  00041E  D7FA               	bra	u2247
  2421  000420  F000               	nop	
  2422                           
  2423                           ;Lab7.c: 563: Clear();
  2424  000422  EC49  F008         	call	_Clear	;wreg free
  2425                           
  2426                           ;Lab7.c: 564: break;
  2427  000426  D790               	goto	l220
  2428  000428                     
  2429                           ;Lab7.c: 566: printf("Enter new temp threshold\n\r");
  2430  000428  0E50               	movlw	low STR_51
  2431  00042A  0100               	movlb	0	; () banked
  2432  00042C  6F9E               	movwf	printf@f& (0+255),b
  2433  00042E  0E7E               	movlw	high STR_51
  2434  000430  6F9F               	movwf	(printf@f+1)& (0+255),b
  2435  000432  EC63  F004         	call	_printf	;wreg free
  2436                           
  2437                           ;Lab7.c: 567: for(int i = 0;i < 2;i++){
  2438  000436  0E00               	movlw	0
  2439  000438  0100               	movlb	0	; () banked
  2440  00043A  6FAC               	movwf	(temp_options@i+1)& (0+255),b
  2441  00043C  0E00               	movlw	0
  2442  00043E  6FAB               	movwf	temp_options@i& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445  000440  BFAC               	btfsc	(temp_options@i+1)& (0+255),7,b
  2446  000442  D003               	goto	l236
  2447  000444  51AC               	movf	(temp_options@i+1)& (0+255),w,b
  2448  000446  E180               	bnz	l220
  2449  000448  D017               	goto	L1
  2450  00044A                     l236:
  2451                           
  2452                           ; BSR set to: 0
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;Lab7.c: 568: while(PIR1bits.RCIF == 0);
  2456  00044A  AA9E               	btfss	3998,5,c	;volatile
  2457  00044C  D7FE               	goto	l236
  2458                           
  2459                           ;Lab7.c: 569: temp_threshold = RCREG;
  2460  00044E  CFAE F0B5          	movff	4014,_temp_threshold	;volatile
  2461  000452  0100               	movlb	0	; () banked
  2462  000454  6BB6               	clrf	(_temp_threshold+1)& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;Lab7.c: 570: printf("%d", temp_threshold);
  2466  000456  0EF9               	movlw	low STR_52
  2467  000458  6F9E               	movwf	printf@f& (0+255),b
  2468  00045A  0E7F               	movlw	high STR_52
  2469  00045C  6F9F               	movwf	(printf@f+1)& (0+255),b
  2470  00045E  C0B5  F0A0         	movff	_temp_threshold,?_printf+2
  2471  000462  C0B6  F0A1         	movff	_temp_threshold+1,?_printf+3
  2472  000466  EC63  F004         	call	_printf	;wreg free
  2473  00046A  0100               	movlb	0	; () banked
  2474  00046C  4BAB               	infsnz	temp_options@i& (0+255),f,b
  2475  00046E  2BAC               	incf	(temp_options@i+1)& (0+255),f,b
  2476                           
  2477                           ; BSR set to: 0
  2478  000470  BFAC               	btfsc	(temp_options@i+1)& (0+255),7,b
  2479  000472  D7EB               	goto	l236
  2480  000474  51AC               	movf	(temp_options@i+1)& (0+255),w,b
  2481  000476  E105               	bnz	u2090
  2482  000478                     L1:
  2483  000478  0E02               	movlw	2
  2484  00047A  5DAB               	subwf	temp_options@i& (0+255),w,b
  2485  00047C  B0D8               	btfsc	status,0,c
  2486  00047E  D764               	goto	l220
  2487  000480  D7E4               	goto	l236
  2488  000482                     u2090:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;Lab7.c: 571: }
  2492                           ;Lab7.c: 572: break;
  2493  000482  D762               	goto	l220
  2494  000484                     
  2495                           ; BSR set to: 0
  2496                           ;Lab7.c: 574: Clear();
  2497                           
  2498                           ; BSR set to: 0
  2499  000484  EC49  F008         	call	_Clear	;wreg free
  2500                           
  2501                           ;Lab7.c: 575: return;
  2502  000488  0012               	return	
  2503  00048A                     
  2504                           ;Lab7.c: 577: printf("\nERROR INVALID INPUT\n\r");
  2505  00048A  0E03               	movlw	low STR_15
  2506  00048C  0100               	movlb	0	; () banked
  2507  00048E  6F9E               	movwf	printf@f& (0+255),b
  2508  000490  0E7F               	movlw	high STR_15
  2509  000492  6F9F               	movwf	(printf@f+1)& (0+255),b
  2510  000494  EC63  F004         	call	_printf	;wreg free
  2511                           
  2512                           ;Lab7.c: 578: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2513  000498  0E1A               	movlw	26
  2514  00049A  0100               	movlb	0	; () banked
  2515  00049C  6FAA               	movwf	(??_temp_options+1)& (0+255),b
  2516  00049E  0E5E               	movlw	94
  2517  0004A0  6FA9               	movwf	??_temp_options& (0+255),b
  2518  0004A2  0E6E               	movlw	110
  2519  0004A4                     u2257:
  2520  0004A4  2EE8               	decfsz	wreg,f,c
  2521  0004A6  D7FE               	bra	u2257
  2522  0004A8  2FA9               	decfsz	??_temp_options& (0+255),f,b
  2523  0004AA  D7FC               	bra	u2257
  2524  0004AC  2FAA               	decfsz	(??_temp_options+1)& (0+255),f,b
  2525  0004AE  D7FA               	bra	u2257
  2526  0004B0  F000               	nop	
  2527                           
  2528                           ;Lab7.c: 579: Clear();
  2529  0004B2  EC49  F008         	call	_Clear	;wreg free
  2530                           
  2531                           ;Lab7.c: 581: }
  2532                           
  2533                           ;Lab7.c: 580: break;
  2534  0004B6  D748               	goto	l220
  2535  0004B8                     l230:
  2536  0004B8  C0C1  F0A9         	movff	_choice,??_temp_options
  2537  0004BC  C0C2  F0AA         	movff	_choice+1,??_temp_options+1
  2538                           
  2539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2540                           ; Switch size 1, requested type "space"
  2541                           ; Number of cases is 1, Range of values is 0 to 0
  2542                           ; switch strategies available:
  2543                           ; Name         Instructions Cycles
  2544                           ; simple_byte            4     3 (average)
  2545                           ;	Chosen strategy is simple_byte
  2546  0004C0  0100               	movlb	0	; () banked
  2547  0004C2  51AA               	movf	(??_temp_options+1)& (0+255),w,b
  2548  0004C4  0A00               	xorlw	0	; case 0
  2549  0004C6  A4D8               	btfss	status,2,c
  2550  0004C8  D7E0               	goto	l243
  2551                           
  2552                           ; BSR set to: 0
  2553                           ; Switch size 1, requested type "space"
  2554                           ; Number of cases is 3, Range of values is 49 to 51
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           10     6 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  0004CA  51A9               	movf	??_temp_options& (0+255),w,b
  2560  0004CC  0A31               	xorlw	49	; case 49
  2561  0004CE  B4D8               	btfsc	status,2,c
  2562  0004D0  D780               	goto	l231
  2563  0004D2  0A03               	xorlw	3	; case 50
  2564  0004D4  B4D8               	btfsc	status,2,c
  2565  0004D6  D7A8               	goto	l235
  2566  0004D8  0A01               	xorlw	1	; case 51
  2567  0004DA  B4D8               	btfsc	status,2,c
  2568  0004DC  D7D3               	goto	l241
  2569  0004DE  D7D5               	goto	l243
  2570  0004E0                     __end_of_temp_options:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           intcon	equ	0xFF2
  2577                           intcon2	equ	0xFF1
  2578                           intcon3	equ	0xFF0
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           postdec1	equ	0xFE5
  2582                           fsr1l	equ	0xFE1
  2583                           indf2	equ	0xFDF
  2584                           fsr2h	equ	0xFDA
  2585                           fsr2l	equ	0xFD9
  2586                           status	equ	0xFD8
  2587                           
  2588 ;; *************** function _password_options *****************
  2589 ;; Defined at:
  2590 ;;		line 405 in file "Lab7.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2604 ;;      Params:         0       0       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0
  2606 ;;      Temps:          0       2       0       0       0       0       0
  2607 ;;      Totals:         0       2       0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:   10
  2611 ;; This function calls:
  2612 ;;		_Clear
  2613 ;;		_password_change
  2614 ;;		_printf
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text2
  2621  000B10                     __ptext2:
  2622                           	opt stack 0
  2623  000B10                     _password_options:
  2624                           	opt stack 20
  2625                           
  2626                           ;Lab7.c: 407: Clear();
  2627                           
  2628                           ;incstack = 0
  2629  000B10  EC49  F008         	call	_Clear	;wreg free
  2630  000B14                     
  2631                           ;Lab7.c: 409: {
  2632                           ;Lab7.c: 410: if(alarm_set == 0){
  2633  000B14  0100               	movlb	0	; () banked
  2634  000B16  51B9               	movf	_alarm_set& (0+255),w,b
  2635  000B18  11BA               	iorwf	(_alarm_set+1)& (0+255),w,b
  2636  000B1A  A4D8               	btfss	status,2,c
  2637  000B1C  D007               	goto	l181
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;Lab7.c: 411: printf("Alarm is OFF\n\r");
  2641  000B1E  0EC7               	movlw	low STR_9
  2642  000B20  6F9E               	movwf	printf@f& (0+255),b
  2643  000B22  0E7F               	movlw	high STR_9
  2644  000B24  6F9F               	movwf	(printf@f+1)& (0+255),b
  2645  000B26  EC63  F004         	call	_printf	;wreg free
  2646                           
  2647                           ;Lab7.c: 412: }
  2648  000B2A  D007               	goto	l182
  2649  000B2C                     l181:
  2650                           
  2651                           ;Lab7.c: 413: else
  2652                           ;Lab7.c: 414: {
  2653                           ;Lab7.c: 415: printf("Alarm is ON\n\r");
  2654  000B2C  0ED6               	movlw	low STR_10
  2655  000B2E  0100               	movlb	0	; () banked
  2656  000B30  6F9E               	movwf	printf@f& (0+255),b
  2657  000B32  0E7F               	movlw	high STR_10
  2658  000B34  6F9F               	movwf	(printf@f+1)& (0+255),b
  2659  000B36  EC63  F004         	call	_printf	;wreg free
  2660  000B3A                     l182:
  2661                           
  2662                           ;Lab7.c: 416: }
  2663                           ;Lab7.c: 417: if(temp_set == 0){
  2664  000B3A  0100               	movlb	0	; () banked
  2665  000B3C  51B7               	movf	_temp_set& (0+255),w,b
  2666  000B3E  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  2667  000B40  A4D8               	btfss	status,2,c
  2668  000B42  D007               	goto	l183
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;Lab7.c: 418: printf("Temp Sensor is OFF\n\r");
  2672  000B44  0E44               	movlw	low STR_11
  2673  000B46  6F9E               	movwf	printf@f& (0+255),b
  2674  000B48  0E7F               	movlw	high STR_11
  2675  000B4A  6F9F               	movwf	(printf@f+1)& (0+255),b
  2676  000B4C  EC63  F004         	call	_printf	;wreg free
  2677                           
  2678                           ;Lab7.c: 419: }
  2679  000B50  D007               	goto	l184
  2680  000B52                     l183:
  2681                           
  2682                           ;Lab7.c: 420: else
  2683                           ;Lab7.c: 421: {
  2684                           ;Lab7.c: 422: printf("Temp Sensor is ON\n\r");
  2685  000B52  0E6E               	movlw	low STR_12
  2686  000B54  0100               	movlb	0	; () banked
  2687  000B56  6F9E               	movwf	printf@f& (0+255),b
  2688  000B58  0E7F               	movlw	high STR_12
  2689  000B5A  6F9F               	movwf	(printf@f+1)& (0+255),b
  2690  000B5C  EC63  F004         	call	_printf	;wreg free
  2691  000B60                     l184:
  2692                           
  2693                           ;Lab7.c: 423: }
  2694                           ;Lab7.c: 424: printf(
  2695                           ;Lab7.c: 425: "\n\r"
  2696                           ;Lab7.c: 426: "PASSWORD OPTIONS\n\r"
  2697                           ;Lab7.c: 427: "1)Change Password\n\r"
  2698                           ;Lab7.c: 428: "2) Return to Menu\n\r");
  2699  000B60  0E45               	movlw	low STR_30
  2700  000B62  0100               	movlb	0	; () banked
  2701  000B64  6F9E               	movwf	printf@f& (0+255),b
  2702  000B66  0E7D               	movlw	high STR_30
  2703  000B68  6F9F               	movwf	(printf@f+1)& (0+255),b
  2704  000B6A  EC63  F004         	call	_printf	;wreg free
  2705  000B6E  AA9E               	btfss	3998,5,c	;volatile
  2706  000B70  D7FE               	goto	l186
  2707                           
  2708                           ;Lab7.c: 430: choice = RCREG;
  2709  000B72  CFAE F0C1          	movff	4014,_choice	;volatile
  2710  000B76  0100               	movlb	0	; () banked
  2711  000B78  6BC2               	clrf	(_choice+1)& (0+255),b
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;Lab7.c: 431: if(triggered == 1)
  2715  000B7A  05BB               	decf	_triggered& (0+255),w,b
  2716  000B7C  11BC               	iorwf	(_triggered+1)& (0+255),w,b
  2717  000B7E  A4D8               	btfss	status,2,c
  2718  000B80  D032               	goto	l190
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;Lab7.c: 432: {
  2722                           ;Lab7.c: 433: printf("\n\rReturning to Menu...\n\r");
  2723  000B82  0EB8               	movlw	low STR_14
  2724  000B84  6F9E               	movwf	printf@f& (0+255),b
  2725  000B86  0E7E               	movlw	high STR_14
  2726  000B88  6F9F               	movwf	(printf@f+1)& (0+255),b
  2727  000B8A  EC63  F004         	call	_printf	;wreg free
  2728                           
  2729                           ;Lab7.c: 434: triggered = 0;
  2730  000B8E  0E00               	movlw	0
  2731  000B90  0100               	movlb	0	; () banked
  2732  000B92  6FBC               	movwf	(_triggered+1)& (0+255),b
  2733  000B94  0E00               	movlw	0
  2734  000B96  6FBB               	movwf	_triggered& (0+255),b
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;Lab7.c: 435: Clear();
  2738  000B98  EC49  F008         	call	_Clear	;wreg free
  2739                           
  2740                           ;Lab7.c: 436: break;
  2741  000B9C  0012               	return	
  2742  000B9E                     
  2743                           ;Lab7.c: 440: printf("Changed Password\n\r\n\r");
  2744  000B9E  0E2F               	movlw	low STR_32
  2745  000BA0  0100               	movlb	0	; () banked
  2746  000BA2  6F9E               	movwf	printf@f& (0+255),b
  2747  000BA4  0E7F               	movlw	high STR_32
  2748  000BA6  6F9F               	movwf	(printf@f+1)& (0+255),b
  2749  000BA8  EC63  F004         	call	_printf	;wreg free
  2750                           
  2751                           ;Lab7.c: 441: password_change();
  2752  000BAC  ECCA  F003         	call	_password_change	;wreg free
  2753                           
  2754                           ;Lab7.c: 442: break;
  2755  000BB0  D7B1               	goto	l180
  2756  000BB2                     
  2757                           ;Lab7.c: 444: Clear();
  2758  000BB2  EC49  F008         	call	_Clear	;wreg free
  2759                           
  2760                           ;Lab7.c: 445: return;
  2761  000BB6  0012               	return	
  2762  000BB8                     
  2763                           ;Lab7.c: 447: printf("\nERROR INVALID INPUT\n\r");
  2764  000BB8  0E03               	movlw	low STR_15
  2765  000BBA  0100               	movlb	0	; () banked
  2766  000BBC  6F9E               	movwf	printf@f& (0+255),b
  2767  000BBE  0E7F               	movlw	high STR_15
  2768  000BC0  6F9F               	movwf	(printf@f+1)& (0+255),b
  2769  000BC2  EC63  F004         	call	_printf	;wreg free
  2770                           
  2771                           ;Lab7.c: 448: _delay((unsigned long)((500)*(20000000/4000.0)));
  2772  000BC6  0E0D               	movlw	13
  2773  000BC8  0100               	movlb	0	; () banked
  2774  000BCA  6FB0               	movwf	(??_password_options+1)& (0+255),b
  2775  000BCC  0EAF               	movlw	175
  2776  000BCE  6FAF               	movwf	??_password_options& (0+255),b
  2777  000BD0  0EB6               	movlw	182
  2778  000BD2                     u2267:
  2779  000BD2  2EE8               	decfsz	wreg,f,c
  2780  000BD4  D7FE               	bra	u2267
  2781  000BD6  2FAF               	decfsz	??_password_options& (0+255),f,b
  2782  000BD8  D7FC               	bra	u2267
  2783  000BDA  2FB0               	decfsz	(??_password_options+1)& (0+255),f,b
  2784  000BDC  D7FA               	bra	u2267
  2785  000BDE  F000               	nop	
  2786                           
  2787                           ;Lab7.c: 449: Clear();
  2788  000BE0  EC49  F008         	call	_Clear	;wreg free
  2789                           
  2790                           ;Lab7.c: 451: }
  2791                           
  2792                           ;Lab7.c: 450: break;
  2793  000BE4  D797               	goto	l180
  2794  000BE6                     l190:
  2795  000BE6  C0C1  F0AF         	movff	_choice,??_password_options
  2796  000BEA  C0C2  F0B0         	movff	_choice+1,??_password_options+1
  2797                           
  2798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2799                           ; Switch size 1, requested type "space"
  2800                           ; Number of cases is 1, Range of values is 0 to 0
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte            4     3 (average)
  2804                           ;	Chosen strategy is simple_byte
  2805  000BEE  0100               	movlb	0	; () banked
  2806  000BF0  51B0               	movf	(??_password_options+1)& (0+255),w,b
  2807  000BF2  0A00               	xorlw	0	; case 0
  2808  000BF4  A4D8               	btfss	status,2,c
  2809  000BF6  D7E0               	goto	l195
  2810                           
  2811                           ; BSR set to: 0
  2812                           ; Switch size 1, requested type "space"
  2813                           ; Number of cases is 2, Range of values is 49 to 50
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte            7     4 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  000BF8  51AF               	movf	??_password_options& (0+255),w,b
  2819  000BFA  0A31               	xorlw	49	; case 49
  2820  000BFC  B4D8               	btfsc	status,2,c
  2821  000BFE  D7CF               	goto	l191
  2822  000C00  0A03               	xorlw	3	; case 50
  2823  000C02  B4D8               	btfsc	status,2,c
  2824  000C04  D7D6               	goto	l193
  2825  000C06  D7D8               	goto	l195
  2826  000C08                     __end_of_password_options:
  2827                           	opt stack 0
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           intcon	equ	0xFF2
  2833                           intcon2	equ	0xFF1
  2834                           intcon3	equ	0xFF0
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           postdec1	equ	0xFE5
  2838                           fsr1l	equ	0xFE1
  2839                           indf2	equ	0xFDF
  2840                           fsr2h	equ	0xFDA
  2841                           fsr2l	equ	0xFD9
  2842                           status	equ	0xFD8
  2843                           
  2844 ;; *************** function _password_change *****************
  2845 ;; Defined at:
  2846 ;;		line 345 in file "Lab7.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  i               2   45[BANK0 ] int 
  2851 ;;  i               2   43[BANK0 ] int 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2861 ;;      Params:         0       0       0       0       0       0       0
  2862 ;;      Locals:         0       4       0       0       0       0       0
  2863 ;;      Temps:          0       2       0       0       0       0       0
  2864 ;;      Totals:         0       6       0       0       0       0       0
  2865 ;;Total ram usage:        6 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    9
  2868 ;; This function calls:
  2869 ;;		_Clear
  2870 ;;		_printf
  2871 ;;		_strncmp
  2872 ;; This function is called by:
  2873 ;;		_password_options
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text3
  2878  000794                     __ptext3:
  2879                           	opt stack 0
  2880  000794                     _password_change:
  2881                           	opt stack 20
  2882                           
  2883                           ;Lab7.c: 348: {
  2884                           ;Lab7.c: 349: Clear();
  2885                           
  2886                           ;incstack = 0
  2887                           ;Lab7.c: 347: while(1)
  2888  000794  EC49  F008         	call	_Clear	;wreg free
  2889                           
  2890                           ;Lab7.c: 350: printf("Enter Current Password: ");
  2891  000798  0EEA               	movlw	low STR_16
  2892  00079A  0100               	movlb	0	; () banked
  2893  00079C  6F9E               	movwf	printf@f& (0+255),b
  2894  00079E  0E7E               	movlw	high STR_16
  2895  0007A0  6F9F               	movwf	(printf@f+1)& (0+255),b
  2896  0007A2  EC63  F004         	call	_printf	;wreg free
  2897                           
  2898                           ;Lab7.c: 351: for(int i = 0;i < 4;i++){
  2899  0007A6  0E00               	movlw	0
  2900  0007A8  0100               	movlb	0	; () banked
  2901  0007AA  6FAC               	movwf	(password_change@i+1)& (0+255),b
  2902  0007AC  0E00               	movlw	0
  2903  0007AE  6FAB               	movwf	password_change@i& (0+255),b
  2904                           
  2905                           ; BSR set to: 0
  2906  0007B0  BFAC               	btfsc	(password_change@i+1)& (0+255),7,b
  2907  0007B2  D006               	goto	l150
  2908  0007B4  51AC               	movf	(password_change@i+1)& (0+255),w,b
  2909  0007B6  E120               	bnz	l2805
  2910  0007B8  0E04               	movlw	4
  2911  0007BA  5DAB               	subwf	password_change@i& (0+255),w,b
  2912  0007BC  B0D8               	btfsc	status,0,c
  2913  0007BE  D01C               	goto	u1880
  2914  0007C0                     l150:
  2915                           
  2916                           ; BSR set to: 0
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;Lab7.c: 352: while(PIR1bits.RCIF == 0);
  2920  0007C0  AA9E               	btfss	3998,5,c	;volatile
  2921  0007C2  D7FE               	goto	l150
  2922                           
  2923                           ;Lab7.c: 353: pass[i] = RCREG;
  2924  0007C4  0EC3               	movlw	low _pass
  2925  0007C6  0100               	movlb	0	; () banked
  2926  0007C8  25AB               	addwf	password_change@i& (0+255),w,b
  2927  0007CA  6ED9               	movwf	fsr2l,c
  2928  0007CC  0E00               	movlw	high _pass
  2929  0007CE  21AC               	addwfc	(password_change@i+1)& (0+255),w,b
  2930  0007D0  6EDA               	movwf	fsr2h,c
  2931  0007D2  CFAE FFDF          	movff	4014,indf2	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;Lab7.c: 354: printf("*");
  2935  0007D6  0EFC               	movlw	low STR_7
  2936  0007D8  6F9E               	movwf	printf@f& (0+255),b
  2937  0007DA  0E7F               	movlw	high STR_7
  2938  0007DC  6F9F               	movwf	(printf@f+1)& (0+255),b
  2939  0007DE  EC63  F004         	call	_printf	;wreg free
  2940  0007E2  0100               	movlb	0	; () banked
  2941  0007E4  4BAB               	infsnz	password_change@i& (0+255),f,b
  2942  0007E6  2BAC               	incf	(password_change@i+1)& (0+255),f,b
  2943                           
  2944                           ; BSR set to: 0
  2945  0007E8  BFAC               	btfsc	(password_change@i+1)& (0+255),7,b
  2946  0007EA  D7EA               	goto	l150
  2947  0007EC  51AC               	movf	(password_change@i+1)& (0+255),w,b
  2948  0007EE  E104               	bnz	l2805
  2949  0007F0  0E04               	movlw	4
  2950  0007F2  5DAB               	subwf	password_change@i& (0+255),w,b
  2951  0007F4  A0D8               	btfss	status,0,c
  2952  0007F6  D7E4               	goto	l150
  2953  0007F8                     u1880:
  2954  0007F8                     l2805:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;Lab7.c: 355: }
  2958                           ;Lab7.c: 356: check = strncmp(pass, saved_pass, 4);
  2959  0007F8  0EC3               	movlw	low _pass
  2960  0007FA  6F96               	movwf	strncmp@s1& (0+255),b
  2961  0007FC  0E00               	movlw	high _pass
  2962  0007FE  6F97               	movwf	(strncmp@s1+1)& (0+255),b
  2963  000800  0EC7               	movlw	low _saved_pass
  2964  000802  6F98               	movwf	strncmp@s2& (0+255),b
  2965  000804  0E00               	movlw	high _saved_pass
  2966  000806  6F99               	movwf	(strncmp@s2+1)& (0+255),b
  2967  000808  0E00               	movlw	0
  2968  00080A  6F9B               	movwf	(strncmp@len+1)& (0+255),b
  2969  00080C  0E04               	movlw	4
  2970  00080E  6F9A               	movwf	strncmp@len& (0+255),b
  2971  000810  EC00  F007         	call	_strncmp	;wreg free
  2972  000814  C096  F0BF         	movff	?_strncmp,_check
  2973  000818  C097  F0C0         	movff	?_strncmp+1,_check+1
  2974                           
  2975                           ;Lab7.c: 357: if(check == 0)
  2976  00081C  0100               	movlb	0	; () banked
  2977  00081E  51BF               	movf	_check& (0+255),w,b
  2978  000820  11C0               	iorwf	(_check+1)& (0+255),w,b
  2979  000822  A4D8               	btfss	status,2,c
  2980  000824  D039               	goto	l155
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;Lab7.c: 358: {
  2984                           ;Lab7.c: 359: Clear();
  2985  000826  EC49  F008         	call	_Clear	;wreg free
  2986                           
  2987                           ;Lab7.c: 360: printf("Enter New Password: ");
  2988  00082A  0E59               	movlw	low STR_18
  2989  00082C  0100               	movlb	0	; () banked
  2990  00082E  6F9E               	movwf	printf@f& (0+255),b
  2991  000830  0E7F               	movlw	high STR_18
  2992  000832  6F9F               	movwf	(printf@f+1)& (0+255),b
  2993  000834  EC63  F004         	call	_printf	;wreg free
  2994                           
  2995                           ;Lab7.c: 361: for(int i = 0;i < 4;i++){
  2996  000838  0E00               	movlw	0
  2997  00083A  0100               	movlb	0	; () banked
  2998  00083C  6FAE               	movwf	(password_change@i_977+1)& (0+255),b
  2999  00083E  0E00               	movlw	0
  3000  000840  6FAD               	movwf	password_change@i_977& (0+255),b
  3001                           
  3002                           ; BSR set to: 0
  3003  000842  BFAE               	btfsc	(password_change@i_977+1)& (0+255),7,b
  3004  000844  D006               	goto	l156
  3005  000846  51AE               	movf	(password_change@i_977+1)& (0+255),w,b
  3006  000848  E120               	bnz	l2825
  3007  00084A  0E04               	movlw	4
  3008  00084C  5DAD               	subwf	password_change@i_977& (0+255),w,b
  3009  00084E  B0D8               	btfsc	status,0,c
  3010  000850  D01C               	goto	u1920
  3011  000852                     l156:
  3012                           
  3013                           ; BSR set to: 0
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;Lab7.c: 362: while(PIR1bits.RCIF == 0);
  3017  000852  AA9E               	btfss	3998,5,c	;volatile
  3018  000854  D7FE               	goto	l156
  3019                           
  3020                           ;Lab7.c: 363: saved_pass[i] = RCREG;
  3021  000856  0EC7               	movlw	low _saved_pass
  3022  000858  0100               	movlb	0	; () banked
  3023  00085A  25AD               	addwf	password_change@i_977& (0+255),w,b
  3024  00085C  6ED9               	movwf	fsr2l,c
  3025  00085E  0E00               	movlw	high _saved_pass
  3026  000860  21AE               	addwfc	(password_change@i_977+1)& (0+255),w,b
  3027  000862  6EDA               	movwf	fsr2h,c
  3028  000864  CFAE FFDF          	movff	4014,indf2	;volatile
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;Lab7.c: 364: printf("*");
  3032  000868  0EFC               	movlw	low STR_7
  3033  00086A  6F9E               	movwf	printf@f& (0+255),b
  3034  00086C  0E7F               	movlw	high STR_7
  3035  00086E  6F9F               	movwf	(printf@f+1)& (0+255),b
  3036  000870  EC63  F004         	call	_printf	;wreg free
  3037  000874  0100               	movlb	0	; () banked
  3038  000876  4BAD               	infsnz	password_change@i_977& (0+255),f,b
  3039  000878  2BAE               	incf	(password_change@i_977+1)& (0+255),f,b
  3040                           
  3041                           ; BSR set to: 0
  3042  00087A  BFAE               	btfsc	(password_change@i_977+1)& (0+255),7,b
  3043  00087C  D7EA               	goto	l156
  3044  00087E  51AE               	movf	(password_change@i_977+1)& (0+255),w,b
  3045  000880  E104               	bnz	l2825
  3046  000882  0E04               	movlw	4
  3047  000884  5DAD               	subwf	password_change@i_977& (0+255),w,b
  3048  000886  A0D8               	btfss	status,0,c
  3049  000888  D7E4               	goto	l156
  3050  00088A                     u1920:
  3051  00088A                     l2825:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;Lab7.c: 365: }
  3055                           ;Lab7.c: 366: printf("\n\r\n\rPassword Changed\n\r\n\r");
  3056  00088A  0E9F               	movlw	low STR_20
  3057  00088C  6F9E               	movwf	printf@f& (0+255),b
  3058  00088E  0E7E               	movlw	high STR_20
  3059  000890  6F9F               	movwf	(printf@f+1)& (0+255),b
  3060  000892  EC63  F004         	call	_printf	;wreg free
  3061                           
  3062                           ;Lab7.c: 367: break;
  3063  000896  0012               	return	
  3064  000898                     l155:
  3065                           
  3066                           ;Lab7.c: 369: else
  3067                           ;Lab7.c: 370: {
  3068                           ;Lab7.c: 371: printf("\n\rPassword Invalid. Going back to Password Menu....\n\r");
  3069  000898  0E80               	movlw	low STR_21
  3070  00089A  0100               	movlb	0	; () banked
  3071  00089C  6F9E               	movwf	printf@f& (0+255),b
  3072  00089E  0E7D               	movlw	high STR_21
  3073  0008A0  6F9F               	movwf	(printf@f+1)& (0+255),b
  3074  0008A2  EC63  F004         	call	_printf	;wreg free
  3075                           
  3076                           ;Lab7.c: 372: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3077  0008A6  0E1A               	movlw	26
  3078  0008A8  0100               	movlb	0	; () banked
  3079  0008AA  6FAA               	movwf	(??_password_change+1)& (0+255),b
  3080  0008AC  0E5E               	movlw	94
  3081  0008AE  6FA9               	movwf	??_password_change& (0+255),b
  3082  0008B0  0E6E               	movlw	110
  3083  0008B2                     u2277:
  3084  0008B2  2EE8               	decfsz	wreg,f,c
  3085  0008B4  D7FE               	bra	u2277
  3086  0008B6  2FA9               	decfsz	??_password_change& (0+255),f,b
  3087  0008B8  D7FC               	bra	u2277
  3088  0008BA  2FAA               	decfsz	(??_password_change+1)& (0+255),f,b
  3089  0008BC  D7FA               	bra	u2277
  3090  0008BE  F000               	nop	
  3091                           
  3092                           ;Lab7.c: 373: Clear();
  3093  0008C0  EC49  F008         	call	_Clear	;wreg free
  3094                           
  3095                           ;Lab7.c: 374: break;
  3096  0008C4  0012               	return	
  3097  0008C6                     __end_of_password_change:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           intcon	equ	0xFF2
  3104                           intcon2	equ	0xFF1
  3105                           intcon3	equ	0xFF0
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8
  3114                           
  3115 ;; *************** function _strncmp *****************
  3116 ;; Defined at:
  3117 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  s1              2   22[BANK0 ] PTR const unsigned char 
  3120 ;;		 -> pass(4), 
  3121 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  3122 ;;		 -> saved_pass(4), 
  3123 ;;  len             2   26[BANK0 ] unsigned int 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2   22[BANK0 ] int 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:         0       6       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0
  3137 ;;      Temps:          3       0       0       0       0       0       0
  3138 ;;      Totals:         3       6       0       0       0       0       0
  3139 ;;Total ram usage:        9 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    6
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_password_change
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text4
  3150  000E00                     __ptext4:
  3151                           	opt stack 0
  3152  000E00                     _strncmp:
  3153                           	opt stack 22
  3154                           
  3155                           ;incstack = 0
  3156  000E00  D031               	goto	l866
  3157  000E02                     l2773:
  3158  000E02  C096  FFD9         	movff	strncmp@s1,fsr2l
  3159  000E06  C097  FFDA         	movff	strncmp@s1+1,fsr2h
  3160  000E0A  50DF               	movf	indf2,w,c
  3161  000E0C  B4D8               	btfsc	status,2,c
  3162  000E0E  D00C               	goto	u1840
  3163  000E10  C098  FFD9         	movff	strncmp@s2,fsr2l
  3164  000E14  C099  FFDA         	movff	strncmp@s2+1,fsr2h
  3165  000E18  C096  FFE1         	movff	strncmp@s1,fsr1l
  3166  000E1C  C097  FFE2         	movff	strncmp@s1+1,fsr1h
  3167  000E20  50DE               	movf	postinc2,w,c
  3168  000E22  18E6               	xorwf	postinc1,w,c
  3169  000E24  B4D8               	btfsc	status,2,c
  3170  000E26  D019               	goto	l868
  3171  000E28                     u1840:
  3172  000E28  C098  FFD9         	movff	strncmp@s2,fsr2l
  3173  000E2C  C099  FFDA         	movff	strncmp@s2+1,fsr2h
  3174  000E30  50DF               	movf	indf2,w,c
  3175  000E32  6E39               	movwf	??_strncmp& (0+255),c
  3176  000E34  6A3A               	clrf	(??_strncmp+1)& (0+255),c
  3177  000E36  1E39               	comf	??_strncmp,f,c
  3178  000E38  1E3A               	comf	??_strncmp+1,f,c
  3179  000E3A  4A39               	infsnz	??_strncmp,f,c
  3180  000E3C  2A3A               	incf	??_strncmp+1,f,c
  3181  000E3E  C096  FFD9         	movff	strncmp@s1,fsr2l
  3182  000E42  C097  FFDA         	movff	strncmp@s1+1,fsr2h
  3183  000E46  50DF               	movf	indf2,w,c
  3184  000E48  6E3B               	movwf	(??_strncmp+2)& (0+255),c
  3185  000E4A  503B               	movf	??_strncmp+2,w,c
  3186  000E4C  2439               	addwf	??_strncmp,w,c
  3187  000E4E  0100               	movlb	0	; () banked
  3188  000E50  6F96               	movwf	?_strncmp& (0+255),b
  3189  000E52  0E00               	movlw	0
  3190  000E54  203A               	addwfc	??_strncmp+1,w,c
  3191  000E56  6F97               	movwf	(?_strncmp+1)& (0+255),b
  3192                           
  3193                           ; BSR set to: 0
  3194  000E58  0012               	return	
  3195  000E5A                     l868:
  3196                           
  3197                           ; BSR set to: 0
  3198  000E5A  0100               	movlb	0	; () banked
  3199  000E5C  4B96               	infsnz	strncmp@s1& (0+255),f,b
  3200  000E5E  2B97               	incf	(strncmp@s1+1)& (0+255),f,b
  3201  000E60  4B98               	infsnz	strncmp@s2& (0+255),f,b
  3202  000E62  2B99               	incf	(strncmp@s2+1)& (0+255),f,b
  3203  000E64                     l866:
  3204                           
  3205                           ; BSR set to: 0
  3206  000E64  0100               	movlb	0	; () banked
  3207  000E66  079A               	decf	strncmp@len& (0+255),f,b
  3208  000E68  A0D8               	btfss	status,0,c
  3209  000E6A  079B               	decf	(strncmp@len+1)& (0+255),f,b
  3210  000E6C  299A               	incf	strncmp@len& (0+255),w,b
  3211  000E6E  E1C9               	bnz	l2773
  3212  000E70  299B               	incf	(strncmp@len+1)& (0+255),w,b
  3213  000E72  A4D8               	btfss	status,2,c
  3214  000E74  D7C6               	goto	l867
  3215                           
  3216                           ; BSR set to: 0
  3217                           
  3218                           ; BSR set to: 0
  3219  000E76  0E00               	movlw	0
  3220  000E78  6F97               	movwf	(?_strncmp+1)& (0+255),b
  3221  000E7A  0E00               	movlw	0
  3222  000E7C  6F96               	movwf	?_strncmp& (0+255),b
  3223  000E7E  0012               	return	
  3224  000E80                     __end_of_strncmp:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           intcon	equ	0xFF2
  3231                           intcon2	equ	0xFF1
  3232                           intcon3	equ	0xFF0
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           postinc1	equ	0xFE6
  3236                           postdec1	equ	0xFE5
  3237                           fsr1h	equ	0xFE2
  3238                           fsr1l	equ	0xFE1
  3239                           indf2	equ	0xFDF
  3240                           postinc2	equ	0xFDE
  3241                           fsr2h	equ	0xFDA
  3242                           fsr2l	equ	0xFD9
  3243                           status	equ	0xFD8
  3244                           
  3245 ;; *************** function _input_options *****************
  3246 ;; Defined at:
  3247 ;;		line 584 in file "Lab7.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3261 ;;      Params:         0       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0
  3263 ;;      Temps:          0       2       0       0       0       0       0
  3264 ;;      Totals:         0       2       0       0       0       0       0
  3265 ;;Total ram usage:        2 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    9
  3268 ;; This function calls:
  3269 ;;		_Clear
  3270 ;;		_printf
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text5
  3277  0004E0                     __ptext5:
  3278                           	opt stack 0
  3279  0004E0                     _input_options:
  3280                           	opt stack 21
  3281                           
  3282                           ;Lab7.c: 586: Clear();
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;incstack = 0
  3286  0004E0  EC49  F008         	call	_Clear	;wreg free
  3287  0004E4                     l247:
  3288                           
  3289                           ;Lab7.c: 588: {
  3290                           ;Lab7.c: 589: Clear();
  3291  0004E4  EC49  F008         	call	_Clear	;wreg free
  3292                           
  3293                           ;Lab7.c: 590: if(alarm_set == 0){
  3294  0004E8  0100               	movlb	0	; () banked
  3295  0004EA  51B9               	movf	_alarm_set& (0+255),w,b
  3296  0004EC  11BA               	iorwf	(_alarm_set+1)& (0+255),w,b
  3297  0004EE  A4D8               	btfss	status,2,c
  3298  0004F0  D007               	goto	l248
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;Lab7.c: 591: printf("Alarm is OFF\n\r");
  3302  0004F2  0EC7               	movlw	low STR_9
  3303  0004F4  6F9E               	movwf	printf@f& (0+255),b
  3304  0004F6  0E7F               	movlw	high STR_9
  3305  0004F8  6F9F               	movwf	(printf@f+1)& (0+255),b
  3306  0004FA  EC63  F004         	call	_printf	;wreg free
  3307                           
  3308                           ;Lab7.c: 592: }
  3309  0004FE  D007               	goto	l249
  3310  000500                     l248:
  3311                           
  3312                           ;Lab7.c: 593: else
  3313                           ;Lab7.c: 594: {
  3314                           ;Lab7.c: 595: printf("Alarm is ON\n\r");
  3315  000500  0ED6               	movlw	low STR_10
  3316  000502  0100               	movlb	0	; () banked
  3317  000504  6F9E               	movwf	printf@f& (0+255),b
  3318  000506  0E7F               	movlw	high STR_10
  3319  000508  6F9F               	movwf	(printf@f+1)& (0+255),b
  3320  00050A  EC63  F004         	call	_printf	;wreg free
  3321  00050E                     l249:
  3322                           
  3323                           ;Lab7.c: 596: }
  3324                           ;Lab7.c: 597: if(temp_set == 0){
  3325  00050E  0100               	movlb	0	; () banked
  3326  000510  51B7               	movf	_temp_set& (0+255),w,b
  3327  000512  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  3328  000514  A4D8               	btfss	status,2,c
  3329  000516  D007               	goto	l250
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;Lab7.c: 598: printf("Temp Sensor is OFF\n\r");
  3333  000518  0E44               	movlw	low STR_11
  3334  00051A  6F9E               	movwf	printf@f& (0+255),b
  3335  00051C  0E7F               	movlw	high STR_11
  3336  00051E  6F9F               	movwf	(printf@f+1)& (0+255),b
  3337  000520  EC63  F004         	call	_printf	;wreg free
  3338                           
  3339                           ;Lab7.c: 599: }
  3340  000524  D007               	goto	l251
  3341  000526                     l250:
  3342                           
  3343                           ;Lab7.c: 600: else
  3344                           ;Lab7.c: 601: {
  3345                           ;Lab7.c: 602: printf("Temp Sensor is ON\n\r");
  3346  000526  0E6E               	movlw	low STR_12
  3347  000528  0100               	movlb	0	; () banked
  3348  00052A  6F9E               	movwf	printf@f& (0+255),b
  3349  00052C  0E7F               	movlw	high STR_12
  3350  00052E  6F9F               	movwf	(printf@f+1)& (0+255),b
  3351  000530  EC63  F004         	call	_printf	;wreg free
  3352  000534                     l251:
  3353                           
  3354                           ;Lab7.c: 603: }
  3355                           ;Lab7.c: 604: printf("\n\r\n\r"
  3356                           ;Lab7.c: 605: "INPUT OPTIONS:\n\r"
  3357                           ;Lab7.c: 606: "1) Use Keypad\n\r"
  3358                           ;Lab7.c: 607: "2) Use Keyboard\n\r"
  3359                           ;Lab7.c: 608: "3) Use BOTH\n\r"
  3360                           ;Lab7.c: 609: "4) Return to Menu\n\r");
  3361  000534  0EAD               	movlw	low STR_58
  3362  000536  0100               	movlb	0	; () banked
  3363  000538  6F9E               	movwf	printf@f& (0+255),b
  3364  00053A  0E7C               	movlw	high STR_58
  3365  00053C  6F9F               	movwf	(printf@f+1)& (0+255),b
  3366  00053E  EC63  F004         	call	_printf	;wreg free
  3367  000542  AA9E               	btfss	3998,5,c	;volatile
  3368  000544  D7FE               	goto	l253
  3369                           
  3370                           ;Lab7.c: 612: choice = RCREG;
  3371  000546  CFAE F0C1          	movff	4014,_choice	;volatile
  3372  00054A  0100               	movlb	0	; () banked
  3373  00054C  6BC2               	clrf	(_choice+1)& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;Lab7.c: 613: if(triggered == 1)
  3377  00054E  05BB               	decf	_triggered& (0+255),w,b
  3378  000550  11BC               	iorwf	(_triggered+1)& (0+255),w,b
  3379  000552  A4D8               	btfss	status,2,c
  3380  000554  D06C               	goto	l257
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;Lab7.c: 614: {
  3384                           ;Lab7.c: 615: printf("\n\rReturning to Menu...\n\r");
  3385  000556  0EB8               	movlw	low STR_14
  3386  000558  6F9E               	movwf	printf@f& (0+255),b
  3387  00055A  0E7E               	movlw	high STR_14
  3388  00055C  6F9F               	movwf	(printf@f+1)& (0+255),b
  3389  00055E  EC63  F004         	call	_printf	;wreg free
  3390                           
  3391                           ;Lab7.c: 616: triggered = 0;
  3392  000562  0E00               	movlw	0
  3393  000564  0100               	movlb	0	; () banked
  3394  000566  6FBC               	movwf	(_triggered+1)& (0+255),b
  3395  000568  0E00               	movlw	0
  3396  00056A  6FBB               	movwf	_triggered& (0+255),b
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;Lab7.c: 617: Clear();
  3400  00056C  EC49  F008         	call	_Clear	;wreg free
  3401                           
  3402                           ;Lab7.c: 618: break;
  3403  000570  0012               	return	
  3404  000572                     
  3405                           ;Lab7.c: 622: printf("\n\rUsing Keypad as Input\n\r");
  3406  000572  0E85               	movlw	low STR_60
  3407  000574  0100               	movlb	0	; () banked
  3408  000576  6F9E               	movwf	printf@f& (0+255),b
  3409  000578  0E7E               	movlw	high STR_60
  3410  00057A  6F9F               	movwf	(printf@f+1)& (0+255),b
  3411  00057C  EC63  F004         	call	_printf	;wreg free
  3412                           
  3413                           ;Lab7.c: 623: TRISD = 0b00001111;
  3414  000580  0E0F               	movlw	15
  3415  000582  6E95               	movwf	3989,c	;volatile
  3416                           
  3417                           ;Lab7.c: 626: PORTBbits.RB4 = 1;
  3418  000584  8881               	bsf	3969,4,c	;volatile
  3419                           
  3420                           ;Lab7.c: 627: _delay((unsigned long)((500)*(20000000/4000.0)));
  3421  000586  0E0D               	movlw	13
  3422  000588  0100               	movlb	0	; () banked
  3423  00058A  6FAA               	movwf	(??_input_options+1)& (0+255),b
  3424  00058C  0EAF               	movlw	175
  3425  00058E  6FA9               	movwf	??_input_options& (0+255),b
  3426  000590  0EB6               	movlw	182
  3427  000592                     u2287:
  3428  000592  2EE8               	decfsz	wreg,f,c
  3429  000594  D7FE               	bra	u2287
  3430  000596  2FA9               	decfsz	??_input_options& (0+255),f,b
  3431  000598  D7FC               	bra	u2287
  3432  00059A  2FAA               	decfsz	(??_input_options+1)& (0+255),f,b
  3433  00059C  D7FA               	bra	u2287
  3434  00059E  D02B               	goto	L3
  3435  0005A0                     
  3436                           ;Lab7.c: 630: printf("\n\rUsing Keyboard as Input\n\r");
  3437  0005A0  0E34               	movlw	low STR_61
  3438  0005A2  0100               	movlb	0	; () banked
  3439  0005A4  6F9E               	movwf	printf@f& (0+255),b
  3440  0005A6  0E7E               	movlw	high STR_61
  3441  0005A8  6F9F               	movwf	(printf@f+1)& (0+255),b
  3442  0005AA  EC63  F004         	call	_printf	;wreg free
  3443                           
  3444                           ;Lab7.c: 631: TRISD = 0b11111111;
  3445  0005AE  6895               	setf	3989,c	;volatile
  3446                           
  3447                           ;Lab7.c: 632: PORTBbits.RB4 = 0;
  3448  0005B0  9881               	bcf	3969,4,c	;volatile
  3449                           
  3450                           ;Lab7.c: 633: _delay((unsigned long)((500)*(20000000/4000.0)));
  3451  0005B2  0E0D               	movlw	13
  3452  0005B4  0100               	movlb	0	; () banked
  3453  0005B6  6FAA               	movwf	(??_input_options+1)& (0+255),b
  3454  0005B8  0EAF               	movlw	175
  3455  0005BA  6FA9               	movwf	??_input_options& (0+255),b
  3456  0005BC  0EB6               	movlw	182
  3457  0005BE                     u2297:
  3458  0005BE  2EE8               	decfsz	wreg,f,c
  3459  0005C0  D7FE               	bra	u2297
  3460  0005C2  2FA9               	decfsz	??_input_options& (0+255),f,b
  3461  0005C4  D7FC               	bra	u2297
  3462  0005C6  2FAA               	decfsz	(??_input_options+1)& (0+255),f,b
  3463  0005C8  D7FA               	bra	u2297
  3464  0005CA  D015               	goto	L3
  3465  0005CC                     
  3466                           ;Lab7.c: 636: printf("\n\rBOTH\n\r");
  3467  0005CC  0EE4               	movlw	low STR_62
  3468  0005CE  0100               	movlb	0	; () banked
  3469  0005D0  6F9E               	movwf	printf@f& (0+255),b
  3470  0005D2  0E7F               	movlw	high STR_62
  3471  0005D4  6F9F               	movwf	(printf@f+1)& (0+255),b
  3472  0005D6  EC63  F004         	call	_printf	;wreg free
  3473                           
  3474                           ;Lab7.c: 637: TRISD = 0b11111111;
  3475  0005DA  6895               	setf	3989,c	;volatile
  3476                           
  3477                           ;Lab7.c: 638: PORTBbits.RB4 = 1;
  3478  0005DC  8881               	bsf	3969,4,c	;volatile
  3479                           
  3480                           ;Lab7.c: 639: _delay((unsigned long)((500)*(20000000/4000.0)));
  3481  0005DE  0E0D               	movlw	13
  3482  0005E0  0100               	movlb	0	; () banked
  3483  0005E2  6FAA               	movwf	(??_input_options+1)& (0+255),b
  3484  0005E4  0EAF               	movlw	175
  3485  0005E6  6FA9               	movwf	??_input_options& (0+255),b
  3486  0005E8  0EB6               	movlw	182
  3487  0005EA                     u2307:
  3488  0005EA  2EE8               	decfsz	wreg,f,c
  3489  0005EC  D7FE               	bra	u2307
  3490  0005EE  2FA9               	decfsz	??_input_options& (0+255),f,b
  3491  0005F0  D7FC               	bra	u2307
  3492  0005F2  2FAA               	decfsz	(??_input_options+1)& (0+255),f,b
  3493  0005F4  D7FA               	bra	u2307
  3494  0005F6                     L3:
  3495  0005F6  F000               	nop	
  3496                           
  3497                           ;Lab7.c: 640: break;
  3498  0005F8  D775               	goto	l247
  3499  0005FA                     
  3500                           ;Lab7.c: 642: Clear();
  3501  0005FA  EC49  F008         	call	_Clear	;wreg free
  3502                           
  3503                           ;Lab7.c: 643: return;
  3504  0005FE  0012               	return	
  3505  000600                     
  3506                           ;Lab7.c: 645: printf("\nERROR INVALID INPUT\n\r");
  3507  000600  0E03               	movlw	low STR_15
  3508  000602  0100               	movlb	0	; () banked
  3509  000604  6F9E               	movwf	printf@f& (0+255),b
  3510  000606  0E7F               	movlw	high STR_15
  3511  000608  6F9F               	movwf	(printf@f+1)& (0+255),b
  3512  00060A  EC63  F004         	call	_printf	;wreg free
  3513                           
  3514                           ;Lab7.c: 646: _delay((unsigned long)((500)*(20000000/4000.0)));
  3515  00060E  0E0D               	movlw	13
  3516  000610  0100               	movlb	0	; () banked
  3517  000612  6FAA               	movwf	(??_input_options+1)& (0+255),b
  3518  000614  0EAF               	movlw	175
  3519  000616  6FA9               	movwf	??_input_options& (0+255),b
  3520  000618  0EB6               	movlw	182
  3521  00061A                     u2317:
  3522  00061A  2EE8               	decfsz	wreg,f,c
  3523  00061C  D7FE               	bra	u2317
  3524  00061E  2FA9               	decfsz	??_input_options& (0+255),f,b
  3525  000620  D7FC               	bra	u2317
  3526  000622  2FAA               	decfsz	(??_input_options+1)& (0+255),f,b
  3527  000624  D7FA               	bra	u2317
  3528  000626  F000               	nop	
  3529                           
  3530                           ;Lab7.c: 647: Clear();
  3531  000628  EC49  F008         	call	_Clear	;wreg free
  3532                           
  3533                           ;Lab7.c: 649: }
  3534                           
  3535                           ;Lab7.c: 648: break;
  3536  00062C  D75B               	goto	l247
  3537  00062E                     l257:
  3538  00062E  C0C1  F0A9         	movff	_choice,??_input_options
  3539  000632  C0C2  F0AA         	movff	_choice+1,??_input_options+1
  3540                           
  3541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3542                           ; Switch size 1, requested type "space"
  3543                           ; Number of cases is 1, Range of values is 0 to 0
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte            4     3 (average)
  3547                           ;	Chosen strategy is simple_byte
  3548  000636  0100               	movlb	0	; () banked
  3549  000638  51AA               	movf	(??_input_options+1)& (0+255),w,b
  3550  00063A  0A00               	xorlw	0	; case 0
  3551  00063C  A4D8               	btfss	status,2,c
  3552  00063E  D7E0               	goto	l264
  3553                           
  3554                           ; BSR set to: 0
  3555                           ; Switch size 1, requested type "space"
  3556                           ; Number of cases is 4, Range of values is 49 to 52
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte           13     7 (average)
  3560                           ;	Chosen strategy is simple_byte
  3561  000640  51A9               	movf	??_input_options& (0+255),w,b
  3562  000642  0A31               	xorlw	49	; case 49
  3563  000644  B4D8               	btfsc	status,2,c
  3564  000646  D795               	goto	l258
  3565  000648  0A03               	xorlw	3	; case 50
  3566  00064A  B4D8               	btfsc	status,2,c
  3567  00064C  D7A9               	goto	l260
  3568  00064E  0A01               	xorlw	1	; case 51
  3569  000650  B4D8               	btfsc	status,2,c
  3570  000652  D7BC               	goto	l261
  3571  000654  0A07               	xorlw	7	; case 52
  3572  000656  B4D8               	btfsc	status,2,c
  3573  000658  D7D0               	goto	l262
  3574  00065A  D7D2               	goto	l264
  3575  00065C                     __end_of_input_options:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           intcon3	equ	0xFF0
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postinc1	equ	0xFE6
  3587                           postdec1	equ	0xFE5
  3588                           fsr1h	equ	0xFE2
  3589                           fsr1l	equ	0xFE1
  3590                           indf2	equ	0xFDF
  3591                           postinc2	equ	0xFDE
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _alarm_options *****************
  3597 ;; Defined at:
  3598 ;;		line 454 in file "Lab7.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3612 ;;      Params:         0       0       0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0
  3614 ;;      Temps:          0       2       0       0       0       0       0
  3615 ;;      Totals:         0       2       0       0       0       0       0
  3616 ;;Total ram usage:        2 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    9
  3619 ;; This function calls:
  3620 ;;		_Clear
  3621 ;;		_printf
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text6
  3628  00065C                     __ptext6:
  3629                           	opt stack 0
  3630  00065C                     _alarm_options:
  3631                           	opt stack 21
  3632                           
  3633                           ;Lab7.c: 456: Clear();
  3634                           
  3635                           ;incstack = 0
  3636  00065C  EC49  F008         	call	_Clear	;wreg free
  3637  000660                     
  3638                           ;Lab7.c: 458: {
  3639                           ;Lab7.c: 459: if(alarm_set == 0){
  3640  000660  0100               	movlb	0	; () banked
  3641  000662  51B9               	movf	_alarm_set& (0+255),w,b
  3642  000664  11BA               	iorwf	(_alarm_set+1)& (0+255),w,b
  3643  000666  A4D8               	btfss	status,2,c
  3644  000668  D007               	goto	l200
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;Lab7.c: 460: printf("Alarm is OFF\n\r");
  3648  00066A  0EC7               	movlw	low STR_9
  3649  00066C  6F9E               	movwf	printf@f& (0+255),b
  3650  00066E  0E7F               	movlw	high STR_9
  3651  000670  6F9F               	movwf	(printf@f+1)& (0+255),b
  3652  000672  EC63  F004         	call	_printf	;wreg free
  3653                           
  3654                           ;Lab7.c: 461: }
  3655  000676  D007               	goto	l201
  3656  000678                     l200:
  3657                           
  3658                           ;Lab7.c: 462: else
  3659                           ;Lab7.c: 463: {
  3660                           ;Lab7.c: 464: printf("Alarm is ON\n\r");
  3661  000678  0ED6               	movlw	low STR_10
  3662  00067A  0100               	movlb	0	; () banked
  3663  00067C  6F9E               	movwf	printf@f& (0+255),b
  3664  00067E  0E7F               	movlw	high STR_10
  3665  000680  6F9F               	movwf	(printf@f+1)& (0+255),b
  3666  000682  EC63  F004         	call	_printf	;wreg free
  3667  000686                     l201:
  3668                           
  3669                           ;Lab7.c: 465: }
  3670                           ;Lab7.c: 466: if(temp_set == 0){
  3671  000686  0100               	movlb	0	; () banked
  3672  000688  51B7               	movf	_temp_set& (0+255),w,b
  3673  00068A  11B8               	iorwf	(_temp_set+1)& (0+255),w,b
  3674  00068C  A4D8               	btfss	status,2,c
  3675  00068E  D007               	goto	l202
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;Lab7.c: 467: printf("Temp Sensor is OFF\n\r");
  3679  000690  0E44               	movlw	low STR_11
  3680  000692  6F9E               	movwf	printf@f& (0+255),b
  3681  000694  0E7F               	movlw	high STR_11
  3682  000696  6F9F               	movwf	(printf@f+1)& (0+255),b
  3683  000698  EC63  F004         	call	_printf	;wreg free
  3684                           
  3685                           ;Lab7.c: 468: }
  3686  00069C  D007               	goto	l203
  3687  00069E                     l202:
  3688                           
  3689                           ;Lab7.c: 469: else
  3690                           ;Lab7.c: 470: {
  3691                           ;Lab7.c: 471: printf("Temp Sensor is ON\n\r");
  3692  00069E  0E6E               	movlw	low STR_12
  3693  0006A0  0100               	movlb	0	; () banked
  3694  0006A2  6F9E               	movwf	printf@f& (0+255),b
  3695  0006A4  0E7F               	movlw	high STR_12
  3696  0006A6  6F9F               	movwf	(printf@f+1)& (0+255),b
  3697  0006A8  EC63  F004         	call	_printf	;wreg free
  3698  0006AC                     l203:
  3699                           
  3700                           ;Lab7.c: 472: }
  3701                           ;Lab7.c: 473: printf("\n\r"
  3702                           ;Lab7.c: 474: "PIR Sensor OPTIONS\n\r"
  3703                           ;Lab7.c: 475: "1) Enable/Disable Alarm\n\r"
  3704                           ;Lab7.c: 476: "2) Return to Menu\n\r");
  3705  0006AC  0E02               	movlw	low STR_38
  3706  0006AE  0100               	movlb	0	; () banked
  3707  0006B0  6F9E               	movwf	printf@f& (0+255),b
  3708  0006B2  0E7D               	movlw	high STR_38
  3709  0006B4  6F9F               	movwf	(printf@f+1)& (0+255),b
  3710  0006B6  EC63  F004         	call	_printf	;wreg free
  3711  0006BA  AA9E               	btfss	3998,5,c	;volatile
  3712  0006BC  D7FE               	goto	l205
  3713                           
  3714                           ;Lab7.c: 480: choice = RCREG;
  3715  0006BE  CFAE F0C1          	movff	4014,_choice	;volatile
  3716  0006C2  0100               	movlb	0	; () banked
  3717  0006C4  6BC2               	clrf	(_choice+1)& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;Lab7.c: 482: if(triggered == 1)
  3721  0006C6  05BB               	decf	_triggered& (0+255),w,b
  3722  0006C8  11BC               	iorwf	(_triggered+1)& (0+255),w,b
  3723  0006CA  A4D8               	btfss	status,2,c
  3724  0006CC  D052               	goto	l209
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;Lab7.c: 483: {
  3728                           ;Lab7.c: 484: printf("\n\rReturning to Menu...\n\r");
  3729  0006CE  0EB8               	movlw	low STR_14
  3730  0006D0  6F9E               	movwf	printf@f& (0+255),b
  3731  0006D2  0E7E               	movlw	high STR_14
  3732  0006D4  6F9F               	movwf	(printf@f+1)& (0+255),b
  3733  0006D6  EC63  F004         	call	_printf	;wreg free
  3734                           
  3735                           ;Lab7.c: 485: triggered = 0;
  3736  0006DA  0E00               	movlw	0
  3737  0006DC  0100               	movlb	0	; () banked
  3738  0006DE  6FBC               	movwf	(_triggered+1)& (0+255),b
  3739  0006E0  0E00               	movlw	0
  3740  0006E2  6FBB               	movwf	_triggered& (0+255),b
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;Lab7.c: 486: Clear();
  3744  0006E4  EC49  F008         	call	_Clear	;wreg free
  3745                           
  3746                           ;Lab7.c: 487: break;
  3747  0006E8  0012               	return	
  3748  0006EA                     l210:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;Lab7.c: 491: if(INTCON3bits.INT1IE == 0){
  3752  0006EA  B6F0               	btfsc	intcon3,3,c	;volatile
  3753  0006EC  D00C               	goto	l211
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;Lab7.c: 492: INTCON3bits.INT1IE = 1;
  3757  0006EE  86F0               	bsf	intcon3,3,c	;volatile
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;Lab7.c: 493: printf("Alarm Enabled\n\n\r\r");
  3761  0006F0  0E95               	movlw	low STR_40
  3762  0006F2  6F9E               	movwf	printf@f& (0+255),b
  3763  0006F4  0E7F               	movlw	high STR_40
  3764  0006F6  6F9F               	movwf	(printf@f+1)& (0+255),b
  3765  0006F8  EC63  F004         	call	_printf	;wreg free
  3766                           
  3767                           ;Lab7.c: 494: alarm_set = 1;
  3768  0006FC  0E00               	movlw	0
  3769  0006FE  0100               	movlb	0	; () banked
  3770  000700  6FBA               	movwf	(_alarm_set+1)& (0+255),b
  3771  000702  0E01               	movlw	1
  3772  000704  D00B               	goto	L4
  3773  000706                     l211:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;Lab7.c: 496: else
  3777                           ;Lab7.c: 497: {
  3778                           ;Lab7.c: 498: INTCON3bits.INT1IE = 0;
  3779  000706  96F0               	bcf	intcon3,3,c	;volatile
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;Lab7.c: 499: printf("Alarm Disabled\n\n\r\r");
  3783  000708  0E82               	movlw	low STR_41
  3784  00070A  6F9E               	movwf	printf@f& (0+255),b
  3785  00070C  0E7F               	movlw	high STR_41
  3786  00070E  6F9F               	movwf	(printf@f+1)& (0+255),b
  3787  000710  EC63  F004         	call	_printf	;wreg free
  3788                           
  3789                           ;Lab7.c: 500: alarm_set = 0;
  3790  000714  0E00               	movlw	0
  3791  000716  0100               	movlb	0	; () banked
  3792  000718  6FBA               	movwf	(_alarm_set+1)& (0+255),b
  3793  00071A  0E00               	movlw	0
  3794  00071C                     L4:
  3795  00071C  6FB9               	movwf	_alarm_set& (0+255),b
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;Lab7.c: 501: }
  3799                           ;Lab7.c: 502: _delay((unsigned long)((500)*(20000000/4000.0)));
  3800                           
  3801                           ; BSR set to: 0
  3802  00071E  0E0D               	movlw	13
  3803  000720  0100               	movlb	0	; () banked
  3804  000722  6FAA               	movwf	(??_alarm_options+1)& (0+255),b
  3805  000724  0EAF               	movlw	175
  3806  000726  6FA9               	movwf	??_alarm_options& (0+255),b
  3807  000728  0EB6               	movlw	182
  3808  00072A                     u2327:
  3809  00072A  2EE8               	decfsz	wreg,f,c
  3810  00072C  D7FE               	bra	u2327
  3811  00072E  2FA9               	decfsz	??_alarm_options& (0+255),f,b
  3812  000730  D7FC               	bra	u2327
  3813  000732  2FAA               	decfsz	(??_alarm_options+1)& (0+255),f,b
  3814  000734  D7FA               	bra	u2327
  3815  000736  F000               	nop	
  3816                           
  3817                           ;Lab7.c: 503: Clear();
  3818  000738  EC49  F008         	call	_Clear	;wreg free
  3819                           
  3820                           ;Lab7.c: 504: break;
  3821  00073C  D791               	goto	l199
  3822  00073E                     
  3823                           ;Lab7.c: 506: Clear();
  3824  00073E  EC49  F008         	call	_Clear	;wreg free
  3825                           
  3826                           ;Lab7.c: 507: return;
  3827  000742  0012               	return	
  3828  000744                     
  3829                           ;Lab7.c: 509: printf("\nERROR INVALID INPUT\n\r");
  3830  000744  0E03               	movlw	low STR_15
  3831  000746  0100               	movlb	0	; () banked
  3832  000748  6F9E               	movwf	printf@f& (0+255),b
  3833  00074A  0E7F               	movlw	high STR_15
  3834  00074C  6F9F               	movwf	(printf@f+1)& (0+255),b
  3835  00074E  EC63  F004         	call	_printf	;wreg free
  3836                           
  3837                           ;Lab7.c: 510: _delay((unsigned long)((500)*(20000000/4000.0)));
  3838  000752  0E0D               	movlw	13
  3839  000754  0100               	movlb	0	; () banked
  3840  000756  6FAA               	movwf	(??_alarm_options+1)& (0+255),b
  3841  000758  0EAF               	movlw	175
  3842  00075A  6FA9               	movwf	??_alarm_options& (0+255),b
  3843  00075C  0EB6               	movlw	182
  3844  00075E                     u2337:
  3845  00075E  2EE8               	decfsz	wreg,f,c
  3846  000760  D7FE               	bra	u2337
  3847  000762  2FA9               	decfsz	??_alarm_options& (0+255),f,b
  3848  000764  D7FC               	bra	u2337
  3849  000766  2FAA               	decfsz	(??_alarm_options+1)& (0+255),f,b
  3850  000768  D7FA               	bra	u2337
  3851  00076A  F000               	nop	
  3852                           
  3853                           ;Lab7.c: 511: Clear();
  3854  00076C  EC49  F008         	call	_Clear	;wreg free
  3855                           
  3856                           ;Lab7.c: 513: }
  3857                           
  3858                           ;Lab7.c: 512: break;
  3859  000770  D777               	goto	l199
  3860  000772                     l209:
  3861  000772  C0C1  F0A9         	movff	_choice,??_alarm_options
  3862  000776  C0C2  F0AA         	movff	_choice+1,??_alarm_options+1
  3863                           
  3864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3865                           ; Switch size 1, requested type "space"
  3866                           ; Number of cases is 1, Range of values is 0 to 0
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte            4     3 (average)
  3870                           ;	Chosen strategy is simple_byte
  3871  00077A  0100               	movlb	0	; () banked
  3872  00077C  51AA               	movf	(??_alarm_options+1)& (0+255),w,b
  3873  00077E  0A00               	xorlw	0	; case 0
  3874  000780  A4D8               	btfss	status,2,c
  3875  000782  D7E0               	goto	l216
  3876                           
  3877                           ; BSR set to: 0
  3878                           ; Switch size 1, requested type "space"
  3879                           ; Number of cases is 2, Range of values is 49 to 50
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte            7     4 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884  000784  51A9               	movf	??_alarm_options& (0+255),w,b
  3885  000786  0A31               	xorlw	49	; case 49
  3886  000788  B4D8               	btfsc	status,2,c
  3887  00078A  D7AF               	goto	l210
  3888  00078C  0A03               	xorlw	3	; case 50
  3889  00078E  B4D8               	btfsc	status,2,c
  3890  000790  D7D6               	goto	l214
  3891  000792  D7D8               	goto	l216
  3892  000794                     __end_of_alarm_options:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           intcon	equ	0xFF2
  3899                           intcon2	equ	0xFF1
  3900                           intcon3	equ	0xFF0
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postinc1	equ	0xFE6
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function _Clear *****************
  3914 ;; Defined at:
  3915 ;;		line 99 in file "Lab7.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3929 ;;      Params:         0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    8
  3936 ;; This function calls:
  3937 ;;		_printf
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;;		_password_change
  3941 ;;		_password_options
  3942 ;;		_alarm_options
  3943 ;;		_temp_options
  3944 ;;		_input_options
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text7
  3949  001092                     __ptext7:
  3950                           	opt stack 0
  3951  001092                     _Clear:
  3952                           	opt stack 21
  3953                           
  3954                           ;Lab7.c: 101: printf("\033[2J");
  3955                           
  3956                           ;incstack = 0
  3957  001092  0EF4               	movlw	low STR_1
  3958  001094  0100               	movlb	0	; () banked
  3959  001096  6F9E               	movwf	printf@f& (0+255),b
  3960  001098  0E7F               	movlw	high STR_1
  3961  00109A  6F9F               	movwf	(printf@f+1)& (0+255),b
  3962  00109C  EC63  F004         	call	_printf	;wreg free
  3963                           
  3964                           ;Lab7.c: 102: printf("\033[0;0H");
  3965  0010A0  0EED               	movlw	low STR_2
  3966  0010A2  0100               	movlb	0	; () banked
  3967  0010A4  6F9E               	movwf	printf@f& (0+255),b
  3968  0010A6  0E7F               	movlw	high STR_2
  3969  0010A8  6F9F               	movwf	(printf@f+1)& (0+255),b
  3970  0010AA  EC63  F004         	call	_printf	;wreg free
  3971  0010AE  0012               	return		;funcret
  3972  0010B0                     __end_of_Clear:
  3973                           	opt stack 0
  3974                           tblptru	equ	0xFF8
  3975                           tblptrh	equ	0xFF7
  3976                           tblptrl	equ	0xFF6
  3977                           tablat	equ	0xFF5
  3978                           intcon	equ	0xFF2
  3979                           intcon2	equ	0xFF1
  3980                           intcon3	equ	0xFF0
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           postinc1	equ	0xFE6
  3984                           postdec1	equ	0xFE5
  3985                           fsr1h	equ	0xFE2
  3986                           fsr1l	equ	0xFE1
  3987                           indf2	equ	0xFDF
  3988                           postinc2	equ	0xFDE
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _printf *****************
  3994 ;; Defined at:
  3995 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  3998 ;;		 -> STR_63(23), STR_62(9), STR_61(28), STR_60(26), 
  3999 ;;		 -> STR_59(25), STR_58(85), STR_57(20), STR_56(21), 
  4000 ;;		 -> STR_55(14), STR_54(15), STR_53(23), STR_52(3), 
  4001 ;;		 -> STR_51(27), STR_50(26), STR_49(25), STR_48(25), 
  4002 ;;		 -> STR_47(101), STR_46(20), STR_45(21), STR_44(14), 
  4003 ;;		 -> STR_43(15), STR_42(23), STR_41(19), STR_40(18), 
  4004 ;;		 -> STR_39(25), STR_38(67), STR_37(20), STR_36(21), 
  4005 ;;		 -> STR_35(14), STR_34(15), STR_33(23), STR_32(21), 
  4006 ;;		 -> STR_31(25), STR_30(59), STR_29(20), STR_28(21), 
  4007 ;;		 -> STR_27(14), STR_26(15), STR_25(28), STR_24(21), 
  4008 ;;		 -> STR_23(2), STR_22(11), STR_21(54), STR_20(25), 
  4009 ;;		 -> STR_19(2), STR_18(21), STR_17(2), STR_16(25), 
  4010 ;;		 -> STR_15(23), STR_14(25), STR_13(133), STR_12(20), 
  4011 ;;		 -> STR_11(21), STR_10(14), STR_9(15), STR_8(17), 
  4012 ;;		 -> STR_7(2), STR_6(15), STR_5(39), STR_4(31), 
  4013 ;;		 -> STR_3(28), STR_2(7), STR_1(5), 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  tmpval          4    0        struct .
  4016 ;;  cp              3    0        PTR const unsigned char 
  4017 ;;  val             2   38[BANK0 ] unsigned int 
  4018 ;;  ap              2   34[BANK0 ] PTR void [1]
  4019 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4020 ;;  len             2    0        unsigned int 
  4021 ;;  c               1   40[BANK0 ] char 
  4022 ;;  prec            1   37[BANK0 ] char 
  4023 ;;  flag            1   36[BANK0 ] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  2   30[BANK0 ] int 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4033 ;;      Params:         0       4       0       0       0       0       0
  4034 ;;      Locals:         0       7       0       0       0       0       0
  4035 ;;      Temps:          1       0       0       0       0       0       0
  4036 ;;      Totals:         1      11       0       0       0       0       0
  4037 ;;Total ram usage:       12 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    7
  4040 ;; This function calls:
  4041 ;;		___lwdiv
  4042 ;;		___lwmod
  4043 ;;		_putch
  4044 ;; This function is called by:
  4045 ;;		_Clear
  4046 ;;		_main
  4047 ;;		_password_change
  4048 ;;		_password_options
  4049 ;;		_alarm_options
  4050 ;;		_temp_options
  4051 ;;		_input_options
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text8
  4056  0008C6                     __ptext8:
  4057                           	opt stack 0
  4058  0008C6                     _printf:
  4059                           	opt stack 22
  4060                           
  4061                           ;doprnt.c: 466: va_list ap;
  4062                           ;doprnt.c: 499: signed char c;
  4063                           ;doprnt.c: 506: signed char prec;
  4064                           ;doprnt.c: 508: unsigned char flag;
  4065                           ;doprnt.c: 523: union {
  4066                           ;doprnt.c: 524: unsigned long vd;
  4067                           ;doprnt.c: 525: double integ;
  4068                           ;doprnt.c: 526: } tmpval;
  4069                           ;doprnt.c: 528: unsigned int val;
  4070                           ;doprnt.c: 529: unsigned len;
  4071                           ;doprnt.c: 530: const char * cp;
  4072                           ;doprnt.c: 533: *ap = __va_start();
  4073                           
  4074                           ;incstack = 0
  4075  0008C6  0EA0               	movlw	low (?_printf+2)
  4076  0008C8  0100               	movlb	0	; () banked
  4077  0008CA  6FA2               	movwf	printf@ap& (0+255),b
  4078  0008CC  0E00               	movlw	high (?_printf+2)
  4079  0008CE  6FA3               	movwf	(printf@ap+1)& (0+255),b
  4080                           
  4081                           ;doprnt.c: 536: while(c = *f++) {
  4082  0008D0  D082               	goto	u1810
  4083  0008D2                     
  4084                           ; BSR set to: 0
  4085                           ;doprnt.c: 538: if(c != '%')
  4086                           
  4087                           ; BSR set to: 0
  4088  0008D2  0E25               	movlw	37
  4089  0008D4  19A8               	xorwf	printf@c& (0+255),w,b
  4090  0008D6  B4D8               	btfsc	status,2,c
  4091  0008D8  D004               	goto	l301
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;doprnt.c: 540: {
  4095                           ;doprnt.c: 541: (putch(c) );
  4096  0008DA  51A8               	movf	printf@c& (0+255),w,b
  4097  0008DC  EC65  F008         	call	_putch
  4098                           
  4099                           ;doprnt.c: 542: continue;
  4100  0008E0  D07A               	goto	u1810
  4101  0008E2                     l301:
  4102                           
  4103                           ;doprnt.c: 543: }
  4104                           ;doprnt.c: 548: flag = 0;
  4105  0008E2  0E00               	movlw	0
  4106  0008E4  0100               	movlb	0	; () banked
  4107  0008E6  6FA4               	movwf	printf@flag& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           
  4111                           ; BSR set to: 0
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;doprnt.c: 822: }
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;doprnt.c: 813: continue;
  4118                           
  4119                           ;doprnt.c: 802: default:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;doprnt.c: 698: case 'i':
  4123                           ;doprnt.c: 699: break;
  4124                           
  4125                           ; BSR set to: 0
  4126                           
  4127                           ;doprnt.c: 697: case 'd':
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;doprnt.c: 638: goto alldone;
  4131                           
  4132                           ;doprnt.c: 637: case 0:
  4133                           
  4134                           ;doprnt.c: 635: switch(c = *f++) {
  4135  0008E8  C09E  FFF6         	movff	printf@f,tblptrl
  4136  0008EC  C09F  FFF7         	movff	printf@f+1,tblptrh
  4137  0008F0  4B9E               	infsnz	printf@f& (0+255),f,b
  4138  0008F2  2B9F               	incf	(printf@f+1)& (0+255),f,b
  4139  0008F4                     	if	0	;tblptru may be non-zero
  4140  0008F4                     	endif
  4141  0008F4                     	if	0	;tblptru may be non-zero
  4142  0008F4                     	endif
  4143  0008F4  0008               	tblrd		*
  4144  0008F6  CFF5 F0A8          	movff	tablat,printf@c
  4145  0008FA  51A8               	movf	printf@c& (0+255),w,b
  4146                           
  4147                           ; Switch size 1, requested type "space"
  4148                           ; Number of cases is 3, Range of values is 0 to 105
  4149                           ; switch strategies available:
  4150                           ; Name         Instructions Cycles
  4151                           ; simple_byte           10     6 (average)
  4152                           ;	Chosen strategy is simple_byte
  4153  0008FC  0A00               	xorlw	0	; case 0
  4154  0008FE  B4D8               	btfsc	status,2,c
  4155  000900  0012               	return	
  4156  000902  0A64               	xorlw	100	; case 100
  4157  000904  B4D8               	btfsc	status,2,c
  4158  000906  D003               	goto	l307
  4159  000908  0A0D               	xorlw	13	; case 105
  4160  00090A  A4D8               	btfss	status,2,c
  4161  00090C  D064               	goto	u1810
  4162  00090E                     l307:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;doprnt.c: 1253: {
  4166                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4167                           
  4168                           ; BSR set to: 0
  4169  00090E  C0A2  FFD9         	movff	printf@ap,fsr2l
  4170  000912  C0A3  FFDA         	movff	printf@ap+1,fsr2h
  4171  000916  CFDE F0A6          	movff	postinc2,printf@val
  4172  00091A  CFDD F0A7          	movff	postdec2,printf@val+1
  4173                           
  4174                           ; BSR set to: 0
  4175  00091E  0E02               	movlw	2
  4176  000920  27A2               	addwf	printf@ap& (0+255),f,b
  4177  000922  0E00               	movlw	0
  4178  000924  23A3               	addwfc	(printf@ap+1)& (0+255),f,b
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;doprnt.c: 1261: if((int)val < 0) {
  4182  000926  AFA7               	btfss	(printf@val+1)& (0+255),7,b
  4183  000928  D006               	goto	l309
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;doprnt.c: 1262: flag |= 0x03;
  4187  00092A  0E03               	movlw	3
  4188  00092C  13A4               	iorwf	printf@flag& (0+255),f,b
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;doprnt.c: 1263: val = -val;
  4192  00092E  6DA6               	negf	printf@val& (0+255),b
  4193  000930  1FA7               	comf	(printf@val+1)& (0+255),f,b
  4194  000932  B0D8               	btfsc	status,0,c
  4195  000934  2BA7               	incf	(printf@val+1)& (0+255),f,b
  4196  000936                     l309:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;doprnt.c: 1264: }
  4200                           ;doprnt.c: 1266: }
  4201                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4202                           
  4203                           ; BSR set to: 0
  4204  000936  0E01               	movlw	1
  4205  000938  6FA8               	movwf	printf@c& (0+255),b
  4206  00093A                     l2743:
  4207                           
  4208                           ; BSR set to: 0
  4209  00093A  0E05               	movlw	5
  4210  00093C  19A8               	xorwf	printf@c& (0+255),w,b
  4211  00093E  B4D8               	btfsc	status,2,c
  4212  000940  D012               	goto	u1790
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;doprnt.c: 1306: if(val < dpowers[c])
  4216                           
  4217                           ; BSR set to: 0
  4218                           
  4219                           ; BSR set to: 0
  4220  000942  51A8               	movf	printf@c& (0+255),w,b
  4221  000944  0D02               	mullw	2
  4222  000946  0EB9               	movlw	low _dpowers
  4223  000948  24F3               	addwf	prodl,w,c
  4224  00094A  6EF6               	movwf	tblptrl,c
  4225  00094C  0E7B               	movlw	high _dpowers
  4226  00094E  20F4               	addwfc	prodh,w,c
  4227  000950  6EF7               	movwf	tblptrh,c
  4228  000952                     	if	0	;There are less than 3 active tblptr bytes
  4229  000952                     	endif
  4230  000952  0009               	tblrd		*+
  4231  000954  50F5               	movf	tablat,w,c
  4232  000956  5DA6               	subwf	printf@val& (0+255),w,b
  4233  000958  0009               	tblrd		*+
  4234  00095A  50F5               	movf	tablat,w,c
  4235  00095C  59A7               	subwfb	(printf@val+1)& (0+255),w,b
  4236  00095E  A0D8               	btfss	status,0,c
  4237  000960  D002               	goto	u1790
  4238                           
  4239                           ; BSR set to: 0
  4240                           
  4241                           ; BSR set to: 0
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;doprnt.c: 1307: break;
  4245  000962  2BA8               	incf	printf@c& (0+255),f,b
  4246  000964  D7EA               	goto	l2743
  4247  000966                     u1790:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;doprnt.c: 1422: {
  4251                           ;doprnt.c: 1438: if(flag & 0x03)
  4252                           
  4253                           ; BSR set to: 0
  4254  000966  C0A4  F03D         	movff	printf@flag,??_printf
  4255  00096A  0E03               	movlw	3
  4256  00096C  163D               	andwf	??_printf,f,c
  4257  00096E  B4D8               	btfsc	status,2,c
  4258  000970  D003               	goto	l313
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;doprnt.c: 1439: (putch('-') );
  4262  000972  0E2D               	movlw	45
  4263  000974  EC65  F008         	call	_putch
  4264  000978                     l313:
  4265                           
  4266                           ;doprnt.c: 1469: }
  4267                           ;doprnt.c: 1472: prec = c;
  4268  000978  C0A8  F0A5         	movff	printf@c,printf@prec
  4269                           
  4270                           ;doprnt.c: 1474: while(prec--) {
  4271  00097C  D027               	goto	l314
  4272  00097E                     
  4273                           ;doprnt.c: 1478: {
  4274                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4275  00097E  0100               	movlb	0	; () banked
  4276  000980  51A5               	movf	printf@prec& (0+255),w,b
  4277  000982  0D02               	mullw	2
  4278  000984  0EB9               	movlw	low _dpowers
  4279  000986  24F3               	addwf	prodl,w,c
  4280  000988  6EF6               	movwf	tblptrl,c
  4281  00098A  0E7B               	movlw	high _dpowers
  4282  00098C  20F4               	addwfc	prodh,w,c
  4283  00098E  6EF7               	movwf	tblptrh,c
  4284  000990                     	if	0	;There are less than 3 active tblptr bytes
  4285  000990                     	endif
  4286  000990  0009               	tblrd		*+
  4287  000992  CFF5 F098          	movff	tablat,___lwdiv@divisor
  4288  000996  000A               	tblrd		*-
  4289  000998  CFF5 F099          	movff	tablat,___lwdiv@divisor+1
  4290  00099C  C0A6  F096         	movff	printf@val,___lwdiv@dividend
  4291  0009A0  C0A7  F097         	movff	printf@val+1,___lwdiv@dividend+1
  4292  0009A4  EC7D  F007         	call	___lwdiv	;wreg free
  4293  0009A8  C096  F09A         	movff	?___lwdiv,___lwmod@dividend
  4294  0009AC  C097  F09B         	movff	?___lwdiv+1,___lwmod@dividend+1
  4295  0009B0  0E00               	movlw	0
  4296  0009B2  0100               	movlb	0	; () banked
  4297  0009B4  6F9D               	movwf	(___lwmod@divisor+1)& (0+255),b
  4298  0009B6  0E0A               	movlw	10
  4299  0009B8  6F9C               	movwf	___lwmod@divisor& (0+255),b
  4300  0009BA  ECF3  F007         	call	___lwmod	;wreg free
  4301  0009BE  0100               	movlb	0	; () banked
  4302  0009C0  519A               	movf	?___lwmod& (0+255),w,b
  4303  0009C2  0F30               	addlw	48
  4304  0009C4  6FA8               	movwf	printf@c& (0+255),b
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;doprnt.c: 1523: }
  4308                           ;doprnt.c: 1524: (putch(c) );
  4309  0009C6  51A8               	movf	printf@c& (0+255),w,b
  4310  0009C8  EC65  F008         	call	_putch
  4311  0009CC                     l314:
  4312  0009CC  0100               	movlb	0	; () banked
  4313  0009CE  07A5               	decf	printf@prec& (0+255),f,b
  4314  0009D0  29A5               	incf	printf@prec& (0+255),w,b
  4315  0009D2  A4D8               	btfss	status,2,c
  4316  0009D4  D7D4               	goto	l315
  4317  0009D6                     u1810:
  4318                           
  4319                           ; BSR set to: 0
  4320                           
  4321                           ; BSR set to: 0
  4322  0009D6  C09E  FFF6         	movff	printf@f,tblptrl
  4323  0009DA  C09F  FFF7         	movff	printf@f+1,tblptrh
  4324  0009DE  0100               	movlb	0	; () banked
  4325  0009E0  4B9E               	infsnz	printf@f& (0+255),f,b
  4326  0009E2  2B9F               	incf	(printf@f+1)& (0+255),f,b
  4327  0009E4                     	if	0	;tblptru may be non-zero
  4328  0009E4                     	endif
  4329  0009E4                     	if	0	;tblptru may be non-zero
  4330  0009E4                     	endif
  4331  0009E4  0008               	tblrd		*
  4332  0009E6  CFF5 F0A8          	movff	tablat,printf@c
  4333  0009EA  51A8               	movf	printf@c& (0+255),w,b
  4334  0009EC  B4D8               	btfsc	status,2,c
  4335  0009EE  0012               	return	
  4336  0009F0  D770               	goto	l300
  4337  0009F2                     __end_of_printf:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           intcon2	equ	0xFF1
  4347                           intcon3	equ	0xFF0
  4348                           postinc0	equ	0xFEE
  4349                           wreg	equ	0xFE8
  4350                           postinc1	equ	0xFE6
  4351                           postdec1	equ	0xFE5
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _putch *****************
  4362 ;; Defined at:
  4363 ;;		line 93 in file "Lab7.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  data            1    wreg     unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  data            1   56[COMRAM] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4377 ;;      Params:         0       0       0       0       0       0       0
  4378 ;;      Locals:         1       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0
  4380 ;;      Totals:         1       0       0       0       0       0       0
  4381 ;;Total ram usage:        1 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    6
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_printf
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text9
  4392  0010CA                     __ptext9:
  4393                           	opt stack 0
  4394  0010CA                     _putch:
  4395                           	opt stack 22
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;incstack = 0
  4399                           ;putch@data stored from wreg
  4400  0010CA  6E39               	movwf	putch@data,c
  4401  0010CC                     
  4402                           ;Lab7.c: 96: continue;
  4403                           
  4404                           ;Lab7.c: 95: while(!PIR1bits.TXIF)
  4405  0010CC  A89E               	btfss	3998,4,c	;volatile
  4406  0010CE  D7FE               	goto	l2677
  4407                           
  4408                           ;Lab7.c: 97: TXREG = data;
  4409  0010D0  C039  FFAD         	movff	putch@data,4013	;volatile
  4410  0010D4  0012               	return		;funcret
  4411  0010D6                     __end_of_putch:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           intcon2	equ	0xFF1
  4421                           intcon3	equ	0xFF0
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           postinc1	equ	0xFE6
  4425                           postdec1	equ	0xFE5
  4426                           fsr1h	equ	0xFE2
  4427                           fsr1l	equ	0xFE1
  4428                           indf2	equ	0xFDF
  4429                           postinc2	equ	0xFDE
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435 ;; *************** function ___lwmod *****************
  4436 ;; Defined at:
  4437 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  dividend        2   26[BANK0 ] unsigned int 
  4440 ;;  divisor         2   28[BANK0 ] unsigned int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  counter         1   59[COMRAM] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2   26[BANK0 ] unsigned int 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4452 ;;      Params:         0       4       0       0       0       0       0
  4453 ;;      Locals:         1       0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0
  4455 ;;      Totals:         1       4       0       0       0       0       0
  4456 ;;Total ram usage:        5 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    6
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_printf
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text10
  4467  000FE6                     __ptext10:
  4468                           	opt stack 0
  4469  000FE6                     ___lwmod:
  4470                           	opt stack 22
  4471                           
  4472                           ;incstack = 0
  4473  000FE6  0100               	movlb	0	; () banked
  4474  000FE8  519C               	movf	___lwmod@divisor& (0+255),w,b
  4475  000FEA  119D               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4476  000FEC  B4D8               	btfsc	status,2,c
  4477  000FEE  D018               	goto	l737
  4478                           
  4479                           ; BSR set to: 0
  4480  000FF0  0E01               	movlw	1
  4481  000FF2  6E3C               	movwf	___lwmod@counter,c
  4482  000FF4  D004               	goto	l732
  4483  000FF6                     
  4484                           ; BSR set to: 0
  4485                           
  4486                           ; BSR set to: 0
  4487  000FF6  90D8               	bcf	status,0,c
  4488  000FF8  379C               	rlcf	___lwmod@divisor& (0+255),f,b
  4489  000FFA  379D               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4490  000FFC  2A3C               	incf	___lwmod@counter,f,c
  4491  000FFE                     l732:
  4492                           
  4493                           ; BSR set to: 0
  4494                           
  4495                           ; BSR set to: 0
  4496  000FFE  AF9D               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4497  001000  D7FA               	goto	l733
  4498  001002                     u1730:
  4499                           
  4500                           ; BSR set to: 0
  4501                           
  4502                           ; BSR set to: 0
  4503                           
  4504                           ; BSR set to: 0
  4505  001002  519C               	movf	___lwmod@divisor& (0+255),w,b
  4506  001004  5D9A               	subwf	___lwmod@dividend& (0+255),w,b
  4507  001006  519D               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4508  001008  599B               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4509  00100A  A0D8               	btfss	status,0,c
  4510  00100C  D004               	goto	l736
  4511                           
  4512                           ; BSR set to: 0
  4513  00100E  519C               	movf	___lwmod@divisor& (0+255),w,b
  4514  001010  5F9A               	subwf	___lwmod@dividend& (0+255),f,b
  4515  001012  519D               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4516  001014  5B9B               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4517  001016                     l736:
  4518                           
  4519                           ; BSR set to: 0
  4520                           
  4521                           ; BSR set to: 0
  4522  001016  90D8               	bcf	status,0,c
  4523  001018  339D               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4524  00101A  339C               	rrcf	___lwmod@divisor& (0+255),f,b
  4525                           
  4526                           ; BSR set to: 0
  4527  00101C  2E3C               	decfsz	___lwmod@counter,f,c
  4528  00101E  D7F1               	goto	u1730
  4529  001020                     l737:
  4530                           
  4531                           ; BSR set to: 0
  4532                           
  4533                           ; BSR set to: 0
  4534  001020  C09A  F09A         	movff	___lwmod@dividend,?___lwmod
  4535  001024  C09B  F09B         	movff	___lwmod@dividend+1,?___lwmod+1
  4536                           
  4537                           ; BSR set to: 0
  4538  001028  0012               	return		;funcret
  4539  00102A                     __end_of___lwmod:
  4540                           	opt stack 0
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           intcon2	equ	0xFF1
  4549                           intcon3	equ	0xFF0
  4550                           postinc0	equ	0xFEE
  4551                           wreg	equ	0xFE8
  4552                           postinc1	equ	0xFE6
  4553                           postdec1	equ	0xFE5
  4554                           fsr1h	equ	0xFE2
  4555                           fsr1l	equ	0xFE1
  4556                           indf2	equ	0xFDF
  4557                           postinc2	equ	0xFDE
  4558                           postdec2	equ	0xFDD
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function ___lwdiv *****************
  4564 ;; Defined at:
  4565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  dividend        2   22[BANK0 ] unsigned int 
  4568 ;;  divisor         2   24[BANK0 ] unsigned int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  quotient        2   57[COMRAM] unsigned int 
  4571 ;;  counter         1   56[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2   22[BANK0 ] unsigned int 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4581 ;;      Params:         0       4       0       0       0       0       0
  4582 ;;      Locals:         3       0       0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0
  4584 ;;      Totals:         3       4       0       0       0       0       0
  4585 ;;Total ram usage:        7 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    6
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_printf
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text11
  4596  000EFA                     __ptext11:
  4597                           	opt stack 0
  4598  000EFA                     ___lwdiv:
  4599                           	opt stack 22
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;incstack = 0
  4603  000EFA  0E00               	movlw	0
  4604  000EFC  6E3B               	movwf	___lwdiv@quotient+1,c
  4605  000EFE  0E00               	movlw	0
  4606  000F00  6E3A               	movwf	___lwdiv@quotient,c
  4607  000F02  0100               	movlb	0	; () banked
  4608  000F04  5198               	movf	___lwdiv@divisor& (0+255),w,b
  4609  000F06  1199               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4610  000F08  B4D8               	btfsc	status,2,c
  4611  000F0A  D01C               	goto	l727
  4612                           
  4613                           ; BSR set to: 0
  4614  000F0C  0E01               	movlw	1
  4615  000F0E  6E39               	movwf	___lwdiv@counter,c
  4616  000F10  D004               	goto	l722
  4617  000F12                     
  4618                           ; BSR set to: 0
  4619                           
  4620                           ; BSR set to: 0
  4621  000F12  90D8               	bcf	status,0,c
  4622  000F14  3798               	rlcf	___lwdiv@divisor& (0+255),f,b
  4623  000F16  3799               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4624  000F18  2A39               	incf	___lwdiv@counter,f,c
  4625  000F1A                     l722:
  4626                           
  4627                           ; BSR set to: 0
  4628                           
  4629                           ; BSR set to: 0
  4630  000F1A  AF99               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4631  000F1C  D7FA               	goto	l723
  4632  000F1E                     u1700:
  4633                           
  4634                           ; BSR set to: 0
  4635                           
  4636                           ; BSR set to: 0
  4637                           
  4638                           ; BSR set to: 0
  4639  000F1E  90D8               	bcf	status,0,c
  4640  000F20  363A               	rlcf	___lwdiv@quotient,f,c
  4641  000F22  363B               	rlcf	___lwdiv@quotient+1,f,c
  4642                           
  4643                           ; BSR set to: 0
  4644  000F24  5198               	movf	___lwdiv@divisor& (0+255),w,b
  4645  000F26  5D96               	subwf	___lwdiv@dividend& (0+255),w,b
  4646  000F28  5199               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4647  000F2A  5997               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4648  000F2C  A0D8               	btfss	status,0,c
  4649  000F2E  D005               	goto	l726
  4650                           
  4651                           ; BSR set to: 0
  4652  000F30  5198               	movf	___lwdiv@divisor& (0+255),w,b
  4653  000F32  5F96               	subwf	___lwdiv@dividend& (0+255),f,b
  4654  000F34  5199               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4655  000F36  5B97               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4656                           
  4657                           ; BSR set to: 0
  4658  000F38  803A               	bsf	___lwdiv@quotient,0,c
  4659  000F3A                     l726:
  4660                           
  4661                           ; BSR set to: 0
  4662                           
  4663                           ; BSR set to: 0
  4664  000F3A  90D8               	bcf	status,0,c
  4665  000F3C  3399               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4666  000F3E  3398               	rrcf	___lwdiv@divisor& (0+255),f,b
  4667                           
  4668                           ; BSR set to: 0
  4669  000F40  2E39               	decfsz	___lwdiv@counter,f,c
  4670  000F42  D7ED               	goto	u1700
  4671  000F44                     l727:
  4672                           
  4673                           ; BSR set to: 0
  4674                           
  4675                           ; BSR set to: 0
  4676  000F44  C03A  F096         	movff	___lwdiv@quotient,?___lwdiv
  4677  000F48  C03B  F097         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4678                           
  4679                           ; BSR set to: 0
  4680  000F4C  0012               	return		;funcret
  4681  000F4E                     __end_of___lwdiv:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           intcon	equ	0xFF2
  4690                           intcon2	equ	0xFF1
  4691                           intcon3	equ	0xFF0
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           postinc1	equ	0xFE6
  4695                           postdec1	equ	0xFE5
  4696                           fsr1h	equ	0xFE2
  4697                           fsr1l	equ	0xFE1
  4698                           indf2	equ	0xFDF
  4699                           postinc2	equ	0xFDE
  4700                           postdec2	equ	0xFDD
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function _temp_sensor *****************
  4706 ;; Defined at:
  4707 ;;		line 118 in file "Lab7.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4721 ;;      Params:         0       0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0
  4723 ;;      Temps:          0      22       0       0       0       0       0
  4724 ;;      Totals:         0      22       0       0       0       0       0
  4725 ;;Total ram usage:       22 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    5
  4728 ;; This function calls:
  4729 ;;		___awdiv
  4730 ;;		___wmul
  4731 ;; This function is called by:
  4732 ;;		Interrupt level 1
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	intcodelo
  4737  000018                     __pintcodelo:
  4738                           	opt stack 0
  4739  000018                     _temp_sensor:
  4740                           	opt stack 20
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;incstack = 0
  4744  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4745  00001A  CFD8 F081          	movff	status,??_temp_sensor+1
  4746  00001E  CFE8 F082          	movff	wreg,??_temp_sensor+2
  4747  000022  CFE0 F083          	movff	bsr,??_temp_sensor+3
  4748  000026  CFFA F084          	movff	pclath,??_temp_sensor+4
  4749  00002A  CFFB F085          	movff	pclatu,??_temp_sensor+5
  4750  00002E  CFE9 F086          	movff	fsr0l,??_temp_sensor+6
  4751  000032  CFEA F087          	movff	fsr0h,??_temp_sensor+7
  4752  000036  CFE1 F088          	movff	fsr1l,??_temp_sensor+8
  4753  00003A  CFE2 F089          	movff	fsr1h,??_temp_sensor+9
  4754  00003E  CFD9 F08A          	movff	fsr2l,??_temp_sensor+10
  4755  000042  CFDA F08B          	movff	fsr2h,??_temp_sensor+11
  4756  000046  CFF3 F08C          	movff	prodl,??_temp_sensor+12
  4757  00004A  CFF4 F08D          	movff	prodh,??_temp_sensor+13
  4758  00004E  CFF6 F08E          	movff	tblptrl,??_temp_sensor+14
  4759  000052  CFF7 F08F          	movff	tblptrh,??_temp_sensor+15
  4760  000056  CFF8 F090          	movff	tblptru,??_temp_sensor+16
  4761  00005A  CFF5 F091          	movff	tablat,??_temp_sensor+17
  4762  00005E  C046  F092         	movff	btemp,??_temp_sensor+18
  4763  000062  C047  F093         	movff	btemp+1,??_temp_sensor+19
  4764  000066  C048  F094         	movff	btemp+2,??_temp_sensor+20
  4765  00006A  C049  F095         	movff	btemp+3,??_temp_sensor+21
  4766                           
  4767                           ;Lab7.c: 120: if(INTCONbits.TMR0IF == 1)
  4768  00006E  A4F2               	btfss	intcon,2,c	;volatile
  4769  000070  D03C               	goto	i1l111
  4770                           
  4771                           ;Lab7.c: 121: {
  4772                           ;Lab7.c: 122: PORTBbits.RB5 = 1;
  4773  000072  8A81               	bsf	3969,5,c	;volatile
  4774                           
  4775                           ;Lab7.c: 126: _delay((unsigned long)((10)*(20000000/4000.0)));
  4776  000074  0E41               	movlw	65
  4777  000076  0100               	movlb	0	; () banked
  4778  000078  6F80               	movwf	??_temp_sensor& (0+255),b
  4779  00007A  0EEE               	movlw	238
  4780  00007C                     i1u234_27:
  4781  00007C  2EE8               	decfsz	wreg,f,c
  4782  00007E  D7FE               	bra	i1u234_27
  4783  000080  2F80               	decfsz	??_temp_sensor& (0+255),f,b
  4784  000082  D7FC               	bra	i1u234_27
  4785  000084  F000               	nop	
  4786                           
  4787                           ;Lab7.c: 127: ADCON0bits.GO = 1;
  4788  000086  82C2               	bsf	4034,1,c	;volatile
  4789                           
  4790                           ;Lab7.c: 128: _delay((unsigned long)((10)*(20000000/4000.0)));
  4791  000088  0E41               	movlw	65
  4792  00008A  0100               	movlb	0	; () banked
  4793  00008C  6F80               	movwf	??_temp_sensor& (0+255),b
  4794  00008E  0EEE               	movlw	238
  4795  000090                     i1u235_27:
  4796  000090  2EE8               	decfsz	wreg,f,c
  4797  000092  D7FE               	bra	i1u235_27
  4798  000094  2F80               	decfsz	??_temp_sensor& (0+255),f,b
  4799  000096  D7FC               	bra	i1u235_27
  4800  000098  F000               	nop	
  4801  00009A  B2C2               	btfsc	4034,1,c	;volatile
  4802  00009C  D7FE               	goto	i1l113
  4803                           
  4804                           ;Lab7.c: 131: adLow = ADRESL;
  4805  00009E  CFC3 F042          	movff	4035,_adLow	;volatile
  4806  0000A2  6A43               	clrf	_adLow+1,c
  4807                           
  4808                           ;Lab7.c: 132: adHigh = ADRESH;
  4809  0000A4  CFC4 F040          	movff	4036,_adHigh	;volatile
  4810  0000A8  6A41               	clrf	_adHigh+1,c
  4811                           
  4812                           ;Lab7.c: 133: adHigh = adHigh << 8;
  4813  0000AA  5040               	movf	_adHigh,w,c
  4814  0000AC  6E41               	movwf	_adHigh+1,c
  4815  0000AE  6A40               	clrf	_adHigh,c
  4816                           
  4817                           ;Lab7.c: 134: decimal = adLow + adHigh;
  4818  0000B0  5040               	movf	_adHigh,w,c
  4819  0000B2  2442               	addwf	_adLow,w,c
  4820  0000B4  6E3E               	movwf	_decimal,c
  4821  0000B6  5041               	movf	_adHigh+1,w,c
  4822  0000B8  2043               	addwfc	_adLow+1,w,c
  4823  0000BA  6E3F               	movwf	_decimal+1,c
  4824                           
  4825                           ;Lab7.c: 135: voltage = (decimal/1023)*50;
  4826  0000BC  0E03               	movlw	3
  4827  0000BE  6E2E               	movwf	___awdiv@divisor+1,c
  4828  0000C0  682D               	setf	___awdiv@divisor,c
  4829  0000C2  C03E  F02B         	movff	_decimal,___awdiv@dividend
  4830  0000C6  C03F  F02C         	movff	_decimal+1,___awdiv@dividend+1
  4831  0000CA  ECBE  F006         	call	___awdiv	;wreg free
  4832  0000CE  C02B  F033         	movff	?___awdiv,___wmul@multiplier
  4833  0000D2  C02C  F034         	movff	?___awdiv+1,___wmul@multiplier+1
  4834  0000D6  0E00               	movlw	0
  4835  0000D8  6E36               	movwf	___wmul@multiplicand+1,c
  4836  0000DA  0E32               	movlw	50
  4837  0000DC  6E35               	movwf	___wmul@multiplicand,c
  4838  0000DE  EC36  F008         	call	___wmul	;wreg free
  4839  0000E2  C033  F0BD         	movff	?___wmul,_voltage
  4840  0000E6  C034  F0BE         	movff	?___wmul+1,_voltage+1
  4841  0000EA                     i1l111:
  4842                           
  4843                           ;Lab7.c: 160: }
  4844                           ;Lab7.c: 162: PIR1bits.ADIF = 0;
  4845  0000EA  9C9E               	bcf	3998,6,c	;volatile
  4846                           
  4847                           ;Lab7.c: 163: INTCONbits.TMR0IF = 0;
  4848  0000EC  94F2               	bcf	intcon,2,c	;volatile
  4849                           
  4850                           ;Lab7.c: 164: PORTBbits.RB5 = 0;
  4851  0000EE  9A81               	bcf	3969,5,c	;volatile
  4852  0000F0  C095  F049         	movff	??_temp_sensor+21,btemp+3
  4853  0000F4  C094  F048         	movff	??_temp_sensor+20,btemp+2
  4854  0000F8  C093  F047         	movff	??_temp_sensor+19,btemp+1
  4855  0000FC  C092  F046         	movff	??_temp_sensor+18,btemp
  4856  000100  C091  FFF5         	movff	??_temp_sensor+17,tablat
  4857  000104  C090  FFF8         	movff	??_temp_sensor+16,tblptru
  4858  000108  C08F  FFF7         	movff	??_temp_sensor+15,tblptrh
  4859  00010C  C08E  FFF6         	movff	??_temp_sensor+14,tblptrl
  4860  000110  C08D  FFF4         	movff	??_temp_sensor+13,prodh
  4861  000114  C08C  FFF3         	movff	??_temp_sensor+12,prodl
  4862  000118  C08B  FFDA         	movff	??_temp_sensor+11,fsr2h
  4863  00011C  C08A  FFD9         	movff	??_temp_sensor+10,fsr2l
  4864  000120  C089  FFE2         	movff	??_temp_sensor+9,fsr1h
  4865  000124  C088  FFE1         	movff	??_temp_sensor+8,fsr1l
  4866  000128  C087  FFEA         	movff	??_temp_sensor+7,fsr0h
  4867  00012C  C086  FFE9         	movff	??_temp_sensor+6,fsr0l
  4868  000130  C085  FFFB         	movff	??_temp_sensor+5,pclatu
  4869  000134  C084  FFFA         	movff	??_temp_sensor+4,pclath
  4870  000138  C083  FFE0         	movff	??_temp_sensor+3,bsr
  4871  00013C  C082  FFE8         	movff	??_temp_sensor+2,wreg
  4872  000140  C081  FFD8         	movff	??_temp_sensor+1,status
  4873  000144  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4874  000146  0010               	retfie	
  4875  000148                     __end_of_temp_sensor:
  4876                           	opt stack 0
  4877                           pclatu	equ	0xFFB
  4878                           pclath	equ	0xFFA
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           intcon3	equ	0xFF0
  4888                           postinc0	equ	0xFEE
  4889                           fsr0h	equ	0xFEA
  4890                           fsr0l	equ	0xFE9
  4891                           wreg	equ	0xFE8
  4892                           postinc1	equ	0xFE6
  4893                           postdec1	equ	0xFE5
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           bsr	equ	0xFE0
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function ___wmul *****************
  4905 ;; Defined at:
  4906 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  multiplier      2   50[COMRAM] unsigned int 
  4909 ;;  multiplicand    2   52[COMRAM] unsigned int 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  product         2   54[COMRAM] unsigned int 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  2   50[COMRAM] unsigned int 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, prodl, prodh
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4921 ;;      Params:         4       0       0       0       0       0       0
  4922 ;;      Locals:         2       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0
  4924 ;;      Totals:         6       0       0       0       0       0       0
  4925 ;;Total ram usage:        6 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    4
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_temp_sensor
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text13
  4936  00106C                     __ptext13:
  4937                           	opt stack 0
  4938  00106C                     ___wmul:
  4939                           	opt stack 20
  4940                           
  4941                           ;incstack = 0
  4942  00106C  5033               	movf	___wmul@multiplier,w,c
  4943  00106E  0235               	mulwf	___wmul@multiplicand,c
  4944  001070  CFF3 F037          	movff	prodl,___wmul@product
  4945  001074  CFF4 F038          	movff	prodh,___wmul@product+1
  4946  001078  5033               	movf	___wmul@multiplier,w,c
  4947  00107A  0236               	mulwf	___wmul@multiplicand+1,c
  4948  00107C  50F3               	movf	prodl,w,c
  4949  00107E  2638               	addwf	___wmul@product+1,f,c
  4950  001080  5034               	movf	___wmul@multiplier+1,w,c
  4951  001082  0235               	mulwf	___wmul@multiplicand,c
  4952  001084  50F3               	movf	prodl,w,c
  4953  001086  2638               	addwf	___wmul@product+1,f,c
  4954  001088  C037  F033         	movff	___wmul@product,?___wmul
  4955  00108C  C038  F034         	movff	___wmul@product+1,?___wmul+1
  4956  001090  0012               	return	
  4957  001092                     __end_of___wmul:
  4958                           	opt stack 0
  4959                           pclatu	equ	0xFFB
  4960                           pclath	equ	0xFFA
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           prodh	equ	0xFF4
  4966                           prodl	equ	0xFF3
  4967                           intcon	equ	0xFF2
  4968                           intcon2	equ	0xFF1
  4969                           intcon3	equ	0xFF0
  4970                           postinc0	equ	0xFEE
  4971                           fsr0h	equ	0xFEA
  4972                           fsr0l	equ	0xFE9
  4973                           wreg	equ	0xFE8
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           bsr	equ	0xFE0
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function ___awdiv *****************
  4987 ;; Defined at:
  4988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  dividend        2   42[COMRAM] int 
  4991 ;;  divisor         2   44[COMRAM] int 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  quotient        2   48[COMRAM] int 
  4994 ;;  sign            1   47[COMRAM] unsigned char 
  4995 ;;  counter         1   46[COMRAM] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2   42[COMRAM] int 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         4       0       0       0       0       0       0
  5006 ;;      Locals:         4       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0
  5008 ;;      Totals:         8       0       0       0       0       0       0
  5009 ;;Total ram usage:        8 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    4
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_temp_sensor
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text14
  5020  000D7C                     __ptext14:
  5021                           	opt stack 0
  5022  000D7C                     ___awdiv:
  5023                           	opt stack 20
  5024                           
  5025                           ;incstack = 0
  5026  000D7C  0E00               	movlw	0
  5027  000D7E  6E30               	movwf	___awdiv@sign,c
  5028  000D80  AE2E               	btfss	___awdiv@divisor+1,7,c
  5029  000D82  D006               	goto	i1l486
  5030  000D84  6C2D               	negf	___awdiv@divisor,c
  5031  000D86  1E2E               	comf	___awdiv@divisor+1,f,c
  5032  000D88  B0D8               	btfsc	status,0,c
  5033  000D8A  2A2E               	incf	___awdiv@divisor+1,f,c
  5034  000D8C  0E01               	movlw	1
  5035  000D8E  6E30               	movwf	___awdiv@sign,c
  5036  000D90                     i1l486:
  5037  000D90  AE2C               	btfss	___awdiv@dividend+1,7,c
  5038  000D92  D006               	goto	i1l487
  5039  000D94  6C2B               	negf	___awdiv@dividend,c
  5040  000D96  1E2C               	comf	___awdiv@dividend+1,f,c
  5041  000D98  B0D8               	btfsc	status,0,c
  5042  000D9A  2A2C               	incf	___awdiv@dividend+1,f,c
  5043  000D9C  0E01               	movlw	1
  5044  000D9E  1A30               	xorwf	___awdiv@sign,f,c
  5045  000DA0                     i1l487:
  5046  000DA0  0E00               	movlw	0
  5047  000DA2  6E32               	movwf	___awdiv@quotient+1,c
  5048  000DA4  0E00               	movlw	0
  5049  000DA6  6E31               	movwf	___awdiv@quotient,c
  5050  000DA8  502D               	movf	___awdiv@divisor,w,c
  5051  000DAA  102E               	iorwf	___awdiv@divisor+1,w,c
  5052  000DAC  B4D8               	btfsc	status,2,c
  5053  000DAE  D01C               	goto	i1l494
  5054  000DB0  0E01               	movlw	1
  5055  000DB2  6E2F               	movwf	___awdiv@counter,c
  5056  000DB4  D004               	goto	i1l489
  5057  000DB6  90D8               	bcf	status,0,c
  5058  000DB8  362D               	rlcf	___awdiv@divisor,f,c
  5059  000DBA  362E               	rlcf	___awdiv@divisor+1,f,c
  5060  000DBC  2A2F               	incf	___awdiv@counter,f,c
  5061  000DBE                     i1l489:
  5062  000DBE  AE2E               	btfss	___awdiv@divisor+1,7,c
  5063  000DC0  D7FA               	goto	i1l490
  5064  000DC2                     i1u156_20:
  5065  000DC2  90D8               	bcf	status,0,c
  5066  000DC4  3631               	rlcf	___awdiv@quotient,f,c
  5067  000DC6  3632               	rlcf	___awdiv@quotient+1,f,c
  5068  000DC8  502D               	movf	___awdiv@divisor,w,c
  5069  000DCA  5C2B               	subwf	___awdiv@dividend,w,c
  5070  000DCC  502E               	movf	___awdiv@divisor+1,w,c
  5071  000DCE  582C               	subwfb	___awdiv@dividend+1,w,c
  5072  000DD0  A0D8               	btfss	status,0,c
  5073  000DD2  D005               	goto	i1l493
  5074  000DD4  502D               	movf	___awdiv@divisor,w,c
  5075  000DD6  5E2B               	subwf	___awdiv@dividend,f,c
  5076  000DD8  502E               	movf	___awdiv@divisor+1,w,c
  5077  000DDA  5A2C               	subwfb	___awdiv@dividend+1,f,c
  5078  000DDC  8031               	bsf	___awdiv@quotient,0,c
  5079  000DDE                     i1l493:
  5080  000DDE  90D8               	bcf	status,0,c
  5081  000DE0  322E               	rrcf	___awdiv@divisor+1,f,c
  5082  000DE2  322D               	rrcf	___awdiv@divisor,f,c
  5083  000DE4  2E2F               	decfsz	___awdiv@counter,f,c
  5084  000DE6  D7ED               	goto	i1u156_20
  5085  000DE8                     i1l494:
  5086  000DE8  5030               	movf	___awdiv@sign,w,c
  5087  000DEA  B4D8               	btfsc	status,2,c
  5088  000DEC  D004               	goto	i1l495
  5089  000DEE  6C31               	negf	___awdiv@quotient,c
  5090  000DF0  1E32               	comf	___awdiv@quotient+1,f,c
  5091  000DF2  B0D8               	btfsc	status,0,c
  5092  000DF4  2A32               	incf	___awdiv@quotient+1,f,c
  5093  000DF6                     i1l495:
  5094  000DF6  C031  F02B         	movff	___awdiv@quotient,?___awdiv
  5095  000DFA  C032  F02C         	movff	___awdiv@quotient+1,?___awdiv+1
  5096  000DFE  0012               	return	
  5097  000E00                     __end_of___awdiv:
  5098                           	opt stack 0
  5099                           pclatu	equ	0xFFB
  5100                           pclath	equ	0xFFA
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           intcon2	equ	0xFF1
  5109                           intcon3	equ	0xFF0
  5110                           postinc0	equ	0xFEE
  5111                           fsr0h	equ	0xFEA
  5112                           fsr0l	equ	0xFE9
  5113                           wreg	equ	0xFE8
  5114                           postinc1	equ	0xFE6
  5115                           postdec1	equ	0xFE5
  5116                           fsr1h	equ	0xFE2
  5117                           fsr1l	equ	0xFE1
  5118                           bsr	equ	0xFE0
  5119                           indf2	equ	0xFDF
  5120                           postinc2	equ	0xFDE
  5121                           postdec2	equ	0xFDD
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function _alarm *****************
  5127 ;; Defined at:
  5128 ;;		line 105 in file "Lab7.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;		None
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5142 ;;      Params:         0       0       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0
  5144 ;;      Temps:         18       0       0       0       0       0       0
  5145 ;;      Totals:        18       0       0       0       0       0       0
  5146 ;;Total ram usage:       18 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    3
  5149 ;; This function calls:
  5150 ;;		_password
  5151 ;;		i2_Clear
  5152 ;;		i2_printf
  5153 ;; This function is called by:
  5154 ;;		Interrupt level 2
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	intcode
  5159  000008                     __pintcode:
  5160                           	opt stack 0
  5161  000008                     _alarm:
  5162                           	opt stack 20
  5163                           
  5164                           ;incstack = 0
  5165  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5166  00000A  ED04  F006         	call	int_func,f	;refresh shadow registers
  5167                           pclatu	equ	0xFFB
  5168                           pclath	equ	0xFFA
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           prodh	equ	0xFF4
  5174                           prodl	equ	0xFF3
  5175                           intcon	equ	0xFF2
  5176                           intcon2	equ	0xFF1
  5177                           intcon3	equ	0xFF0
  5178                           postinc0	equ	0xFEE
  5179                           fsr0h	equ	0xFEA
  5180                           fsr0l	equ	0xFE9
  5181                           wreg	equ	0xFE8
  5182                           postinc1	equ	0xFE6
  5183                           postdec1	equ	0xFE5
  5184                           fsr1h	equ	0xFE2
  5185                           fsr1l	equ	0xFE1
  5186                           bsr	equ	0xFE0
  5187                           indf2	equ	0xFDF
  5188                           postinc2	equ	0xFDE
  5189                           postdec2	equ	0xFDD
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           status	equ	0xFD8
  5193                           
  5194                           	psect	intcode_body
  5195  000C08                     __pintcode_body:
  5196                           	opt stack 20
  5197  000C08                     int_func:
  5198                           	opt stack 20
  5199  000C08  0006               	pop		; remove dummy address from shadow register refresh
  5200  000C0A  CFFA F019          	movff	pclath,??_alarm
  5201  000C0E  CFFB F01A          	movff	pclatu,??_alarm+1
  5202  000C12  CFE9 F01B          	movff	fsr0l,??_alarm+2
  5203  000C16  CFEA F01C          	movff	fsr0h,??_alarm+3
  5204  000C1A  CFE1 F01D          	movff	fsr1l,??_alarm+4
  5205  000C1E  CFE2 F01E          	movff	fsr1h,??_alarm+5
  5206  000C22  CFD9 F01F          	movff	fsr2l,??_alarm+6
  5207  000C26  CFDA F020          	movff	fsr2h,??_alarm+7
  5208  000C2A  CFF3 F021          	movff	prodl,??_alarm+8
  5209  000C2E  CFF4 F022          	movff	prodh,??_alarm+9
  5210  000C32  CFF6 F023          	movff	tblptrl,??_alarm+10
  5211  000C36  CFF7 F024          	movff	tblptrh,??_alarm+11
  5212  000C3A  CFF8 F025          	movff	tblptru,??_alarm+12
  5213  000C3E  CFF5 F026          	movff	tablat,??_alarm+13
  5214  000C42  C046  F027         	movff	btemp,??_alarm+14
  5215  000C46  C047  F028         	movff	btemp+1,??_alarm+15
  5216  000C4A  C048  F029         	movff	btemp+2,??_alarm+16
  5217  000C4E  C049  F02A         	movff	btemp+3,??_alarm+17
  5218                           
  5219                           ;Lab7.c: 107: Clear();
  5220  000C52  EC58  F008         	call	i2_Clear	;wreg free
  5221                           
  5222                           ;Lab7.c: 108: printf("\n\r\n\r\n\rALARM TRIGGERED\n\r\n\r\n\r");
  5223  000C56  0EFC               	movlw	low STR_3
  5224  000C58  6E0D               	movwf	i2printf@f,c
  5225  000C5A  0E7D               	movlw	high STR_3
  5226  000C5C  6E0E               	movwf	i2printf@f+1,c
  5227  000C5E  ECF9  F004         	call	i2_printf	;wreg free
  5228                           
  5229                           ;Lab7.c: 109: printf("\n\rENTER PASSWORD TO CONTINUE\n\r");
  5230  000C62  0EDD               	movlw	low STR_4
  5231  000C64  6E0D               	movwf	i2printf@f,c
  5232  000C66  0E7D               	movlw	high STR_4
  5233  000C68  6E0E               	movwf	i2printf@f+1,c
  5234  000C6A  ECF9  F004         	call	i2_printf	;wreg free
  5235                           
  5236                           ;Lab7.c: 110: PORTBbits.RB2 = 1;
  5237  000C6E  8481               	bsf	3969,2,c	;volatile
  5238                           
  5239                           ;Lab7.c: 111: triggered = 1;
  5240  000C70  0E00               	movlw	0
  5241  000C72  0100               	movlb	0	; () banked
  5242  000C74  6FBC               	movwf	(_triggered+1)& (0+255),b
  5243  000C76  0E01               	movlw	1
  5244  000C78  6FBB               	movwf	_triggered& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;Lab7.c: 112: password();
  5248  000C7A  EC6D  F006         	call	_password	;wreg free
  5249                           
  5250                           ;Lab7.c: 113: printf("\n\rPress Any Button to return to Menu\n\r");
  5251  000C7E  0EB6               	movlw	low STR_5
  5252  000C80  6E0D               	movwf	i2printf@f,c
  5253  000C82  0E7D               	movlw	high STR_5
  5254  000C84  6E0E               	movwf	i2printf@f+1,c
  5255  000C86  ECF9  F004         	call	i2_printf	;wreg free
  5256                           
  5257                           ;Lab7.c: 114: INTCON3bits.INT1IF = 0;
  5258  000C8A  90F0               	bcf	intcon3,0,c	;volatile
  5259                           
  5260                           ;Lab7.c: 115: PORTBbits.RB2 = 0;
  5261  000C8C  9481               	bcf	3969,2,c	;volatile
  5262  000C8E  C02A  F049         	movff	??_alarm+17,btemp+3
  5263  000C92  C029  F048         	movff	??_alarm+16,btemp+2
  5264  000C96  C028  F047         	movff	??_alarm+15,btemp+1
  5265  000C9A  C027  F046         	movff	??_alarm+14,btemp
  5266  000C9E  C026  FFF5         	movff	??_alarm+13,tablat
  5267  000CA2  C025  FFF8         	movff	??_alarm+12,tblptru
  5268  000CA6  C024  FFF7         	movff	??_alarm+11,tblptrh
  5269  000CAA  C023  FFF6         	movff	??_alarm+10,tblptrl
  5270  000CAE  C022  FFF4         	movff	??_alarm+9,prodh
  5271  000CB2  C021  FFF3         	movff	??_alarm+8,prodl
  5272  000CB6  C020  FFDA         	movff	??_alarm+7,fsr2h
  5273  000CBA  C01F  FFD9         	movff	??_alarm+6,fsr2l
  5274  000CBE  C01E  FFE2         	movff	??_alarm+5,fsr1h
  5275  000CC2  C01D  FFE1         	movff	??_alarm+4,fsr1l
  5276  000CC6  C01C  FFEA         	movff	??_alarm+3,fsr0h
  5277  000CCA  C01B  FFE9         	movff	??_alarm+2,fsr0l
  5278  000CCE  C01A  FFFB         	movff	??_alarm+1,pclatu
  5279  000CD2  C019  FFFA         	movff	??_alarm,pclath
  5280  000CD6  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5281  000CD8  0011               	retfie		f
  5282  000CDA                     __end_of_alarm:
  5283                           	opt stack 0
  5284                           pclatu	equ	0xFFB
  5285                           pclath	equ	0xFFA
  5286                           tblptru	equ	0xFF8
  5287                           tblptrh	equ	0xFF7
  5288                           tblptrl	equ	0xFF6
  5289                           tablat	equ	0xFF5
  5290                           prodh	equ	0xFF4
  5291                           prodl	equ	0xFF3
  5292                           intcon	equ	0xFF2
  5293                           intcon2	equ	0xFF1
  5294                           intcon3	equ	0xFF0
  5295                           postinc0	equ	0xFEE
  5296                           fsr0h	equ	0xFEA
  5297                           fsr0l	equ	0xFE9
  5298                           wreg	equ	0xFE8
  5299                           postinc1	equ	0xFE6
  5300                           postdec1	equ	0xFE5
  5301                           fsr1h	equ	0xFE2
  5302                           fsr1l	equ	0xFE1
  5303                           bsr	equ	0xFE0
  5304                           indf2	equ	0xFDF
  5305                           postinc2	equ	0xFDE
  5306                           postdec2	equ	0xFDD
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8
  5310                           
  5311 ;; *************** function i2_Clear *****************
  5312 ;; Defined at:
  5313 ;;		line 99 in file "Lab7.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5327 ;;      Params:         0       0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    2
  5334 ;; This function calls:
  5335 ;;		i2_printf
  5336 ;; This function is called by:
  5337 ;;		_alarm
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text16
  5342  0010B0                     __ptext16:
  5343                           	opt stack 0
  5344  0010B0                     i2_Clear:
  5345                           	opt stack 20
  5346                           
  5347                           ;Lab7.c: 101: printf("\033[2J");
  5348                           
  5349                           ;incstack = 0
  5350  0010B0  0EF4               	movlw	low STR_1
  5351  0010B2  6E0D               	movwf	i2printf@f,c
  5352  0010B4  0E7F               	movlw	high STR_1
  5353  0010B6  6E0E               	movwf	i2printf@f+1,c
  5354  0010B8  ECF9  F004         	call	i2_printf	;wreg free
  5355                           
  5356                           ;Lab7.c: 102: printf("\033[0;0H");
  5357  0010BC  0EED               	movlw	low STR_2
  5358  0010BE  6E0D               	movwf	i2printf@f,c
  5359  0010C0  0E7F               	movlw	high STR_2
  5360  0010C2  6E0E               	movwf	i2printf@f+1,c
  5361  0010C4  ECF9  F004         	call	i2_printf	;wreg free
  5362  0010C8  0012               	return		;funcret
  5363  0010CA                     __end_ofi2_Clear:
  5364                           	opt stack 0
  5365                           pclatu	equ	0xFFB
  5366                           pclath	equ	0xFFA
  5367                           tblptru	equ	0xFF8
  5368                           tblptrh	equ	0xFF7
  5369                           tblptrl	equ	0xFF6
  5370                           tablat	equ	0xFF5
  5371                           prodh	equ	0xFF4
  5372                           prodl	equ	0xFF3
  5373                           intcon	equ	0xFF2
  5374                           intcon2	equ	0xFF1
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           fsr0h	equ	0xFEA
  5378                           fsr0l	equ	0xFE9
  5379                           wreg	equ	0xFE8
  5380                           postinc1	equ	0xFE6
  5381                           postdec1	equ	0xFE5
  5382                           fsr1h	equ	0xFE2
  5383                           fsr1l	equ	0xFE1
  5384                           bsr	equ	0xFE0
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _password *****************
  5393 ;; Defined at:
  5394 ;;		line 378 in file "Lab7.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  i               2   22[COMRAM] int 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5408 ;;      Params:         0       0       0       0       0       0       0
  5409 ;;      Locals:         2       0       0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0
  5411 ;;      Totals:         2       0       0       0       0       0       0
  5412 ;;Total ram usage:        2 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    2
  5415 ;; This function calls:
  5416 ;;		i2_printf
  5417 ;;		i2_strncmp
  5418 ;; This function is called by:
  5419 ;;		_alarm
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text17
  5424  000CDA                     __ptext17:
  5425                           	opt stack 0
  5426  000CDA                     _password:
  5427                           	opt stack 20
  5428                           
  5429                           ;Lab7.c: 381: {
  5430                           ;Lab7.c: 382: printf("PASSWORD:\t");
  5431                           
  5432                           ;incstack = 0
  5433                           ;Lab7.c: 380: while(1)
  5434  000CDA  0EBC               	movlw	low (STR_6+4)
  5435  000CDC  6E0D               	movwf	i2printf@f,c
  5436  000CDE  0E7F               	movlw	high (STR_6+4)
  5437  000CE0  6E0E               	movwf	i2printf@f+1,c
  5438  000CE2  ECF9  F004         	call	i2_printf	;wreg free
  5439                           
  5440                           ;Lab7.c: 383: for(int i = 0;i < 4;i++){
  5441  000CE6  0E00               	movlw	0
  5442  000CE8  6E18               	movwf	password@i+1,c
  5443  000CEA  0E00               	movlw	0
  5444  000CEC  6E17               	movwf	password@i,c
  5445  000CEE  BE18               	btfsc	password@i+1,7,c
  5446  000CF0  D006               	goto	i2l168
  5447  000CF2  5018               	movf	password@i+1,w,c
  5448  000CF4  E11E               	bnz	i2l2067
  5449  000CF6  0E04               	movlw	4
  5450  000CF8  5C17               	subwf	password@i,w,c
  5451  000CFA  B0D8               	btfsc	status,0,c
  5452  000CFC  D01A               	goto	i2u130_40
  5453  000CFE                     i2l168:
  5454                           
  5455                           ;Lab7.c: 384: while(PIR1bits.RCIF == 0);
  5456  000CFE  AA9E               	btfss	3998,5,c	;volatile
  5457  000D00  D7FE               	goto	i2l168
  5458                           
  5459                           ;Lab7.c: 385: pass[i] = RCREG;
  5460  000D02  0EC3               	movlw	low _pass
  5461  000D04  2417               	addwf	password@i,w,c
  5462  000D06  6ED9               	movwf	fsr2l,c
  5463  000D08  0E00               	movlw	high _pass
  5464  000D0A  2018               	addwfc	password@i+1,w,c
  5465  000D0C  6EDA               	movwf	fsr2h,c
  5466  000D0E  CFAE FFDF          	movff	4014,indf2	;volatile
  5467                           
  5468                           ;Lab7.c: 386: printf("*");
  5469  000D12  0EFC               	movlw	low STR_7
  5470  000D14  6E0D               	movwf	i2printf@f,c
  5471  000D16  0E7F               	movlw	high STR_7
  5472  000D18  6E0E               	movwf	i2printf@f+1,c
  5473  000D1A  ECF9  F004         	call	i2_printf	;wreg free
  5474  000D1E  4A17               	infsnz	password@i,f,c
  5475  000D20  2A18               	incf	password@i+1,f,c
  5476  000D22  BE18               	btfsc	password@i+1,7,c
  5477  000D24  D7EC               	goto	i2l168
  5478  000D26  5018               	movf	password@i+1,w,c
  5479  000D28  E104               	bnz	i2l2067
  5480  000D2A  0E04               	movlw	4
  5481  000D2C  5C17               	subwf	password@i,w,c
  5482  000D2E  A0D8               	btfss	status,0,c
  5483  000D30  D7E6               	goto	i2l168
  5484  000D32                     i2u130_40:
  5485  000D32                     i2l2067:
  5486                           
  5487                           ;Lab7.c: 387: }
  5488                           ;Lab7.c: 392: check = strncmp(pass, saved_pass, 4);
  5489  000D32  0EC3               	movlw	low _pass
  5490  000D34  6E01               	movwf	i2strncmp@s1,c
  5491  000D36  0E00               	movlw	high _pass
  5492  000D38  6E02               	movwf	i2strncmp@s1+1,c
  5493  000D3A  0EC7               	movlw	low _saved_pass
  5494  000D3C  6E03               	movwf	i2strncmp@s2,c
  5495  000D3E  0E00               	movlw	high _saved_pass
  5496  000D40  6E04               	movwf	i2strncmp@s2+1,c
  5497  000D42  0E00               	movlw	0
  5498  000D44  6E06               	movwf	i2strncmp@len+1,c
  5499  000D46  0E04               	movlw	4
  5500  000D48  6E05               	movwf	i2strncmp@len,c
  5501  000D4A  EC40  F007         	call	i2_strncmp	;wreg free
  5502  000D4E  C001  F0BF         	movff	?i2_strncmp,_check
  5503  000D52  C002  F0C0         	movff	?i2_strncmp+1,_check+1
  5504                           
  5505                           ;Lab7.c: 394: if(check == 0)
  5506  000D56  0100               	movlb	0	; () banked
  5507  000D58  51BF               	movf	_check& (0+255),w,b
  5508  000D5A  11C0               	iorwf	(_check+1)& (0+255),w,b
  5509  000D5C  A4D8               	btfss	status,2,c
  5510  000D5E  D007               	goto	i2l173
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;Lab7.c: 395: {
  5514                           ;Lab7.c: 396: printf("\n\rPASSWORD VALID\n\r\n\r");
  5515  000D60  0E1A               	movlw	low STR_24
  5516  000D62  6E0D               	movwf	i2printf@f,c
  5517  000D64  0E7F               	movlw	high STR_24
  5518  000D66  6E0E               	movwf	i2printf@f+1,c
  5519  000D68  ECF9  F004         	call	i2_printf	;wreg free
  5520                           
  5521                           ;Lab7.c: 397: return;
  5522  000D6C  0012               	return	
  5523  000D6E                     i2l173:
  5524                           
  5525                           ;Lab7.c: 399: else
  5526                           ;Lab7.c: 400: {
  5527                           ;Lab7.c: 401: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
  5528  000D6E  0E18               	movlw	low STR_25
  5529  000D70  6E0D               	movwf	i2printf@f,c
  5530  000D72  0E7E               	movlw	high STR_25
  5531  000D74  6E0E               	movwf	i2printf@f+1,c
  5532  000D76  ECF9  F004         	call	i2_printf	;wreg free
  5533  000D7A  D7AF               	goto	_password
  5534  000D7C                     __end_of_password:
  5535                           	opt stack 0
  5536                           pclatu	equ	0xFFB
  5537                           pclath	equ	0xFFA
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           intcon2	equ	0xFF1
  5546                           intcon3	equ	0xFF0
  5547                           postinc0	equ	0xFEE
  5548                           fsr0h	equ	0xFEA
  5549                           fsr0l	equ	0xFE9
  5550                           wreg	equ	0xFE8
  5551                           postinc1	equ	0xFE6
  5552                           postdec1	equ	0xFE5
  5553                           fsr1h	equ	0xFE2
  5554                           fsr1l	equ	0xFE1
  5555                           bsr	equ	0xFE0
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function i2_strncmp *****************
  5564 ;; Defined at:
  5565 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  5568 ;;		 -> pass(4), 
  5569 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  5570 ;;		 -> saved_pass(4), 
  5571 ;;  len             2    4[COMRAM] unsigned int 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  2    0[COMRAM] int 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5583 ;;      Params:         6       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0
  5585 ;;      Temps:          3       0       0       0       0       0       0
  5586 ;;      Totals:         9       0       0       0       0       0       0
  5587 ;;Total ram usage:        9 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_password
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text18
  5597  000E80                     __ptext18:
  5598                           	opt stack 0
  5599  000E80                     i2_strncmp:
  5600                           	opt stack 21
  5601                           
  5602                           ;incstack = 0
  5603  000E80  D02F               	goto	i2l866
  5604  000E82                     i2l2035:
  5605  000E82  C001  FFD9         	movff	i2strncmp@s1,fsr2l
  5606  000E86  C002  FFDA         	movff	i2strncmp@s1+1,fsr2h
  5607  000E8A  50DF               	movf	indf2,w,c
  5608  000E8C  B4D8               	btfsc	status,2,c
  5609  000E8E  D00C               	goto	i2u126_40
  5610  000E90  C003  FFD9         	movff	i2strncmp@s2,fsr2l
  5611  000E94  C004  FFDA         	movff	i2strncmp@s2+1,fsr2h
  5612  000E98  C001  FFE1         	movff	i2strncmp@s1,fsr1l
  5613  000E9C  C002  FFE2         	movff	i2strncmp@s1+1,fsr1h
  5614  000EA0  50DE               	movf	postinc2,w,c
  5615  000EA2  18E6               	xorwf	postinc1,w,c
  5616  000EA4  B4D8               	btfsc	status,2,c
  5617  000EA6  D018               	goto	i2l868
  5618  000EA8                     i2u126_40:
  5619  000EA8  C003  FFD9         	movff	i2strncmp@s2,fsr2l
  5620  000EAC  C004  FFDA         	movff	i2strncmp@s2+1,fsr2h
  5621  000EB0  50DF               	movf	indf2,w,c
  5622  000EB2  6E07               	movwf	??i2_strncmp& (0+255),c
  5623  000EB4  6A08               	clrf	(??i2_strncmp+1)& (0+255),c
  5624  000EB6  1E07               	comf	??i2_strncmp,f,c
  5625  000EB8  1E08               	comf	??i2_strncmp+1,f,c
  5626  000EBA  4A07               	infsnz	??i2_strncmp,f,c
  5627  000EBC  2A08               	incf	??i2_strncmp+1,f,c
  5628  000EBE  C001  FFD9         	movff	i2strncmp@s1,fsr2l
  5629  000EC2  C002  FFDA         	movff	i2strncmp@s1+1,fsr2h
  5630  000EC6  50DF               	movf	indf2,w,c
  5631  000EC8  6E09               	movwf	(??i2_strncmp+2)& (0+255),c
  5632  000ECA  5009               	movf	??i2_strncmp+2,w,c
  5633  000ECC  2407               	addwf	??i2_strncmp,w,c
  5634  000ECE  6E01               	movwf	?i2_strncmp,c
  5635  000ED0  0E00               	movlw	0
  5636  000ED2  2008               	addwfc	??i2_strncmp+1,w,c
  5637  000ED4  6E02               	movwf	?i2_strncmp+1,c
  5638  000ED6  0012               	return	
  5639  000ED8                     i2l868:
  5640  000ED8  4A01               	infsnz	i2strncmp@s1,f,c
  5641  000EDA  2A02               	incf	i2strncmp@s1+1,f,c
  5642  000EDC  4A03               	infsnz	i2strncmp@s2,f,c
  5643  000EDE  2A04               	incf	i2strncmp@s2+1,f,c
  5644  000EE0                     i2l866:
  5645  000EE0  0605               	decf	i2strncmp@len,f,c
  5646  000EE2  A0D8               	btfss	status,0,c
  5647  000EE4  0606               	decf	i2strncmp@len+1,f,c
  5648  000EE6  2805               	incf	i2strncmp@len,w,c
  5649  000EE8  E1CC               	bnz	i2l2035
  5650  000EEA  2806               	incf	i2strncmp@len+1,w,c
  5651  000EEC  A4D8               	btfss	status,2,c
  5652  000EEE  D7C9               	goto	i2l867
  5653  000EF0  0E00               	movlw	0
  5654  000EF2  6E02               	movwf	?i2_strncmp+1,c
  5655  000EF4  0E00               	movlw	0
  5656  000EF6  6E01               	movwf	?i2_strncmp,c
  5657  000EF8  0012               	return	
  5658  000EFA                     __end_ofi2_strncmp:
  5659                           	opt stack 0
  5660                           pclatu	equ	0xFFB
  5661                           pclath	equ	0xFFA
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           intcon2	equ	0xFF1
  5670                           intcon3	equ	0xFF0
  5671                           postinc0	equ	0xFEE
  5672                           fsr0h	equ	0xFEA
  5673                           fsr0l	equ	0xFE9
  5674                           wreg	equ	0xFE8
  5675                           postinc1	equ	0xFE6
  5676                           postdec1	equ	0xFE5
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           bsr	equ	0xFE0
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function i2_printf *****************
  5688 ;; Defined at:
  5689 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  f               2   12[COMRAM] PTR const unsigned char 
  5692 ;;		 -> STR_63(23), STR_62(9), STR_61(28), STR_60(26), 
  5693 ;;		 -> STR_59(25), STR_58(85), STR_57(20), STR_56(21), 
  5694 ;;		 -> STR_55(14), STR_54(15), STR_53(23), STR_52(3), 
  5695 ;;		 -> STR_51(27), STR_50(26), STR_49(25), STR_48(25), 
  5696 ;;		 -> STR_47(101), STR_46(20), STR_45(21), STR_44(14), 
  5697 ;;		 -> STR_43(15), STR_42(23), STR_41(19), STR_40(18), 
  5698 ;;		 -> STR_39(25), STR_38(67), STR_37(20), STR_36(21), 
  5699 ;;		 -> STR_35(14), STR_34(15), STR_33(23), STR_32(21), 
  5700 ;;		 -> STR_31(25), STR_30(59), STR_29(20), STR_28(21), 
  5701 ;;		 -> STR_27(14), STR_26(15), STR_25(28), STR_24(21), 
  5702 ;;		 -> STR_23(2), STR_22(11), STR_21(54), STR_20(25), 
  5703 ;;		 -> STR_19(2), STR_18(21), STR_17(2), STR_16(25), 
  5704 ;;		 -> STR_15(23), STR_14(25), STR_13(133), STR_12(20), 
  5705 ;;		 -> STR_11(21), STR_10(14), STR_9(15), STR_8(17), 
  5706 ;;		 -> STR_7(2), STR_6(15), STR_5(39), STR_4(31), 
  5707 ;;		 -> STR_3(28), STR_2(7), STR_1(5), 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  printf          4    0        struct .
  5710 ;;  printf          3    0        PTR const unsigned char 
  5711 ;;  printf          2   19[COMRAM] unsigned int 
  5712 ;;  printf          2   15[COMRAM] PTR void [1]
  5713 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5714 ;;  printf          2    0        unsigned int 
  5715 ;;  printf          1   21[COMRAM] char 
  5716 ;;  printf          1   18[COMRAM] char 
  5717 ;;  printf          1   17[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2   12[COMRAM] int 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5727 ;;      Params:         2       0       0       0       0       0       0
  5728 ;;      Locals:         7       0       0       0       0       0       0
  5729 ;;      Temps:          1       0       0       0       0       0       0
  5730 ;;      Totals:        10       0       0       0       0       0       0
  5731 ;;Total ram usage:       10 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    1
  5734 ;; This function calls:
  5735 ;;		i2___lwdiv
  5736 ;;		i2___lwmod
  5737 ;;		i2_putch
  5738 ;; This function is called by:
  5739 ;;		_alarm
  5740 ;;		_password
  5741 ;;		i2_Clear
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text19
  5746  0009F2                     __ptext19:
  5747                           	opt stack 0
  5748  0009F2                     i2_printf:
  5749                           	opt stack 21
  5750                           
  5751                           ;doprnt.c: 466: va_list ap;
  5752                           ;doprnt.c: 499: signed char c;
  5753                           ;doprnt.c: 506: signed char prec;
  5754                           ;doprnt.c: 508: unsigned char flag;
  5755                           ;doprnt.c: 523: union {
  5756                           ;doprnt.c: 524: unsigned long vd;
  5757                           ;doprnt.c: 525: double integ;
  5758                           ;doprnt.c: 526: } tmpval;
  5759                           ;doprnt.c: 528: unsigned int val;
  5760                           ;doprnt.c: 529: unsigned len;
  5761                           ;doprnt.c: 530: const char * cp;
  5762                           ;doprnt.c: 533: *ap = __va_start();
  5763                           
  5764                           ;incstack = 0
  5765  0009F2  0E0F               	movlw	low (?i2_printf+2)
  5766  0009F4  6E10               	movwf	i2printf@ap,c
  5767  0009F6  0E00               	movlw	high (?i2_printf+2)
  5768  0009F8  6E11               	movwf	i2printf@ap+1,c
  5769                           
  5770                           ;doprnt.c: 536: while(c = *f++) {
  5771  0009FA  D07D               	goto	i2u123_40
  5772  0009FC                     
  5773                           ;doprnt.c: 538: if(c != '%')
  5774  0009FC  0E25               	movlw	37
  5775  0009FE  1816               	xorwf	i2printf@c,w,c
  5776  000A00  B4D8               	btfsc	status,2,c
  5777  000A02  D004               	goto	i2l301
  5778                           
  5779                           ;doprnt.c: 540: {
  5780                           ;doprnt.c: 541: (putch(c) );
  5781  000A04  5016               	movf	i2printf@c,w,c
  5782  000A06  EC6B  F008         	call	i2_putch
  5783                           
  5784                           ;doprnt.c: 542: continue;
  5785  000A0A  D075               	goto	i2u123_40
  5786  000A0C                     i2l301:
  5787                           
  5788                           ;doprnt.c: 543: }
  5789                           ;doprnt.c: 548: flag = 0;
  5790  000A0C  0E00               	movlw	0
  5791  000A0E  6E12               	movwf	i2printf@flag,c
  5792                           
  5793                           ;doprnt.c: 822: }
  5794                           
  5795                           ;doprnt.c: 813: continue;
  5796                           
  5797                           ;doprnt.c: 802: default:
  5798                           
  5799                           ;doprnt.c: 698: case 'i':
  5800                           ;doprnt.c: 699: break;
  5801                           
  5802                           ;doprnt.c: 697: case 'd':
  5803                           
  5804                           ;doprnt.c: 638: goto alldone;
  5805                           
  5806                           ;doprnt.c: 637: case 0:
  5807                           
  5808                           ;doprnt.c: 635: switch(c = *f++) {
  5809  000A10  C00D  FFF6         	movff	i2printf@f,tblptrl
  5810  000A14  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  5811  000A18  4A0D               	infsnz	i2printf@f,f,c
  5812  000A1A  2A0E               	incf	i2printf@f+1,f,c
  5813  000A1C                     	if	0	;tblptru may be non-zero
  5814  000A1C                     	endif
  5815  000A1C                     	if	0	;tblptru may be non-zero
  5816  000A1C                     	endif
  5817  000A1C  0008               	tblrd		*
  5818  000A1E  CFF5 F016          	movff	tablat,i2printf@c
  5819  000A22  5016               	movf	i2printf@c,w,c
  5820                           
  5821                           ; Switch size 1, requested type "space"
  5822                           ; Number of cases is 3, Range of values is 0 to 105
  5823                           ; switch strategies available:
  5824                           ; Name         Instructions Cycles
  5825                           ; simple_byte           10     6 (average)
  5826                           ;	Chosen strategy is simple_byte
  5827  000A24  0A00               	xorlw	0	; case 0
  5828  000A26  B4D8               	btfsc	status,2,c
  5829  000A28  0012               	return	
  5830  000A2A  0A64               	xorlw	100	; case 100
  5831  000A2C  B4D8               	btfsc	status,2,c
  5832  000A2E  D003               	goto	i2l307
  5833  000A30  0A0D               	xorlw	13	; case 105
  5834  000A32  A4D8               	btfss	status,2,c
  5835  000A34  D060               	goto	i2u123_40
  5836  000A36                     i2l307:
  5837                           
  5838                           ;doprnt.c: 1253: {
  5839                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5840  000A36  C010  FFD9         	movff	i2printf@ap,fsr2l
  5841  000A3A  C011  FFDA         	movff	i2printf@ap+1,fsr2h
  5842  000A3E  CFDE F014          	movff	postinc2,i2printf@val
  5843  000A42  CFDD F015          	movff	postdec2,i2printf@val+1
  5844  000A46  0E02               	movlw	2
  5845  000A48  2610               	addwf	i2printf@ap,f,c
  5846  000A4A  0E00               	movlw	0
  5847  000A4C  2211               	addwfc	i2printf@ap+1,f,c
  5848                           
  5849                           ;doprnt.c: 1261: if((int)val < 0) {
  5850  000A4E  AE15               	btfss	i2printf@val+1,7,c
  5851  000A50  D006               	goto	i2l309
  5852                           
  5853                           ;doprnt.c: 1262: flag |= 0x03;
  5854  000A52  0E03               	movlw	3
  5855  000A54  1212               	iorwf	i2printf@flag,f,c
  5856                           
  5857                           ;doprnt.c: 1263: val = -val;
  5858  000A56  6C14               	negf	i2printf@val,c
  5859  000A58  1E15               	comf	i2printf@val+1,f,c
  5860  000A5A  B0D8               	btfsc	status,0,c
  5861  000A5C  2A15               	incf	i2printf@val+1,f,c
  5862  000A5E                     i2l309:
  5863                           
  5864                           ;doprnt.c: 1264: }
  5865                           ;doprnt.c: 1266: }
  5866                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5867  000A5E  0E01               	movlw	1
  5868  000A60  6E16               	movwf	i2printf@c,c
  5869  000A62                     i2l2007:
  5870  000A62  0E05               	movlw	5
  5871  000A64  1816               	xorwf	i2printf@c,w,c
  5872  000A66  B4D8               	btfsc	status,2,c
  5873  000A68  D012               	goto	i2u121_40
  5874                           
  5875                           ;doprnt.c: 1306: if(val < dpowers[c])
  5876  000A6A  5016               	movf	i2printf@c,w,c
  5877  000A6C  0D02               	mullw	2
  5878  000A6E  0EB9               	movlw	low _dpowers
  5879  000A70  24F3               	addwf	prodl,w,c
  5880  000A72  6EF6               	movwf	tblptrl,c
  5881  000A74  0E7B               	movlw	high _dpowers
  5882  000A76  20F4               	addwfc	prodh,w,c
  5883  000A78  6EF7               	movwf	tblptrh,c
  5884  000A7A                     	if	0	;There are less than 3 active tblptr bytes
  5885  000A7A                     	endif
  5886  000A7A  0009               	tblrd		*+
  5887  000A7C  50F5               	movf	tablat,w,c
  5888  000A7E  5C14               	subwf	i2printf@val,w,c
  5889  000A80  0009               	tblrd		*+
  5890  000A82  50F5               	movf	tablat,w,c
  5891  000A84  5815               	subwfb	i2printf@val+1,w,c
  5892  000A86  A0D8               	btfss	status,0,c
  5893  000A88  D002               	goto	i2u121_40
  5894                           
  5895                           ;doprnt.c: 1307: break;
  5896  000A8A  2A16               	incf	i2printf@c,f,c
  5897  000A8C  D7EA               	goto	i2l2007
  5898  000A8E                     i2u121_40:
  5899                           
  5900                           ;doprnt.c: 1422: {
  5901                           ;doprnt.c: 1438: if(flag & 0x03)
  5902  000A8E  C012  F00F         	movff	i2printf@flag,??i2_printf
  5903  000A92  0E03               	movlw	3
  5904  000A94  160F               	andwf	??i2_printf,f,c
  5905  000A96  B4D8               	btfsc	status,2,c
  5906  000A98  D003               	goto	i2l313
  5907                           
  5908                           ;doprnt.c: 1439: (putch('-') );
  5909  000A9A  0E2D               	movlw	45
  5910  000A9C  EC6B  F008         	call	i2_putch
  5911  000AA0                     i2l313:
  5912                           
  5913                           ;doprnt.c: 1469: }
  5914                           ;doprnt.c: 1472: prec = c;
  5915  000AA0  C016  F013         	movff	i2printf@c,i2printf@prec
  5916                           
  5917                           ;doprnt.c: 1474: while(prec--) {
  5918  000AA4  D024               	goto	i2l314
  5919  000AA6                     
  5920                           ;doprnt.c: 1478: {
  5921                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5922  000AA6  5013               	movf	i2printf@prec,w,c
  5923  000AA8  0D02               	mullw	2
  5924  000AAA  0EB9               	movlw	low _dpowers
  5925  000AAC  24F3               	addwf	prodl,w,c
  5926  000AAE  6EF6               	movwf	tblptrl,c
  5927  000AB0  0E7B               	movlw	high _dpowers
  5928  000AB2  20F4               	addwfc	prodh,w,c
  5929  000AB4  6EF7               	movwf	tblptrh,c
  5930  000AB6                     	if	0	;There are less than 3 active tblptr bytes
  5931  000AB6                     	endif
  5932  000AB6  0009               	tblrd		*+
  5933  000AB8  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  5934  000ABC  000A               	tblrd		*-
  5935  000ABE  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  5936  000AC2  C014  F001         	movff	i2printf@val,i2___lwdiv@dividend
  5937  000AC6  C015  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  5938  000ACA  ECA7  F007         	call	i2___lwdiv	;wreg free
  5939  000ACE  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  5940  000AD2  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  5941  000AD6  0E00               	movlw	0
  5942  000AD8  6E0B               	movwf	i2___lwmod@divisor+1,c
  5943  000ADA  0E0A               	movlw	10
  5944  000ADC  6E0A               	movwf	i2___lwmod@divisor,c
  5945  000ADE  EC15  F008         	call	i2___lwmod	;wreg free
  5946  000AE2  5008               	movf	?i2___lwmod,w,c
  5947  000AE4  0F30               	addlw	48
  5948  000AE6  6E16               	movwf	i2printf@c,c
  5949                           
  5950                           ;doprnt.c: 1523: }
  5951                           ;doprnt.c: 1524: (putch(c) );
  5952  000AE8  5016               	movf	i2printf@c,w,c
  5953  000AEA  EC6B  F008         	call	i2_putch
  5954  000AEE                     i2l314:
  5955  000AEE  0613               	decf	i2printf@prec,f,c
  5956  000AF0  2813               	incf	i2printf@prec,w,c
  5957  000AF2  A4D8               	btfss	status,2,c
  5958  000AF4  D7D8               	goto	i2l315
  5959  000AF6                     i2u123_40:
  5960  000AF6  C00D  FFF6         	movff	i2printf@f,tblptrl
  5961  000AFA  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  5962  000AFE  4A0D               	infsnz	i2printf@f,f,c
  5963  000B00  2A0E               	incf	i2printf@f+1,f,c
  5964  000B02                     	if	0	;tblptru may be non-zero
  5965  000B02                     	endif
  5966  000B02                     	if	0	;tblptru may be non-zero
  5967  000B02                     	endif
  5968  000B02  0008               	tblrd		*
  5969  000B04  CFF5 F016          	movff	tablat,i2printf@c
  5970  000B08  5016               	movf	i2printf@c,w,c
  5971  000B0A  B4D8               	btfsc	status,2,c
  5972  000B0C  0012               	return	
  5973  000B0E  D776               	goto	i2l300
  5974  000B10                     __end_ofi2_printf:
  5975                           	opt stack 0
  5976                           pclatu	equ	0xFFB
  5977                           pclath	equ	0xFFA
  5978                           tblptru	equ	0xFF8
  5979                           tblptrh	equ	0xFF7
  5980                           tblptrl	equ	0xFF6
  5981                           tablat	equ	0xFF5
  5982                           prodh	equ	0xFF4
  5983                           prodl	equ	0xFF3
  5984                           intcon	equ	0xFF2
  5985                           intcon2	equ	0xFF1
  5986                           intcon3	equ	0xFF0
  5987                           postinc0	equ	0xFEE
  5988                           fsr0h	equ	0xFEA
  5989                           fsr0l	equ	0xFE9
  5990                           wreg	equ	0xFE8
  5991                           postinc1	equ	0xFE6
  5992                           postdec1	equ	0xFE5
  5993                           fsr1h	equ	0xFE2
  5994                           fsr1l	equ	0xFE1
  5995                           bsr	equ	0xFE0
  5996                           indf2	equ	0xFDF
  5997                           postinc2	equ	0xFDE
  5998                           postdec2	equ	0xFDD
  5999                           fsr2h	equ	0xFDA
  6000                           fsr2l	equ	0xFD9
  6001                           status	equ	0xFD8
  6002                           
  6003 ;; *************** function i2_putch *****************
  6004 ;; Defined at:
  6005 ;;		line 93 in file "Lab7.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  data            1    wreg     unsigned char 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  data            1    0[COMRAM] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6019 ;;      Params:         0       0       0       0       0       0       0
  6020 ;;      Locals:         1       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0
  6022 ;;      Totals:         1       0       0       0       0       0       0
  6023 ;;Total ram usage:        1 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		i2_printf
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text20
  6033  0010D6                     __ptext20:
  6034                           	opt stack 0
  6035  0010D6                     i2_putch:
  6036                           	opt stack 21
  6037                           
  6038                           ;incstack = 0
  6039                           ;i2putch@data stored from wreg
  6040  0010D6  6E01               	movwf	i2putch@data,c
  6041  0010D8                     
  6042                           ;Lab7.c: 96: continue;
  6043                           
  6044                           ;Lab7.c: 95: while(!PIR1bits.TXIF)
  6045  0010D8  A89E               	btfss	3998,4,c	;volatile
  6046  0010DA  D7FE               	goto	i2l1895
  6047                           
  6048                           ;Lab7.c: 97: TXREG = data;
  6049  0010DC  C001  FFAD         	movff	i2putch@data,4013	;volatile
  6050  0010E0  0012               	return		;funcret
  6051  0010E2                     __end_ofi2_putch:
  6052                           	opt stack 0
  6053                           pclatu	equ	0xFFB
  6054                           pclath	equ	0xFFA
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           intcon2	equ	0xFF1
  6063                           intcon3	equ	0xFF0
  6064                           postinc0	equ	0xFEE
  6065                           fsr0h	equ	0xFEA
  6066                           fsr0l	equ	0xFE9
  6067                           wreg	equ	0xFE8
  6068                           postinc1	equ	0xFE6
  6069                           postdec1	equ	0xFE5
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           bsr	equ	0xFE0
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function i2___lwmod *****************
  6081 ;; Defined at:
  6082 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  dividend        2    7[COMRAM] unsigned int 
  6085 ;;  divisor         2    9[COMRAM] unsigned int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  __lwmod         1   11[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2    7[COMRAM] unsigned int 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6097 ;;      Params:         4       0       0       0       0       0       0
  6098 ;;      Locals:         1       0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0
  6100 ;;      Totals:         5       0       0       0       0       0       0
  6101 ;;Total ram usage:        5 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		i2_printf
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text21
  6111  00102A                     __ptext21:
  6112                           	opt stack 0
  6113  00102A                     i2___lwmod:
  6114                           	opt stack 21
  6115                           
  6116                           ;incstack = 0
  6117  00102A  500A               	movf	i2___lwmod@divisor,w,c
  6118  00102C  100B               	iorwf	i2___lwmod@divisor+1,w,c
  6119  00102E  B4D8               	btfsc	status,2,c
  6120  001030  D018               	goto	i2l737
  6121  001032  0E01               	movlw	1
  6122  001034  6E0C               	movwf	i2___lwmod@counter,c
  6123  001036  D004               	goto	i2l732
  6124  001038  90D8               	bcf	status,0,c
  6125  00103A  360A               	rlcf	i2___lwmod@divisor,f,c
  6126  00103C  360B               	rlcf	i2___lwmod@divisor+1,f,c
  6127  00103E  2A0C               	incf	i2___lwmod@counter,f,c
  6128  001040                     i2l732:
  6129  001040  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  6130  001042  D7FA               	goto	i2l733
  6131  001044                     i2u108_40:
  6132  001044  500A               	movf	i2___lwmod@divisor,w,c
  6133  001046  5C08               	subwf	i2___lwmod@dividend,w,c
  6134  001048  500B               	movf	i2___lwmod@divisor+1,w,c
  6135  00104A  5809               	subwfb	i2___lwmod@dividend+1,w,c
  6136  00104C  A0D8               	btfss	status,0,c
  6137  00104E  D004               	goto	i2l736
  6138  001050  500A               	movf	i2___lwmod@divisor,w,c
  6139  001052  5E08               	subwf	i2___lwmod@dividend,f,c
  6140  001054  500B               	movf	i2___lwmod@divisor+1,w,c
  6141  001056  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  6142  001058                     i2l736:
  6143  001058  90D8               	bcf	status,0,c
  6144  00105A  320B               	rrcf	i2___lwmod@divisor+1,f,c
  6145  00105C  320A               	rrcf	i2___lwmod@divisor,f,c
  6146  00105E  2E0C               	decfsz	i2___lwmod@counter,f,c
  6147  001060  D7F1               	goto	i2u108_40
  6148  001062                     i2l737:
  6149  001062  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  6150  001066  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  6151  00106A  0012               	return		;funcret
  6152  00106C                     __end_ofi2___lwmod:
  6153                           	opt stack 0
  6154                           pclatu	equ	0xFFB
  6155                           pclath	equ	0xFFA
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           intcon2	equ	0xFF1
  6164                           intcon3	equ	0xFF0
  6165                           postinc0	equ	0xFEE
  6166                           fsr0h	equ	0xFEA
  6167                           fsr0l	equ	0xFE9
  6168                           wreg	equ	0xFE8
  6169                           postinc1	equ	0xFE6
  6170                           postdec1	equ	0xFE5
  6171                           fsr1h	equ	0xFE2
  6172                           fsr1l	equ	0xFE1
  6173                           bsr	equ	0xFE0
  6174                           indf2	equ	0xFDF
  6175                           postinc2	equ	0xFDE
  6176                           postdec2	equ	0xFDD
  6177                           fsr2h	equ	0xFDA
  6178                           fsr2l	equ	0xFD9
  6179                           status	equ	0xFD8
  6180                           
  6181 ;; *************** function i2___lwdiv *****************
  6182 ;; Defined at:
  6183 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  dividend        2    0[COMRAM] unsigned int 
  6186 ;;  divisor         2    2[COMRAM] unsigned int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  6189 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  2    0[COMRAM] unsigned int 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6199 ;;      Params:         4       0       0       0       0       0       0
  6200 ;;      Locals:         3       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0
  6202 ;;      Totals:         7       0       0       0       0       0       0
  6203 ;;Total ram usage:        7 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		i2_printf
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text22
  6213  000F4E                     __ptext22:
  6214                           	opt stack 0
  6215  000F4E                     i2___lwdiv:
  6216                           	opt stack 21
  6217                           
  6218                           ;incstack = 0
  6219  000F4E  0E00               	movlw	0
  6220  000F50  6E06               	movwf	i2___lwdiv@quotient+1,c
  6221  000F52  0E00               	movlw	0
  6222  000F54  6E05               	movwf	i2___lwdiv@quotient,c
  6223  000F56  5003               	movf	i2___lwdiv@divisor,w,c
  6224  000F58  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  6225  000F5A  B4D8               	btfsc	status,2,c
  6226  000F5C  D01C               	goto	i2l727
  6227  000F5E  0E01               	movlw	1
  6228  000F60  6E07               	movwf	i2___lwdiv@counter,c
  6229  000F62  D004               	goto	i2l722
  6230  000F64  90D8               	bcf	status,0,c
  6231  000F66  3603               	rlcf	i2___lwdiv@divisor,f,c
  6232  000F68  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6233  000F6A  2A07               	incf	i2___lwdiv@counter,f,c
  6234  000F6C                     i2l722:
  6235  000F6C  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6236  000F6E  D7FA               	goto	i2l723
  6237  000F70                     i2u105_40:
  6238  000F70  90D8               	bcf	status,0,c
  6239  000F72  3605               	rlcf	i2___lwdiv@quotient,f,c
  6240  000F74  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6241  000F76  5003               	movf	i2___lwdiv@divisor,w,c
  6242  000F78  5C01               	subwf	i2___lwdiv@dividend,w,c
  6243  000F7A  5004               	movf	i2___lwdiv@divisor+1,w,c
  6244  000F7C  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6245  000F7E  A0D8               	btfss	status,0,c
  6246  000F80  D005               	goto	i2l726
  6247  000F82  5003               	movf	i2___lwdiv@divisor,w,c
  6248  000F84  5E01               	subwf	i2___lwdiv@dividend,f,c
  6249  000F86  5004               	movf	i2___lwdiv@divisor+1,w,c
  6250  000F88  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6251  000F8A  8005               	bsf	i2___lwdiv@quotient,0,c
  6252  000F8C                     i2l726:
  6253  000F8C  90D8               	bcf	status,0,c
  6254  000F8E  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6255  000F90  3203               	rrcf	i2___lwdiv@divisor,f,c
  6256  000F92  2E07               	decfsz	i2___lwdiv@counter,f,c
  6257  000F94  D7ED               	goto	i2u105_40
  6258  000F96                     i2l727:
  6259  000F96  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6260  000F9A  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6261  000F9E  0012               	return		;funcret
  6262  000FA0                     __end_ofi2___lwdiv:
  6263                           	opt stack 0
  6264                           pclatu	equ	0xFFB
  6265                           pclath	equ	0xFFA
  6266                           tblptru	equ	0xFF8
  6267                           tblptrh	equ	0xFF7
  6268                           tblptrl	equ	0xFF6
  6269                           tablat	equ	0xFF5
  6270                           prodh	equ	0xFF4
  6271                           prodl	equ	0xFF3
  6272                           intcon	equ	0xFF2
  6273                           intcon2	equ	0xFF1
  6274                           intcon3	equ	0xFF0
  6275                           postinc0	equ	0xFEE
  6276                           fsr0h	equ	0xFEA
  6277                           fsr0l	equ	0xFE9
  6278                           wreg	equ	0xFE8
  6279                           postinc1	equ	0xFE6
  6280                           postdec1	equ	0xFE5
  6281                           fsr1h	equ	0xFE2
  6282                           fsr1l	equ	0xFE1
  6283                           bsr	equ	0xFE0
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           pclatu	equ	0xFFB
  6291                           pclath	equ	0xFFA
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           intcon2	equ	0xFF1
  6300                           intcon3	equ	0xFF0
  6301                           postinc0	equ	0xFEE
  6302                           fsr0h	equ	0xFEA
  6303                           fsr0l	equ	0xFE9
  6304                           wreg	equ	0xFE8
  6305                           postinc1	equ	0xFE6
  6306                           postdec1	equ	0xFE5
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           bsr	equ	0xFE0
  6310                           indf2	equ	0xFDF
  6311                           postinc2	equ	0xFDE
  6312                           postdec2	equ	0xFDD
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317                           	psect	rparam
  6318  0000                     pclatu	equ	0xFFB
  6319                           pclath	equ	0xFFA
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           intcon2	equ	0xFF1
  6328                           intcon3	equ	0xFF0
  6329                           postinc0	equ	0xFEE
  6330                           fsr0h	equ	0xFEA
  6331                           fsr0l	equ	0xFE9
  6332                           wreg	equ	0xFE8
  6333                           postinc1	equ	0xFE6
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           bsr	equ	0xFE0
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345                           	psect	temp
  6346  000046                     btemp:
  6347                           	opt stack 0
  6348  000046                     	ds	1
  6349  0000                     int$flags	set	btemp
  6350  0000                     wtemp6	set	btemp+1
  6351                           pclatu	equ	0xFFB
  6352                           pclath	equ	0xFFA
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           intcon2	equ	0xFF1
  6361                           intcon3	equ	0xFF0
  6362                           postinc0	equ	0xFEE
  6363                           fsr0h	equ	0xFEA
  6364                           fsr0l	equ	0xFE9
  6365                           wreg	equ	0xFE8
  6366                           postinc1	equ	0xFE6
  6367                           postdec1	equ	0xFE5
  6368                           fsr1h	equ	0xFE2
  6369                           fsr1l	equ	0xFE1
  6370                           bsr	equ	0xFE0
  6371                           indf2	equ	0xFDF
  6372                           postinc2	equ	0xFDE
  6373                           postdec2	equ	0xFDD
  6374                           fsr2h	equ	0xFDA
  6375                           fsr2l	equ	0xFD9
  6376                           status	equ	0xFD8


Data Sizes:
    Strings     1083
    Constant    10
    Data        4
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     61      69
    BANK0           128     53      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> saved_pass(BANK0[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> pass(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 133
		 -> STR_63(CODE[23]), STR_62(CODE[9]), STR_61(CODE[28]), STR_60(CODE[26]), 
		 -> STR_59(CODE[25]), STR_58(CODE[85]), STR_57(CODE[20]), STR_56(CODE[21]), 
		 -> STR_55(CODE[14]), STR_54(CODE[15]), STR_53(CODE[23]), STR_52(CODE[3]), 
		 -> STR_51(CODE[27]), STR_50(CODE[26]), STR_49(CODE[25]), STR_48(CODE[25]), 
		 -> STR_47(CODE[101]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[14]), 
		 -> STR_43(CODE[15]), STR_42(CODE[23]), STR_41(CODE[19]), STR_40(CODE[18]), 
		 -> STR_39(CODE[25]), STR_38(CODE[67]), STR_37(CODE[20]), STR_36(CODE[21]), 
		 -> STR_35(CODE[14]), STR_34(CODE[15]), STR_33(CODE[23]), STR_32(CODE[21]), 
		 -> STR_31(CODE[25]), STR_30(CODE[59]), STR_29(CODE[20]), STR_28(CODE[21]), 
		 -> STR_27(CODE[14]), STR_26(CODE[15]), STR_25(CODE[28]), STR_24(CODE[21]), 
		 -> STR_23(CODE[2]), STR_22(CODE[11]), STR_21(CODE[54]), STR_20(CODE[25]), 
		 -> STR_19(CODE[2]), STR_18(CODE[21]), STR_17(CODE[2]), STR_16(CODE[25]), 
		 -> STR_15(CODE[23]), STR_14(CODE[25]), STR_13(CODE[133]), STR_12(CODE[20]), 
		 -> STR_11(CODE[21]), STR_10(CODE[14]), STR_9(CODE[15]), STR_8(CODE[17]), 
		 -> STR_7(CODE[2]), STR_6(CODE[15]), STR_5(CODE[39]), STR_4(CODE[31]), 
		 -> STR_3(CODE[28]), STR_2(CODE[7]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _temp_options->_printf
    _password_options->_printf
    _password_change->_printf
    _input_options->_printf
    _alarm_options->_printf
    _Clear->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _temp_sensor in COMRAM

    _temp_sensor->___wmul
    ___wmul->___awdiv

Critical Paths under _alarm in COMRAM

    _alarm->_password
    i2_Clear->i2_printf
    _password->i2_printf
    i2_printf->i2___lwmod
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_password_options
    _temp_options->_printf
    _password_options->_password_change
    _password_change->_printf
    _input_options->_printf
    _alarm_options->_printf
    _Clear->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _temp_sensor in BANK0

    None.

Critical Paths under _alarm in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _temp_sensor in BANK1

    None.

Critical Paths under _alarm in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _temp_sensor in BANK2

    None.

Critical Paths under _alarm in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _temp_sensor in BANK3

    None.

Critical Paths under _alarm in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _temp_sensor in BANK4

    None.

Critical Paths under _alarm in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _temp_sensor in BANK5

    None.

Critical Paths under _alarm in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   83216
                                             49 BANK0      4     4      0
                              _Clear
                      _alarm_options
                      _input_options
                   _password_options
                             _printf
                       _temp_options
 ---------------------------------------------------------------------------------
 (1) _temp_options                                         4     4      0   13772
                                             41 BANK0      4     4      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (1) _password_options                                     2     2      0   28233
                                             47 BANK0      2     2      0
                              _Clear
                    _password_change
                             _printf
 ---------------------------------------------------------------------------------
 (2) _password_change                                      6     6      0   14529
                                             41 BANK0      6     6      0
                              _Clear
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     627
                                             56 COMRAM     3     3      0
                                             22 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _input_options                                        2     2      0   13704
                                             41 BANK0      2     2      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (1) _alarm_options                                        2     2      0   13704
                                             41 BANK0      2     2      0
                              _Clear
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Clear                                                0     0      0    6852
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              21    17      4    6852
                                             60 COMRAM     1     1      0
                                             30 BANK0     11     7      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                             56 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             59 COMRAM     1     1      0
                                             26 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             56 COMRAM     3     3      0
                                             22 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _temp_sensor                                         22    22      0     763
                                              0 BANK0     22    22      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                             50 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                             42 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _alarm                                               18    18      0    3481
                                             24 COMRAM    18    18      0
                           _password
                            i2_Clear
                           i2_printf
 ---------------------------------------------------------------------------------
 (9) i2_Clear                                              0     0      0    1067
                           i2_printf
 ---------------------------------------------------------------------------------
 (9) _password                                             2     2      0    1347
                                             22 COMRAM     2     2      0
                           i2_printf
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (10) i2_strncmp                                           9     3      6     212
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (9) i2_printf                                            19    17      2    1067
                                             12 COMRAM    10     8      2
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _alarm_options
     _Clear
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _input_options
     _Clear
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _password_options
     _Clear
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _password_change
       _Clear
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
       _strncmp
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _temp_options
     _Clear
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch

 _temp_sensor (ROOT)
   ___awdiv
   ___wmul
     ___awdiv (ARG)

 _alarm (ROOT)
   _password
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2_putch
     i2_strncmp
   i2_Clear
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2_putch
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     35      4B       5       58.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3D      45       1       54.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      15        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 06 22:19:39 2018

             ___awdiv@sign 0030                         bsr 000FE0        ___wmul@multiplicand 0035  
       i2___lwdiv@dividend 0001                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000           password_change@i 00AB                        l200 0678  
                      l120 01F6                        l201 0686                        l210 06EA  
                      l202 069E                        l130 028A                        l211 0706  
                      l203 06AC                        l300 08D2                        l220 0348  
                      l140 02DC                        l132 02A0                        l301 08E2  
                      l205 06BA                        l221 0360                        l141 02E2  
                      l125 023A                        l214 073E                        l150 07C0  
                      l230 04B8                        l222 036E                        l142 02E8  
                      l126 023E                        l231 03D2                        l223 0386  
                      l127 0256                        l216 0744                        l232 03F2  
                      l224 0394                        l136 0316                        l128 0264  
                      l313 0978                        l209 0772                        l241 0484  
                      l233 0408                        l137 02D0                        l129 027C  
                      l314 09CC                        l250 0526                        l226 03A2  
                      l315 097E                        l307 090E                        l251 0534  
                      l155 0898                        l243 048A                        l235 0428  
                      l139 02D6                        l260 05A0                        l156 0852  
                      l180 0B14                        l236 044A                        l309 0936  
                      l261 05CC                        l253 0542                        l181 0B2C  
                      l262 05FA                        l190 0BE6                        l182 0B3A  
                      l247 04E4                        l191 0B9E                        l183 0B52  
                      l264 0600                        l248 0500                        l184 0B60  
                      l257 062E                        l249 050E                        l193 0BB2  
                      l258 0572                        l186 0B6E                        l195 0BB8  
                      l199 0660                        l722 0F1A                        l723 0F12  
                      l732 0FFE                        l733 0FF6                        l726 0F3A  
                      l727 0F44                        l736 1016                        l737 1020  
                      l866 0E64                        l867 0E02                        l868 0E5A  
             __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000                        wreg 000FE8  
             __CFG_LVP$OFF 000000      __end_of_input_options 065C               __CFG_WDT$OFF 000000  
                     l3209 022E                       l2805 07F8                       l2743 093A  
                     l2825 088A                       l2677 10CC                       l2773 0E02  
                     STR_1 7FF4                       STR_2 7FED                       STR_3 7DFC  
                     STR_4 7DDD                       STR_5 7DB6                       STR_6 7FB8  
                     STR_7 7FFC                       STR_8 7FA7                       STR_9 7FC7  
                     u2090 0482                       u2307 05EA                       u1700 0F1E  
                     u2180 022E                       u2317 061A                       u2237 0302  
                     u2327 072A                       u2247 0414                       u2337 075E  
                     u2257 04A4                       u1730 1002                       u1810 09D6  
                     u2267 0BD2                       u2277 08B2                       u2287 0592  
                     u1840 0E28                       u1920 088A                       u2297 05BE  
                     u1790 0966                       u1880 07F8            __end_ofi2_Clear 10CA  
                     _main 014C                       _pass 00C3                       _test 0044  
                     fsr0h 000FEA                       fsr1h 000FE2         i2___lwdiv@quotient 0005  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0046  
                     prodh 000FF4                       prodl 000FF3                       start 0148  
            __CFG_IESO$OFF 000000            __end_ofi2_putch 10E2              __CFG_MCLRE$ON 000000  
             ___param_bank 000000   __size_of_password_change 0132                      ?_main 0001  
          __end_of___awdiv 0E00                      STR_10 7FD6                      STR_11 7F44  
                    STR_12 7F6E                      STR_20 7E9F                      STR_21 7D80  
                    STR_13 7BC3                      STR_22 7FBC                      STR_14 7EB8  
                    STR_30 7D45                      STR_31 7EB8                      STR_23 7FFC  
                    STR_15 7F03                      STR_40 7F95                      STR_32 7F2F  
                    STR_24 7F1A                      STR_16 7EEA                      STR_33 7F03  
                    STR_17 7FFC                      STR_41 7F82                      STR_25 7E18  
                    STR_34 7FC7                      STR_26 7FC7                      STR_42 7F03  
                    STR_18 7F59                      STR_50 7E6B                      STR_43 7FC7  
                    STR_35 7FD6                      STR_27 7FD6                      STR_19 7FFC  
                    STR_51 7E50                      STR_36 7F44                      STR_28 7F44  
                    STR_44 7FD6                      STR_52 7FF9                      STR_60 7E85  
                    STR_45 7F44                      STR_37 7F6E                      STR_29 7F6E  
                    STR_53 7F03                      STR_61 7E34                      STR_54 7FC7  
                    STR_46 7F6E                      STR_62 7FE4                      STR_38 7D02  
                    STR_39 7EB8                      STR_55 7FD6                      STR_63 7F03  
                    STR_47 7C48                      STR_48 7EB8                      STR_56 7F44  
                    STR_57 7F6E                      STR_49 7ED1                      STR_58 7CAD  
                    STR_59 7EB8            ___awdiv@divisor 002D            __end_of___lwdiv 0F4E  
                    i1l111 00EA                      i1l113 009A            __end_of___lwmod 102A  
                    i2l300 09FC                      i2l301 0A0C                      i2l313 0AA0  
                    i2l314 0AEE                      i1l490 0DB6                      i2l315 0AA6  
                    i2l307 0A36                      i2l309 0A5E                      i2l173 0D6E  
                    i1l493 0DDE                      i1l494 0DE8                      i1l486 0D90  
                    i1l495 0DF6                      i1l487 0DA0                      i2l168 0CFE  
                    i1l489 0DBE                      i2l722 0F6C                      i2l723 0F64  
                    i2l732 1040                      i2l733 1038                      i2l726 0F8C  
                    i2l727 0F96                      i2l736 1058                      i2l737 1062  
                    i2l866 0EE0                      i2l867 0E82                      i2l868 0ED8  
          ___awdiv@counter 002F                      _RCREG 000FAE                      _TMR0H 000FD7  
                    _TMR0L 000FD6                      _SPBRG 000FAF                      _TRISB 000F93  
                    _TRISD 000F95                      _TXREG 000FAD              __CFG_PWRT$OFF 000000  
                    _Clear 1092              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000                      _adLow 0042              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000                      _check 00BF  
           __CFG_EBTRB$OFF 000000                      _alarm 0008            __end_of_dpowers 7BC3  
                    _putch 10CA                      main@i 00B3             __CFG_BOREN$OFF 000000  
                    pclath 000FFA                      tablat 000FF5                      status 000FD8  
                    wtemp6 0047            __end_of_strncmp 0E80      __end_of_alarm_options 0794  
         __end_ofi2_printf 0B10         __size_ofi2___lwdiv 0052         __size_ofi2___lwmod 0042  
          __initialization 0FA0               __end_of_main 0344                 i2printf@ap 0010  
                   ??_main 00B1              __activetblptr 000002         __size_ofi2_strncmp 007A  
                   ?_Clear 0001                     ?_alarm 0001                  ??i2_Clear 0017  
                   _ADRESH 000FC4                     _ADRESL 000FC3           ___awdiv@dividend 002B  
                   ?_putch 0001                     i2l2007 0A62                     i2l2035 0E82  
                   i2l2067 0D32                     i2l1895 10D8                  ??i2_putch 0001  
 __end_of_password_options 0C08             __CFG_XINST$OFF 000000                     _adHigh 0040  
                   ___wmul 106C                  ??___awdiv 002F             __CFG_STVREN$ON 000000  
                   _choice 00C1                  ??___lwdiv 0039                  ??___lwmod 003C  
                   clear_0 0FC6                     clear_1 0FD2           ___awdiv@quotient 0031  
             ?_temp_sensor 0001                     _printf 08C6          ??_password_change 00A9  
         __end_of_password 0D7C          __end_ofi2___lwdiv 0FA0               __mediumconst 7BB8  
        __end_ofi2___lwmod 106C                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_strncmp 0039                 __accesstop 0080  
  __end_of__initialization 0FD8            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
        __end_ofi2_strncmp 0EFA              __end_of_Clear 10B0         i2___lwmod@dividend 0008  
           __pcstackCOMRAM 0001               __pidataBANK0 10E2              __end_of_alarm 0CDA  
            __end_of_putch 10D6                i2printf@val 0014                i2putch@data 0001  
                  ??_Clear 003E                  ?i2_printf 000D                    ??_alarm 0019  
     password_change@i_977 00AD                    ??_putch 0039                 __pbssBANK0 00B5  
              i2strncmp@s1 0001                i2strncmp@s2 0003                    ?___wmul 0033  
                  ?_printf 009E                 ??i2_printf 000F                    i2_Clear 10B0  
                  i2_putch 10D6                    __Hparam 0000                  ?_password 0001  
                  __Lparam 0000                    ___awdiv 0D7C            __size_of___wmul 0026  
                  ___lwdiv 0EFA                    ___lwmod 0FE6     __size_of_input_options 017C  
                  _decimal 003E                    __pcinit 0FA0                    __ramtop 0600  
                  __ptext0 014C                    __ptext1 0344                    __ptext2 0B10  
                  __ptext3 0794                    __ptext4 0E00                    __ptext5 04E0  
                  __ptext6 065C                    __ptext7 1092                    __ptext8 08C6  
                  __ptext9 10CA            __size_of_printf 012C                  _T0CONbits 000FD5  
                  _dpowers 7BB9       __size_of_temp_sensor 0130              ?_temp_options 0001  
                  _voltage 00BD                    _strncmp 0E00             __pintcode_body 0C08  
     end_of_initialization 0FD8              __Lmediumconst 7BB8                    int_func 0C08  
               _saved_pass 00C7          ?_password_options 0001                 ??_password 0017  
       ??_password_options 00AF            _password_change 0794                  _RCSTAbits 000FAB  
                  printf@c 00A8                    printf@f 009E                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                  _PORTBbits 000F81                  _PORTDbits 000F83  
   __size_of_alarm_options 0138             ??_temp_options 00A9                  _TRISCbits 000F94  
        i2___lwdiv@divisor 0003                  i2___lwdiv 0F4E                  i2___lwmod 102A  
        i2___lwdiv@counter 0007              _input_options 04E0                  _TXSTAbits 000FAC  
                i2_strncmp 0E80             __end_of___wmul 1092             __end_of_printf 09F2  
             i2printf@flag 0012               i2printf@prec 0013        start_initialization 0FA0  
                i2printf@c 0016                  i2printf@f 000D             ?_input_options 0001  
               ?i2___lwdiv 0001                 ?i2___lwmod 0008          __size_ofi2_printf 011E  
  __end_of_password_change 08C6              _alarm_options 065C                   ??___wmul 0037  
               ?i2_strncmp 0001                __pdataBANK0 00C7             _temp_threshold 00B5  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 003D                __pbssCOMRAM 003E  
            __pcstackBANK0 0080          i2___lwmod@divisor 000A                   ?i2_Clear 0001  
        i2___lwmod@counter 000C                   ?i2_putch 0001             ?_alarm_options 0001  
             i2strncmp@len 0005                  _alarm_set 00B9           ___lwdiv@dividend 0096  
        __CFG_CCP2MX$PORTC 000000       __end_of_temp_options 04E0                  __pintcode 0008  
            __pmediumconst 7BB8          __size_of_password 00A2                   ?___awdiv 002B  
                 ?___lwdiv 0096                   ?___lwmod 009A                __pintcodelo 0018  
           __size_of_Clear 001E            ??_input_options 00A9           ___lwdiv@quotient 003A  
           __size_of_alarm 0CD2                   ?_strncmp 0096                ??i2___lwdiv 0005  
              ??i2___lwmod 000C             __size_of_putch 000C           ?_password_change 0001  
           ___wmul@product 0037                   _IPR1bits 000F9F                   _PIE1bits 000F9D  
                 i1u234_27 007C                   i1u235_27 0090                   i1u156_20 0DC2  
                 i2u105_40 0F70                   i2u121_40 0A8E                   i2u130_40 0D32  
                 i2u123_40 0AF6                   i2u108_40 1044                   i2u126_40 0EA8  
                 _PIR1bits 000F9E                   _RCONbits 000FD0           __CFG_WDTPS$32768 000000  
              ??i2_strncmp 0007              ??_temp_sensor 0080                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1  __size_of_password_options 00F8                 _ADCON2bits 000FC0  
        ___wmul@multiplier 0033                  _triggered 00BB                 printf@flag 00A4  
               printf@prec 00A5                   i2_printf 09F2                _INTCON2bits 000FF1  
              _INTCON3bits 000FF0           __size_ofi2_Clear 001A                  copy_data0 0FB4  
          ??_alarm_options 00A9           __size_ofi2_putch 000C                   __Hrparam 0000  
                 __Lrparam 0000           __size_of___awdiv 0084           __size_of___lwdiv 0054  
         __size_of___lwmod 0044        __end_of_temp_sensor 0148            ___lwdiv@divisor 0098  
          ___lwdiv@counter 0039                   __ptext10 0FE6                   __ptext11 0EFA  
                 __ptext20 10D6                   __ptext21 102A                   __ptext13 106C  
                 __ptext22 0F4E                   __ptext14 0D7C                   __ptext16 10B0  
                 __ptext17 0CDA                   __ptext18 0E80                   __ptext19 09F2  
                password@i 0017           __size_of_strncmp 0080      __size_of_temp_options 019C  
            __size_of_main 01F8                 strncmp@len 009A                   _password 0CDA  
                 _temp_set 00B7                   int$flags 0046              temp_options@i 00AB  
                printf@val 00A6                  putch@data 0039                 _INTCONbits 000FF2  
             _temp_options 0344                   intlevel1 0000                   intlevel2 0000  
         ___lwmod@dividend 009A                  strncmp@s1 0096                  strncmp@s2 0098  
                 printf@ap 00A2                _temp_sensor 0018           _password_options 0B10  
          ___lwmod@divisor 009C            ___lwmod@counter 003C  
