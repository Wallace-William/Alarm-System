

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Feb 13 16:09:58 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.44
    19                           ; Generated 14/09/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F452 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  0007C6                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for Part4@F2512
    58  0007C6  58                 	db	88
    59  0007C7  81                 	db	129
    60  0007C8  81                 	db	129
    61  0007C9  9F                 	db	159
    62  0007CA  90                 	db	144
    63  0007CB  9F                 	db	159
    64  0007CC  81                 	db	129
    65  0007CD  9F                 	db	159
    66  0007CE  90                 	db	144
    67  0007CF  00                 	db	0
    68                           
    69                           ;initializer for Part3@F2509
    70  0007D0  58                 	db	88
    71  0007D1  80                 	db	128
    72  0007D2  80                 	db	128
    73  0007D3  80                 	db	128
    74  0007D4  8D                 	db	141
    75  0007D5  96                 	db	150
    76  0007D6  80                 	db	128
    77  0007D7  80                 	db	128
    78  0007D8  80                 	db	128
    79  0007D9  00                 	db	0
    80                           
    81                           ;initializer for _Str_Test
    82  0007DA  80                 	db	128
    83  0007DB  49                 	db	73
    84  0007DC  74                 	db	116
    85  0007DD  20                 	db	32
    86  0007DE  57                 	db	87
    87  0007DF  6F                 	db	111
    88  0007E0  72                 	db	114
    89  0007E1  6B                 	db	107
    90  0007E2  73                 	db	115
    91  0007E3  00                 	db	0
    92                           
    93                           ;initializer for Part2@F2504
    94  0007E4  C0                 	db	192
    95  0007E5  73                 	db	115
    96  0007E6  69                 	db	105
    97  0007E7  6E                 	db	110
    98  0007E8  28                 	db	40
    99  0007E9  F4                 	db	244
   100  0007EA  2A                 	db	42
   101  0007EB  74                 	db	116
   102  0007EC  29                 	db	41
   103                           
   104                           ;initializer for Part2@F2502
   105  0007ED  C0                 	db	192
   106  0007EE  E0                 	db	224
   107  0007EF  2A                 	db	42
   108  0007F0  F6                 	db	246
   109  0007F1  E2                 	db	226
   110  0007F2  2A                 	db	42
   111  0007F3  59                 	db	89
   112                           
   113                           ;initializer for _Str_2
   114  0007F4  C0                 	db	192
   115  0007F5  20                 	db	32
   116  0007F6  20                 	db	32
   117  0007F7  20                 	db	32
   118  0007F8  20                 	db	32
   119  0007F9  20                 	db	32
   120  0007FA  20                 	db	32
   121  0007FB  20                 	db	32
   122  0007FC  20                 	db	32
   123  0007FD  00                 	db	0
   124                           
   125                           ;initializer for _Str_1
   126  0007FE  80                 	db	128
   127  0007FF  20                 	db	32
   128  000800  20                 	db	32
   129  000801  20                 	db	32
   130  000802  20                 	db	32
   131  000803  20                 	db	32
   132  000804  20                 	db	32
   133  000805  20                 	db	32
   134  000806  20                 	db	32
   135  000807  00                 	db	0
   136                           
   137                           	psect	smallconst
   138  000600                     __psmallconst:
   139                           	opt stack 0
   140  000600  00                 	db	0
   141  000601                     _Clear2:
   142                           	opt stack 0
   143  000601  C0                 	db	192
   144  000602  20                 	db	32
   145  000603  20                 	db	32
   146  000604  20                 	db	32
   147  000605  20                 	db	32
   148  000606  20                 	db	32
   149  000607  20                 	db	32
   150  000608  20                 	db	32
   151  000609  20                 	db	32
   152  00060A  00                 	db	0
   153  00060B                     __end_of_Clear2:
   154                           	opt stack 0
   155  00060B                     _Clear1:
   156                           	opt stack 0
   157  00060B  80                 	db	128
   158  00060C  20                 	db	32
   159  00060D  20                 	db	32
   160  00060E  20                 	db	32
   161  00060F  20                 	db	32
   162  000610  20                 	db	32
   163  000611  20                 	db	32
   164  000612  20                 	db	32
   165  000613  20                 	db	32
   166  000614  00                 	db	0
   167  000615                     __end_of_Clear1:
   168                           	opt stack 0
   169  000615                     _LCDstr:
   170                           	opt stack 0
   171  000615  33                 	db	51
   172  000616  32                 	db	50
   173  000617  28                 	db	40
   174  000618  01                 	db	1
   175  000619  0C                 	db	12
   176  00061A  06                 	db	6
   177  00061B  00                 	db	0
   178  00061C  00                 	db	0
   179  00061D                     __end_of_LCDstr:
   180                           	opt stack 0
   181  0000                     _PORTD	set	3971
   182  0000                     _PORTEbits	set	3972
   183  0000                     _PORTAbits	set	3968
   184  0000                     _PORTA	set	3968
   185  0000                     _TRISE	set	3990
   186  0000                     _TRISD	set	3989
   187  0000                     _TRISC	set	3988
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _ADCON1	set	4033
   191                           
   192                           ; #config settings
   193  00061D  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           	psect	cinit
   196  000834                     __pcinit:
   197                           	opt stack 0
   198  000834                     start_initialization:
   199                           	opt stack 0
   200  000834                     __initialization:
   201                           	opt stack 0
   202                           
   203                           ; Initialize objects allocated to COMRAM (66 bytes)
   204                           ; load TBLPTR registers with __pidataCOMRAM
   205  000834  0EC6               	movlw	low __pidataCOMRAM
   206  000836  6EF6               	movwf	tblptrl,c
   207  000838  0E07               	movlw	high __pidataCOMRAM
   208  00083A  6EF7               	movwf	tblptrh,c
   209  00083C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   210  00083E  6EF8               	movwf	tblptru,c
   211  000840  EE00  F001         	lfsr	0,__pdataCOMRAM
   212  000844  EE10 F042          	lfsr	1,66
   213  000848                     copy_data0:
   214  000848  0009               	tblrd		*+
   215  00084A  CFF5 FFEE          	movff	tablat,postinc0
   216  00084E  50E5               	movf	postdec1,w,c
   217  000850  50E1               	movf	fsr1l,w,c
   218  000852  E1FA               	bnz	copy_data0
   219  000854                     end_of_initialization:
   220                           	opt stack 0
   221  000854                     __end_of__initialization:
   222                           	opt stack 0
   223  000854  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224  000856  6EF8               	movwf	tblptru,c
   225  000858  0100               	movlb	0
   226  00085A  EF2F  F004         	goto	_main	;jump to C main() function
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	dataCOMRAM
   236  000001                     __pdataCOMRAM:
   237                           	opt stack 0
   238  000001                     Part4@F2512:
   239                           	opt stack 0
   240  000001                     	ds	10
   241  00000B                     Part3@F2509:
   242                           	opt stack 0
   243  00000B                     	ds	10
   244  000015                     _Str_Test:
   245                           	opt stack 0
   246  000015                     	ds	10
   247  00001F                     Part2@F2504:
   248                           	opt stack 0
   249  00001F                     	ds	9
   250  000028                     Part2@F2502:
   251                           	opt stack 0
   252  000028                     	ds	7
   253  00002F                     _Str_2:
   254                           	opt stack 0
   255  00002F                     	ds	10
   256  000039                     _Str_1:
   257                           	opt stack 0
   258  000039                     	ds	10
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	cstackCOMRAM
   268  000043                     __pcstackCOMRAM:
   269                           	opt stack 0
   270  000043                     ??_Initialize_LCD:
   271  000043                     Print_To_LCD@tempPtr:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275  000043                     	ds	2
   276  000045                     ??_Print_To_LCD:
   277  000045                     Initialize_LCD@tempPtr:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x2
   281  000045                     	ds	1
   282  000046                     Print_To_LCD@currentChar:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000046                     	ds	1
   287  000047                     ??_Part4:
   288  000047                     Initialize_LCD@currentChar:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x4
   292  000047                     	ds	1
   293  000048                     
   294                           ; 1 bytes @ 0x5
   295  000048                     	ds	1
   296  000049                     Part4@var:
   297                           	opt stack 0
   298                           
   299                           ; 10 bytes @ 0x6
   300  000049                     	ds	10
   301  000053                     tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           ; 1 bytes @ 0x10
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 57 in file "Lab2_StarterCode.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   329 ;;      Params:         0       0       0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0
   332 ;;      Totals:         0       0       0       0       0       0       0
   333 ;;Total ram usage:        0 bytes
   334 ;; Hardware stack levels required when called:    2
   335 ;; This function calls:
   336 ;;		_Initialize_PIC
   337 ;;		_Part4
   338 ;;		_Print_To_LCD
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text0
   345  00085E                     __ptext0:
   346                           	opt stack 0
   347  00085E                     _main:
   348                           	opt stack 0
   349  00085E  FFFF               	dw	65535	; assembler added errata NOP
   350                           
   351                           ;Lab2_StarterCode.c: 59: Initialize_PIC();
   352                           
   353                           ;incstack = 0
   354  000860  EC04  F004         	call	_Initialize_PIC	;wreg free
   355                           
   356                           ;Lab2_StarterCode.c: 60: Print_To_LCD(Clear1);
   357  000864  0E0B               	movlw	low _Clear1
   358  000866  6E43               	movwf	Print_To_LCD@tempPtr,c
   359  000868  0E06               	movlw	high _Clear1
   360  00086A  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   361  00086C  EC9F  F003         	call	_Print_To_LCD	;wreg free
   362                           
   363                           ;Lab2_StarterCode.c: 61: Print_To_LCD(Clear2);
   364  000870  0E01               	movlw	low _Clear2
   365  000872  6E43               	movwf	Print_To_LCD@tempPtr,c
   366  000874  0E06               	movlw	high _Clear2
   367  000876  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   368  000878  EC9F  F003         	call	_Print_To_LCD	;wreg free
   369  00087C  FFFF               	dw	65535	; assembler added errata NOP
   370                           
   371                           ;Lab2_StarterCode.c: 75: {
   372                           ;Lab2_StarterCode.c: 79: Part4();
   373  00087E  EC0F  F003         	call	_Part4	;wreg free
   374  000882  D7FC               	goto	l47
   375  000884                     __end_of_main:
   376                           	opt stack 0
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385 ;; *************** function _Part4 *****************
   386 ;; Defined at:
   387 ;;		line 160 in file "Lab2_StarterCode.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  var            10    6[COMRAM] unsigned char [10]
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   401 ;;      Params:         0       0       0       0       0       0       0
   402 ;;      Locals:        10       0       0       0       0       0       0
   403 ;;      Temps:          2       0       0       0       0       0       0
   404 ;;      Totals:        12       0       0       0       0       0       0
   405 ;;Total ram usage:       12 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		_Print_To_LCD
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  00061E                     __ptext1:
   417                           	opt stack 0
   418  00061E                     _Part4:
   419                           	opt stack 0
   420  00061E  FFFF               	dw	65535	; assembler added errata NOP
   421                           
   422                           ;Lab2_StarterCode.c: 162: char var[] = {0x58,0x81,0x81,0x9F,0x90,0x9F,0x81,0x9F,0x90,0};
   423                           
   424                           ;incstack = 0
   425  000620  EE20  F001         	lfsr	2,Part4@F2512
   426  000624  EE10  F049         	lfsr	1,Part4@var
   427  000628  0E09               	movlw	9
   428  00062A                     u181:
   429  00062A  CFDB FFE3          	movff	plusw2,plusw1
   430  00062E  06E8               	decf	wreg,f,c
   431  000630  E2FC               	bc	u181
   432                           
   433                           ;Lab2_StarterCode.c: 163: Print_To_LCD(var);
   434  000632  0E49               	movlw	low Part4@var
   435  000634  6E43               	movwf	Print_To_LCD@tempPtr,c
   436  000636  0E00               	movlw	high Part4@var
   437  000638  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   438  00063A  EC9F  F003         	call	_Print_To_LCD	;wreg free
   439                           
   440                           ;Lab2_StarterCode.c: 164: Str_1[5] = 0x03;
   441  00063E  0E03               	movlw	3
   442  000640  6E3E               	movwf	_Str_1+5,c
   443                           
   444                           ;Lab2_StarterCode.c: 165: Print_To_LCD(Str_1);
   445  000642  0E39               	movlw	low _Str_1
   446  000644  6E43               	movwf	Print_To_LCD@tempPtr,c
   447  000646  0E00               	movlw	high _Str_1
   448  000648  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   449  00064A  EC9F  F003         	call	_Print_To_LCD	;wreg free
   450                           
   451                           ;Lab2_StarterCode.c: 166: _delay((unsigned long)((1000)*(10000000/4000.0)));
   452  00064E  0E0A               	movlw	10
   453  000650  6E48               	movwf	(??_Part4+1)& (0+255),c
   454  000652  0E85               	movlw	133
   455  000654  6E47               	movwf	??_Part4& (0+255),c
   456  000656  0E9F               	movlw	159
   457  000658                     u287:
   458  000658  FFFF               	dw	65535	; errata NOP
   459  00065A  2EE8               	decfsz	wreg,f,c
   460  00065C  D7FD               	bra	u287
   461  00065E  2E47               	decfsz	??_Part4& (0+255),f,c
   462  000660  D7FB               	bra	u287
   463  000662  2E48               	decfsz	(??_Part4+1)& (0+255),f,c
   464  000664  D7F9               	bra	u287
   465  000666  D000               	nop2	
   466                           
   467                           ;Lab2_StarterCode.c: 167: Print_To_LCD(Clear1);
   468  000668  0E0B               	movlw	low _Clear1
   469  00066A  6E43               	movwf	Print_To_LCD@tempPtr,c
   470  00066C  0E06               	movlw	high _Clear1
   471  00066E  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   472  000670  EC9F  F003         	call	_Print_To_LCD	;wreg free
   473                           
   474                           ;Lab2_StarterCode.c: 168: Str_2[5] = 0x03;
   475  000674  0E03               	movlw	3
   476  000676  6E34               	movwf	_Str_2+5,c
   477                           
   478                           ;Lab2_StarterCode.c: 169: Print_To_LCD(Str_2);
   479  000678  0E2F               	movlw	low _Str_2
   480  00067A  6E43               	movwf	Print_To_LCD@tempPtr,c
   481  00067C  0E00               	movlw	high _Str_2
   482  00067E  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   483  000680  EC9F  F003         	call	_Print_To_LCD	;wreg free
   484                           
   485                           ;Lab2_StarterCode.c: 170: _delay((unsigned long)((1000)*(10000000/4000.0)));
   486  000684  0E0A               	movlw	10
   487  000686  6E48               	movwf	(??_Part4+1)& (0+255),c
   488  000688  0E85               	movlw	133
   489  00068A  6E47               	movwf	??_Part4& (0+255),c
   490  00068C  0E9F               	movlw	159
   491  00068E                     u297:
   492  00068E  FFFF               	dw	65535	; errata NOP
   493  000690  2EE8               	decfsz	wreg,f,c
   494  000692  D7FD               	bra	u297
   495  000694  2E47               	decfsz	??_Part4& (0+255),f,c
   496  000696  D7FB               	bra	u297
   497  000698  2E48               	decfsz	(??_Part4+1)& (0+255),f,c
   498  00069A  D7F9               	bra	u297
   499  00069C  D000               	nop2	
   500                           
   501                           ;Lab2_StarterCode.c: 171: Print_To_LCD(Clear2);
   502  00069E  0E01               	movlw	low _Clear2
   503  0006A0  6E43               	movwf	Print_To_LCD@tempPtr,c
   504  0006A2  0E06               	movlw	high _Clear2
   505  0006A4  6E44               	movwf	Print_To_LCD@tempPtr+1,c
   506  0006A6  EC9F  F003         	call	_Print_To_LCD	;wreg free
   507  0006AA  0012               	return		;funcret
   508  0006AC  FFFF               	dw	65535	; errata NOP
   509  0006AE                     __end_of_Part4:
   510                           	opt stack 0
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           plusw1	equ	0xFE3
   519                           fsr1l	equ	0xFE1
   520                           plusw2	equ	0xFDB
   521                           
   522 ;; *************** function _Print_To_LCD *****************
   523 ;; Defined at:
   524 ;;		line 244 in file "Lab2_StarterCode.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  tempPtr         2    0[COMRAM] PTR const unsigned char 
   527 ;;		 -> Part4@var(10), Part3@var(10), Part2@function2(9), Part2@function1(7), 
   528 ;;		 -> Str_2(10), Str_1(10), Clear2(10), Clear1(10), 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  currentChar     1    3[COMRAM] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   540 ;;      Params:         2       0       0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0       0       0
   542 ;;      Temps:          1       0       0       0       0       0       0
   543 ;;      Totals:         4       0       0       0       0       0       0
   544 ;;Total ram usage:        4 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;;		_Part4
   551 ;;		_Part1
   552 ;;		_Part2
   553 ;;		_Part3
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text2
   558  00073E                     __ptext2:
   559                           	opt stack 0
   560  00073E                     _Print_To_LCD:
   561                           	opt stack 0
   562  00073E  FFFF               	dw	65535	; assembler added errata NOP
   563                           
   564                           ;Lab2_StarterCode.c: 246: char currentChar;
   565                           ;Lab2_StarterCode.c: 247: PORTEbits.RE0 = 0;
   566                           
   567                           ;incstack = 0
   568  000740  9084               	bcf	3972,0,c	;volatile
   569                           
   570                           ;Lab2_StarterCode.c: 249: while (*tempPtr)
   571  000742  D029               	goto	l101
   572  000744  FFFF               	dw	65535	; assembler added errata NOP
   573                           
   574                           ;Lab2_StarterCode.c: 250: {
   575                           ;Lab2_StarterCode.c: 251: currentChar = *tempPtr;
   576  000746  C043  FFF6         	movff	Print_To_LCD@tempPtr,tblptrl
   577  00074A  C044  FFF7         	movff	Print_To_LCD@tempPtr+1,tblptrh
   578  00074E  6AF8               	clrf	tblptru,c
   579  000750  0E05               	movlw	(high __ramtop+-1)
   580  000752  64F7               	cpfsgt	tblptrh,c
   581  000754  D004               	bra	u157
   582  000756  0008               	tblrd		*
   583  000758  FFFF               	dw	65535	; errata NOP
   584  00075A  50F5               	movf	tablat,w,c
   585  00075C  D005               	bra	u150
   586  00075E                     u157:
   587  00075E  CFF6 FFE9          	movff	tblptrl,fsr0l
   588  000762  CFF7 FFEA          	movff	tblptrh,fsr0h
   589  000766  50EF               	movf	indf0,w,c
   590  000768                     u150:
   591  000768  6E46               	movwf	Print_To_LCD@currentChar,c
   592                           
   593                           ;Lab2_StarterCode.c: 252: PORTEbits.RE1 = 1;
   594  00076A  8284               	bsf	3972,1,c	;volatile
   595                           
   596                           ;Lab2_StarterCode.c: 253: PORTD = currentChar;
   597  00076C  C046  FF83         	movff	Print_To_LCD@currentChar,3971	;volatile
   598                           
   599                           ;Lab2_StarterCode.c: 254: PORTEbits.RE1 = 0;
   600  000770  9284               	bcf	3972,1,c	;volatile
   601                           
   602                           ;Lab2_StarterCode.c: 255: currentChar <<= 4;
   603  000772  3A46               	swapf	Print_To_LCD@currentChar,f,c
   604  000774  0EF0               	movlw	240
   605  000776  1646               	andwf	Print_To_LCD@currentChar,f,c
   606                           
   607                           ;Lab2_StarterCode.c: 256: PORTEbits.RE1 = 1;
   608  000778  8284               	bsf	3972,1,c	;volatile
   609                           
   610                           ;Lab2_StarterCode.c: 257: PORTD = currentChar;
   611  00077A  C046  FF83         	movff	Print_To_LCD@currentChar,3971	;volatile
   612                           
   613                           ;Lab2_StarterCode.c: 258: PORTEbits.RE1 = 0;
   614  00077E  9284               	bcf	3972,1,c	;volatile
   615                           
   616                           ;Lab2_StarterCode.c: 259: _delay((unsigned long)((10)*(10000000/4000.0)));
   617  000780  0E19               	movlw	25
   618  000782  6E45               	movwf	??_Print_To_LCD& (0+255),c
   619  000784  0E5D               	movlw	93
   620  000786                     u307:
   621  000786  FFFF               	dw	65535	; errata NOP
   622  000788  2EE8               	decfsz	wreg,f,c
   623  00078A  D7FD               	bra	u307
   624  00078C  2E45               	decfsz	??_Print_To_LCD& (0+255),f,c
   625  00078E  D7FB               	bra	u307
   626                           
   627                           ;Lab2_StarterCode.c: 260: PORTEbits.RE0 = 1;
   628  000790  8084               	bsf	3972,0,c	;volatile
   629                           
   630                           ;Lab2_StarterCode.c: 261: tempPtr++;
   631  000792  4A43               	infsnz	Print_To_LCD@tempPtr,f,c
   632  000794  2A44               	incf	Print_To_LCD@tempPtr+1,f,c
   633  000796                     l101:
   634  000796  FFFF               	dw	65535	; assembler added errata NOP
   635  000798  C043  FFF6         	movff	Print_To_LCD@tempPtr,tblptrl
   636  00079C  C044  FFF7         	movff	Print_To_LCD@tempPtr+1,tblptrh
   637  0007A0  6AF8               	clrf	tblptru,c
   638  0007A2  0E05               	movlw	(high __ramtop+-1)
   639  0007A4  64F7               	cpfsgt	tblptrh,c
   640  0007A6  D004               	bra	u167
   641  0007A8  0008               	tblrd		*
   642  0007AA  FFFF               	dw	65535	; errata NOP
   643  0007AC  50F5               	movf	tablat,w,c
   644  0007AE  D005               	bra	u160
   645  0007B0                     u167:
   646  0007B0  CFF6 FFE9          	movff	tblptrl,fsr0l
   647  0007B4  CFF7 FFEA          	movff	tblptrh,fsr0h
   648  0007B8  50EF               	movf	indf0,w,c
   649  0007BA                     u160:
   650  0007BA  0900               	iorlw	0
   651  0007BC  B4D8               	btfsc	status,2,c
   652  0007BE  0012               	return		;funcret
   653  0007C0  FFFF               	dw	65535	; assembler added errata NOP
   654  0007C2  D7C0               	goto	l102
   655  0007C4  FFFF               	dw	65535	; errata NOP
   656  0007C6                     __end_of_Print_To_LCD:
   657                           	opt stack 0
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           indf0	equ	0xFEF
   663                           postinc0	equ	0xFEE
   664                           fsr0h	equ	0xFEA
   665                           fsr0l	equ	0xFE9
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           plusw1	equ	0xFE3
   669                           fsr1l	equ	0xFE1
   670                           plusw2	equ	0xFDB
   671                           status	equ	0xFD8
   672                           
   673 ;; *************** function _Initialize_PIC *****************
   674 ;; Defined at:
   675 ;;		line 181 in file "Lab2_StarterCode.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   689 ;;      Params:         0       0       0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		_Initialize_LCD
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text3
   704  000808                     __ptext3:
   705                           	opt stack 0
   706  000808                     _Initialize_PIC:
   707                           	opt stack 0
   708  000808  FFFF               	dw	65535	; assembler added errata NOP
   709                           
   710                           ;Lab2_StarterCode.c: 185: ADCON1 = 0b10001110;
   711                           
   712                           ;incstack = 0
   713  00080A  0E8E               	movlw	142
   714  00080C  6EC1               	movwf	4033,c	;volatile
   715                           
   716                           ;Lab2_StarterCode.c: 186: TRISA = 0b11100001;
   717  00080E  0EE1               	movlw	225
   718  000810  6E92               	movwf	3986,c	;volatile
   719                           
   720                           ;Lab2_StarterCode.c: 187: TRISB = 0b11011100;
   721  000812  0EDC               	movlw	220
   722  000814  6E93               	movwf	3987,c	;volatile
   723                           
   724                           ;Lab2_StarterCode.c: 188: TRISC = 0b11010000;
   725  000816  0ED0               	movlw	208
   726  000818  6E94               	movwf	3988,c	;volatile
   727                           
   728                           ;Lab2_StarterCode.c: 189: TRISD = 0b00001111;
   729  00081A  0E0F               	movlw	15
   730  00081C  6E95               	movwf	3989,c	;volatile
   731                           
   732                           ;Lab2_StarterCode.c: 190: TRISE = 0b00000000;
   733  00081E  0E00               	movlw	0
   734  000820  6E96               	movwf	3990,c	;volatile
   735                           
   736                           ;Lab2_StarterCode.c: 191: PORTA = 0b00010000;
   737  000822  0E10               	movlw	16
   738  000824  6E80               	movwf	3968,c	;volatile
   739                           
   740                           ;Lab2_StarterCode.c: 192: PORTAbits.RA3 = 0;
   741  000826  9680               	bcf	3968,3,c	;volatile
   742                           
   743                           ;Lab2_StarterCode.c: 193: PORTAbits.RA2 = 0;
   744  000828  9480               	bcf	3968,2,c	;volatile
   745                           
   746                           ;Lab2_StarterCode.c: 194: PORTAbits.RA1 = 0;
   747  00082A  9280               	bcf	3968,1,c	;volatile
   748                           
   749                           ;Lab2_StarterCode.c: 195: Initialize_LCD();
   750  00082C  EC57  F003         	call	_Initialize_LCD	;wreg free
   751  000830  0012               	return		;funcret
   752  000832  FFFF               	dw	65535	; errata NOP
   753  000834                     __end_of_Initialize_PIC:
   754                           	opt stack 0
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           tblptrl	equ	0xFF6
   758                           tablat	equ	0xFF5
   759                           indf0	equ	0xFEF
   760                           postinc0	equ	0xFEE
   761                           fsr0h	equ	0xFEA
   762                           fsr0l	equ	0xFE9
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           plusw1	equ	0xFE3
   766                           fsr1l	equ	0xFE1
   767                           plusw2	equ	0xFDB
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _Initialize_LCD *****************
   771 ;; Defined at:
   772 ;;		line 206 in file "Lab2_StarterCode.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  tempPtr         2    2[COMRAM] PTR unsigned char 
   777 ;;		 -> LCDstr(8), 
   778 ;;  currentChar     1    4[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   788 ;;      Params:         0       0       0       0       0       0       0
   789 ;;      Locals:         3       0       0       0       0       0       0
   790 ;;      Temps:          2       0       0       0       0       0       0
   791 ;;      Totals:         5       0       0       0       0       0       0
   792 ;;Total ram usage:        5 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_Initialize_PIC
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text4
   802  0006AE                     __ptext4:
   803                           	opt stack 0
   804  0006AE                     _Initialize_LCD:
   805                           	opt stack 0
   806  0006AE  FFFF               	dw	65535	; assembler added errata NOP
   807                           
   808                           ;Lab2_StarterCode.c: 208: char currentChar;
   809                           ;Lab2_StarterCode.c: 209: char *tempPtr;
   810                           ;Lab2_StarterCode.c: 211: _delay((unsigned long)((100)*(10000000/4000.0)));
   811                           
   812                           ;incstack = 0
   813  0006B0  0E01               	movlw	1
   814  0006B2  6E44               	movwf	(??_Initialize_LCD+1)& (0+255),c
   815  0006B4  0EF4               	movlw	244
   816  0006B6  6E43               	movwf	??_Initialize_LCD& (0+255),c
   817  0006B8  0EA8               	movlw	168
   818  0006BA                     u317:
   819  0006BA  FFFF               	dw	65535	; errata NOP
   820  0006BC  2EE8               	decfsz	wreg,f,c
   821  0006BE  D7FD               	bra	u317
   822  0006C0  2E43               	decfsz	??_Initialize_LCD& (0+255),f,c
   823  0006C2  D7FB               	bra	u317
   824  0006C4  2E44               	decfsz	(??_Initialize_LCD+1)& (0+255),f,c
   825  0006C6  D7F9               	bra	u317
   826  0006C8  D000               	nop2	
   827                           
   828                           ;Lab2_StarterCode.c: 213: PORTEbits.RE0 = 0;
   829  0006CA  9084               	bcf	3972,0,c	;volatile
   830                           
   831                           ;Lab2_StarterCode.c: 214: tempPtr = LCDstr;
   832  0006CC  0E15               	movlw	low _LCDstr
   833  0006CE  6E45               	movwf	Initialize_LCD@tempPtr,c
   834  0006D0  0E06               	movlw	high _LCDstr
   835  0006D2  6E46               	movwf	Initialize_LCD@tempPtr+1,c
   836                           
   837                           ;Lab2_StarterCode.c: 216: while (*tempPtr)
   838  0006D4  D026               	goto	l95
   839  0006D6  FFFF               	dw	65535	; assembler added errata NOP
   840                           
   841                           ;Lab2_StarterCode.c: 217: {
   842                           ;Lab2_StarterCode.c: 218: currentChar = *tempPtr;
   843  0006D8  C045  FFF6         	movff	Initialize_LCD@tempPtr,tblptrl
   844  0006DC  C046  FFF7         	movff	Initialize_LCD@tempPtr+1,tblptrh
   845  0006E0                     	if	0	;tblptru may be non-zero
   846  0006E0                     	endif
   847  0006E0                     	if	0	;tblptru may be non-zero
   848  0006E0                     	endif
   849  0006E0  0008               	tblrd		*
   850  0006E2  FFFF               	dw	65535	; errata NOP
   851  0006E4  CFF5 F047          	movff	tablat,Initialize_LCD@currentChar
   852                           
   853                           ;Lab2_StarterCode.c: 219: PORTEbits.RE1 = 1;
   854  0006E8  8284               	bsf	3972,1,c	;volatile
   855                           
   856                           ;Lab2_StarterCode.c: 220: PORTD = currentChar;
   857  0006EA  C047  FF83         	movff	Initialize_LCD@currentChar,3971	;volatile
   858                           
   859                           ;Lab2_StarterCode.c: 221: PORTEbits.RE1 = 0;
   860  0006EE  9284               	bcf	3972,1,c	;volatile
   861                           
   862                           ;Lab2_StarterCode.c: 222: _delay((unsigned long)((10)*(10000000/4000.0)));
   863  0006F0  0E19               	movlw	25
   864  0006F2  6E43               	movwf	??_Initialize_LCD& (0+255),c
   865  0006F4  0E5D               	movlw	93
   866  0006F6                     u327:
   867  0006F6  FFFF               	dw	65535	; errata NOP
   868  0006F8  2EE8               	decfsz	wreg,f,c
   869  0006FA  D7FD               	bra	u327
   870  0006FC  2E43               	decfsz	??_Initialize_LCD& (0+255),f,c
   871  0006FE  D7FB               	bra	u327
   872                           
   873                           ;Lab2_StarterCode.c: 223: currentChar <<= 4;
   874  000700  3A47               	swapf	Initialize_LCD@currentChar,f,c
   875  000702  0EF0               	movlw	240
   876  000704  1647               	andwf	Initialize_LCD@currentChar,f,c
   877                           
   878                           ;Lab2_StarterCode.c: 224: PORTEbits.RE1 = 1;
   879  000706  8284               	bsf	3972,1,c	;volatile
   880                           
   881                           ;Lab2_StarterCode.c: 225: PORTD = currentChar;
   882  000708  C047  FF83         	movff	Initialize_LCD@currentChar,3971	;volatile
   883                           
   884                           ;Lab2_StarterCode.c: 226: PORTEbits.RE1 = 0;
   885  00070C  9284               	bcf	3972,1,c	;volatile
   886                           
   887                           ;Lab2_StarterCode.c: 227: _delay((unsigned long)((10)*(10000000/4000.0)));
   888  00070E  0E19               	movlw	25
   889  000710  6E43               	movwf	??_Initialize_LCD& (0+255),c
   890  000712  0E5D               	movlw	93
   891  000714                     u337:
   892  000714  FFFF               	dw	65535	; errata NOP
   893  000716  2EE8               	decfsz	wreg,f,c
   894  000718  D7FD               	bra	u337
   895  00071A  2E43               	decfsz	??_Initialize_LCD& (0+255),f,c
   896  00071C  D7FB               	bra	u337
   897                           
   898                           ;Lab2_StarterCode.c: 228: tempPtr++;
   899  00071E  4A45               	infsnz	Initialize_LCD@tempPtr,f,c
   900  000720  2A46               	incf	Initialize_LCD@tempPtr+1,f,c
   901  000722                     l95:
   902  000722  FFFF               	dw	65535	; assembler added errata NOP
   903  000724  C045  FFF6         	movff	Initialize_LCD@tempPtr,tblptrl
   904  000728  C046  FFF7         	movff	Initialize_LCD@tempPtr+1,tblptrh
   905  00072C                     	if	0	;tblptru may be non-zero
   906  00072C                     	endif
   907  00072C                     	if	0	;tblptru may be non-zero
   908  00072C                     	endif
   909  00072C  0008               	tblrd		*
   910  00072E  FFFF               	dw	65535	; errata NOP
   911  000730  50F5               	movf	tablat,w,c
   912  000732  0900               	iorlw	0
   913  000734  B4D8               	btfsc	status,2,c
   914  000736  0012               	return		;funcret
   915  000738  FFFF               	dw	65535	; assembler added errata NOP
   916  00073A  D7CD               	goto	l96
   917  00073C  FFFF               	dw	65535	; errata NOP
   918  00073E                     __end_of_Initialize_LCD:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           indf0	equ	0xFEF
   925                           postinc0	equ	0xFEE
   926                           fsr0h	equ	0xFEA
   927                           fsr0l	equ	0xFE9
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           plusw1	equ	0xFE3
   931                           fsr1l	equ	0xFE1
   932                           plusw2	equ	0xFDB
   933                           status	equ	0xFD8
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           indf0	equ	0xFEF
   939                           postinc0	equ	0xFEE
   940                           fsr0h	equ	0xFEA
   941                           fsr0l	equ	0xFE9
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           plusw1	equ	0xFE3
   945                           fsr1l	equ	0xFE1
   946                           plusw2	equ	0xFDB
   947                           status	equ	0xFD8
   948                           
   949                           	psect	rparam
   950  0000                     tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           indf0	equ	0xFEF
   955                           postinc0	equ	0xFEE
   956                           fsr0h	equ	0xFEA
   957                           fsr0l	equ	0xFE9
   958                           wreg	equ	0xFE8
   959                           postdec1	equ	0xFE5
   960                           plusw1	equ	0xFE3
   961                           fsr1l	equ	0xFE1
   962                           plusw2	equ	0xFDB
   963                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    28
    Data        66
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      82
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Print_To_LCD@tempPtr	PTR const unsigned char  size(2) Largest target is 10
		 -> Part4@var(COMRAM[10]), Part3@var(COMRAM[10]), Part2@function2(COMRAM[9]), Part2@function1(COMRAM[7]), 
		 -> Str_2(COMRAM[10]), Str_1(COMRAM[10]), Clear2(CODE[10]), Clear1(CODE[10]), 

    Initialize_LCD@tempPtr	PTR unsigned char  size(2) Largest target is 8
		 -> LCDstr(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Part4
    _Part4->_Print_To_LCD
    _Initialize_PIC->_Initialize_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2547
                     _Initialize_PIC
                              _Part4
                       _Print_To_LCD
 ---------------------------------------------------------------------------------
 (1) _Part4                                               12    12      0    1256
                                              4 COMRAM    12    12      0
                       _Print_To_LCD
 ---------------------------------------------------------------------------------
 (1) _Print_To_LCD                                         4     2      2    1231
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Initialize_PIC                                       0     0      0      60
                     _Initialize_LCD
 ---------------------------------------------------------------------------------
 (2) _Initialize_LCD                                       5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_PIC
     _Initialize_LCD
   _Part4
     _Print_To_LCD
   _Print_To_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      52       1       64.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      15        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Feb 13 16:09:58 2018

                                                         l47 087C  
                                                         l95 0722  
                                                         l96 06D6  
                                                __CFG_OSC$HS 000000  
                                                        l101 0796  
                                                        l102 0744  
                                                 Part2@F2502 0028  
                                                 Part2@F2504 001F  
                                                        u150 0768  
                                                        u160 07BA  
                                                        u307 0786  
                                                        u317 06BA  
                                                        u157 075E  
                                                        u181 062A  
                                                        u327 06F6  
                                                        u167 07B0  
                                                        u337 0714  
                                                        u287 0658  
                                                        u297 068E  
                                                 Part3@F2509 000B  
                                                 Part4@F2512 0001  
                                               __CFG_BOR$OFF 000000  
                                                        wreg 000FE8  
                                               __CFG_LVP$OFF 000000  
                                               __CFG_WDT$OFF 000000  
                                               __CFG_STVR$ON 000000  
                                                       _main 085E  
                                                       fsr0h 000FEA  
                                                       indf0 000FEF  
                                                       fsr0l 000FE9  
                                                       fsr1l 000FE1  
                                                       start 0002  
                                               ___param_bank 000000  
                                              __CFG_OSCS$OFF 000000  
                                                      ?_main 0043  
                                                      _PORTA 000F80  
                                                      _PORTD 000F83  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISC 000F94  
                                                      _TRISD 000F95  
                                                      _TRISE 000F96  
                                              __CFG_PWRT$OFF 000000  
                                                      _Part4 061E  
                                                      _Str_1 0039  
                                                      _Str_2 002F  
                                                      tablat 000FF5  
                                  Initialize_LCD@currentChar 0047  
                                                      plusw1 000FE3  
                                                      plusw2 000FDB  
                                                      status 000FD8  
                                            __initialization 0834  
                                    __size_of_Initialize_LCD 0090  
                                    __size_of_Initialize_PIC 002C  
                                               __end_of_main 0884  
                                                     ??_main 0053  
                                              __activetblptr 000002  
                                                     ?_Part4 0043  
                                            __CFG_CCP2MUX$ON 000000  
                                                     _ADCON1 000FC1  
                                                     _LCDstr 0615  
                                                     _Clear1 060B  
                                                     _Clear2 0601  
                                               __pdataCOMRAM 0001  
                                        Print_To_LCD@tempPtr 0043  
                                               __mediumconst 0000  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                 __accesstop 0080  
                                    __end_of__initialization 0854  
                                              ___rparam_used 000001  
                                              __end_of_Part4 06AE  
                                             __pcstackCOMRAM 0043  
                                                    ??_Part4 0047  
                                             _Initialize_LCD 06AE  
                                             _Initialize_PIC 0808  
                                     __end_of_Initialize_LCD 073E  
                                     __end_of_Initialize_PIC 0834  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                              ?_Print_To_LCD 0043  
                                               __psmallconst 0600  
                                                    __pcinit 0834  
                                                    __ramtop 0600  
                                                    __ptext0 085E  
                                                    __ptext1 061E  
                                                    __ptext2 073E  
                                                    __ptext3 0808  
                                                    __ptext4 06AE  
                                       end_of_initialization 0854  
                                              __Lmediumconst 0000  
                                            ?_Initialize_LCD 0043  
                                            ?_Initialize_PIC 0043  
                                             ??_Print_To_LCD 0045  
                                                    postdec1 000FE5  
                                                    postinc0 000FEE  
                                                  _PORTAbits 000F80  
                                                  _PORTEbits 000F84  
                                    Print_To_LCD@currentChar 0046  
                                             __end_of_LCDstr 061D  
                                             __end_of_Clear1 0615  
                                             __end_of_Clear2 060B  
                                              __pidataCOMRAM 07C6  
                                        start_initialization 0834  
                                       __end_of_Print_To_LCD 07C6  
                                                __smallconst 0600  
                                             __size_of_Part4 0090  
                                           ??_Initialize_LCD 0043  
                                           ??_Initialize_PIC 0048  
                                                   Part4@var 0049  
                                                  copy_data0 0848  
                                      Initialize_LCD@tempPtr 0045  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                                   _Str_Test 0015  
                                      __size_of_Print_To_LCD 0088  
                                              __size_of_main 0026  
                                               _Print_To_LCD 073E  
