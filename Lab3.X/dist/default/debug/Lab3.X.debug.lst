

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Feb 27 15:58:08 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F452 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0009EC                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for main@F2507
    61  0009EC  80                 	db	128
    62  0009ED  20                 	db	32
    63  0009EE  4E                 	db	78
    64  0009EF  4F                 	db	79
    65  0009F0  54                 	db	84
    66  0009F1  28                 	db	40
    67  0009F2  42                 	db	66
    68  0009F3  29                 	db	41
    69  0009F4  20                 	db	32
    70  0009F5  00                 	db	0
    71                           
    72                           ;initializer for main@F2505
    73  0009F6  80                 	db	128
    74  0009F7  20                 	db	32
    75  0009F8  42                 	db	66
    76  0009F9  41                 	db	65
    77  0009FA  4E                 	db	78
    78  0009FB  44                 	db	68
    79  0009FC  43                 	db	67
    80  0009FD  20                 	db	32
    81  0009FE  20                 	db	32
    82  0009FF  00                 	db	0
    83                           
    84                           ;initializer for main@F2503
    85  000A00  80                 	db	128
    86  000A01  20                 	db	32
    87  000A02  20                 	db	32
    88  000A03  42                 	db	66
    89  000A04  2D                 	db	45
    90  000A05  43                 	db	67
    91  000A06  20                 	db	32
    92  000A07  20                 	db	32
    93  000A08  20                 	db	32
    94  000A09  00                 	db	0
    95                           
    96                           ;initializer for main@F2501
    97  000A0A  C0                 	db	192
    98  000A0B  20                 	db	32
    99  000A0C  20                 	db	32
   100  000A0D  20                 	db	32
   101  000A0E  20                 	db	32
   102  000A0F  20                 	db	32
   103  000A10  20                 	db	32
   104  000A11  20                 	db	32
   105  000A12  20                 	db	32
   106  000A13  00                 	db	0
   107                           
   108                           ;initializer for main@F2499
   109  000A14  80                 	db	128
   110  000A15  20                 	db	32
   111  000A16  20                 	db	32
   112  000A17  42                 	db	66
   113  000A18  2B                 	db	43
   114  000A19  43                 	db	67
   115  000A1A  20                 	db	32
   116  000A1B  20                 	db	32
   117  000A1C  20                 	db	32
   118  000A1D  00                 	db	0
   119                           
   120                           	psect	idataBANK0
   121  000A4A                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _Str_2
   125  000A4A  C0                 	db	192
   126  000A4B  20                 	db	32
   127  000A4C  20                 	db	32
   128  000A4D  20                 	db	32
   129  000A4E  20                 	db	32
   130  000A4F  20                 	db	32
   131  000A50  20                 	db	32
   132  000A51  20                 	db	32
   133  000A52  20                 	db	32
   134  000A53  00                 	db	0
   135                           
   136                           ;initializer for _Str_1
   137  000A54  80                 	db	128
   138  000A55  20                 	db	32
   139  000A56  20                 	db	32
   140  000A57  20                 	db	32
   141  000A58  20                 	db	32
   142  000A59  20                 	db	32
   143  000A5A  20                 	db	32
   144  000A5B  20                 	db	32
   145  000A5C  20                 	db	32
   146  000A5D  00                 	db	0
   147                           
   148                           	psect	smallconst
   149  000600                     __psmallconst:
   150                           	opt stack 0
   151  000600  00                 	db	0
   152  000601                     _Clear2:
   153                           	opt stack 0
   154  000601  C0                 	db	192
   155  000602  20                 	db	32
   156  000603  20                 	db	32
   157  000604  20                 	db	32
   158  000605  20                 	db	32
   159  000606  20                 	db	32
   160  000607  20                 	db	32
   161  000608  20                 	db	32
   162  000609  20                 	db	32
   163  00060A  00                 	db	0
   164  00060B                     __end_of_Clear2:
   165                           	opt stack 0
   166  00060B                     _Clear1:
   167                           	opt stack 0
   168  00060B  80                 	db	128
   169  00060C  20                 	db	32
   170  00060D  20                 	db	32
   171  00060E  20                 	db	32
   172  00060F  20                 	db	32
   173  000610  20                 	db	32
   174  000611  20                 	db	32
   175  000612  20                 	db	32
   176  000613  20                 	db	32
   177  000614  00                 	db	0
   178  000615                     __end_of_Clear1:
   179                           	opt stack 0
   180  000615                     _LCDstr:
   181                           	opt stack 0
   182  000615  33                 	db	51
   183  000616  32                 	db	50
   184  000617  28                 	db	40
   185  000618  01                 	db	1
   186  000619  0C                 	db	12
   187  00061A  06                 	db	6
   188  00061B  00                 	db	0
   189  00061C  00                 	db	0
   190  00061D                     __end_of_LCDstr:
   191                           	opt stack 0
   192  0000                     _PORTD	set	3971
   193  0000                     _PORTEbits	set	3972
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTA	set	3968
   196  0000                     _TRISE	set	3990
   197  0000                     _TRISA	set	3986
   198  0000                     _PORTC	set	3970
   199  0000                     _PORTCbits	set	3970
   200  0000                     _PORTB	set	3969
   201  0000                     _PORTBbits	set	3969
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISB	set	3987
   204  0000                     _TRISC	set	3988
   205  0000                     _ADCON1	set	4033
   206                           
   207                           ; #config settings
   208  00061D  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  0009A2                     __pcinit:
   212                           	opt stack 0
   213  0009A2                     start_initialization:
   214                           	opt stack 0
   215  0009A2                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (20 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220  0009A2  0E4A               	movlw	low __pidataBANK0
   221  0009A4  6EF6               	movwf	tblptrl,c
   222  0009A6  0E0A               	movlw	high __pidataBANK0
   223  0009A8  6EF7               	movwf	tblptrh,c
   224  0009AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225  0009AC  6EF8               	movwf	tblptru,c
   226  0009AE  EE00  F080         	lfsr	0,__pdataBANK0
   227  0009B2  EE10 F014          	lfsr	1,20
   228  0009B6                     copy_data0:
   229  0009B6  0009               	tblrd		*+
   230  0009B8  CFF5 FFEE          	movff	tablat,postinc0
   231  0009BC  50E5               	movf	postdec1,w,c
   232  0009BE  50E1               	movf	fsr1l,w,c
   233  0009C0  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (50 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  0009C2  0EEC               	movlw	low __pidataCOMRAM
   238  0009C4  6EF6               	movwf	tblptrl,c
   239  0009C6  0E09               	movlw	high __pidataCOMRAM
   240  0009C8  6EF7               	movwf	tblptrh,c
   241  0009CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  0009CC  6EF8               	movwf	tblptru,c
   243  0009CE  EE00  F04E         	lfsr	0,__pdataCOMRAM
   244  0009D2  EE10 F032          	lfsr	1,50
   245  0009D6                     copy_data1:
   246  0009D6  0009               	tblrd		*+
   247  0009D8  CFF5 FFEE          	movff	tablat,postinc0
   248  0009DC  50E5               	movf	postdec1,w,c
   249  0009DE  50E1               	movf	fsr1l,w,c
   250  0009E0  E1FA               	bnz	copy_data1
   251  0009E2                     end_of_initialization:
   252                           	opt stack 0
   253  0009E2                     __end_of__initialization:
   254                           	opt stack 0
   255  0009E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  0009E4  6EF8               	movwf	tblptru,c
   257  0009E6  0100               	movlb	0
   258  0009E8  EF0F  F003         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	dataCOMRAM
   268  00004E                     __pdataCOMRAM:
   269                           	opt stack 0
   270  00004E                     main@F2507:
   271                           	opt stack 0
   272  00004E                     	ds	10
   273  000058                     main@F2505:
   274                           	opt stack 0
   275  000058                     	ds	10
   276  000062                     main@F2503:
   277                           	opt stack 0
   278  000062                     	ds	10
   279  00006C                     main@F2501:
   280                           	opt stack 0
   281  00006C                     	ds	10
   282  000076                     main@F2499:
   283                           	opt stack 0
   284  000076                     	ds	10
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	dataBANK0
   294  000080                     __pdataBANK0:
   295                           	opt stack 0
   296  000080                     _Str_2:
   297                           	opt stack 0
   298  000080                     	ds	10
   299  00008A                     _Str_1:
   300                           	opt stack 0
   301  00008A                     	ds	10
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	cstackCOMRAM
   311  000001                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  000001                     ??_Initialize_LCD:
   314  000001                     ?___lwdiv:
   315                           	opt stack 0
   316  000001                     ?___lwmod:
   317                           	opt stack 0
   318  000001                     Print_To_LCD@tempPtr:
   319                           	opt stack 0
   320  000001                     ___lwdiv@dividend:
   321                           	opt stack 0
   322  000001                     ___lwmod@dividend:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x0
   326  000001                     	ds	2
   327  000003                     ??_Print_To_LCD:
   328  000003                     Initialize_LCD@tempPtr:
   329                           	opt stack 0
   330  000003                     ___lwdiv@divisor:
   331                           	opt stack 0
   332  000003                     ___lwmod@divisor:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x2
   336  000003                     	ds	1
   337  000004                     Print_To_LCD@currentChar:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x3
   341  000004                     	ds	1
   342  000005                     Initialize_LCD@currentChar:
   343                           	opt stack 0
   344  000005                     ___lwmod@counter:
   345                           	opt stack 0
   346  000005                     ___lwdiv@quotient:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350  000005                     	ds	1
   351  000006                     
   352                           ; 1 bytes @ 0x5
   353  000006                     	ds	1
   354  000007                     ___lwdiv@counter:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x6
   358  000007                     	ds	1
   359  000008                     main@add:
   360                           	opt stack 0
   361                           
   362                           ; 10 bytes @ 0x7
   363  000008                     	ds	10
   364  000012                     main@sub:
   365                           	opt stack 0
   366                           
   367                           ; 10 bytes @ 0x11
   368  000012                     	ds	10
   369  00001C                     main@and:
   370                           	opt stack 0
   371                           
   372                           ; 10 bytes @ 0x1B
   373  00001C                     	ds	10
   374  000026                     main@not:
   375                           	opt stack 0
   376                           
   377                           ; 10 bytes @ 0x25
   378  000026                     	ds	10
   379  000030                     main@addlow:
   380                           	opt stack 0
   381                           
   382                           ; 10 bytes @ 0x2F
   383  000030                     	ds	10
   384  00003A                     main@B3:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x39
   388  00003A                     	ds	1
   389  00003B                     main@B2:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x3A
   393  00003B                     	ds	1
   394  00003C                     main@B1:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x3B
   398  00003C                     	ds	1
   399  00003D                     main@B0:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x3C
   403  00003D                     	ds	1
   404  00003E                     main@B:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x3D
   408  00003E                     	ds	1
   409  00003F                     main@C3:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x3E
   413  00003F                     	ds	1
   414  000040                     main@C2:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x3F
   418  000040                     	ds	1
   419  000041                     main@C1:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x40
   423  000041                     	ds	1
   424  000042                     main@C0:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x41
   428  000042                     	ds	1
   429  000043                     main@C:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x42
   433  000043                     	ds	1
   434  000044                     main@rem:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x43
   438  000044                     	ds	2
   439  000046                     main@base:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x45
   443  000046                     	ds	2
   444  000048                     main@decimal:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x47
   448  000048                     	ds	2
   449  00004A                     main@SWA:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x49
   453  00004A                     	ds	1
   454  00004B                     main@SWB:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x4A
   458  00004B                     	ds	1
   459  00004C                     main@num:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x4B
   463  00004C                     	ds	2
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 52 in file "Lab3.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  SWB             1   74[COMRAM] unsigned char 
   482 ;;  SWA             1   73[COMRAM] unsigned char 
   483 ;;  addlow         10   47[COMRAM] unsigned char [10]
   484 ;;  not            10   37[COMRAM] unsigned char [10]
   485 ;;  and            10   27[COMRAM] unsigned char [10]
   486 ;;  sub            10   17[COMRAM] unsigned char [10]
   487 ;;  add            10    7[COMRAM] unsigned char [10]
   488 ;;  num             2   75[COMRAM] unsigned int 
   489 ;;  decimal         2   71[COMRAM] unsigned int 
   490 ;;  base            2   69[COMRAM] unsigned int 
   491 ;;  rem             2   67[COMRAM] unsigned int 
   492 ;;  C               1   66[COMRAM] unsigned char 
   493 ;;  C0              1   65[COMRAM] unsigned char 
   494 ;;  C1              1   64[COMRAM] unsigned char 
   495 ;;  C2              1   63[COMRAM] unsigned char 
   496 ;;  C3              1   62[COMRAM] unsigned char 
   497 ;;  B               1   61[COMRAM] unsigned char 
   498 ;;  B0              1   60[COMRAM] unsigned char 
   499 ;;  B1              1   59[COMRAM] unsigned char 
   500 ;;  B2              1   58[COMRAM] unsigned char 
   501 ;;  B3              1   57[COMRAM] unsigned char 
   502 ;;  mybyte          1    0        unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:        70       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0
   515 ;;      Totals:        70       0       0       0       0       0       0
   516 ;;Total ram usage:       70 bytes
   517 ;; Hardware stack levels required when called:    2
   518 ;; This function calls:
   519 ;;		_Initialize_PIC
   520 ;;		_Print_To_LCD
   521 ;;		___lwdiv
   522 ;;		___lwmod
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text0
   529  00061E                     __ptext0:
   530                           	opt stack 0
   531  00061E                     _main:
   532                           	opt stack 0
   533  00061E  FFFF               	dw	65535	; assembler added errata NOP
   534                           
   535                           ;Lab3.c: 54: Initialize_PIC();
   536                           
   537                           ;incstack = 0
   538  000620  EC0F  F005         	call	_Initialize_PIC	;wreg free
   539                           
   540                           ;Lab3.c: 55: Print_To_LCD(Clear1);
   541  000624  0E0B               	movlw	low _Clear1
   542  000626  6E01               	movwf	Print_To_LCD@tempPtr,c
   543  000628  0E06               	movlw	high _Clear1
   544  00062A  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   545  00062C  EC35  F004         	call	_Print_To_LCD	;wreg free
   546                           
   547                           ;Lab3.c: 56: Print_To_LCD(Clear2);
   548  000630  0E01               	movlw	low _Clear2
   549  000632  6E01               	movwf	Print_To_LCD@tempPtr,c
   550  000634  0E06               	movlw	high _Clear2
   551  000636  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   552  000638  EC35  F004         	call	_Print_To_LCD	;wreg free
   553                           
   554                           ;Lab3.c: 58: unsigned char mybyte;
   555                           ;Lab3.c: 59: unsigned int decimal, num, rem, base = 1;
   556  00063C  0E00               	movlw	0
   557  00063E  6E47               	movwf	main@base+1,c
   558  000640  0E01               	movlw	1
   559  000642  6E46               	movwf	main@base,c
   560                           
   561                           ;Lab3.c: 61: TRISC = 0b11111111;
   562  000644  6894               	setf	3988,c	;volatile
   563                           
   564                           ;Lab3.c: 62: TRISB = 0b11111111;
   565  000646  6893               	setf	3987,c	;volatile
   566                           
   567                           ;Lab3.c: 63: TRISD = 0b00000000;
   568  000648  0E00               	movlw	0
   569  00064A  6E95               	movwf	3989,c	;volatile
   570                           
   571                           ;Lab3.c: 66: unsigned char B3 = PORTBbits.RB3;
   572  00064C  0E00               	movlw	0
   573  00064E  B681               	btfsc	3969,3,c	;volatile
   574  000650  0E01               	movlw	1
   575  000652  6E3A               	movwf	main@B3,c
   576                           
   577                           ;Lab3.c: 67: unsigned char B2 = PORTBbits.RB2;
   578  000654  0E00               	movlw	0
   579  000656  B481               	btfsc	3969,2,c	;volatile
   580  000658  0E01               	movlw	1
   581  00065A  6E3B               	movwf	main@B2,c
   582                           
   583                           ;Lab3.c: 68: unsigned char B1 = PORTBbits.RB1;
   584  00065C  0E00               	movlw	0
   585  00065E  B281               	btfsc	3969,1,c	;volatile
   586  000660  0E01               	movlw	1
   587  000662  6E3C               	movwf	main@B1,c
   588                           
   589                           ;Lab3.c: 69: unsigned char B0 = PORTBbits.RB0;
   590  000664  0E00               	movlw	0
   591  000666  B081               	btfsc	3969,0,c	;volatile
   592  000668  0E01               	movlw	1
   593  00066A  6E3D               	movwf	main@B0,c
   594                           
   595                           ;Lab3.c: 70: unsigned char B = PORTB;
   596  00066C  CF81 F03E          	movff	3969,main@B	;volatile
   597                           
   598                           ;Lab3.c: 72: unsigned char C3 = PORTCbits.RC3;
   599  000670  0E00               	movlw	0
   600  000672  B682               	btfsc	3970,3,c	;volatile
   601  000674  0E01               	movlw	1
   602  000676  6E3F               	movwf	main@C3,c
   603                           
   604                           ;Lab3.c: 73: unsigned char C2 = PORTCbits.RC2;
   605  000678  0E00               	movlw	0
   606  00067A  B482               	btfsc	3970,2,c	;volatile
   607  00067C  0E01               	movlw	1
   608  00067E  6E40               	movwf	main@C2,c
   609                           
   610                           ;Lab3.c: 74: unsigned char C1 = PORTCbits.RC1;
   611  000680  0E00               	movlw	0
   612  000682  B282               	btfsc	3970,1,c	;volatile
   613  000684  0E01               	movlw	1
   614  000686  6E41               	movwf	main@C1,c
   615                           
   616                           ;Lab3.c: 75: unsigned char C0 = PORTCbits.RC0;
   617  000688  0E00               	movlw	0
   618  00068A  B082               	btfsc	3970,0,c	;volatile
   619  00068C  0E01               	movlw	1
   620  00068E  6E42               	movwf	main@C0,c
   621                           
   622                           ;Lab3.c: 76: unsigned char C = PORTC;
   623  000690  CF82 F043          	movff	3970,main@C	;volatile
   624                           
   625                           ;Lab3.c: 79: char add[] = {0x80,' ',' ',0x42,0x2B,0x43,' ',' ',' ',0};
   626  000694  EE20  F076         	lfsr	2,main@F2499
   627  000698  EE10  F008         	lfsr	1,main@add
   628  00069C  0E09               	movlw	9
   629  00069E                     u331:
   630  00069E  CFDB FFE3          	movff	plusw2,plusw1
   631  0006A2  06E8               	decf	wreg,f,c
   632  0006A4  E2FC               	bc	u331
   633                           
   634                           ;Lab3.c: 80: char addlow[] = {0xC0,' ',' ',' ',' ',' ',' ',' ',' ',0};
   635  0006A6  EE20  F06C         	lfsr	2,main@F2501
   636  0006AA  EE10  F030         	lfsr	1,main@addlow
   637  0006AE  0E09               	movlw	9
   638  0006B0                     u341:
   639  0006B0  CFDB FFE3          	movff	plusw2,plusw1
   640  0006B4  06E8               	decf	wreg,f,c
   641  0006B6  E2FC               	bc	u341
   642                           
   643                           ;Lab3.c: 81: char sub[] = {0x80,' ',' ',0x42,0x2D,0x43,' ',' ',' ',0};
   644  0006B8  EE20  F062         	lfsr	2,main@F2503
   645  0006BC  EE10  F012         	lfsr	1,main@sub
   646  0006C0  0E09               	movlw	9
   647  0006C2                     u351:
   648  0006C2  CFDB FFE3          	movff	plusw2,plusw1
   649  0006C6  06E8               	decf	wreg,f,c
   650  0006C8  E2FC               	bc	u351
   651                           
   652                           ;Lab3.c: 82: char and[] = {0x80,' ',0x42,0x41,0x4E,0x44,0x43,' ',' ',0};
   653  0006CA  EE20  F058         	lfsr	2,main@F2505
   654  0006CE  EE10  F01C         	lfsr	1,main@and
   655  0006D2  0E09               	movlw	9
   656  0006D4                     u361:
   657  0006D4  CFDB FFE3          	movff	plusw2,plusw1
   658  0006D8  06E8               	decf	wreg,f,c
   659  0006DA  E2FC               	bc	u361
   660                           
   661                           ;Lab3.c: 83: char not[] = {0x80,' ',0x4E,0x4F,0x54,0x28,0x42,0x29,' ',0};
   662  0006DC  EE20  F04E         	lfsr	2,main@F2507
   663  0006E0  EE10  F026         	lfsr	1,main@not
   664  0006E4  0E09               	movlw	9
   665  0006E6                     u371:
   666  0006E6  CFDB FFE3          	movff	plusw2,plusw1
   667  0006EA  06E8               	decf	wreg,f,c
   668  0006EC  E2FC               	bc	u371
   669  0006EE  FFFF               	dw	65535	; assembler added errata NOP
   670                           
   671                           ;Lab3.c: 86: {
   672                           ;Lab3.c: 87: unsigned char SWA = PORTBbits.RB4;
   673  0006F0  0E00               	movlw	0
   674  0006F2  B881               	btfsc	3969,4,c	;volatile
   675  0006F4  0E01               	movlw	1
   676  0006F6  6E4A               	movwf	main@SWA,c
   677                           
   678                           ;Lab3.c: 88: unsigned char SWB = PORTBbits.RB5;
   679  0006F8  0E00               	movlw	0
   680  0006FA  BA81               	btfsc	3969,5,c	;volatile
   681  0006FC  0E01               	movlw	1
   682  0006FE  6E4B               	movwf	main@SWB,c
   683                           
   684                           ;Lab3.c: 90: C = num;
   685  000700  C04C  F043         	movff	main@num,main@C
   686                           
   687                           ;Lab3.c: 91: while(num > 0)
   688  000704  D028               	goto	l62
   689  000706  FFFF               	dw	65535	; assembler added errata NOP
   690                           
   691                           ;Lab3.c: 92: {
   692                           ;Lab3.c: 93: rem = num % 10;
   693  000708  C04C  F001         	movff	main@num,___lwmod@dividend
   694  00070C  C04D  F002         	movff	main@num+1,___lwmod@dividend+1
   695  000710  0E00               	movlw	0
   696  000712  6E04               	movwf	___lwmod@divisor+1,c
   697  000714  0E0A               	movlw	10
   698  000716  6E03               	movwf	___lwmod@divisor,c
   699  000718  ECA9  F004         	call	___lwmod	;wreg free
   700  00071C  C001  F044         	movff	?___lwmod,main@rem
   701  000720  C002  F045         	movff	?___lwmod+1,main@rem+1
   702                           
   703                           ;Lab3.c: 94: decimal = decimal + rem;
   704  000724  5044               	movf	main@rem,w,c
   705  000726  2448               	addwf	main@decimal,w,c
   706  000728  6E48               	movwf	main@decimal,c
   707  00072A  5045               	movf	main@rem+1,w,c
   708  00072C  2049               	addwfc	main@decimal+1,w,c
   709  00072E  6E49               	movwf	main@decimal+1,c
   710                           
   711                           ;Lab3.c: 95: num = num / 10;
   712  000730  C04C  F001         	movff	main@num,___lwdiv@dividend
   713  000734  C04D  F002         	movff	main@num+1,___lwdiv@dividend+1
   714  000738  0E00               	movlw	0
   715  00073A  6E04               	movwf	___lwdiv@divisor+1,c
   716  00073C  0E0A               	movlw	10
   717  00073E  6E03               	movwf	___lwdiv@divisor,c
   718  000740  EC79  F004         	call	___lwdiv	;wreg free
   719  000744  C001  F04C         	movff	?___lwdiv,main@num
   720  000748  C002  F04D         	movff	?___lwdiv+1,main@num+1
   721                           
   722                           ;Lab3.c: 96: base = base * 2;
   723  00074C  90D8               	bcf	status,0,c
   724  00074E  3446               	rlcf	main@base,w,c
   725  000750  6E46               	movwf	main@base,c
   726  000752  3447               	rlcf	main@base+1,w,c
   727  000754  6E47               	movwf	main@base+1,c
   728  000756                     l62:
   729  000756  FFFF               	dw	65535	; assembler added errata NOP
   730  000758  504C               	movf	main@num,w,c
   731  00075A  104D               	iorwf	main@num+1,w,c
   732  00075C  A4D8               	btfss	status,2,c
   733  00075E  D7D3               	goto	l63
   734                           
   735                           ;Lab3.c: 97: }
   736                           ;Lab3.c: 98: decimal += 48;
   737  000760  0E30               	movlw	48
   738  000762  2648               	addwf	main@decimal,f,c
   739  000764  0E00               	movlw	0
   740  000766  2249               	addwfc	main@decimal+1,f,c
   741                           
   742                           ;Lab3.c: 101: if(SWA == 0 && SWB == 0)
   743  000768  504A               	movf	main@SWA,w,c
   744  00076A  A4D8               	btfss	status,2,c
   745  00076C  D012               	goto	l65
   746  00076E  504B               	movf	main@SWB,w,c
   747  000770  A4D8               	btfss	status,2,c
   748  000772  D00F               	goto	l65
   749                           
   750                           ;Lab3.c: 102: {
   751                           ;Lab3.c: 103: addlow[4] = decimal;
   752  000774  C048  F034         	movff	main@decimal,main@addlow+4
   753                           
   754                           ;Lab3.c: 104: Print_To_LCD(add);
   755  000778  0E08               	movlw	low main@add
   756  00077A  6E01               	movwf	Print_To_LCD@tempPtr,c
   757  00077C  0E00               	movlw	high main@add
   758  00077E  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   759  000780  EC35  F004         	call	_Print_To_LCD	;wreg free
   760                           
   761                           ;Lab3.c: 105: Print_To_LCD(addlow);
   762  000784  0E30               	movlw	low main@addlow
   763  000786  6E01               	movwf	Print_To_LCD@tempPtr,c
   764  000788  0E00               	movlw	high main@addlow
   765  00078A  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   766  00078C  EC35  F004         	call	_Print_To_LCD	;wreg free
   767                           
   768                           ;Lab3.c: 106: }
   769  000790  D7AE               	goto	l61
   770  000792                     l65:
   771  000792  FFFF               	dw	65535	; assembler added errata NOP
   772                           
   773                           ;Lab3.c: 107: else if(SWA == 0 && SWB == 1)
   774  000794  504A               	movf	main@SWA,w,c
   775  000796  A4D8               	btfss	status,2,c
   776  000798  D00A               	goto	l67
   777  00079A  044B               	decf	main@SWB,w,c
   778  00079C  A4D8               	btfss	status,2,c
   779  00079E  D007               	goto	l67
   780                           
   781                           ;Lab3.c: 108: {
   782                           ;Lab3.c: 109: Print_To_LCD(sub);
   783  0007A0  0E12               	movlw	low main@sub
   784  0007A2  6E01               	movwf	Print_To_LCD@tempPtr,c
   785  0007A4  0E00               	movlw	high main@sub
   786  0007A6  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   787  0007A8  EC35  F004         	call	_Print_To_LCD	;wreg free
   788                           
   789                           ;Lab3.c: 110: }
   790  0007AC  D7A0               	goto	l61
   791  0007AE                     l67:
   792  0007AE  FFFF               	dw	65535	; assembler added errata NOP
   793                           
   794                           ;Lab3.c: 111: else if(SWA == 1 && SWB == 0)
   795  0007B0  044A               	decf	main@SWA,w,c
   796  0007B2  A4D8               	btfss	status,2,c
   797  0007B4  D00A               	goto	l69
   798  0007B6  504B               	movf	main@SWB,w,c
   799  0007B8  A4D8               	btfss	status,2,c
   800  0007BA  D007               	goto	l69
   801                           
   802                           ;Lab3.c: 112: {
   803                           ;Lab3.c: 113: Print_To_LCD(and);
   804  0007BC  0E1C               	movlw	low main@and
   805  0007BE  6E01               	movwf	Print_To_LCD@tempPtr,c
   806  0007C0  0E00               	movlw	high main@and
   807  0007C2  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   808  0007C4  EC35  F004         	call	_Print_To_LCD	;wreg free
   809                           
   810                           ;Lab3.c: 114: }
   811  0007C8  D792               	goto	l61
   812  0007CA                     l69:
   813  0007CA  FFFF               	dw	65535	; assembler added errata NOP
   814                           
   815                           ;Lab3.c: 115: else
   816                           ;Lab3.c: 116: {
   817                           ;Lab3.c: 117: Print_To_LCD(not);
   818  0007CC  0E26               	movlw	low main@not
   819  0007CE  6E01               	movwf	Print_To_LCD@tempPtr,c
   820  0007D0  0E00               	movlw	high main@not
   821  0007D2  6E02               	movwf	Print_To_LCD@tempPtr+1,c
   822  0007D4  EC35  F004         	call	_Print_To_LCD	;wreg free
   823  0007D8  D78A               	goto	l61
   824  0007DA                     __end_of_main:
   825                           	opt stack 0
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           wreg	equ	0xFE8
   832                           postdec1	equ	0xFE5
   833                           plusw1	equ	0xFE3
   834                           fsr1l	equ	0xFE1
   835                           plusw2	equ	0xFDB
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function ___lwmod *****************
   839 ;; Defined at:
   840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  dividend        2    0[COMRAM] unsigned int 
   843 ;;  divisor         2    2[COMRAM] unsigned int 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  counter         1    4[COMRAM] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2    0[COMRAM] unsigned int 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   855 ;;      Params:         4       0       0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0
   858 ;;      Totals:         5       0       0       0       0       0       0
   859 ;;Total ram usage:        5 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text1
   869  000952                     __ptext1:
   870                           	opt stack 0
   871  000952                     ___lwmod:
   872                           	opt stack 0
   873  000952  FFFF               	dw	65535	; assembler added errata NOP
   874                           
   875                           ;incstack = 0
   876  000954  5003               	movf	___lwmod@divisor,w,c
   877  000956  1004               	iorwf	___lwmod@divisor+1,w,c
   878  000958  B4D8               	btfsc	status,2,c
   879  00095A  D01C               	goto	l510
   880  00095C  0E01               	movlw	1
   881  00095E  6E05               	movwf	___lwmod@counter,c
   882  000960  D005               	goto	l505
   883  000962  FFFF               	dw	65535	; assembler added errata NOP
   884  000964  90D8               	bcf	status,0,c
   885  000966  3603               	rlcf	___lwmod@divisor,f,c
   886  000968  3604               	rlcf	___lwmod@divisor+1,f,c
   887  00096A  2A05               	incf	___lwmod@counter,f,c
   888  00096C                     l505:
   889  00096C  FFFF               	dw	65535	; assembler added errata NOP
   890  00096E  AE04               	btfss	___lwmod@divisor+1,7,c
   891  000970  D7F8               	goto	l506
   892  000972                     u310:
   893  000972  FFFF               	dw	65535	; assembler added errata NOP
   894  000974  5003               	movf	___lwmod@divisor,w,c
   895  000976  5C01               	subwf	___lwmod@dividend,w,c
   896  000978  5004               	movf	___lwmod@divisor+1,w,c
   897  00097A  5802               	subwfb	___lwmod@dividend+1,w,c
   898  00097C  A0D8               	btfss	status,0,c
   899  00097E  D004               	goto	l509
   900  000980  5003               	movf	___lwmod@divisor,w,c
   901  000982  5E01               	subwf	___lwmod@dividend,f,c
   902  000984  5004               	movf	___lwmod@divisor+1,w,c
   903  000986  5A02               	subwfb	___lwmod@dividend+1,f,c
   904  000988                     l509:
   905  000988  FFFF               	dw	65535	; assembler added errata NOP
   906  00098A  90D8               	bcf	status,0,c
   907  00098C  3204               	rrcf	___lwmod@divisor+1,f,c
   908  00098E  3203               	rrcf	___lwmod@divisor,f,c
   909  000990  2E05               	decfsz	___lwmod@counter,f,c
   910  000992  D7EF               	goto	u310
   911  000994                     l510:
   912  000994  FFFF               	dw	65535	; assembler added errata NOP
   913  000996  C001  F001         	movff	___lwmod@dividend,?___lwmod
   914  00099A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   915  00099E  0012               	return		;funcret
   916  0009A0  FFFF               	dw	65535	; errata NOP
   917  0009A2                     __end_of___lwmod:
   918                           	opt stack 0
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           plusw1	equ	0xFE3
   927                           fsr1l	equ	0xFE1
   928                           plusw2	equ	0xFDB
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function ___lwdiv *****************
   932 ;; Defined at:
   933 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  dividend        2    0[COMRAM] unsigned int 
   936 ;;  divisor         2    2[COMRAM] unsigned int 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  quotient        2    4[COMRAM] unsigned int 
   939 ;;  counter         1    6[COMRAM] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2    0[COMRAM] unsigned int 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   949 ;;      Params:         4       0       0       0       0       0       0
   950 ;;      Locals:         3       0       0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0
   952 ;;      Totals:         7       0       0       0       0       0       0
   953 ;;Total ram usage:        7 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text2
   963  0008F2                     __ptext2:
   964                           	opt stack 0
   965  0008F2                     ___lwdiv:
   966                           	opt stack 0
   967  0008F2  FFFF               	dw	65535	; assembler added errata NOP
   968                           
   969                           ;incstack = 0
   970  0008F4  0E00               	movlw	0
   971  0008F6  6E06               	movwf	___lwdiv@quotient+1,c
   972  0008F8  0E00               	movlw	0
   973  0008FA  6E05               	movwf	___lwdiv@quotient,c
   974  0008FC  5003               	movf	___lwdiv@divisor,w,c
   975  0008FE  1004               	iorwf	___lwdiv@divisor+1,w,c
   976  000900  B4D8               	btfsc	status,2,c
   977  000902  D020               	goto	l500
   978  000904  0E01               	movlw	1
   979  000906  6E07               	movwf	___lwdiv@counter,c
   980  000908  D005               	goto	l495
   981  00090A  FFFF               	dw	65535	; assembler added errata NOP
   982  00090C  90D8               	bcf	status,0,c
   983  00090E  3603               	rlcf	___lwdiv@divisor,f,c
   984  000910  3604               	rlcf	___lwdiv@divisor+1,f,c
   985  000912  2A07               	incf	___lwdiv@counter,f,c
   986  000914                     l495:
   987  000914  FFFF               	dw	65535	; assembler added errata NOP
   988  000916  AE04               	btfss	___lwdiv@divisor+1,7,c
   989  000918  D7F8               	goto	l496
   990  00091A                     u280:
   991  00091A  FFFF               	dw	65535	; assembler added errata NOP
   992  00091C  90D8               	bcf	status,0,c
   993  00091E  3605               	rlcf	___lwdiv@quotient,f,c
   994  000920  3606               	rlcf	___lwdiv@quotient+1,f,c
   995  000922  5003               	movf	___lwdiv@divisor,w,c
   996  000924  5C01               	subwf	___lwdiv@dividend,w,c
   997  000926  5004               	movf	___lwdiv@divisor+1,w,c
   998  000928  5802               	subwfb	___lwdiv@dividend+1,w,c
   999  00092A  A0D8               	btfss	status,0,c
  1000  00092C  D005               	goto	l499
  1001  00092E  5003               	movf	___lwdiv@divisor,w,c
  1002  000930  5E01               	subwf	___lwdiv@dividend,f,c
  1003  000932  5004               	movf	___lwdiv@divisor+1,w,c
  1004  000934  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1005  000936  8005               	bsf	___lwdiv@quotient,0,c
  1006  000938                     l499:
  1007  000938  FFFF               	dw	65535	; assembler added errata NOP
  1008  00093A  90D8               	bcf	status,0,c
  1009  00093C  3204               	rrcf	___lwdiv@divisor+1,f,c
  1010  00093E  3203               	rrcf	___lwdiv@divisor,f,c
  1011  000940  2E07               	decfsz	___lwdiv@counter,f,c
  1012  000942  D7EB               	goto	u280
  1013  000944                     l500:
  1014  000944  FFFF               	dw	65535	; assembler added errata NOP
  1015  000946  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1016  00094A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1017  00094E  0012               	return		;funcret
  1018  000950  FFFF               	dw	65535	; errata NOP
  1019  000952                     __end_of___lwdiv:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           plusw1	equ	0xFE3
  1029                           fsr1l	equ	0xFE1
  1030                           plusw2	equ	0xFDB
  1031                           status	equ	0xFD8
  1032                           
  1033 ;; *************** function _Print_To_LCD *****************
  1034 ;; Defined at:
  1035 ;;		line 205 in file "Lab3.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  tempPtr         2    0[COMRAM] PTR const unsigned char 
  1038 ;;		 -> main@not(10), main@and(10), main@sub(10), main@addlow(10), 
  1039 ;;		 -> main@add(10), Clear2(10), Clear1(10), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  currentChar     1    3[COMRAM] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         2       0       0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0       0       0
  1053 ;;      Temps:          1       0       0       0       0       0       0
  1054 ;;      Totals:         4       0       0       0       0       0       0
  1055 ;;Total ram usage:        4 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text3
  1065  00086A                     __ptext3:
  1066                           	opt stack 0
  1067  00086A                     _Print_To_LCD:
  1068                           	opt stack 0
  1069  00086A  FFFF               	dw	65535	; assembler added errata NOP
  1070                           
  1071                           ;Lab3.c: 207: char currentChar;
  1072                           ;Lab3.c: 208: PORTEbits.RE0 = 0;
  1073                           
  1074                           ;incstack = 0
  1075  00086C  9084               	bcf	3972,0,c	;volatile
  1076                           
  1077                           ;Lab3.c: 210: while (*tempPtr)
  1078  00086E  D029               	goto	l85
  1079  000870  FFFF               	dw	65535	; assembler added errata NOP
  1080                           
  1081                           ;Lab3.c: 211: {
  1082                           ;Lab3.c: 212: currentChar = *tempPtr;
  1083  000872  C001  FFF6         	movff	Print_To_LCD@tempPtr,tblptrl
  1084  000876  C002  FFF7         	movff	Print_To_LCD@tempPtr+1,tblptrh
  1085  00087A  6AF8               	clrf	tblptru,c
  1086  00087C  0E05               	movlw	(high __ramtop+-1)
  1087  00087E  64F7               	cpfsgt	tblptrh,c
  1088  000880  D004               	bra	u247
  1089  000882  0008               	tblrd		*
  1090  000884  FFFF               	dw	65535	; errata NOP
  1091  000886  50F5               	movf	tablat,w,c
  1092  000888  D005               	bra	u240
  1093  00088A                     u247:
  1094  00088A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1095  00088E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1096  000892  50EF               	movf	indf0,w,c
  1097  000894                     u240:
  1098  000894  6E04               	movwf	Print_To_LCD@currentChar,c
  1099                           
  1100                           ;Lab3.c: 213: PORTEbits.RE1 = 1;
  1101  000896  8284               	bsf	3972,1,c	;volatile
  1102                           
  1103                           ;Lab3.c: 214: PORTD = currentChar;
  1104  000898  C004  FF83         	movff	Print_To_LCD@currentChar,3971	;volatile
  1105                           
  1106                           ;Lab3.c: 215: PORTEbits.RE1 = 0;
  1107  00089C  9284               	bcf	3972,1,c	;volatile
  1108                           
  1109                           ;Lab3.c: 216: currentChar <<= 4;
  1110  00089E  3A04               	swapf	Print_To_LCD@currentChar,f,c
  1111  0008A0  0EF0               	movlw	240
  1112  0008A2  1604               	andwf	Print_To_LCD@currentChar,f,c
  1113                           
  1114                           ;Lab3.c: 217: PORTEbits.RE1 = 1;
  1115  0008A4  8284               	bsf	3972,1,c	;volatile
  1116                           
  1117                           ;Lab3.c: 218: PORTD = currentChar;
  1118  0008A6  C004  FF83         	movff	Print_To_LCD@currentChar,3971	;volatile
  1119                           
  1120                           ;Lab3.c: 219: PORTEbits.RE1 = 0;
  1121  0008AA  9284               	bcf	3972,1,c	;volatile
  1122                           
  1123                           ;Lab3.c: 220: _delay((unsigned long)((10)*(10000000/4000.0)));
  1124  0008AC  0E19               	movlw	25
  1125  0008AE  6E03               	movwf	??_Print_To_LCD& (0+255),c
  1126  0008B0  0E5D               	movlw	93
  1127  0008B2                     u457:
  1128  0008B2  FFFF               	dw	65535	; errata NOP
  1129  0008B4  2EE8               	decfsz	wreg,f,c
  1130  0008B6  D7FD               	bra	u457
  1131  0008B8  2E03               	decfsz	??_Print_To_LCD& (0+255),f,c
  1132  0008BA  D7FB               	bra	u457
  1133                           
  1134                           ;Lab3.c: 221: PORTEbits.RE0 = 1;
  1135  0008BC  8084               	bsf	3972,0,c	;volatile
  1136                           
  1137                           ;Lab3.c: 222: tempPtr++;
  1138  0008BE  4A01               	infsnz	Print_To_LCD@tempPtr,f,c
  1139  0008C0  2A02               	incf	Print_To_LCD@tempPtr+1,f,c
  1140  0008C2                     l85:
  1141  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  1142  0008C4  C001  FFF6         	movff	Print_To_LCD@tempPtr,tblptrl
  1143  0008C8  C002  FFF7         	movff	Print_To_LCD@tempPtr+1,tblptrh
  1144  0008CC  6AF8               	clrf	tblptru,c
  1145  0008CE  0E05               	movlw	(high __ramtop+-1)
  1146  0008D0  64F7               	cpfsgt	tblptrh,c
  1147  0008D2  D004               	bra	u257
  1148  0008D4  0008               	tblrd		*
  1149  0008D6  FFFF               	dw	65535	; errata NOP
  1150  0008D8  50F5               	movf	tablat,w,c
  1151  0008DA  D005               	bra	u250
  1152  0008DC                     u257:
  1153  0008DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1154  0008E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1155  0008E4  50EF               	movf	indf0,w,c
  1156  0008E6                     u250:
  1157  0008E6  0900               	iorlw	0
  1158  0008E8  B4D8               	btfsc	status,2,c
  1159  0008EA  0012               	return		;funcret
  1160  0008EC  FFFF               	dw	65535	; assembler added errata NOP
  1161  0008EE  D7C0               	goto	l86
  1162  0008F0  FFFF               	dw	65535	; errata NOP
  1163  0008F2                     __end_of_Print_To_LCD:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           indf0	equ	0xFEF
  1170                           postinc0	equ	0xFEE
  1171                           fsr0h	equ	0xFEA
  1172                           fsr0l	equ	0xFE9
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           plusw1	equ	0xFE3
  1176                           fsr1l	equ	0xFE1
  1177                           plusw2	equ	0xFDB
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _Initialize_PIC *****************
  1181 ;; Defined at:
  1182 ;;		line 142 in file "Lab3.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1196 ;;      Params:         0       0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    1
  1203 ;; This function calls:
  1204 ;;		_Initialize_LCD
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text4
  1211  000A1E                     __ptext4:
  1212                           	opt stack 0
  1213  000A1E                     _Initialize_PIC:
  1214                           	opt stack 0
  1215  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  1216                           
  1217                           ;Lab3.c: 146: ADCON1 = 0b10001110;
  1218                           
  1219                           ;incstack = 0
  1220  000A20  0E8E               	movlw	142
  1221  000A22  6EC1               	movwf	4033,c	;volatile
  1222                           
  1223                           ;Lab3.c: 147: TRISA = 0b11100001;
  1224  000A24  0EE1               	movlw	225
  1225  000A26  6E92               	movwf	3986,c	;volatile
  1226                           
  1227                           ;Lab3.c: 148: TRISB = 0b11011100;
  1228  000A28  0EDC               	movlw	220
  1229  000A2A  6E93               	movwf	3987,c	;volatile
  1230                           
  1231                           ;Lab3.c: 149: TRISC = 0b11010000;
  1232  000A2C  0ED0               	movlw	208
  1233  000A2E  6E94               	movwf	3988,c	;volatile
  1234                           
  1235                           ;Lab3.c: 150: TRISD = 0b00001111;
  1236  000A30  0E0F               	movlw	15
  1237  000A32  6E95               	movwf	3989,c	;volatile
  1238                           
  1239                           ;Lab3.c: 151: TRISE = 0b00000000;
  1240  000A34  0E00               	movlw	0
  1241  000A36  6E96               	movwf	3990,c	;volatile
  1242                           
  1243                           ;Lab3.c: 152: PORTA = 0b00010000;
  1244  000A38  0E10               	movlw	16
  1245  000A3A  6E80               	movwf	3968,c	;volatile
  1246                           
  1247                           ;Lab3.c: 153: PORTAbits.RA3 = 0;
  1248  000A3C  9680               	bcf	3968,3,c	;volatile
  1249                           
  1250                           ;Lab3.c: 154: PORTAbits.RA2 = 0;
  1251  000A3E  9480               	bcf	3968,2,c	;volatile
  1252                           
  1253                           ;Lab3.c: 155: PORTAbits.RA1 = 0;
  1254  000A40  9280               	bcf	3968,1,c	;volatile
  1255                           
  1256                           ;Lab3.c: 156: Initialize_LCD();
  1257  000A42  ECED  F003         	call	_Initialize_LCD	;wreg free
  1258  000A46  0012               	return		;funcret
  1259  000A48  FFFF               	dw	65535	; errata NOP
  1260  000A4A                     __end_of_Initialize_PIC:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           indf0	equ	0xFEF
  1267                           postinc0	equ	0xFEE
  1268                           fsr0h	equ	0xFEA
  1269                           fsr0l	equ	0xFE9
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           plusw1	equ	0xFE3
  1273                           fsr1l	equ	0xFE1
  1274                           plusw2	equ	0xFDB
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _Initialize_LCD *****************
  1278 ;; Defined at:
  1279 ;;		line 167 in file "Lab3.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  tempPtr         2    2[COMRAM] PTR unsigned char 
  1284 ;;		 -> LCDstr(8), 
  1285 ;;  currentChar     1    4[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         0       0       0       0       0       0       0
  1296 ;;      Locals:         3       0       0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0
  1298 ;;      Totals:         5       0       0       0       0       0       0
  1299 ;;Total ram usage:        5 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_Initialize_PIC
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text5
  1309  0007DA                     __ptext5:
  1310                           	opt stack 0
  1311  0007DA                     _Initialize_LCD:
  1312                           	opt stack 0
  1313  0007DA  FFFF               	dw	65535	; assembler added errata NOP
  1314                           
  1315                           ;Lab3.c: 169: char currentChar;
  1316                           ;Lab3.c: 170: char *tempPtr;
  1317                           ;Lab3.c: 172: _delay((unsigned long)((100)*(10000000/4000.0)));
  1318                           
  1319                           ;incstack = 0
  1320  0007DC  0E01               	movlw	1
  1321  0007DE  6E02               	movwf	(??_Initialize_LCD+1)& (0+255),c
  1322  0007E0  0EF4               	movlw	244
  1323  0007E2  6E01               	movwf	??_Initialize_LCD& (0+255),c
  1324  0007E4  0EA8               	movlw	168
  1325  0007E6                     u467:
  1326  0007E6  FFFF               	dw	65535	; errata NOP
  1327  0007E8  2EE8               	decfsz	wreg,f,c
  1328  0007EA  D7FD               	bra	u467
  1329  0007EC  2E01               	decfsz	??_Initialize_LCD& (0+255),f,c
  1330  0007EE  D7FB               	bra	u467
  1331  0007F0  2E02               	decfsz	(??_Initialize_LCD+1)& (0+255),f,c
  1332  0007F2  D7F9               	bra	u467
  1333  0007F4  D000               	nop2	
  1334                           
  1335                           ;Lab3.c: 174: PORTEbits.RE0 = 0;
  1336  0007F6  9084               	bcf	3972,0,c	;volatile
  1337                           
  1338                           ;Lab3.c: 175: tempPtr = LCDstr;
  1339  0007F8  0E15               	movlw	low _LCDstr
  1340  0007FA  6E03               	movwf	Initialize_LCD@tempPtr,c
  1341  0007FC  0E06               	movlw	high _LCDstr
  1342  0007FE  6E04               	movwf	Initialize_LCD@tempPtr+1,c
  1343                           
  1344                           ;Lab3.c: 177: while (*tempPtr)
  1345  000800  D026               	goto	l79
  1346  000802  FFFF               	dw	65535	; assembler added errata NOP
  1347                           
  1348                           ;Lab3.c: 178: {
  1349                           ;Lab3.c: 179: currentChar = *tempPtr;
  1350  000804  C003  FFF6         	movff	Initialize_LCD@tempPtr,tblptrl
  1351  000808  C004  FFF7         	movff	Initialize_LCD@tempPtr+1,tblptrh
  1352  00080C                     	if	0	;tblptru may be non-zero
  1353  00080C                     	endif
  1354  00080C                     	if	0	;tblptru may be non-zero
  1355  00080C                     	endif
  1356  00080C  0008               	tblrd		*
  1357  00080E  FFFF               	dw	65535	; errata NOP
  1358  000810  CFF5 F005          	movff	tablat,Initialize_LCD@currentChar
  1359                           
  1360                           ;Lab3.c: 180: PORTEbits.RE1 = 1;
  1361  000814  8284               	bsf	3972,1,c	;volatile
  1362                           
  1363                           ;Lab3.c: 181: PORTD = currentChar;
  1364  000816  C005  FF83         	movff	Initialize_LCD@currentChar,3971	;volatile
  1365                           
  1366                           ;Lab3.c: 182: PORTEbits.RE1 = 0;
  1367  00081A  9284               	bcf	3972,1,c	;volatile
  1368                           
  1369                           ;Lab3.c: 183: _delay((unsigned long)((10)*(10000000/4000.0)));
  1370  00081C  0E19               	movlw	25
  1371  00081E  6E01               	movwf	??_Initialize_LCD& (0+255),c
  1372  000820  0E5D               	movlw	93
  1373  000822                     u477:
  1374  000822  FFFF               	dw	65535	; errata NOP
  1375  000824  2EE8               	decfsz	wreg,f,c
  1376  000826  D7FD               	bra	u477
  1377  000828  2E01               	decfsz	??_Initialize_LCD& (0+255),f,c
  1378  00082A  D7FB               	bra	u477
  1379                           
  1380                           ;Lab3.c: 184: currentChar <<= 4;
  1381  00082C  3A05               	swapf	Initialize_LCD@currentChar,f,c
  1382  00082E  0EF0               	movlw	240
  1383  000830  1605               	andwf	Initialize_LCD@currentChar,f,c
  1384                           
  1385                           ;Lab3.c: 185: PORTEbits.RE1 = 1;
  1386  000832  8284               	bsf	3972,1,c	;volatile
  1387                           
  1388                           ;Lab3.c: 186: PORTD = currentChar;
  1389  000834  C005  FF83         	movff	Initialize_LCD@currentChar,3971	;volatile
  1390                           
  1391                           ;Lab3.c: 187: PORTEbits.RE1 = 0;
  1392  000838  9284               	bcf	3972,1,c	;volatile
  1393                           
  1394                           ;Lab3.c: 188: _delay((unsigned long)((10)*(10000000/4000.0)));
  1395  00083A  0E19               	movlw	25
  1396  00083C  6E01               	movwf	??_Initialize_LCD& (0+255),c
  1397  00083E  0E5D               	movlw	93
  1398  000840                     u487:
  1399  000840  FFFF               	dw	65535	; errata NOP
  1400  000842  2EE8               	decfsz	wreg,f,c
  1401  000844  D7FD               	bra	u487
  1402  000846  2E01               	decfsz	??_Initialize_LCD& (0+255),f,c
  1403  000848  D7FB               	bra	u487
  1404                           
  1405                           ;Lab3.c: 189: tempPtr++;
  1406  00084A  4A03               	infsnz	Initialize_LCD@tempPtr,f,c
  1407  00084C  2A04               	incf	Initialize_LCD@tempPtr+1,f,c
  1408  00084E                     l79:
  1409  00084E  FFFF               	dw	65535	; assembler added errata NOP
  1410  000850  C003  FFF6         	movff	Initialize_LCD@tempPtr,tblptrl
  1411  000854  C004  FFF7         	movff	Initialize_LCD@tempPtr+1,tblptrh
  1412  000858                     	if	0	;tblptru may be non-zero
  1413  000858                     	endif
  1414  000858                     	if	0	;tblptru may be non-zero
  1415  000858                     	endif
  1416  000858  0008               	tblrd		*
  1417  00085A  FFFF               	dw	65535	; errata NOP
  1418  00085C  50F5               	movf	tablat,w,c
  1419  00085E  0900               	iorlw	0
  1420  000860  B4D8               	btfsc	status,2,c
  1421  000862  0012               	return		;funcret
  1422  000864  FFFF               	dw	65535	; assembler added errata NOP
  1423  000866  D7CD               	goto	l80
  1424  000868  FFFF               	dw	65535	; errata NOP
  1425  00086A                     __end_of_Initialize_LCD:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           indf0	equ	0xFEF
  1432                           postinc0	equ	0xFEE
  1433                           fsr0h	equ	0xFEA
  1434                           fsr0l	equ	0xFE9
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           plusw1	equ	0xFE3
  1438                           fsr1l	equ	0xFE1
  1439                           plusw2	equ	0xFDB
  1440                           status	equ	0xFD8
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           indf0	equ	0xFEF
  1446                           postinc0	equ	0xFEE
  1447                           fsr0h	equ	0xFEA
  1448                           fsr0l	equ	0xFE9
  1449                           wreg	equ	0xFE8
  1450                           postdec1	equ	0xFE5
  1451                           plusw1	equ	0xFE3
  1452                           fsr1l	equ	0xFE1
  1453                           plusw2	equ	0xFDB
  1454                           status	equ	0xFD8
  1455                           
  1456                           	psect	rparam
  1457  0000                     tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           indf0	equ	0xFEF
  1462                           postinc0	equ	0xFEE
  1463                           fsr0h	equ	0xFEA
  1464                           fsr0l	equ	0xFE9
  1465                           wreg	equ	0xFE8
  1466                           postdec1	equ	0xFE5
  1467                           plusw1	equ	0xFE3
  1468                           fsr1l	equ	0xFE1
  1469                           plusw2	equ	0xFDB
  1470                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    28
    Data        70
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     77     127
    BANK0           128      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    Print_To_LCD@tempPtr	PTR const unsigned char  size(2) Largest target is 10
		 -> main@not(COMRAM[10]), main@and(COMRAM[10]), main@sub(COMRAM[10]), main@addlow(COMRAM[10]), 
		 -> main@add(COMRAM[10]), Clear2(CODE[10]), Clear1(CODE[10]), 

    Initialize_LCD@tempPtr	PTR unsigned char  size(2) Largest target is 8
		 -> LCDstr(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _Initialize_PIC->_Initialize_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0    1816
                                              7 COMRAM    70    70      0
                     _Initialize_PIC
                       _Print_To_LCD
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Print_To_LCD                                         4     2      2     623
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Initialize_PIC                                       0     0      0      92
                     _Initialize_LCD
 ---------------------------------------------------------------------------------
 (2) _Initialize_LCD                                       5     5      0      92
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_PIC
     _Initialize_LCD
   _Print_To_LCD
   ___lwdiv
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      14       4       15.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4D      7F       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93      14        0.0%
DATA                 0      0      93      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Feb 27 15:58:08 2018

                                               l61 06EE                                                 l62 0756  
                                               l63 0706                                                 l80 0802  
                                               l65 0792                                                 l67 07AE  
                                               l85 08C2                                                 l69 07CA  
                                               l86 0870                                                 l79 084E  
                                      __CFG_OSC$HS 000000                                                l500 0944  
                                              l510 0994                                                l505 096C  
                                              l506 0962                                                l509 0988  
                                              l495 0914                                                l496 090A  
                                              l499 0938                                                u310 0972  
                                              u240 0894                                                u250 08E6  
                                              u331 069E                                                u341 06B0  
                                              u247 088A                                                u351 06C2  
                                              u280 091A                                                u257 08DC  
                                              u361 06D4                                                u371 06E6  
                                              u457 08B2                                                u467 07E6  
                                              u477 0822                                                u487 0840  
                                     __CFG_BOR$OFF 000000                                                wreg 000FE8  
                                      main@decimal 0048                                       __CFG_LVP$OFF 000000  
                                     __CFG_WDT$OFF 000000                                       __CFG_STVR$ON 000000  
                                             _main 061E                                               fsr0h 000FEA  
                                             indf0 000FEF                                               fsr0l 000FE9  
                                             fsr1l 000FE1                                               start 0002  
                                     ___param_bank 000000                                      __CFG_OSCS$OFF 000000  
                                            ?_main 0001                                    __end_of___lwdiv 0952  
                                  __end_of___lwmod 09A2                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _PORTD 000F83                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                    __CFG_PWRT$OFF 000000                                              _Str_1 008A  
                                            _Str_2 0080                                              main@B 003E  
                                            main@C 0043                                              tablat 000FF5  
                        Initialize_LCD@currentChar 0005                                              plusw1 000FE3  
                                            plusw2 000FDB                                              status 000FD8  
                                  __initialization 09A2                            __size_of_Initialize_LCD 0090  
                          __size_of_Initialize_PIC 002C                                       __end_of_main 07DA  
                                           ??_main 0008                                      __activetblptr 000002  
                                  __CFG_CCP2MUX$ON 000000                                             _ADCON1 000FC1  
                                           _LCDstr 0615                                             _Clear1 060B  
                                           _Clear2 0601                                          ??___lwdiv 0005  
                                        ??___lwmod 0005                                             main@B0 003D  
                                           main@B1 003C                                             main@C0 0042  
                                           main@B2 003B                                             main@C1 0041  
                                           main@B3 003A                                             main@C2 0040  
                                           main@C3 003F                                       __pdataCOMRAM 004E  
                              Print_To_LCD@tempPtr 0001                                       __mediumconst 0000  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                         __accesstop 0080  
                          __end_of__initialization 09E2                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 0A4A  
                                   _Initialize_LCD 07DA                                     _Initialize_PIC 0A1E  
                           __end_of_Initialize_LCD 086A                             __end_of_Initialize_PIC 0A4A  
                                          __Hparam 0000                                            __Lparam 0000  
                                    ?_Print_To_LCD 0001                                            ___lwdiv 08F2  
                                          ___lwmod 0952                                       __psmallconst 0600  
                                          __pcinit 09A2                                            __ramtop 0600  
                                          __ptext0 061E                                            __ptext1 0952  
                                          __ptext2 08F2                                            __ptext3 086A  
                                          __ptext4 0A1E                                            __ptext5 07DA  
                                          main@SWA 004A                                            main@SWB 004B  
                                          main@add 0008                                            main@and 001C  
                                          main@rem 0044                                            main@not 0026  
                                          main@num 004C                                            main@sub 0012  
                             end_of_initialization 09E2                                      __Lmediumconst 0000  
                                  ?_Initialize_LCD 0001                                    ?_Initialize_PIC 0001  
                                   ??_Print_To_LCD 0003                                            postdec1 000FE5  
                                          postinc0 000FEE                                          _PORTAbits 000F80  
                                        _PORTBbits 000F81                                          _PORTCbits 000F82  
                                        _PORTEbits 000F84                            Print_To_LCD@currentChar 0004  
                                       main@addlow 0030                                     __end_of_LCDstr 061D  
                                   __end_of_Clear1 0615                                     __end_of_Clear2 060B  
                                    __pidataCOMRAM 09EC                                start_initialization 09A2  
                                      __pdataBANK0 0080                               __end_of_Print_To_LCD 08F2  
                                 ___lwdiv@dividend 0001                                           ?___lwdiv 0001  
                                         ?___lwmod 0001                                        __smallconst 0600  
                                 ___lwdiv@quotient 0005                                   ??_Initialize_LCD 0001  
                                 ??_Initialize_PIC 0006                                          main@F2501 006C  
                                        main@F2503 0062                                          main@F2505 0058  
                                        main@F2507 004E                                          main@F2499 0076  
                                        copy_data0 09B6                                          copy_data1 09D6  
                            Initialize_LCD@tempPtr 0003                                           __Hrparam 0000  
                                         __Lrparam 0000                                   __size_of___lwdiv 0060  
                                 __size_of___lwmod 0050                              __size_of_Print_To_LCD 0088  
                                  ___lwdiv@divisor 0003                                    ___lwdiv@counter 0007  
                                    __size_of_main 01BC                                       _Print_To_LCD 086A  
                                         main@base 0046                                   ___lwmod@dividend 0001  
                                  ___lwmod@divisor 0003                                    ___lwmod@counter 0005  
