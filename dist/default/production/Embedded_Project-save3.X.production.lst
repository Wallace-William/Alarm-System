

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 10 12:40:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4520 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK0
    99  0030E7                     __pidataBANK0:
   100                           	opt stack 0
   101                           
   102                           ;initializer for _threshold_loc
   103  0030E7  30                 	db	48
   104                           
   105                           ;initializer for _temp_loc
   106  0030E8  20                 	db	32
   107                           
   108                           	psect	idataBANK1
   109  0030E4                     __pidataBANK1:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _keypad_active_loc
   113  0030E4  50                 	db	80
   114                           
   115                           ;initializer for _system_active_loc
   116  0030E5  40                 	db	64
   117                           
   118                           ;initializer for _alarm_loc
   119  0030E6  10                 	db	16
   120                           
   121                           	psect	mediumconst
   122  0078F4                     __pmediumconst:
   123                           	opt stack 0
   124  0078F4  00                 	db	0
   125  0078F5                     _dpowers:
   126                           	opt stack 0
   127  0078F5  0001               	dw	1
   128  0078F7  0000               	dw	0
   129  0078F9  000A               	dw	10
   130  0078FB  0000               	dw	0
   131  0078FD  0064               	dw	100
   132  0078FF  0000               	dw	0
   133  007901  03E8               	dw	1000
   134  007903  0000               	dw	0
   135  007905  2710               	dw	10000
   136  007907  0000               	dw	0
   137  007909  86A0               	dw	34464
   138  00790B  0001               	dw	1
   139  00790D  4240               	dw	16960
   140  00790F  000F               	dw	15
   141  007911  9680               	dw	38528
   142  007913  0098               	dw	152
   143  007915  E100               	dw	57600
   144  007917  05F5               	dw	1525
   145  007919  CA00               	dw	51712
   146  00791B  3B9A               	dw	15258
   147  00791D                     __end_of_dpowers:
   148                           	opt stack 0
   149  0000                     _PORTDbits	set	3971
   150  0000                     _TRISDbits	set	3989
   151  0000                     _TMR0L	set	4054
   152  0000                     _TMR0H	set	4055
   153  0000                     _INTCON2bits	set	4081
   154  0000                     _ADCON2bits	set	4032
   155  0000                     _ADCON1bits	set	4033
   156  0000                     _IPR1bits	set	3999
   157  0000                     _PIE1bits	set	3997
   158  0000                     _RCONbits	set	4048
   159  0000                     _SPBRG	set	4015
   160  0000                     _TRISCbits	set	3988
   161  0000                     _TRISB	set	3987
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADRESL	set	4035
   166  0000                     _RCREG	set	4014
   167  0000                     _T0CONbits	set	4053
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _INTCON3bits	set	4080
   170  0000                     _PORTBbits	set	3969
   171  0000                     _EECON2	set	4007
   172  0000                     _INTCONbits	set	4082
   173  0000                     _EECON1bits	set	4006
   174  0000                     _EEDATA	set	4008
   175  0000                     _EEADR	set	4009
   176  0000                     _TXREG	set	4013
   177  0000                     _PIR1bits	set	3998
   178  00791D                     STR_32:
   179  00791D  54                 	db	84	;'T'
   180  00791E  65                 	db	101	;'e'
   181  00791F  6D                 	db	109	;'m'
   182  007920  70                 	db	112	;'p'
   183  007921  65                 	db	101	;'e'
   184  007922  72                 	db	114	;'r'
   185  007923  61                 	db	97	;'a'
   186  007924  74                 	db	116	;'t'
   187  007925  75                 	db	117	;'u'
   188  007926  72                 	db	114	;'r'
   189  007927  65                 	db	101	;'e'
   190  007928  20                 	db	32
   191  007929  54                 	db	84	;'T'
   192  00792A  68                 	db	104	;'h'
   193  00792B  72                 	db	114	;'r'
   194  00792C  65                 	db	101	;'e'
   195  00792D  73                 	db	115	;'s'
   196  00792E  68                 	db	104	;'h'
   197  00792F  6F                 	db	111	;'o'
   198  007930  6C                 	db	108	;'l'
   199  007931  64                 	db	100	;'d'
   200  007932  3A                 	db	58	;':'
   201  007933  20                 	db	32
   202  007934  25                 	db	37
   203  007935  64                 	db	100	;'d'
   204  007936  25                 	db	37
   205  007937  64                 	db	100	;'d'
   206  007938  0A                 	db	10
   207  007939  0D                 	db	13
   208  00793A  43                 	db	67	;'C'
   209  00793B  75                 	db	117	;'u'
   210  00793C  72                 	db	114	;'r'
   211  00793D  72                 	db	114	;'r'
   212  00793E  65                 	db	101	;'e'
   213  00793F  6E                 	db	110	;'n'
   214  007940  74                 	db	116	;'t'
   215  007941  20                 	db	32
   216  007942  54                 	db	84	;'T'
   217  007943  65                 	db	101	;'e'
   218  007944  6D                 	db	109	;'m'
   219  007945  70                 	db	112	;'p'
   220  007946  20                 	db	32
   221  007947  5B                 	db	91	;'['
   222  007948  46                 	db	70	;'F'
   223  007949  5D                 	db	93	;']'
   224  00794A  3A                 	db	58	;':'
   225  00794B  20                 	db	32
   226  00794C  25                 	db	37
   227  00794D  6C                 	db	108	;'l'
   228  00794E  64                 	db	100	;'d'
   229  00794F  0A                 	db	10
   230  007950  0D                 	db	13
   231  007951  0A                 	db	10
   232  007952  0D                 	db	13
   233  007953  41                 	db	65	;'A'
   234  007954  6C                 	db	108	;'l'
   235  007955  61                 	db	97	;'a'
   236  007956  72                 	db	114	;'r'
   237  007957  6D                 	db	109	;'m'
   238  007958  20                 	db	32
   239  007959  53                 	db	83	;'S'
   240  00795A  79                 	db	121	;'y'
   241  00795B  73                 	db	115	;'s'
   242  00795C  74                 	db	116	;'t'
   243  00795D  65                 	db	101	;'e'
   244  00795E  6D                 	db	109	;'m'
   245  00795F  0A                 	db	10
   246  007960  0D                 	db	13
   247  007961  2D                 	db	45
   248  007962  2D                 	db	45
   249  007963  2D                 	db	45
   250  007964  2D                 	db	45
   251  007965  2D                 	db	45
   252  007966  2D                 	db	45
   253  007967  2D                 	db	45
   254  007968  2D                 	db	45
   255  007969  2D                 	db	45
   256  00796A  2D                 	db	45
   257  00796B  2D                 	db	45
   258  00796C  2D                 	db	45
   259  00796D  2D                 	db	45
   260  00796E  2D                 	db	45
   261  00796F  2D                 	db	45
   262  007970  2D                 	db	45
   263  007971  2D                 	db	45
   264  007972  0A                 	db	10
   265  007973  0D                 	db	13
   266  007974  31                 	db	49	;'1'
   267  007975  29                 	db	41
   268  007976  50                 	db	80	;'P'
   269  007977  61                 	db	97	;'a'
   270  007978  73                 	db	115	;'s'
   271  007979  73                 	db	115	;'s'
   272  00797A  77                 	db	119	;'w'
   273  00797B  6F                 	db	111	;'o'
   274  00797C  72                 	db	114	;'r'
   275  00797D  64                 	db	100	;'d'
   276  00797E  0A                 	db	10
   277  00797F  0D                 	db	13
   278  007980  32                 	db	50	;'2'
   279  007981  29                 	db	41
   280  007982  50                 	db	80	;'P'
   281  007983  49                 	db	73	;'I'
   282  007984  52                 	db	82	;'R'
   283  007985  20                 	db	32
   284  007986  53                 	db	83	;'S'
   285  007987  65                 	db	101	;'e'
   286  007988  6E                 	db	110	;'n'
   287  007989  73                 	db	115	;'s'
   288  00798A  6F                 	db	111	;'o'
   289  00798B  72                 	db	114	;'r'
   290  00798C  0A                 	db	10
   291  00798D  0D                 	db	13
   292  00798E  33                 	db	51	;'3'
   293  00798F  29                 	db	41
   294  007990  54                 	db	84	;'T'
   295  007991  65                 	db	101	;'e'
   296  007992  6D                 	db	109	;'m'
   297  007993  70                 	db	112	;'p'
   298  007994  20                 	db	32
   299  007995  53                 	db	83	;'S'
   300  007996  65                 	db	101	;'e'
   301  007997  6E                 	db	110	;'n'
   302  007998  73                 	db	115	;'s'
   303  007999  6F                 	db	111	;'o'
   304  00799A  72                 	db	114	;'r'
   305  00799B  0A                 	db	10
   306  00799C  0D                 	db	13
   307  00799D  34                 	db	52	;'4'
   308  00799E  29                 	db	41
   309  00799F  49                 	db	73	;'I'
   310  0079A0  6E                 	db	110	;'n'
   311  0079A1  70                 	db	112	;'p'
   312  0079A2  75                 	db	117	;'u'
   313  0079A3  74                 	db	116	;'t'
   314  0079A4  20                 	db	32
   315  0079A5  4D                 	db	77	;'M'
   316  0079A6  65                 	db	101	;'e'
   317  0079A7  74                 	db	116	;'t'
   318  0079A8  68                 	db	104	;'h'
   319  0079A9  6F                 	db	111	;'o'
   320  0079AA  64                 	db	100	;'d'
   321  0079AB  0A                 	db	10
   322  0079AC  0D                 	db	13
   323  0079AD  2D                 	db	45
   324  0079AE  2D                 	db	45
   325  0079AF  2D                 	db	45
   326  0079B0  2D                 	db	45
   327  0079B1  2D                 	db	45
   328  0079B2  2D                 	db	45
   329  0079B3  2D                 	db	45
   330  0079B4  2D                 	db	45
   331  0079B5  2D                 	db	45
   332  0079B6  2D                 	db	45
   333  0079B7  2D                 	db	45
   334  0079B8  2D                 	db	45
   335  0079B9  2D                 	db	45
   336  0079BA  2D                 	db	45
   337  0079BB  2D                 	db	45
   338  0079BC  2D                 	db	45
   339  0079BD  0A                 	db	10
   340  0079BE  0D                 	db	13
   341  0079BF  00                 	db	0
   342  0079C0                     STR_82:
   343  0079C0  54                 	db	84	;'T'
   344  0079C1  65                 	db	101	;'e'
   345  0079C2  6D                 	db	109	;'m'
   346  0079C3  70                 	db	112	;'p'
   347  0079C4  65                 	db	101	;'e'
   348  0079C5  72                 	db	114	;'r'
   349  0079C6  61                 	db	97	;'a'
   350  0079C7  74                 	db	116	;'t'
   351  0079C8  75                 	db	117	;'u'
   352  0079C9  72                 	db	114	;'r'
   353  0079CA  65                 	db	101	;'e'
   354  0079CB  20                 	db	32
   355  0079CC  54                 	db	84	;'T'
   356  0079CD  68                 	db	104	;'h'
   357  0079CE  72                 	db	114	;'r'
   358  0079CF  65                 	db	101	;'e'
   359  0079D0  73                 	db	115	;'s'
   360  0079D1  68                 	db	104	;'h'
   361  0079D2  6F                 	db	111	;'o'
   362  0079D3  6C                 	db	108	;'l'
   363  0079D4  64                 	db	100	;'d'
   364  0079D5  3A                 	db	58	;':'
   365  0079D6  20                 	db	32
   366  0079D7  25                 	db	37
   367  0079D8  64                 	db	100	;'d'
   368  0079D9  25                 	db	37
   369  0079DA  64                 	db	100	;'d'
   370  0079DB  0A                 	db	10
   371  0079DC  0D                 	db	13
   372  0079DD  43                 	db	67	;'C'
   373  0079DE  75                 	db	117	;'u'
   374  0079DF  72                 	db	114	;'r'
   375  0079E0  72                 	db	114	;'r'
   376  0079E1  65                 	db	101	;'e'
   377  0079E2  6E                 	db	110	;'n'
   378  0079E3  74                 	db	116	;'t'
   379  0079E4  20                 	db	32
   380  0079E5  54                 	db	84	;'T'
   381  0079E6  65                 	db	101	;'e'
   382  0079E7  6D                 	db	109	;'m'
   383  0079E8  70                 	db	112	;'p'
   384  0079E9  20                 	db	32
   385  0079EA  5B                 	db	91	;'['
   386  0079EB  46                 	db	70	;'F'
   387  0079EC  5D                 	db	93	;']'
   388  0079ED  3A                 	db	58	;':'
   389  0079EE  20                 	db	32
   390  0079EF  25                 	db	37
   391  0079F0  6C                 	db	108	;'l'
   392  0079F1  64                 	db	100	;'d'
   393  0079F2  0A                 	db	10
   394  0079F3  0D                 	db	13
   395  0079F4  0A                 	db	10
   396  0079F5  0D                 	db	13
   397  0079F6  54                 	db	84	;'T'
   398  0079F7  65                 	db	101	;'e'
   399  0079F8  6D                 	db	109	;'m'
   400  0079F9  70                 	db	112	;'p'
   401  0079FA  65                 	db	101	;'e'
   402  0079FB  72                 	db	114	;'r'
   403  0079FC  61                 	db	97	;'a'
   404  0079FD  74                 	db	116	;'t'
   405  0079FE  75                 	db	117	;'u'
   406  0079FF  72                 	db	114	;'r'
   407  007A00  65                 	db	101	;'e'
   408  007A01  20                 	db	32
   409  007A02  53                 	db	83	;'S'
   410  007A03  65                 	db	101	;'e'
   411  007A04  6E                 	db	110	;'n'
   412  007A05  73                 	db	115	;'s'
   413  007A06  6F                 	db	111	;'o'
   414  007A07  72                 	db	114	;'r'
   415  007A08  20                 	db	32
   416  007A09  4F                 	db	79	;'O'
   417  007A0A  50                 	db	80	;'P'
   418  007A0B  54                 	db	84	;'T'
   419  007A0C  49                 	db	73	;'I'
   420  007A0D  4F                 	db	79	;'O'
   421  007A0E  4E                 	db	78	;'N'
   422  007A0F  53                 	db	83	;'S'
   423  007A10  0A                 	db	10
   424  007A11  0D                 	db	13
   425  007A12  31                 	db	49	;'1'
   426  007A13  29                 	db	41
   427  007A14  20                 	db	32
   428  007A15  45                 	db	69	;'E'
   429  007A16  6E                 	db	110	;'n'
   430  007A17  61                 	db	97	;'a'
   431  007A18  62                 	db	98	;'b'
   432  007A19  6C                 	db	108	;'l'
   433  007A1A  65                 	db	101	;'e'
   434  007A1B  2F                 	db	47
   435  007A1C  44                 	db	68	;'D'
   436  007A1D  69                 	db	105	;'i'
   437  007A1E  73                 	db	115	;'s'
   438  007A1F  61                 	db	97	;'a'
   439  007A20  62                 	db	98	;'b'
   440  007A21  6C                 	db	108	;'l'
   441  007A22  65                 	db	101	;'e'
   442  007A23  20                 	db	32
   443  007A24  41                 	db	65	;'A'
   444  007A25  6C                 	db	108	;'l'
   445  007A26  61                 	db	97	;'a'
   446  007A27  72                 	db	114	;'r'
   447  007A28  6D                 	db	109	;'m'
   448  007A29  0A                 	db	10
   449  007A2A  0D                 	db	13
   450  007A2B  32                 	db	50	;'2'
   451  007A2C  29                 	db	41
   452  007A2D  20                 	db	32
   453  007A2E  54                 	db	84	;'T'
   454  007A2F  65                 	db	101	;'e'
   455  007A30  6D                 	db	109	;'m'
   456  007A31  70                 	db	112	;'p'
   457  007A32  65                 	db	101	;'e'
   458  007A33  72                 	db	114	;'r'
   459  007A34  61                 	db	97	;'a'
   460  007A35  74                 	db	116	;'t'
   461  007A36  75                 	db	117	;'u'
   462  007A37  72                 	db	114	;'r'
   463  007A38  65                 	db	101	;'e'
   464  007A39  20                 	db	32
   465  007A3A  54                 	db	84	;'T'
   466  007A3B  68                 	db	104	;'h'
   467  007A3C  72                 	db	114	;'r'
   468  007A3D  65                 	db	101	;'e'
   469  007A3E  73                 	db	115	;'s'
   470  007A3F  68                 	db	104	;'h'
   471  007A40  6F                 	db	111	;'o'
   472  007A41  6C                 	db	108	;'l'
   473  007A42  64                 	db	100	;'d'
   474  007A43  0A                 	db	10
   475  007A44  0D                 	db	13
   476  007A45  33                 	db	51	;'3'
   477  007A46  29                 	db	41
   478  007A47  20                 	db	32
   479  007A48  52                 	db	82	;'R'
   480  007A49  65                 	db	101	;'e'
   481  007A4A  74                 	db	116	;'t'
   482  007A4B  75                 	db	117	;'u'
   483  007A4C  72                 	db	114	;'r'
   484  007A4D  6E                 	db	110	;'n'
   485  007A4E  20                 	db	32
   486  007A4F  74                 	db	116	;'t'
   487  007A50  6F                 	db	111	;'o'
   488  007A51  20                 	db	32
   489  007A52  4D                 	db	77	;'M'
   490  007A53  65                 	db	101	;'e'
   491  007A54  6E                 	db	110	;'n'
   492  007A55  75                 	db	117	;'u'
   493  007A56  0A                 	db	10
   494  007A57  0D                 	db	13
   495  007A58  00                 	db	0
   496  007A59                     STR_100:
   497  007A59  54                 	db	84	;'T'
   498  007A5A  65                 	db	101	;'e'
   499  007A5B  6D                 	db	109	;'m'
   500  007A5C  70                 	db	112	;'p'
   501  007A5D  65                 	db	101	;'e'
   502  007A5E  72                 	db	114	;'r'
   503  007A5F  61                 	db	97	;'a'
   504  007A60  74                 	db	116	;'t'
   505  007A61  75                 	db	117	;'u'
   506  007A62  72                 	db	114	;'r'
   507  007A63  65                 	db	101	;'e'
   508  007A64  20                 	db	32
   509  007A65  54                 	db	84	;'T'
   510  007A66  68                 	db	104	;'h'
   511  007A67  72                 	db	114	;'r'
   512  007A68  65                 	db	101	;'e'
   513  007A69  73                 	db	115	;'s'
   514  007A6A  68                 	db	104	;'h'
   515  007A6B  6F                 	db	111	;'o'
   516  007A6C  6C                 	db	108	;'l'
   517  007A6D  64                 	db	100	;'d'
   518  007A6E  3A                 	db	58	;':'
   519  007A6F  20                 	db	32
   520  007A70  25                 	db	37
   521  007A71  64                 	db	100	;'d'
   522  007A72  25                 	db	37
   523  007A73  64                 	db	100	;'d'
   524  007A74  0A                 	db	10
   525  007A75  0D                 	db	13
   526  007A76  43                 	db	67	;'C'
   527  007A77  75                 	db	117	;'u'
   528  007A78  72                 	db	114	;'r'
   529  007A79  72                 	db	114	;'r'
   530  007A7A  65                 	db	101	;'e'
   531  007A7B  6E                 	db	110	;'n'
   532  007A7C  74                 	db	116	;'t'
   533  007A7D  20                 	db	32
   534  007A7E  54                 	db	84	;'T'
   535  007A7F  65                 	db	101	;'e'
   536  007A80  6D                 	db	109	;'m'
   537  007A81  70                 	db	112	;'p'
   538  007A82  20                 	db	32
   539  007A83  5B                 	db	91	;'['
   540  007A84  46                 	db	70	;'F'
   541  007A85  5D                 	db	93	;']'
   542  007A86  3A                 	db	58	;':'
   543  007A87  20                 	db	32
   544  007A88  25                 	db	37
   545  007A89  6C                 	db	108	;'l'
   546  007A8A  64                 	db	100	;'d'
   547  007A8B  0A                 	db	10
   548  007A8C  0D                 	db	13
   549  007A8D  0A                 	db	10
   550  007A8E  0D                 	db	13
   551  007A8F  49                 	db	73	;'I'
   552  007A90  4E                 	db	78	;'N'
   553  007A91  50                 	db	80	;'P'
   554  007A92  55                 	db	85	;'U'
   555  007A93  54                 	db	84	;'T'
   556  007A94  20                 	db	32
   557  007A95  4F                 	db	79	;'O'
   558  007A96  50                 	db	80	;'P'
   559  007A97  54                 	db	84	;'T'
   560  007A98  49                 	db	73	;'I'
   561  007A99  4F                 	db	79	;'O'
   562  007A9A  4E                 	db	78	;'N'
   563  007A9B  53                 	db	83	;'S'
   564  007A9C  3A                 	db	58	;':'
   565  007A9D  0A                 	db	10
   566  007A9E  0D                 	db	13
   567  007A9F  31                 	db	49	;'1'
   568  007AA0  29                 	db	41
   569  007AA1  20                 	db	32
   570  007AA2  55                 	db	85	;'U'
   571  007AA3  73                 	db	115	;'s'
   572  007AA4  65                 	db	101	;'e'
   573  007AA5  20                 	db	32
   574  007AA6  4B                 	db	75	;'K'
   575  007AA7  65                 	db	101	;'e'
   576  007AA8  79                 	db	121	;'y'
   577  007AA9  70                 	db	112	;'p'
   578  007AAA  61                 	db	97	;'a'
   579  007AAB  64                 	db	100	;'d'
   580  007AAC  0A                 	db	10
   581  007AAD  0D                 	db	13
   582  007AAE  32                 	db	50	;'2'
   583  007AAF  29                 	db	41
   584  007AB0  20                 	db	32
   585  007AB1  55                 	db	85	;'U'
   586  007AB2  73                 	db	115	;'s'
   587  007AB3  65                 	db	101	;'e'
   588  007AB4  20                 	db	32
   589  007AB5  4B                 	db	75	;'K'
   590  007AB6  65                 	db	101	;'e'
   591  007AB7  79                 	db	121	;'y'
   592  007AB8  62                 	db	98	;'b'
   593  007AB9  6F                 	db	111	;'o'
   594  007ABA  61                 	db	97	;'a'
   595  007ABB  72                 	db	114	;'r'
   596  007ABC  64                 	db	100	;'d'
   597  007ABD  0A                 	db	10
   598  007ABE  0D                 	db	13
   599  007ABF  33                 	db	51	;'3'
   600  007AC0  29                 	db	41
   601  007AC1  20                 	db	32
   602  007AC2  55                 	db	85	;'U'
   603  007AC3  73                 	db	115	;'s'
   604  007AC4  65                 	db	101	;'e'
   605  007AC5  20                 	db	32
   606  007AC6  42                 	db	66	;'B'
   607  007AC7  4F                 	db	79	;'O'
   608  007AC8  54                 	db	84	;'T'
   609  007AC9  48                 	db	72	;'H'
   610  007ACA  0A                 	db	10
   611  007ACB  0D                 	db	13
   612  007ACC  34                 	db	52	;'4'
   613  007ACD  29                 	db	41
   614  007ACE  20                 	db	32
   615  007ACF  52                 	db	82	;'R'
   616  007AD0  65                 	db	101	;'e'
   617  007AD1  74                 	db	116	;'t'
   618  007AD2  75                 	db	117	;'u'
   619  007AD3  72                 	db	114	;'r'
   620  007AD4  6E                 	db	110	;'n'
   621  007AD5  20                 	db	32
   622  007AD6  74                 	db	116	;'t'
   623  007AD7  6F                 	db	111	;'o'
   624  007AD8  20                 	db	32
   625  007AD9  4D                 	db	77	;'M'
   626  007ADA  65                 	db	101	;'e'
   627  007ADB  6E                 	db	110	;'n'
   628  007ADC  75                 	db	117	;'u'
   629  007ADD  0A                 	db	10
   630  007ADE  0D                 	db	13
   631  007ADF  00                 	db	0
   632  007AE0                     STR_70:
   633  007AE0  54                 	db	84	;'T'
   634  007AE1  65                 	db	101	;'e'
   635  007AE2  6D                 	db	109	;'m'
   636  007AE3  70                 	db	112	;'p'
   637  007AE4  65                 	db	101	;'e'
   638  007AE5  72                 	db	114	;'r'
   639  007AE6  61                 	db	97	;'a'
   640  007AE7  74                 	db	116	;'t'
   641  007AE8  75                 	db	117	;'u'
   642  007AE9  72                 	db	114	;'r'
   643  007AEA  65                 	db	101	;'e'
   644  007AEB  20                 	db	32
   645  007AEC  54                 	db	84	;'T'
   646  007AED  68                 	db	104	;'h'
   647  007AEE  72                 	db	114	;'r'
   648  007AEF  65                 	db	101	;'e'
   649  007AF0  73                 	db	115	;'s'
   650  007AF1  68                 	db	104	;'h'
   651  007AF2  6F                 	db	111	;'o'
   652  007AF3  6C                 	db	108	;'l'
   653  007AF4  64                 	db	100	;'d'
   654  007AF5  3A                 	db	58	;':'
   655  007AF6  20                 	db	32
   656  007AF7  25                 	db	37
   657  007AF8  64                 	db	100	;'d'
   658  007AF9  25                 	db	37
   659  007AFA  64                 	db	100	;'d'
   660  007AFB  0A                 	db	10
   661  007AFC  0D                 	db	13
   662  007AFD  43                 	db	67	;'C'
   663  007AFE  75                 	db	117	;'u'
   664  007AFF  72                 	db	114	;'r'
   665  007B00  72                 	db	114	;'r'
   666  007B01  65                 	db	101	;'e'
   667  007B02  6E                 	db	110	;'n'
   668  007B03  74                 	db	116	;'t'
   669  007B04  20                 	db	32
   670  007B05  54                 	db	84	;'T'
   671  007B06  65                 	db	101	;'e'
   672  007B07  6D                 	db	109	;'m'
   673  007B08  70                 	db	112	;'p'
   674  007B09  20                 	db	32
   675  007B0A  5B                 	db	91	;'['
   676  007B0B  46                 	db	70	;'F'
   677  007B0C  5D                 	db	93	;']'
   678  007B0D  3A                 	db	58	;':'
   679  007B0E  20                 	db	32
   680  007B0F  25                 	db	37
   681  007B10  6C                 	db	108	;'l'
   682  007B11  64                 	db	100	;'d'
   683  007B12  0A                 	db	10
   684  007B13  0D                 	db	13
   685  007B14  0A                 	db	10
   686  007B15  0D                 	db	13
   687  007B16  50                 	db	80	;'P'
   688  007B17  49                 	db	73	;'I'
   689  007B18  52                 	db	82	;'R'
   690  007B19  20                 	db	32
   691  007B1A  53                 	db	83	;'S'
   692  007B1B  65                 	db	101	;'e'
   693  007B1C  6E                 	db	110	;'n'
   694  007B1D  73                 	db	115	;'s'
   695  007B1E  6F                 	db	111	;'o'
   696  007B1F  72                 	db	114	;'r'
   697  007B20  20                 	db	32
   698  007B21  4F                 	db	79	;'O'
   699  007B22  50                 	db	80	;'P'
   700  007B23  54                 	db	84	;'T'
   701  007B24  49                 	db	73	;'I'
   702  007B25  4F                 	db	79	;'O'
   703  007B26  4E                 	db	78	;'N'
   704  007B27  53                 	db	83	;'S'
   705  007B28  0A                 	db	10
   706  007B29  0D                 	db	13
   707  007B2A  31                 	db	49	;'1'
   708  007B2B  29                 	db	41
   709  007B2C  20                 	db	32
   710  007B2D  45                 	db	69	;'E'
   711  007B2E  6E                 	db	110	;'n'
   712  007B2F  61                 	db	97	;'a'
   713  007B30  62                 	db	98	;'b'
   714  007B31  6C                 	db	108	;'l'
   715  007B32  65                 	db	101	;'e'
   716  007B33  2F                 	db	47
   717  007B34  44                 	db	68	;'D'
   718  007B35  69                 	db	105	;'i'
   719  007B36  73                 	db	115	;'s'
   720  007B37  61                 	db	97	;'a'
   721  007B38  62                 	db	98	;'b'
   722  007B39  6C                 	db	108	;'l'
   723  007B3A  65                 	db	101	;'e'
   724  007B3B  20                 	db	32
   725  007B3C  41                 	db	65	;'A'
   726  007B3D  6C                 	db	108	;'l'
   727  007B3E  61                 	db	97	;'a'
   728  007B3F  72                 	db	114	;'r'
   729  007B40  6D                 	db	109	;'m'
   730  007B41  0A                 	db	10
   731  007B42  0D                 	db	13
   732  007B43  32                 	db	50	;'2'
   733  007B44  29                 	db	41
   734  007B45  20                 	db	32
   735  007B46  52                 	db	82	;'R'
   736  007B47  65                 	db	101	;'e'
   737  007B48  74                 	db	116	;'t'
   738  007B49  75                 	db	117	;'u'
   739  007B4A  72                 	db	114	;'r'
   740  007B4B  6E                 	db	110	;'n'
   741  007B4C  20                 	db	32
   742  007B4D  74                 	db	116	;'t'
   743  007B4E  6F                 	db	111	;'o'
   744  007B4F  20                 	db	32
   745  007B50  4D                 	db	77	;'M'
   746  007B51  65                 	db	101	;'e'
   747  007B52  6E                 	db	110	;'n'
   748  007B53  75                 	db	117	;'u'
   749  007B54  0A                 	db	10
   750  007B55  0D                 	db	13
   751  007B56  00                 	db	0
   752  007B57                     STR_59:
   753  007B57  54                 	db	84	;'T'
   754  007B58  65                 	db	101	;'e'
   755  007B59  6D                 	db	109	;'m'
   756  007B5A  70                 	db	112	;'p'
   757  007B5B  65                 	db	101	;'e'
   758  007B5C  72                 	db	114	;'r'
   759  007B5D  61                 	db	97	;'a'
   760  007B5E  74                 	db	116	;'t'
   761  007B5F  75                 	db	117	;'u'
   762  007B60  72                 	db	114	;'r'
   763  007B61  65                 	db	101	;'e'
   764  007B62  20                 	db	32
   765  007B63  54                 	db	84	;'T'
   766  007B64  68                 	db	104	;'h'
   767  007B65  72                 	db	114	;'r'
   768  007B66  65                 	db	101	;'e'
   769  007B67  73                 	db	115	;'s'
   770  007B68  68                 	db	104	;'h'
   771  007B69  6F                 	db	111	;'o'
   772  007B6A  6C                 	db	108	;'l'
   773  007B6B  64                 	db	100	;'d'
   774  007B6C  3A                 	db	58	;':'
   775  007B6D  20                 	db	32
   776  007B6E  25                 	db	37
   777  007B6F  64                 	db	100	;'d'
   778  007B70  25                 	db	37
   779  007B71  64                 	db	100	;'d'
   780  007B72  0A                 	db	10
   781  007B73  0D                 	db	13
   782  007B74  43                 	db	67	;'C'
   783  007B75  75                 	db	117	;'u'
   784  007B76  72                 	db	114	;'r'
   785  007B77  72                 	db	114	;'r'
   786  007B78  65                 	db	101	;'e'
   787  007B79  6E                 	db	110	;'n'
   788  007B7A  74                 	db	116	;'t'
   789  007B7B  20                 	db	32
   790  007B7C  54                 	db	84	;'T'
   791  007B7D  65                 	db	101	;'e'
   792  007B7E  6D                 	db	109	;'m'
   793  007B7F  70                 	db	112	;'p'
   794  007B80  20                 	db	32
   795  007B81  5B                 	db	91	;'['
   796  007B82  46                 	db	70	;'F'
   797  007B83  5D                 	db	93	;']'
   798  007B84  3A                 	db	58	;':'
   799  007B85  20                 	db	32
   800  007B86  25                 	db	37
   801  007B87  6C                 	db	108	;'l'
   802  007B88  64                 	db	100	;'d'
   803  007B89  0A                 	db	10
   804  007B8A  0D                 	db	13
   805  007B8B  0A                 	db	10
   806  007B8C  0D                 	db	13
   807  007B8D  50                 	db	80	;'P'
   808  007B8E  41                 	db	65	;'A'
   809  007B8F  53                 	db	83	;'S'
   810  007B90  53                 	db	83	;'S'
   811  007B91  57                 	db	87	;'W'
   812  007B92  4F                 	db	79	;'O'
   813  007B93  52                 	db	82	;'R'
   814  007B94  44                 	db	68	;'D'
   815  007B95  20                 	db	32
   816  007B96  4F                 	db	79	;'O'
   817  007B97  50                 	db	80	;'P'
   818  007B98  54                 	db	84	;'T'
   819  007B99  49                 	db	73	;'I'
   820  007B9A  4F                 	db	79	;'O'
   821  007B9B  4E                 	db	78	;'N'
   822  007B9C  53                 	db	83	;'S'
   823  007B9D  0A                 	db	10
   824  007B9E  0D                 	db	13
   825  007B9F  31                 	db	49	;'1'
   826  007BA0  29                 	db	41
   827  007BA1  43                 	db	67	;'C'
   828  007BA2  68                 	db	104	;'h'
   829  007BA3  61                 	db	97	;'a'
   830  007BA4  6E                 	db	110	;'n'
   831  007BA5  67                 	db	103	;'g'
   832  007BA6  65                 	db	101	;'e'
   833  007BA7  20                 	db	32
   834  007BA8  50                 	db	80	;'P'
   835  007BA9  61                 	db	97	;'a'
   836  007BAA  73                 	db	115	;'s'
   837  007BAB  73                 	db	115	;'s'
   838  007BAC  77                 	db	119	;'w'
   839  007BAD  6F                 	db	111	;'o'
   840  007BAE  72                 	db	114	;'r'
   841  007BAF  64                 	db	100	;'d'
   842  007BB0  0A                 	db	10
   843  007BB1  0D                 	db	13
   844  007BB2  32                 	db	50	;'2'
   845  007BB3  29                 	db	41
   846  007BB4  20                 	db	32
   847  007BB5  52                 	db	82	;'R'
   848  007BB6  65                 	db	101	;'e'
   849  007BB7  74                 	db	116	;'t'
   850  007BB8  75                 	db	117	;'u'
   851  007BB9  72                 	db	114	;'r'
   852  007BBA  6E                 	db	110	;'n'
   853  007BBB  20                 	db	32
   854  007BBC  74                 	db	116	;'t'
   855  007BBD  6F                 	db	111	;'o'
   856  007BBE  20                 	db	32
   857  007BBF  4D                 	db	77	;'M'
   858  007BC0  65                 	db	101	;'e'
   859  007BC1  6E                 	db	110	;'n'
   860  007BC2  75                 	db	117	;'u'
   861  007BC3  0A                 	db	10
   862  007BC4  0D                 	db	13
   863  007BC5  00                 	db	0
   864  007BC6                     STR_9:
   865  007BC6  0A                 	db	10
   866  007BC7  0D                 	db	13
   867  007BC8  44                 	db	68	;'D'
   868  007BC9  6F                 	db	111	;'o'
   869  007BCA  20                 	db	32
   870  007BCB  79                 	db	121	;'y'
   871  007BCC  6F                 	db	111	;'o'
   872  007BCD  75                 	db	117	;'u'
   873  007BCE  20                 	db	32
   874  007BCF  77                 	db	119	;'w'
   875  007BD0  61                 	db	97	;'a'
   876  007BD1  6E                 	db	110	;'n'
   877  007BD2  74                 	db	116	;'t'
   878  007BD3  20                 	db	32
   879  007BD4  74                 	db	116	;'t'
   880  007BD5  6F                 	db	111	;'o'
   881  007BD6  20                 	db	32
   882  007BD7  63                 	db	99	;'c'
   883  007BD8  68                 	db	104	;'h'
   884  007BD9  61                 	db	97	;'a'
   885  007BDA  6E                 	db	110	;'n'
   886  007BDB  67                 	db	103	;'g'
   887  007BDC  65                 	db	101	;'e'
   888  007BDD  20                 	db	32
   889  007BDE  74                 	db	116	;'t'
   890  007BDF  68                 	db	104	;'h'
   891  007BE0  65                 	db	101	;'e'
   892  007BE1  20                 	db	32
   893  007BE2  74                 	db	116	;'t'
   894  007BE3  65                 	db	101	;'e'
   895  007BE4  6D                 	db	109	;'m'
   896  007BE5  70                 	db	112	;'p'
   897  007BE6  20                 	db	32
   898  007BE7  74                 	db	116	;'t'
   899  007BE8  68                 	db	104	;'h'
   900  007BE9  72                 	db	114	;'r'
   901  007BEA  65                 	db	101	;'e'
   902  007BEB  73                 	db	115	;'s'
   903  007BEC  68                 	db	104	;'h'
   904  007BED  6F                 	db	111	;'o'
   905  007BEE  6C                 	db	108	;'l'
   906  007BEF  64                 	db	100	;'d'
   907  007BF0  3F                 	db	63	;'?'
   908  007BF1  0A                 	db	10
   909  007BF2  0D                 	db	13
   910  007BF3  31                 	db	49	;'1'
   911  007BF4  29                 	db	41
   912  007BF5  59                 	db	89	;'Y'
   913  007BF6  65                 	db	101	;'e'
   914  007BF7  73                 	db	115	;'s'
   915  007BF8  0A                 	db	10
   916  007BF9  0D                 	db	13
   917  007BFA  41                 	db	65	;'A'
   918  007BFB  4E                 	db	78	;'N'
   919  007BFC  59                 	db	89	;'Y'
   920  007BFD  29                 	db	41
   921  007BFE  4E                 	db	78	;'N'
   922  007BFF  6F                 	db	111	;'o'
   923  007C00  00                 	db	0
   924  007C01                     STR_46:
   925  007C01  0A                 	db	10
   926  007C02  0D                 	db	13
   927  007C03  50                 	db	80	;'P'
   928  007C04  61                 	db	97	;'a'
   929  007C05  73                 	db	115	;'s'
   930  007C06  73                 	db	115	;'s'
   931  007C07  77                 	db	119	;'w'
   932  007C08  6F                 	db	111	;'o'
   933  007C09  72                 	db	114	;'r'
   934  007C0A  64                 	db	100	;'d'
   935  007C0B  20                 	db	32
   936  007C0C  49                 	db	73	;'I'
   937  007C0D  6E                 	db	110	;'n'
   938  007C0E  76                 	db	118	;'v'
   939  007C0F  61                 	db	97	;'a'
   940  007C10  6C                 	db	108	;'l'
   941  007C11  69                 	db	105	;'i'
   942  007C12  64                 	db	100	;'d'
   943  007C13  2E                 	db	46
   944  007C14  20                 	db	32
   945  007C15  47                 	db	71	;'G'
   946  007C16  6F                 	db	111	;'o'
   947  007C17  69                 	db	105	;'i'
   948  007C18  6E                 	db	110	;'n'
   949  007C19  67                 	db	103	;'g'
   950  007C1A  20                 	db	32
   951  007C1B  62                 	db	98	;'b'
   952  007C1C  61                 	db	97	;'a'
   953  007C1D  63                 	db	99	;'c'
   954  007C1E  6B                 	db	107	;'k'
   955  007C1F  20                 	db	32
   956  007C20  74                 	db	116	;'t'
   957  007C21  6F                 	db	111	;'o'
   958  007C22  20                 	db	32
   959  007C23  50                 	db	80	;'P'
   960  007C24  61                 	db	97	;'a'
   961  007C25  73                 	db	115	;'s'
   962  007C26  73                 	db	115	;'s'
   963  007C27  77                 	db	119	;'w'
   964  007C28  6F                 	db	111	;'o'
   965  007C29  72                 	db	114	;'r'
   966  007C2A  64                 	db	100	;'d'
   967  007C2B  20                 	db	32
   968  007C2C  4D                 	db	77	;'M'
   969  007C2D  65                 	db	101	;'e'
   970  007C2E  6E                 	db	110	;'n'
   971  007C2F  75                 	db	117	;'u'
   972  007C30  2E                 	db	46
   973  007C31  2E                 	db	46
   974  007C32  2E                 	db	46
   975  007C33  2E                 	db	46
   976  007C34  0A                 	db	10
   977  007C35  0D                 	db	13
   978  007C36  00                 	db	0
   979  007C37                     STR_7:
   980  007C37  0A                 	db	10
   981  007C38  0D                 	db	13
   982  007C39  0A                 	db	10
   983  007C3A  0D                 	db	13
   984  007C3B  0A                 	db	10
   985  007C3C  0D                 	db	13
   986  007C3D  54                 	db	84	;'T'
   987  007C3E  45                 	db	69	;'E'
   988  007C3F  4D                 	db	77	;'M'
   989  007C40  50                 	db	80	;'P'
   990  007C41  20                 	db	32
   991  007C42  54                 	db	84	;'T'
   992  007C43  48                 	db	72	;'H'
   993  007C44  52                 	db	82	;'R'
   994  007C45  45                 	db	69	;'E'
   995  007C46  53                 	db	83	;'S'
   996  007C47  48                 	db	72	;'H'
   997  007C48  4F                 	db	79	;'O'
   998  007C49  4C                 	db	76	;'L'
   999  007C4A  44                 	db	68	;'D'
  1000  007C4B  20                 	db	32
  1001  007C4C  4F                 	db	79	;'O'
  1002  007C4D  46                 	db	70	;'F'
  1003  007C4E  20                 	db	32
  1004  007C4F  25                 	db	37
  1005  007C50  64                 	db	100	;'d'
  1006  007C51  25                 	db	37
  1007  007C52  64                 	db	100	;'d'
  1008  007C53  20                 	db	32
  1009  007C54  45                 	db	69	;'E'
  1010  007C55  58                 	db	88	;'X'
  1011  007C56  43                 	db	67	;'C'
  1012  007C57  45                 	db	69	;'E'
  1013  007C58  45                 	db	69	;'E'
  1014  007C59  44                 	db	68	;'D'
  1015  007C5A  45                 	db	69	;'E'
  1016  007C5B  44                 	db	68	;'D'
  1017  007C5C  0A                 	db	10
  1018  007C5D  0D                 	db	13
  1019  007C5E  0A                 	db	10
  1020  007C5F  0D                 	db	13
  1021  007C60  0A                 	db	10
  1022  007C61  0D                 	db	13
  1023  007C62  00                 	db	0
  1024  007C63                     STR_13:
  1025  007C63  0A                 	db	10
  1026  007C64  0D                 	db	13
  1027  007C65  4F                 	db	79	;'O'
  1028  007C66  4E                 	db	78	;'N'
  1029  007C67  4C                 	db	76	;'L'
  1030  007C68  59                 	db	89	;'Y'
  1031  007C69  20                 	db	32
  1032  007C6A  30                 	db	48	;'0'
  1033  007C6B  2D                 	db	45
  1034  007C6C  39                 	db	57	;'9'
  1035  007C6D  20                 	db	32
  1036  007C6E  43                 	db	67	;'C'
  1037  007C6F  41                 	db	65	;'A'
  1038  007C70  4E                 	db	78	;'N'
  1039  007C71  20                 	db	32
  1040  007C72  42                 	db	66	;'B'
  1041  007C73  45                 	db	69	;'E'
  1042  007C74  20                 	db	32
  1043  007C75  55                 	db	85	;'U'
  1044  007C76  53                 	db	83	;'S'
  1045  007C77  45                 	db	69	;'E'
  1046  007C78  44                 	db	68	;'D'
  1047  007C79  20                 	db	32
  1048  007C7A  49                 	db	73	;'I'
  1049  007C7B  4E                 	db	78	;'N'
  1050  007C7C  20                 	db	32
  1051  007C7D  50                 	db	80	;'P'
  1052  007C7E  41                 	db	65	;'A'
  1053  007C7F  53                 	db	83	;'S'
  1054  007C80  53                 	db	83	;'S'
  1055  007C81  57                 	db	87	;'W'
  1056  007C82  4F                 	db	79	;'O'
  1057  007C83  52                 	db	82	;'R'
  1058  007C84  44                 	db	68	;'D'
  1059  007C85  0A                 	db	10
  1060  007C86  0D                 	db	13
  1061  007C87  0A                 	db	10
  1062  007C88  0D                 	db	13
  1063  007C89  00                 	db	0
  1064  007C8A                     STR_5:
  1065  007C8A  0A                 	db	10
  1066  007C8B  0D                 	db	13
  1067  007C8C  45                 	db	69	;'E'
  1068  007C8D  4E                 	db	78	;'N'
  1069  007C8E  54                 	db	84	;'T'
  1070  007C8F  45                 	db	69	;'E'
  1071  007C90  52                 	db	82	;'R'
  1072  007C91  20                 	db	32
  1073  007C92  50                 	db	80	;'P'
  1074  007C93  41                 	db	65	;'A'
  1075  007C94  53                 	db	83	;'S'
  1076  007C95  53                 	db	83	;'S'
  1077  007C96  57                 	db	87	;'W'
  1078  007C97  4F                 	db	79	;'O'
  1079  007C98  52                 	db	82	;'R'
  1080  007C99  44                 	db	68	;'D'
  1081  007C9A  20                 	db	32
  1082  007C9B  54                 	db	84	;'T'
  1083  007C9C  4F                 	db	79	;'O'
  1084  007C9D  20                 	db	32
  1085  007C9E  52                 	db	82	;'R'
  1086  007C9F  45                 	db	69	;'E'
  1087  007CA0  53                 	db	83	;'S'
  1088  007CA1  45                 	db	69	;'E'
  1089  007CA2  54                 	db	84	;'T'
  1090  007CA3  20                 	db	32
  1091  007CA4  54                 	db	84	;'T'
  1092  007CA5  45                 	db	69	;'E'
  1093  007CA6  4D                 	db	77	;'M'
  1094  007CA7  50                 	db	80	;'P'
  1095  007CA8  20                 	db	32
  1096  007CA9  41                 	db	65	;'A'
  1097  007CAA  4C                 	db	76	;'L'
  1098  007CAB  41                 	db	65	;'A'
  1099  007CAC  52                 	db	82	;'R'
  1100  007CAD  4D                 	db	77	;'M'
  1101  007CAE  0A                 	db	10
  1102  007CAF  0D                 	db	13
  1103  007CB0  00                 	db	0
  1104  007CB1                     STR_6:
  1105  007CB1  0A                 	db	10
  1106  007CB2  0D                 	db	13
  1107  007CB3  50                 	db	80	;'P'
  1108  007CB4  72                 	db	114	;'r'
  1109  007CB5  65                 	db	101	;'e'
  1110  007CB6  73                 	db	115	;'s'
  1111  007CB7  73                 	db	115	;'s'
  1112  007CB8  20                 	db	32
  1113  007CB9  41                 	db	65	;'A'
  1114  007CBA  6E                 	db	110	;'n'
  1115  007CBB  79                 	db	121	;'y'
  1116  007CBC  20                 	db	32
  1117  007CBD  42                 	db	66	;'B'
  1118  007CBE  75                 	db	117	;'u'
  1119  007CBF  74                 	db	116	;'t'
  1120  007CC0  74                 	db	116	;'t'
  1121  007CC1  6F                 	db	111	;'o'
  1122  007CC2  6E                 	db	110	;'n'
  1123  007CC3  20                 	db	32
  1124  007CC4  74                 	db	116	;'t'
  1125  007CC5  6F                 	db	111	;'o'
  1126  007CC6  20                 	db	32
  1127  007CC7  72                 	db	114	;'r'
  1128  007CC8  65                 	db	101	;'e'
  1129  007CC9  74                 	db	116	;'t'
  1130  007CCA  75                 	db	117	;'u'
  1131  007CCB  72                 	db	114	;'r'
  1132  007CCC  6E                 	db	110	;'n'
  1133  007CCD  20                 	db	32
  1134  007CCE  74                 	db	116	;'t'
  1135  007CCF  6F                 	db	111	;'o'
  1136  007CD0  20                 	db	32
  1137  007CD1  4D                 	db	77	;'M'
  1138  007CD2  65                 	db	101	;'e'
  1139  007CD3  6E                 	db	110	;'n'
  1140  007CD4  75                 	db	117	;'u'
  1141  007CD5  0A                 	db	10
  1142  007CD6  0D                 	db	13
  1143  007CD7  00                 	db	0
  1144  007CD8                     STR_91:
  1145  007CD8  0A                 	db	10
  1146  007CD9  0D                 	db	13
  1147  007CDA  0A                 	db	10
  1148  007CDB  0D                 	db	13
  1149  007CDC  54                 	db	84	;'T'
  1150  007CDD  65                 	db	101	;'e'
  1151  007CDE  6D                 	db	109	;'m'
  1152  007CDF  70                 	db	112	;'p'
  1153  007CE0  65                 	db	101	;'e'
  1154  007CE1  72                 	db	114	;'r'
  1155  007CE2  61                 	db	97	;'a'
  1156  007CE3  74                 	db	116	;'t'
  1157  007CE4  75                 	db	117	;'u'
  1158  007CE5  72                 	db	114	;'r'
  1159  007CE6  65                 	db	101	;'e'
  1160  007CE7  20                 	db	32
  1161  007CE8  54                 	db	84	;'T'
  1162  007CE9  68                 	db	104	;'h'
  1163  007CEA  72                 	db	114	;'r'
  1164  007CEB  65                 	db	101	;'e'
  1165  007CEC  73                 	db	115	;'s'
  1166  007CED  68                 	db	104	;'h'
  1167  007CEE  6F                 	db	111	;'o'
  1168  007CEF  6C                 	db	108	;'l'
  1169  007CF0  64                 	db	100	;'d'
  1170  007CF1  20                 	db	32
  1171  007CF2  73                 	db	115	;'s'
  1172  007CF3  65                 	db	101	;'e'
  1173  007CF4  74                 	db	116	;'t'
  1174  007CF5  20                 	db	32
  1175  007CF6  74                 	db	116	;'t'
  1176  007CF7  6F                 	db	111	;'o'
  1177  007CF8  20                 	db	32
  1178  007CF9  25                 	db	37
  1179  007CFA  64                 	db	100	;'d'
  1180  007CFB  20                 	db	32
  1181  007CFC  46                 	db	70	;'F'
  1182  007CFD  00                 	db	0
  1183  007CFE                     STR_23:
  1184  007CFE  0A                 	db	10
  1185  007CFF  0D                 	db	13
  1186  007D00  4F                 	db	79	;'O'
  1187  007D01  4E                 	db	78	;'N'
  1188  007D02  4C                 	db	76	;'L'
  1189  007D03  59                 	db	89	;'Y'
  1190  007D04  20                 	db	32
  1191  007D05  30                 	db	48	;'0'
  1192  007D06  2D                 	db	45
  1193  007D07  39                 	db	57	;'9'
  1194  007D08  20                 	db	32
  1195  007D09  43                 	db	67	;'C'
  1196  007D0A  41                 	db	65	;'A'
  1197  007D0B  4E                 	db	78	;'N'
  1198  007D0C  20                 	db	32
  1199  007D0D  42                 	db	66	;'B'
  1200  007D0E  45                 	db	69	;'E'
  1201  007D0F  20                 	db	32
  1202  007D10  55                 	db	85	;'U'
  1203  007D11  53                 	db	83	;'S'
  1204  007D12  45                 	db	69	;'E'
  1205  007D13  44                 	db	68	;'D'
  1206  007D14  20                 	db	32
  1207  007D15  49                 	db	73	;'I'
  1208  007D16  4E                 	db	78	;'N'
  1209  007D17  20                 	db	32
  1210  007D18  50                 	db	80	;'P'
  1211  007D19  41                 	db	65	;'A'
  1212  007D1A  53                 	db	83	;'S'
  1213  007D1B  53                 	db	83	;'S'
  1214  007D1C  57                 	db	87	;'W'
  1215  007D1D  4F                 	db	79	;'O'
  1216  007D1E  52                 	db	82	;'R'
  1217  007D1F  44                 	db	68	;'D'
  1218  007D20  0A                 	db	10
  1219  007D21  0D                 	db	13
  1220  007D22  00                 	db	0
  1221  007D23                     STR_11:
  1222  007D23  0A                 	db	10
  1223  007D24  0D                 	db	13
  1224  007D25  4F                 	db	79	;'O'
  1225  007D26  4E                 	db	78	;'N'
  1226  007D27  4C                 	db	76	;'L'
  1227  007D28  59                 	db	89	;'Y'
  1228  007D29  20                 	db	32
  1229  007D2A  30                 	db	48	;'0'
  1230  007D2B  2D                 	db	45
  1231  007D2C  39                 	db	57	;'9'
  1232  007D2D  20                 	db	32
  1233  007D2E  43                 	db	67	;'C'
  1234  007D2F  41                 	db	65	;'A'
  1235  007D30  4E                 	db	78	;'N'
  1236  007D31  20                 	db	32
  1237  007D32  42                 	db	66	;'B'
  1238  007D33  45                 	db	69	;'E'
  1239  007D34  20                 	db	32
  1240  007D35  55                 	db	85	;'U'
  1241  007D36  53                 	db	83	;'S'
  1242  007D37  45                 	db	69	;'E'
  1243  007D38  44                 	db	68	;'D'
  1244  007D39  20                 	db	32
  1245  007D3A  46                 	db	70	;'F'
  1246  007D3B  4F                 	db	79	;'O'
  1247  007D3C  52                 	db	82	;'R'
  1248  007D3D  20                 	db	32
  1249  007D3E  54                 	db	84	;'T'
  1250  007D3F  45                 	db	69	;'E'
  1251  007D40  4D                 	db	77	;'M'
  1252  007D41  50                 	db	80	;'P'
  1253  007D42  0A                 	db	10
  1254  007D43  0D                 	db	13
  1255  007D44  0A                 	db	10
  1256  007D45  0D                 	db	13
  1257  007D46  00                 	db	0
  1258  007D47                     STR_10:
  1259  007D47  0A                 	db	10
  1260  007D48  0D                 	db	13
  1261  007D49  45                 	db	69	;'E'
  1262  007D4A  6E                 	db	110	;'n'
  1263  007D4B  74                 	db	116	;'t'
  1264  007D4C  65                 	db	101	;'e'
  1265  007D4D  72                 	db	114	;'r'
  1266  007D4E  20                 	db	32
  1267  007D4F  6E                 	db	110	;'n'
  1268  007D50  65                 	db	101	;'e'
  1269  007D51  77                 	db	119	;'w'
  1270  007D52  20                 	db	32
  1271  007D53  54                 	db	84	;'T'
  1272  007D54  65                 	db	101	;'e'
  1273  007D55  6D                 	db	109	;'m'
  1274  007D56  70                 	db	112	;'p'
  1275  007D57  65                 	db	101	;'e'
  1276  007D58  72                 	db	114	;'r'
  1277  007D59  61                 	db	97	;'a'
  1278  007D5A  74                 	db	116	;'t'
  1279  007D5B  75                 	db	117	;'u'
  1280  007D5C  72                 	db	114	;'r'
  1281  007D5D  65                 	db	101	;'e'
  1282  007D5E  20                 	db	32
  1283  007D5F  54                 	db	84	;'T'
  1284  007D60  68                 	db	104	;'h'
  1285  007D61  72                 	db	114	;'r'
  1286  007D62  65                 	db	101	;'e'
  1287  007D63  73                 	db	115	;'s'
  1288  007D64  68                 	db	104	;'h'
  1289  007D65  6F                 	db	111	;'o'
  1290  007D66  6C                 	db	108	;'l'
  1291  007D67  64                 	db	100	;'d'
  1292  007D68  3A                 	db	58	;':'
  1293  007D69  20                 	db	32
  1294  007D6A  00                 	db	0
  1295  007D6B                     STR_41:
  1296  007D6B  52                 	db	82	;'R'
  1297  007D6C  65                 	db	101	;'e'
  1298  007D6D  74                 	db	116	;'t'
  1299  007D6E  75                 	db	117	;'u'
  1300  007D6F  72                 	db	114	;'r'
  1301  007D70  6E                 	db	110	;'n'
  1302  007D71  69                 	db	105	;'i'
  1303  007D72  6E                 	db	110	;'n'
  1304  007D73  67                 	db	103	;'g'
  1305  007D74  20                 	db	32
  1306  007D75  74                 	db	116	;'t'
  1307  007D76  6F                 	db	111	;'o'
  1308  007D77  20                 	db	32
  1309  007D78  50                 	db	80	;'P'
  1310  007D79  61                 	db	97	;'a'
  1311  007D7A  73                 	db	115	;'s'
  1312  007D7B  73                 	db	115	;'s'
  1313  007D7C  77                 	db	119	;'w'
  1314  007D7D  6F                 	db	111	;'o'
  1315  007D7E  72                 	db	114	;'r'
  1316  007D7F  64                 	db	100	;'d'
  1317  007D80  20                 	db	32
  1318  007D81  4D                 	db	77	;'M'
  1319  007D82  65                 	db	101	;'e'
  1320  007D83  6E                 	db	110	;'n'
  1321  007D84  75                 	db	117	;'u'
  1322  007D85  2E                 	db	46
  1323  007D86  2E                 	db	46
  1324  007D87  2E                 	db	46
  1325  007D88  0A                 	db	10
  1326  007D89  0D                 	db	13
  1327  007D8A  00                 	db	0
  1328  007D8B                     STR_19:
  1329  007D8B  49                 	db	73	;'I'
  1330  007D8C  4E                 	db	78	;'N'
  1331  007D8D  50                 	db	80	;'P'
  1332  007D8E  55                 	db	85	;'U'
  1333  007D8F  54                 	db	84	;'T'
  1334  007D90  3A                 	db	58	;':'
  1335  007D91  20                 	db	32
  1336  007D92  4B                 	db	75	;'K'
  1337  007D93  65                 	db	101	;'e'
  1338  007D94  79                 	db	121	;'y'
  1339  007D95  70                 	db	112	;'p'
  1340  007D96  61                 	db	97	;'a'
  1341  007D97  64                 	db	100	;'d'
  1342  007D98  20                 	db	32
  1343  007D99  61                 	db	97	;'a'
  1344  007D9A  6E                 	db	110	;'n'
  1345  007D9B  64                 	db	100	;'d'
  1346  007D9C  20                 	db	32
  1347  007D9D  4B                 	db	75	;'K'
  1348  007D9E  65                 	db	101	;'e'
  1349  007D9F  79                 	db	121	;'y'
  1350  007DA0  62                 	db	98	;'b'
  1351  007DA1  6F                 	db	111	;'o'
  1352  007DA2  61                 	db	97	;'a'
  1353  007DA3  72                 	db	114	;'r'
  1354  007DA4  64                 	db	100	;'d'
  1355  007DA5  0A                 	db	10
  1356  007DA6  0D                 	db	13
  1357  007DA7  0A                 	db	10
  1358  007DA8  0D                 	db	13
  1359  007DA9  00                 	db	0
  1360  007DAA                     STR_4:
  1361  007DAA  0A                 	db	10
  1362  007DAB  0D                 	db	13
  1363  007DAC  45                 	db	69	;'E'
  1364  007DAD  4E                 	db	78	;'N'
  1365  007DAE  54                 	db	84	;'T'
  1366  007DAF  45                 	db	69	;'E'
  1367  007DB0  52                 	db	82	;'R'
  1368  007DB1  20                 	db	32
  1369  007DB2  50                 	db	80	;'P'
  1370  007DB3  41                 	db	65	;'A'
  1371  007DB4  53                 	db	83	;'S'
  1372  007DB5  53                 	db	83	;'S'
  1373  007DB6  57                 	db	87	;'W'
  1374  007DB7  4F                 	db	79	;'O'
  1375  007DB8  52                 	db	82	;'R'
  1376  007DB9  44                 	db	68	;'D'
  1377  007DBA  20                 	db	32
  1378  007DBB  54                 	db	84	;'T'
  1379  007DBC  4F                 	db	79	;'O'
  1380  007DBD  20                 	db	32
  1381  007DBE  43                 	db	67	;'C'
  1382  007DBF  4F                 	db	79	;'O'
  1383  007DC0  4E                 	db	78	;'N'
  1384  007DC1  54                 	db	84	;'T'
  1385  007DC2  49                 	db	73	;'I'
  1386  007DC3  4E                 	db	78	;'N'
  1387  007DC4  55                 	db	85	;'U'
  1388  007DC5  45                 	db	69	;'E'
  1389  007DC6  0A                 	db	10
  1390  007DC7  0D                 	db	13
  1391  007DC8  00                 	db	0
  1392  007DC9                     STR_30:
  1393  007DC9  49                 	db	73	;'I'
  1394  007DCA  4E                 	db	78	;'N'
  1395  007DCB  50                 	db	80	;'P'
  1396  007DCC  55                 	db	85	;'U'
  1397  007DCD  54                 	db	84	;'T'
  1398  007DCE  3A                 	db	58	;':'
  1399  007DCF  20                 	db	32
  1400  007DD0  4B                 	db	75	;'K'
  1401  007DD1  45                 	db	69	;'E'
  1402  007DD2  59                 	db	89	;'Y'
  1403  007DD3  50                 	db	80	;'P'
  1404  007DD4  41                 	db	65	;'A'
  1405  007DD5  44                 	db	68	;'D'
  1406  007DD6  20                 	db	32
  1407  007DD7  61                 	db	97	;'a'
  1408  007DD8  6E                 	db	110	;'n'
  1409  007DD9  64                 	db	100	;'d'
  1410  007DDA  20                 	db	32
  1411  007DDB  4B                 	db	75	;'K'
  1412  007DDC  45                 	db	69	;'E'
  1413  007DDD  59                 	db	89	;'Y'
  1414  007DDE  42                 	db	66	;'B'
  1415  007DDF  4F                 	db	79	;'O'
  1416  007DE0  41                 	db	65	;'A'
  1417  007DE1  52                 	db	82	;'R'
  1418  007DE2  44                 	db	68	;'D'
  1419  007DE3  0A                 	db	10
  1420  007DE4  0D                 	db	13
  1421  007DE5  00                 	db	0
  1422  007DE6                     STR_3:
  1423  007DE6  0A                 	db	10
  1424  007DE7  0D                 	db	13
  1425  007DE8  0A                 	db	10
  1426  007DE9  0D                 	db	13
  1427  007DEA  0A                 	db	10
  1428  007DEB  0D                 	db	13
  1429  007DEC  41                 	db	65	;'A'
  1430  007DED  4C                 	db	76	;'L'
  1431  007DEE  41                 	db	65	;'A'
  1432  007DEF  52                 	db	82	;'R'
  1433  007DF0  4D                 	db	77	;'M'
  1434  007DF1  20                 	db	32
  1435  007DF2  54                 	db	84	;'T'
  1436  007DF3  52                 	db	82	;'R'
  1437  007DF4  49                 	db	73	;'I'
  1438  007DF5  47                 	db	71	;'G'
  1439  007DF6  47                 	db	71	;'G'
  1440  007DF7  45                 	db	69	;'E'
  1441  007DF8  52                 	db	82	;'R'
  1442  007DF9  45                 	db	69	;'E'
  1443  007DFA  44                 	db	68	;'D'
  1444  007DFB  0A                 	db	10
  1445  007DFC  0D                 	db	13
  1446  007DFD  0A                 	db	10
  1447  007DFE  0D                 	db	13
  1448  007DFF  0A                 	db	10
  1449  007E00  0D                 	db	13
  1450  007E01  00                 	db	0
  1451  007E02                     STR_51:
  1452  007E02  0A                 	db	10
  1453  007E03  0D                 	db	13
  1454  007E04  78                 	db	120	;'x'
  1455  007E05  78                 	db	120	;'x'
  1456  007E06  78                 	db	120	;'x'
  1457  007E07  78                 	db	120	;'x'
  1458  007E08  78                 	db	120	;'x'
  1459  007E09  78                 	db	120	;'x'
  1460  007E0A  78                 	db	120	;'x'
  1461  007E0B  49                 	db	73	;'I'
  1462  007E0C  4E                 	db	78	;'N'
  1463  007E0D  56                 	db	86	;'V'
  1464  007E0E  41                 	db	65	;'A'
  1465  007E0F  4C                 	db	76	;'L'
  1466  007E10  49                 	db	73	;'I'
  1467  007E11  44                 	db	68	;'D'
  1468  007E12  78                 	db	120	;'x'
  1469  007E13  78                 	db	120	;'x'
  1470  007E14  78                 	db	120	;'x'
  1471  007E15  78                 	db	120	;'x'
  1472  007E16  78                 	db	120	;'x'
  1473  007E17  78                 	db	120	;'x'
  1474  007E18  78                 	db	120	;'x'
  1475  007E19  0A                 	db	10
  1476  007E1A  0D                 	db	13
  1477  007E1B  0A                 	db	10
  1478  007E1C  0D                 	db	13
  1479  007E1D  00                 	db	0
  1480  007E1E                     STR_103:
  1481  007E1E  0A                 	db	10
  1482  007E1F  0D                 	db	13
  1483  007E20  55                 	db	85	;'U'
  1484  007E21  73                 	db	115	;'s'
  1485  007E22  69                 	db	105	;'i'
  1486  007E23  6E                 	db	110	;'n'
  1487  007E24  67                 	db	103	;'g'
  1488  007E25  20                 	db	32
  1489  007E26  4B                 	db	75	;'K'
  1490  007E27  65                 	db	101	;'e'
  1491  007E28  79                 	db	121	;'y'
  1492  007E29  62                 	db	98	;'b'
  1493  007E2A  6F                 	db	111	;'o'
  1494  007E2B  61                 	db	97	;'a'
  1495  007E2C  72                 	db	114	;'r'
  1496  007E2D  64                 	db	100	;'d'
  1497  007E2E  20                 	db	32
  1498  007E2F  61                 	db	97	;'a'
  1499  007E30  73                 	db	115	;'s'
  1500  007E31  20                 	db	32
  1501  007E32  49                 	db	73	;'I'
  1502  007E33  6E                 	db	110	;'n'
  1503  007E34  70                 	db	112	;'p'
  1504  007E35  75                 	db	117	;'u'
  1505  007E36  74                 	db	116	;'t'
  1506  007E37  0A                 	db	10
  1507  007E38  0D                 	db	13
  1508  007E39  00                 	db	0
  1509  007E3A                     STR_85:
  1510  007E3A  0A                 	db	10
  1511  007E3B  0D                 	db	13
  1512  007E3C  54                 	db	84	;'T'
  1513  007E3D  65                 	db	101	;'e'
  1514  007E3E  6D                 	db	109	;'m'
  1515  007E3F  70                 	db	112	;'p'
  1516  007E40  65                 	db	101	;'e'
  1517  007E41  72                 	db	114	;'r'
  1518  007E42  61                 	db	97	;'a'
  1519  007E43  74                 	db	116	;'t'
  1520  007E44  75                 	db	117	;'u'
  1521  007E45  72                 	db	114	;'r'
  1522  007E46  65                 	db	101	;'e'
  1523  007E47  20                 	db	32
  1524  007E48  41                 	db	65	;'A'
  1525  007E49  6C                 	db	108	;'l'
  1526  007E4A  61                 	db	97	;'a'
  1527  007E4B  72                 	db	114	;'r'
  1528  007E4C  6D                 	db	109	;'m'
  1529  007E4D  20                 	db	32
  1530  007E4E  4F                 	db	79	;'O'
  1531  007E4F  46                 	db	70	;'F'
  1532  007E50  46                 	db	70	;'F'
  1533  007E51  0A                 	db	10
  1534  007E52  0D                 	db	13
  1535  007E53  00                 	db	0
  1536  007E54                     STR_102:
  1537  007E54  0A                 	db	10
  1538  007E55  0D                 	db	13
  1539  007E56  55                 	db	85	;'U'
  1540  007E57  73                 	db	115	;'s'
  1541  007E58  69                 	db	105	;'i'
  1542  007E59  6E                 	db	110	;'n'
  1543  007E5A  67                 	db	103	;'g'
  1544  007E5B  20                 	db	32
  1545  007E5C  4B                 	db	75	;'K'
  1546  007E5D  65                 	db	101	;'e'
  1547  007E5E  79                 	db	121	;'y'
  1548  007E5F  70                 	db	112	;'p'
  1549  007E60  61                 	db	97	;'a'
  1550  007E61  64                 	db	100	;'d'
  1551  007E62  20                 	db	32
  1552  007E63  61                 	db	97	;'a'
  1553  007E64  73                 	db	115	;'s'
  1554  007E65  20                 	db	32
  1555  007E66  49                 	db	73	;'I'
  1556  007E67  6E                 	db	110	;'n'
  1557  007E68  70                 	db	112	;'p'
  1558  007E69  75                 	db	117	;'u'
  1559  007E6A  74                 	db	116	;'t'
  1560  007E6B  0A                 	db	10
  1561  007E6C  0D                 	db	13
  1562  007E6D  00                 	db	0
  1563  007E6E                     STR_45:
  1564  007E6E  0A                 	db	10
  1565  007E6F  0D                 	db	13
  1566  007E70  0A                 	db	10
  1567  007E71  0D                 	db	13
  1568  007E72  50                 	db	80	;'P'
  1569  007E73  61                 	db	97	;'a'
  1570  007E74  73                 	db	115	;'s'
  1571  007E75  73                 	db	115	;'s'
  1572  007E76  77                 	db	119	;'w'
  1573  007E77  6F                 	db	111	;'o'
  1574  007E78  72                 	db	114	;'r'
  1575  007E79  64                 	db	100	;'d'
  1576  007E7A  20                 	db	32
  1577  007E7B  43                 	db	67	;'C'
  1578  007E7C  68                 	db	104	;'h'
  1579  007E7D  61                 	db	97	;'a'
  1580  007E7E  6E                 	db	110	;'n'
  1581  007E7F  67                 	db	103	;'g'
  1582  007E80  65                 	db	101	;'e'
  1583  007E81  64                 	db	100	;'d'
  1584  007E82  0A                 	db	10
  1585  007E83  0D                 	db	13
  1586  007E84  0A                 	db	10
  1587  007E85  0D                 	db	13
  1588  007E86  00                 	db	0
  1589  007E87                     STR_33:
  1590  007E87  0A                 	db	10
  1591  007E88  0D                 	db	13
  1592  007E89  52                 	db	82	;'R'
  1593  007E8A  65                 	db	101	;'e'
  1594  007E8B  74                 	db	116	;'t'
  1595  007E8C  75                 	db	117	;'u'
  1596  007E8D  72                 	db	114	;'r'
  1597  007E8E  6E                 	db	110	;'n'
  1598  007E8F  69                 	db	105	;'i'
  1599  007E90  6E                 	db	110	;'n'
  1600  007E91  67                 	db	103	;'g'
  1601  007E92  20                 	db	32
  1602  007E93  74                 	db	116	;'t'
  1603  007E94  6F                 	db	111	;'o'
  1604  007E95  20                 	db	32
  1605  007E96  4D                 	db	77	;'M'
  1606  007E97  65                 	db	101	;'e'
  1607  007E98  6E                 	db	110	;'n'
  1608  007E99  75                 	db	117	;'u'
  1609  007E9A  2E                 	db	46
  1610  007E9B  2E                 	db	46
  1611  007E9C  2E                 	db	46
  1612  007E9D  0A                 	db	10
  1613  007E9E  0D                 	db	13
  1614  007E9F  00                 	db	0
  1615  007EA0                     STR_84:
  1616  007EA0  0A                 	db	10
  1617  007EA1  0D                 	db	13
  1618  007EA2  54                 	db	84	;'T'
  1619  007EA3  65                 	db	101	;'e'
  1620  007EA4  6D                 	db	109	;'m'
  1621  007EA5  70                 	db	112	;'p'
  1622  007EA6  65                 	db	101	;'e'
  1623  007EA7  72                 	db	114	;'r'
  1624  007EA8  61                 	db	97	;'a'
  1625  007EA9  74                 	db	116	;'t'
  1626  007EAA  75                 	db	117	;'u'
  1627  007EAB  72                 	db	114	;'r'
  1628  007EAC  65                 	db	101	;'e'
  1629  007EAD  20                 	db	32
  1630  007EAE  41                 	db	65	;'A'
  1631  007EAF  6C                 	db	108	;'l'
  1632  007EB0  61                 	db	97	;'a'
  1633  007EB1  72                 	db	114	;'r'
  1634  007EB2  6D                 	db	109	;'m'
  1635  007EB3  20                 	db	32
  1636  007EB4  4F                 	db	79	;'O'
  1637  007EB5  4E                 	db	78	;'N'
  1638  007EB6  0A                 	db	10
  1639  007EB7  0D                 	db	13
  1640  007EB8  00                 	db	0
  1641  007EB9                     STR_35:
  1642  007EB9  45                 	db	69	;'E'
  1643  007EBA  6E                 	db	110	;'n'
  1644  007EBB  74                 	db	116	;'t'
  1645  007EBC  65                 	db	101	;'e'
  1646  007EBD  72                 	db	114	;'r'
  1647  007EBE  20                 	db	32
  1648  007EBF  43                 	db	67	;'C'
  1649  007EC0  75                 	db	117	;'u'
  1650  007EC1  72                 	db	114	;'r'
  1651  007EC2  72                 	db	114	;'r'
  1652  007EC3  65                 	db	101	;'e'
  1653  007EC4  6E                 	db	110	;'n'
  1654  007EC5  74                 	db	116	;'t'
  1655  007EC6  20                 	db	32
  1656  007EC7  50                 	db	80	;'P'
  1657  007EC8  61                 	db	97	;'a'
  1658  007EC9  73                 	db	115	;'s'
  1659  007ECA  73                 	db	115	;'s'
  1660  007ECB  77                 	db	119	;'w'
  1661  007ECC  6F                 	db	111	;'o'
  1662  007ECD  72                 	db	114	;'r'
  1663  007ECE  64                 	db	100	;'d'
  1664  007ECF  3A                 	db	58	;':'
  1665  007ED0  20                 	db	32
  1666  007ED1  00                 	db	0
  1667  007ED2                     STR_34:
  1668  007ED2  0A                 	db	10
  1669  007ED3  45                 	db	69	;'E'
  1670  007ED4  52                 	db	82	;'R'
  1671  007ED5  52                 	db	82	;'R'
  1672  007ED6  4F                 	db	79	;'O'
  1673  007ED7  52                 	db	82	;'R'
  1674  007ED8  20                 	db	32
  1675  007ED9  49                 	db	73	;'I'
  1676  007EDA  4E                 	db	78	;'N'
  1677  007EDB  56                 	db	86	;'V'
  1678  007EDC  41                 	db	65	;'A'
  1679  007EDD  4C                 	db	76	;'L'
  1680  007EDE  49                 	db	73	;'I'
  1681  007EDF  44                 	db	68	;'D'
  1682  007EE0  20                 	db	32
  1683  007EE1  49                 	db	73	;'I'
  1684  007EE2  4E                 	db	78	;'N'
  1685  007EE3  50                 	db	80	;'P'
  1686  007EE4  55                 	db	85	;'U'
  1687  007EE5  54                 	db	84	;'T'
  1688  007EE6  0A                 	db	10
  1689  007EE7  0D                 	db	13
  1690  007EE8  00                 	db	0
  1691  007EE9                     STR_50:
  1692  007EE9  0A                 	db	10
  1693  007EEA  0D                 	db	13
  1694  007EEB  50                 	db	80	;'P'
  1695  007EEC  41                 	db	65	;'A'
  1696  007EED  53                 	db	83	;'S'
  1697  007EEE  53                 	db	83	;'S'
  1698  007EEF  57                 	db	87	;'W'
  1699  007EF0  4F                 	db	79	;'O'
  1700  007EF1  52                 	db	82	;'R'
  1701  007EF2  44                 	db	68	;'D'
  1702  007EF3  20                 	db	32
  1703  007EF4  56                 	db	86	;'V'
  1704  007EF5  41                 	db	65	;'A'
  1705  007EF6  4C                 	db	76	;'L'
  1706  007EF7  49                 	db	73	;'I'
  1707  007EF8  44                 	db	68	;'D'
  1708  007EF9  0A                 	db	10
  1709  007EFA  0D                 	db	13
  1710  007EFB  0A                 	db	10
  1711  007EFC  0D                 	db	13
  1712  007EFD  00                 	db	0
  1713  007EFE                     STR_61:
  1714  007EFE  43                 	db	67	;'C'
  1715  007EFF  68                 	db	104	;'h'
  1716  007F00  61                 	db	97	;'a'
  1717  007F01  6E                 	db	110	;'n'
  1718  007F02  67                 	db	103	;'g'
  1719  007F03  65                 	db	101	;'e'
  1720  007F04  64                 	db	100	;'d'
  1721  007F05  20                 	db	32
  1722  007F06  50                 	db	80	;'P'
  1723  007F07  61                 	db	97	;'a'
  1724  007F08  73                 	db	115	;'s'
  1725  007F09  73                 	db	115	;'s'
  1726  007F0A  77                 	db	119	;'w'
  1727  007F0B  6F                 	db	111	;'o'
  1728  007F0C  72                 	db	114	;'r'
  1729  007F0D  64                 	db	100	;'d'
  1730  007F0E  0A                 	db	10
  1731  007F0F  0D                 	db	13
  1732  007F10  0A                 	db	10
  1733  007F11  0D                 	db	13
  1734  007F12  00                 	db	0
  1735  007F13                     STR_38:
  1736  007F13  45                 	db	69	;'E'
  1737  007F14  6E                 	db	110	;'n'
  1738  007F15  74                 	db	116	;'t'
  1739  007F16  65                 	db	101	;'e'
  1740  007F17  72                 	db	114	;'r'
  1741  007F18  20                 	db	32
  1742  007F19  4E                 	db	78	;'N'
  1743  007F1A  65                 	db	101	;'e'
  1744  007F1B  77                 	db	119	;'w'
  1745  007F1C  20                 	db	32
  1746  007F1D  50                 	db	80	;'P'
  1747  007F1E  61                 	db	97	;'a'
  1748  007F1F  73                 	db	115	;'s'
  1749  007F20  73                 	db	115	;'s'
  1750  007F21  77                 	db	119	;'w'
  1751  007F22  6F                 	db	111	;'o'
  1752  007F23  72                 	db	114	;'r'
  1753  007F24  64                 	db	100	;'d'
  1754  007F25  3A                 	db	58	;':'
  1755  007F26  20                 	db	32
  1756  007F27  00                 	db	0
  1757  007F28                     STR_20:
  1758  007F28  49                 	db	73	;'I'
  1759  007F29  4E                 	db	78	;'N'
  1760  007F2A  50                 	db	80	;'P'
  1761  007F2B  55                 	db	85	;'U'
  1762  007F2C  54                 	db	84	;'T'
  1763  007F2D  3A                 	db	58	;':'
  1764  007F2E  20                 	db	32
  1765  007F2F  4B                 	db	75	;'K'
  1766  007F30  65                 	db	101	;'e'
  1767  007F31  79                 	db	121	;'y'
  1768  007F32  62                 	db	98	;'b'
  1769  007F33  6F                 	db	111	;'o'
  1770  007F34  61                 	db	97	;'a'
  1771  007F35  72                 	db	114	;'r'
  1772  007F36  64                 	db	100	;'d'
  1773  007F37  0A                 	db	10
  1774  007F38  0D                 	db	13
  1775  007F39  0A                 	db	10
  1776  007F3A  0D                 	db	13
  1777  007F3B  00                 	db	0
  1778  007F3C                     STR_27:
  1779  007F3C  54                 	db	84	;'T'
  1780  007F3D  65                 	db	101	;'e'
  1781  007F3E  6D                 	db	109	;'m'
  1782  007F3F  70                 	db	112	;'p'
  1783  007F40  20                 	db	32
  1784  007F41  41                 	db	65	;'A'
  1785  007F42  6C                 	db	108	;'l'
  1786  007F43  61                 	db	97	;'a'
  1787  007F44  72                 	db	114	;'r'
  1788  007F45  6D                 	db	109	;'m'
  1789  007F46  20                 	db	32
  1790  007F47  69                 	db	105	;'i'
  1791  007F48  73                 	db	115	;'s'
  1792  007F49  20                 	db	32
  1793  007F4A  4F                 	db	79	;'O'
  1794  007F4B  46                 	db	70	;'F'
  1795  007F4C  46                 	db	70	;'F'
  1796  007F4D  0A                 	db	10
  1797  007F4E  0D                 	db	13
  1798  007F4F  00                 	db	0
  1799  007F50                     STR_24:
  1800  007F50  0A                 	db	10
  1801  007F51  0D                 	db	13
  1802  007F52  50                 	db	80	;'P'
  1803  007F53  61                 	db	97	;'a'
  1804  007F54  73                 	db	115	;'s'
  1805  007F55  73                 	db	115	;'s'
  1806  007F56  77                 	db	119	;'w'
  1807  007F57  6F                 	db	111	;'o'
  1808  007F58  72                 	db	114	;'r'
  1809  007F59  64                 	db	100	;'d'
  1810  007F5A  20                 	db	32
  1811  007F5B  53                 	db	83	;'S'
  1812  007F5C  45                 	db	69	;'E'
  1813  007F5D  54                 	db	84	;'T'
  1814  007F5E  0A                 	db	10
  1815  007F5F  0D                 	db	13
  1816  007F60  0A                 	db	10
  1817  007F61  0D                 	db	13
  1818  007F62  00                 	db	0
  1819  007F63                     STR_28:
  1820  007F63  54                 	db	84	;'T'
  1821  007F64  65                 	db	101	;'e'
  1822  007F65  6D                 	db	109	;'m'
  1823  007F66  70                 	db	112	;'p'
  1824  007F67  20                 	db	32
  1825  007F68  41                 	db	65	;'A'
  1826  007F69  6C                 	db	108	;'l'
  1827  007F6A  61                 	db	97	;'a'
  1828  007F6B  72                 	db	114	;'r'
  1829  007F6C  6D                 	db	109	;'m'
  1830  007F6D  20                 	db	32
  1831  007F6E  69                 	db	105	;'i'
  1832  007F6F  73                 	db	115	;'s'
  1833  007F70  20                 	db	32
  1834  007F71  4F                 	db	79	;'O'
  1835  007F72  4E                 	db	78	;'N'
  1836  007F73  0A                 	db	10
  1837  007F74  0D                 	db	13
  1838  007F75  00                 	db	0
  1839  007F76                     STR_73:
  1840  007F76  41                 	db	65	;'A'
  1841  007F77  6C                 	db	108	;'l'
  1842  007F78  61                 	db	97	;'a'
  1843  007F79  72                 	db	114	;'r'
  1844  007F7A  6D                 	db	109	;'m'
  1845  007F7B  20                 	db	32
  1846  007F7C  44                 	db	68	;'D'
  1847  007F7D  69                 	db	105	;'i'
  1848  007F7E  73                 	db	115	;'s'
  1849  007F7F  61                 	db	97	;'a'
  1850  007F80  62                 	db	98	;'b'
  1851  007F81  6C                 	db	108	;'l'
  1852  007F82  65                 	db	101	;'e'
  1853  007F83  64                 	db	100	;'d'
  1854  007F84  0A                 	db	10
  1855  007F85  0A                 	db	10
  1856  007F86  0D                 	db	13
  1857  007F87  0D                 	db	13
  1858  007F88  00                 	db	0
  1859  007F89                     STR_18:
  1860  007F89  49                 	db	73	;'I'
  1861  007F8A  4E                 	db	78	;'N'
  1862  007F8B  50                 	db	80	;'P'
  1863  007F8C  55                 	db	85	;'U'
  1864  007F8D  54                 	db	84	;'T'
  1865  007F8E  3A                 	db	58	;':'
  1866  007F8F  20                 	db	32
  1867  007F90  4B                 	db	75	;'K'
  1868  007F91  65                 	db	101	;'e'
  1869  007F92  79                 	db	121	;'y'
  1870  007F93  70                 	db	112	;'p'
  1871  007F94  61                 	db	97	;'a'
  1872  007F95  64                 	db	100	;'d'
  1873  007F96  0A                 	db	10
  1874  007F97  0D                 	db	13
  1875  007F98  0A                 	db	10
  1876  007F99  0D                 	db	13
  1877  007F9A  00                 	db	0
  1878  007F9B                     STR_31:
  1879  007F9B  49                 	db	73	;'I'
  1880  007F9C  4E                 	db	78	;'N'
  1881  007F9D  50                 	db	80	;'P'
  1882  007F9E  55                 	db	85	;'U'
  1883  007F9F  54                 	db	84	;'T'
  1884  007FA0  3A                 	db	58	;':'
  1885  007FA1  20                 	db	32
  1886  007FA2  4B                 	db	75	;'K'
  1887  007FA3  45                 	db	69	;'E'
  1888  007FA4  59                 	db	89	;'Y'
  1889  007FA5  42                 	db	66	;'B'
  1890  007FA6  4F                 	db	79	;'O'
  1891  007FA7  41                 	db	65	;'A'
  1892  007FA8  52                 	db	82	;'R'
  1893  007FA9  44                 	db	68	;'D'
  1894  007FAA  0A                 	db	10
  1895  007FAB  0D                 	db	13
  1896  007FAC  00                 	db	0
  1897  007FAD                     STR_72:
  1898  007FAD  41                 	db	65	;'A'
  1899  007FAE  6C                 	db	108	;'l'
  1900  007FAF  61                 	db	97	;'a'
  1901  007FB0  72                 	db	114	;'r'
  1902  007FB1  6D                 	db	109	;'m'
  1903  007FB2  20                 	db	32
  1904  007FB3  45                 	db	69	;'E'
  1905  007FB4  6E                 	db	110	;'n'
  1906  007FB5  61                 	db	97	;'a'
  1907  007FB6  62                 	db	98	;'b'
  1908  007FB7  6C                 	db	108	;'l'
  1909  007FB8  65                 	db	101	;'e'
  1910  007FB9  64                 	db	100	;'d'
  1911  007FBA  0A                 	db	10
  1912  007FBB  0A                 	db	10
  1913  007FBC  0D                 	db	13
  1914  007FBD  0D                 	db	13
  1915  007FBE  00                 	db	0
  1916  007FBF                     STR_29:
  1917  007FBF  49                 	db	73	;'I'
  1918  007FC0  4E                 	db	78	;'N'
  1919  007FC1  50                 	db	80	;'P'
  1920  007FC2  55                 	db	85	;'U'
  1921  007FC3  54                 	db	84	;'T'
  1922  007FC4  3A                 	db	58	;':'
  1923  007FC5  20                 	db	32
  1924  007FC6  4B                 	db	75	;'K'
  1925  007FC7  45                 	db	69	;'E'
  1926  007FC8  59                 	db	89	;'Y'
  1927  007FC9  50                 	db	80	;'P'
  1928  007FCA  41                 	db	65	;'A'
  1929  007FCB  44                 	db	68	;'D'
  1930  007FCC  0A                 	db	10
  1931  007FCD  0D                 	db	13
  1932  007FCE  00                 	db	0
  1933  007FCF                     STR_21:
  1934  007FCF  53                 	db	83	;'S'
  1935  007FD0  45                 	db	69	;'E'
  1936  007FD1  54                 	db	84	;'T'
  1937  007FD2  20                 	db	32
  1938  007FD3  50                 	db	80	;'P'
  1939  007FD4  41                 	db	65	;'A'
  1940  007FD5  53                 	db	83	;'S'
  1941  007FD6  53                 	db	83	;'S'
  1942  007FD7  57                 	db	87	;'W'
  1943  007FD8  4F                 	db	79	;'O'
  1944  007FD9  52                 	db	82	;'R'
  1945  007FDA  44                 	db	68	;'D'
  1946  007FDB  3A                 	db	58	;':'
  1947  007FDC  09                 	db	9
  1948  007FDD  00                 	db	0
  1949  007FDE                     STR_104:
  1950  007FDE  0A                 	db	10
  1951  007FDF  0D                 	db	13
  1952  007FE0  42                 	db	66	;'B'
  1953  007FE1  4F                 	db	79	;'O'
  1954  007FE2  54                 	db	84	;'T'
  1955  007FE3  48                 	db	72	;'H'
  1956  007FE4  0A                 	db	10
  1957  007FE5  0D                 	db	13
  1958  007FE6  00                 	db	0
  1959  007FE7                     STR_15:
  1960  007FE7  0A                 	db	10
  1961  007FE8  0D                 	db	13
  1962  007FE9  25                 	db	37
  1963  007FEA  64                 	db	100	;'d'
  1964  007FEB  0A                 	db	10
  1965  007FEC  0D                 	db	13
  1966  007FED  00                 	db	0
  1967  007FEE                     STR_2:
  1968  007FEE  1B                 	db	27
  1969  007FEF  5B                 	db	91	;'['
  1970  007FF0  30                 	db	48	;'0'
  1971  007FF1  3B                 	db	59	;';'
  1972  007FF2  30                 	db	48	;'0'
  1973  007FF3  48                 	db	72	;'H'
  1974  007FF4  00                 	db	0
  1975  007FF5                     STR_1:
  1976  007FF5  1B                 	db	27
  1977  007FF6  5B                 	db	91	;'['
  1978  007FF7  32                 	db	50	;'2'
  1979  007FF8  4A                 	db	74	;'J'
  1980  007FF9  00                 	db	0
  1981  007FFA                     STR_12:
  1982  007FFA  25                 	db	37
  1983  007FFB  64                 	db	100	;'d'
  1984  007FFC  00                 	db	0
  1985  007FFD                     STR_22:
  1986  007FFD  2A                 	db	42
  1987  007FFE  00                 	db	0
  1988  0000                     
  1989                           ; #config settings
  1990  007FFF  00                 	db	0	; dummy byte at the end
  1991  0000                     
  1992                           	psect	cinit
  1993  002DD2                     __pcinit:
  1994                           	opt stack 0
  1995  002DD2                     start_initialization:
  1996                           	opt stack 0
  1997  002DD2                     __initialization:
  1998                           	opt stack 0
  1999                           
  2000                           ; Initialize objects allocated to BANK1 (3 bytes)
  2001                           ; load TBLPTR registers with __pidataBANK1
  2002  002DD2  0EE4               	movlw	low __pidataBANK1
  2003  002DD4  6EF6               	movwf	tblptrl,c
  2004  002DD6  0E30               	movlw	high __pidataBANK1
  2005  002DD8  6EF7               	movwf	tblptrh,c
  2006  002DDA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2007  002DDC  6EF8               	movwf	tblptru,c
  2008  002DDE  0009               	tblrd		*+	;fetch initializer
  2009  002DE0  CFF5 F15C          	movff	tablat,__pdataBANK1
  2010  002DE4  0009               	tblrd		*+	;fetch initializer
  2011  002DE6  CFF5 F15D          	movff	tablat,__pdataBANK1+1
  2012  002DEA  0009               	tblrd		*+	;fetch initializer
  2013  002DEC  CFF5 F15E          	movff	tablat,__pdataBANK1+2
  2014                           
  2015                           ; Initialize objects allocated to BANK0 (2 bytes)
  2016                           ; load TBLPTR registers with __pidataBANK0
  2017  002DF0  0EE7               	movlw	low __pidataBANK0
  2018  002DF2  6EF6               	movwf	tblptrl,c
  2019  002DF4  0E30               	movlw	high __pidataBANK0
  2020  002DF6  6EF7               	movwf	tblptrh,c
  2021  002DF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2022  002DFA  6EF8               	movwf	tblptru,c
  2023  002DFC  0009               	tblrd		*+	;fetch initializer
  2024  002DFE  CFF5 F0E4          	movff	tablat,__pdataBANK0
  2025  002E02  0009               	tblrd		*+	;fetch initializer
  2026  002E04  CFF5 F0E5          	movff	tablat,__pdataBANK0+1
  2027                           
  2028                           ; Clear objects allocated to BANK1 (20 bytes)
  2029  002E08  EE01  F048         	lfsr	0,__pbssBANK1
  2030  002E0C  0E14               	movlw	20
  2031  002E0E                     clear_0:
  2032  002E0E  6AEE               	clrf	postinc0,c
  2033  002E10  06E8               	decf	wreg,f,c
  2034  002E12  E1FD               	bnz	clear_0
  2035                           
  2036                           ; Clear objects allocated to BANK0 (18 bytes)
  2037  002E14  EE00  F0D2         	lfsr	0,__pbssBANK0
  2038  002E18  0E12               	movlw	18
  2039  002E1A                     clear_1:
  2040  002E1A  6AEE               	clrf	postinc0,c
  2041  002E1C  06E8               	decf	wreg,f,c
  2042  002E1E  E1FD               	bnz	clear_1
  2043                           
  2044                           ; Clear objects allocated to COMRAM (11 bytes)
  2045  002E20  EE00  F044         	lfsr	0,__pbssCOMRAM
  2046  002E24  0E0B               	movlw	11
  2047  002E26                     clear_2:
  2048  002E26  6AEE               	clrf	postinc0,c
  2049  002E28  06E8               	decf	wreg,f,c
  2050  002E2A  E1FD               	bnz	clear_2
  2051  002E2C                     end_of_initialization:
  2052                           	opt stack 0
  2053  002E2C                     __end_of__initialization:
  2054                           	opt stack 0
  2055  002E2C  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2056  002E2E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2057  002E30  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2058  002E32  6EF8               	movwf	tblptru,c
  2059  002E34  0100               	movlb	0
  2060  002E36  EF6F  F004         	goto	_main	;jump to C main() function
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           
  2068                           	psect	bssCOMRAM
  2069  000044                     __pbssCOMRAM:
  2070                           	opt stack 0
  2071  000044                     _voltage:
  2072                           	opt stack 0
  2073  000044                     	ds	4
  2074  000048                     _temp_threshold:
  2075                           	opt stack 0
  2076  000048                     	ds	2
  2077  00004A                     _temp_set:
  2078                           	opt stack 0
  2079  00004A                     	ds	2
  2080  00004C                     _test:
  2081                           	opt stack 0
  2082  00004C                     	ds	2
  2083  00004E                     _temp:
  2084                           	opt stack 0
  2085  00004E                     	ds	1
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           
  2093                           	psect	bssBANK0
  2094  0000D2                     __pbssBANK0:
  2095                           	opt stack 0
  2096  0000D2                     _decimal:
  2097                           	opt stack 0
  2098  0000D2                     	ds	4
  2099  0000D6                     _adHigh:
  2100                           	opt stack 0
  2101  0000D6                     	ds	4
  2102  0000DA                     _adLow:
  2103                           	opt stack 0
  2104  0000DA                     	ds	4
  2105  0000DE                     _temp_threshold_input:
  2106                           	opt stack 0
  2107  0000DE                     	ds	2
  2108  0000E0                     _temp_threshold_read:
  2109                           	opt stack 0
  2110  0000E0                     	ds	2
  2111  0000E2                     _choice:
  2112                           	opt stack 0
  2113  0000E2                     	ds	2
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           
  2121                           	psect	dataBANK0
  2122  0000E4                     __pdataBANK0:
  2123                           	opt stack 0
  2124  0000E4                     _threshold_loc:
  2125                           	opt stack 0
  2126  0000E4                     	ds	1
  2127  0000E5                     _temp_loc:
  2128                           	opt stack 0
  2129  0000E5                     	ds	1
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           
  2137                           	psect	bssBANK1
  2138  000148                     __pbssBANK1:
  2139                           	opt stack 0
  2140  000148                     _saved_pass:
  2141                           	opt stack 0
  2142  000148                     	ds	4
  2143  00014C                     _pass:
  2144                           	opt stack 0
  2145  00014C                     	ds	4
  2146  000150                     _keypad_active:
  2147                           	opt stack 0
  2148  000150                     	ds	2
  2149  000152                     _system_active:
  2150                           	opt stack 0
  2151  000152                     	ds	2
  2152  000154                     _alarm_set:
  2153                           	opt stack 0
  2154  000154                     	ds	2
  2155  000156                     _triggered:
  2156                           	opt stack 0
  2157  000156                     	ds	2
  2158  000158                     _check:
  2159                           	opt stack 0
  2160  000158                     	ds	2
  2161  00015A                     _pass_loc:
  2162                           	opt stack 0
  2163  00015A                     	ds	1
  2164  00015B                     _pass_check:
  2165                           	opt stack 0
  2166  00015B                     	ds	1
  2167                           tblptru	equ	0xFF8
  2168                           tblptrh	equ	0xFF7
  2169                           tblptrl	equ	0xFF6
  2170                           tablat	equ	0xFF5
  2171                           postinc0	equ	0xFEE
  2172                           wreg	equ	0xFE8
  2173                           
  2174                           	psect	dataBANK1
  2175  00015C                     __pdataBANK1:
  2176                           	opt stack 0
  2177  00015C                     _keypad_active_loc:
  2178                           	opt stack 0
  2179  00015C                     	ds	1
  2180  00015D                     _system_active_loc:
  2181                           	opt stack 0
  2182  00015D                     	ds	1
  2183  00015E                     _alarm_loc:
  2184                           	opt stack 0
  2185  00015E                     	ds	1
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           
  2193                           	psect	cstackBANK1
  2194  000100                     __pcstackBANK1:
  2195                           	opt stack 0
  2196  000100                     ?_keypad:
  2197                           	opt stack 0
  2198  000100                     ?___lldiv:
  2199                           	opt stack 0
  2200  000100                     putch@data:
  2201                           	opt stack 0
  2202  000100                     write_eeprom@data:
  2203                           	opt stack 0
  2204  000100                     Read_b_eep@badd:
  2205                           	opt stack 0
  2206  000100                     ___lldiv@dividend:
  2207                           	opt stack 0
  2208                           
  2209                           ; 4 bytes @ 0x0
  2210  000100                     	ds	1
  2211  000101                     ??_write_eeprom:
  2212                           
  2213                           ; 1 bytes @ 0x1
  2214  000101                     	ds	1
  2215  000102                     write_eeprom@address:
  2216                           	opt stack 0
  2217                           
  2218                           ; 1 bytes @ 0x2
  2219  000102                     	ds	2
  2220  000104                     ___lldiv@divisor:
  2221                           	opt stack 0
  2222                           
  2223                           ; 4 bytes @ 0x4
  2224  000104                     	ds	4
  2225  000108                     ___lldiv@quotient:
  2226                           	opt stack 0
  2227                           
  2228                           ; 4 bytes @ 0x8
  2229  000108                     	ds	4
  2230  00010C                     ___lldiv@counter:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0xC
  2234  00010C                     	ds	1
  2235  00010D                     ?___llmod:
  2236                           	opt stack 0
  2237  00010D                     ___llmod@dividend:
  2238                           	opt stack 0
  2239                           
  2240                           ; 4 bytes @ 0xD
  2241  00010D                     	ds	4
  2242  000111                     ___llmod@divisor:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x11
  2246  000111                     	ds	4
  2247  000115                     ___llmod@counter:
  2248                           	opt stack 0
  2249                           
  2250                           ; 1 bytes @ 0x15
  2251  000115                     	ds	1
  2252  000116                     ?_printf:
  2253                           	opt stack 0
  2254  000116                     printf@f:
  2255                           	opt stack 0
  2256                           
  2257                           ; 2 bytes @ 0x16
  2258  000116                     	ds	10
  2259  000120                     ??_printf:
  2260                           
  2261                           ; 1 bytes @ 0x20
  2262  000120                     	ds	2
  2263  000122                     printf@prec:
  2264                           	opt stack 0
  2265                           
  2266                           ; 2 bytes @ 0x22
  2267  000122                     	ds	2
  2268  000124                     printf@ap:
  2269                           	opt stack 0
  2270                           
  2271                           ; 2 bytes @ 0x24
  2272  000124                     	ds	2
  2273  000126                     printf@flag:
  2274                           	opt stack 0
  2275                           
  2276                           ; 1 bytes @ 0x26
  2277  000126                     	ds	1
  2278  000127                     printf@val:
  2279                           	opt stack 0
  2280                           
  2281                           ; 4 bytes @ 0x27
  2282  000127                     	ds	4
  2283  00012B                     printf@c:
  2284                           	opt stack 0
  2285                           
  2286                           ; 1 bytes @ 0x2B
  2287  00012B                     	ds	1
  2288  00012C                     ??_password:
  2289  00012C                     ??_alarm_options:
  2290  00012C                     ??_temp_options:
  2291  00012C                     ??_input_options:
  2292  00012C                     ??_password_change:
  2293                           
  2294                           ; 1 bytes @ 0x2C
  2295  00012C                     	ds	2
  2296  00012E                     password_change@i:
  2297                           	opt stack 0
  2298  00012E                     password@i:
  2299                           	opt stack 0
  2300  00012E                     alarm_options@i:
  2301                           	opt stack 0
  2302  00012E                     temp_options@i:
  2303                           	opt stack 0
  2304  00012E                     input_options@i:
  2305                           	opt stack 0
  2306                           
  2307                           ; 2 bytes @ 0x2E
  2308  00012E                     	ds	2
  2309  000130                     password_change@i_1099:
  2310                           	opt stack 0
  2311  000130                     password@i_1118:
  2312                           	opt stack 0
  2313  000130                     temp_options@i_1165:
  2314                           	opt stack 0
  2315                           
  2316                           ; 2 bytes @ 0x30
  2317  000130                     	ds	2
  2318  000132                     password_change@i_1101:
  2319                           	opt stack 0
  2320  000132                     password@i_1120:
  2321                           	opt stack 0
  2322  000132                     temp_options@i_1168:
  2323                           	opt stack 0
  2324                           
  2325                           ; 2 bytes @ 0x32
  2326  000132                     	ds	2
  2327  000134                     password_change@i_1111:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x34
  2331  000134                     	ds	2
  2332  000136                     password_change@i_1103:
  2333                           	opt stack 0
  2334                           
  2335                           ; 2 bytes @ 0x36
  2336  000136                     	ds	2
  2337  000138                     password_change@i_1107:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0x38
  2341  000138                     	ds	2
  2342  00013A                     ??_password_options:
  2343                           
  2344                           ; 1 bytes @ 0x3A
  2345  00013A                     	ds	2
  2346  00013C                     password_options@i:
  2347                           	opt stack 0
  2348                           
  2349                           ; 2 bytes @ 0x3C
  2350  00013C                     	ds	2
  2351  00013E                     ??_main:
  2352                           
  2353                           ; 1 bytes @ 0x3E
  2354  00013E                     	ds	2
  2355  000140                     main@i:
  2356                           	opt stack 0
  2357                           
  2358                           ; 2 bytes @ 0x40
  2359  000140                     	ds	2
  2360  000142                     main@i_1082:
  2361                           	opt stack 0
  2362                           
  2363                           ; 2 bytes @ 0x42
  2364  000142                     	ds	2
  2365  000144                     main@i_1084:
  2366                           	opt stack 0
  2367                           
  2368                           ; 2 bytes @ 0x44
  2369  000144                     	ds	2
  2370  000146                     main@i_1079:
  2371                           	opt stack 0
  2372                           
  2373                           ; 2 bytes @ 0x46
  2374  000146                     	ds	2
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           
  2382                           	psect	cstackBANK0
  2383  000080                     __pcstackBANK0:
  2384                           	opt stack 0
  2385  000080                     ?i1_keypad:
  2386                           	opt stack 0
  2387  000080                     ?___ftpack:
  2388                           	opt stack 0
  2389  000080                     ?___lmul:
  2390                           	opt stack 0
  2391  000080                     ?___aldiv:
  2392                           	opt stack 0
  2393  000080                     ?i1___lldiv:
  2394                           	opt stack 0
  2395  000080                     i1putch@data:
  2396                           	opt stack 0
  2397  000080                     i1write_eeprom@data:
  2398                           	opt stack 0
  2399  000080                     i1Read_b_eep@badd:
  2400                           	opt stack 0
  2401  000080                     ___ftpack@arg:
  2402                           	opt stack 0
  2403  000080                     ___lmul@multiplier:
  2404                           	opt stack 0
  2405  000080                     ___aldiv@dividend:
  2406                           	opt stack 0
  2407  000080                     i1___lldiv@dividend:
  2408                           	opt stack 0
  2409                           
  2410                           ; 4 bytes @ 0x0
  2411  000080                     	ds	1
  2412  000081                     ??i1_write_eeprom:
  2413                           
  2414                           ; 1 bytes @ 0x1
  2415  000081                     	ds	1
  2416  000082                     i1write_eeprom@address:
  2417                           	opt stack 0
  2418                           
  2419                           ; 1 bytes @ 0x2
  2420  000082                     	ds	1
  2421  000083                     ___ftpack@exp:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x3
  2425  000083                     	ds	1
  2426  000084                     ___ftpack@sign:
  2427                           	opt stack 0
  2428  000084                     ___lmul@multiplicand:
  2429                           	opt stack 0
  2430  000084                     ___aldiv@divisor:
  2431                           	opt stack 0
  2432  000084                     i1___lldiv@divisor:
  2433                           	opt stack 0
  2434                           
  2435                           ; 4 bytes @ 0x4
  2436  000084                     	ds	1
  2437  000085                     ??___ftpack:
  2438                           
  2439                           ; 1 bytes @ 0x5
  2440  000085                     	ds	3
  2441  000088                     ?___altoft:
  2442                           	opt stack 0
  2443  000088                     ___aldiv@counter:
  2444                           	opt stack 0
  2445  000088                     ___lmul@product:
  2446                           	opt stack 0
  2447  000088                     ___altoft@c:
  2448                           	opt stack 0
  2449  000088                     i1___lldiv@quotient:
  2450                           	opt stack 0
  2451                           
  2452                           ; 4 bytes @ 0x8
  2453  000088                     	ds	1
  2454  000089                     ___aldiv@sign:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x9
  2458  000089                     	ds	1
  2459  00008A                     ___aldiv@quotient:
  2460                           	opt stack 0
  2461                           
  2462                           ; 4 bytes @ 0xA
  2463  00008A                     	ds	2
  2464  00008C                     ??___altoft:
  2465  00008C                     i1___lldiv@counter:
  2466                           	opt stack 0
  2467                           
  2468                           ; 1 bytes @ 0xC
  2469  00008C                     	ds	1
  2470  00008D                     ?i1___llmod:
  2471                           	opt stack 0
  2472  00008D                     i1___llmod@dividend:
  2473                           	opt stack 0
  2474                           
  2475                           ; 4 bytes @ 0xD
  2476  00008D                     	ds	3
  2477  000090                     ___altoft@exp:
  2478                           	opt stack 0
  2479                           
  2480                           ; 1 bytes @ 0x10
  2481  000090                     	ds	1
  2482  000091                     ___altoft@sign:
  2483                           	opt stack 0
  2484  000091                     i1___llmod@divisor:
  2485                           	opt stack 0
  2486                           
  2487                           ; 4 bytes @ 0x11
  2488  000091                     	ds	1
  2489  000092                     ?___ftmul:
  2490                           	opt stack 0
  2491  000092                     ___ftmul@f1:
  2492                           	opt stack 0
  2493                           
  2494                           ; 3 bytes @ 0x12
  2495  000092                     	ds	3
  2496  000095                     i1___llmod@counter:
  2497                           	opt stack 0
  2498  000095                     ___ftmul@f2:
  2499                           	opt stack 0
  2500                           
  2501                           ; 3 bytes @ 0x15
  2502  000095                     	ds	1
  2503  000096                     ?i1_printf:
  2504                           	opt stack 0
  2505  000096                     i1printf@f:
  2506                           	opt stack 0
  2507                           
  2508                           ; 2 bytes @ 0x16
  2509  000096                     	ds	2
  2510  000098                     ??___ftmul:
  2511                           
  2512                           ; 1 bytes @ 0x18
  2513  000098                     	ds	3
  2514  00009B                     ___ftmul@exp:
  2515                           	opt stack 0
  2516                           
  2517                           ; 1 bytes @ 0x1B
  2518  00009B                     	ds	1
  2519  00009C                     ??i1_printf:
  2520  00009C                     ___ftmul@f3_as_product:
  2521                           	opt stack 0
  2522                           
  2523                           ; 3 bytes @ 0x1C
  2524  00009C                     	ds	2
  2525  00009E                     i1printf@prec:
  2526                           	opt stack 0
  2527                           
  2528                           ; 2 bytes @ 0x1E
  2529  00009E                     	ds	1
  2530  00009F                     ___ftmul@cntr:
  2531                           	opt stack 0
  2532                           
  2533                           ; 1 bytes @ 0x1F
  2534  00009F                     	ds	1
  2535  0000A0                     ___ftmul@sign:
  2536                           	opt stack 0
  2537  0000A0                     i1printf@ap:
  2538                           	opt stack 0
  2539                           
  2540                           ; 2 bytes @ 0x20
  2541  0000A0                     	ds	1
  2542  0000A1                     ?___fttol:
  2543                           	opt stack 0
  2544  0000A1                     ___fttol@f1:
  2545                           	opt stack 0
  2546                           
  2547                           ; 3 bytes @ 0x21
  2548  0000A1                     	ds	1
  2549  0000A2                     i1printf@flag:
  2550                           	opt stack 0
  2551                           
  2552                           ; 1 bytes @ 0x22
  2553  0000A2                     	ds	1
  2554  0000A3                     i1printf@val:
  2555                           	opt stack 0
  2556                           
  2557                           ; 4 bytes @ 0x23
  2558  0000A3                     	ds	2
  2559  0000A5                     ??___fttol:
  2560                           
  2561                           ; 1 bytes @ 0x25
  2562  0000A5                     	ds	2
  2563  0000A7                     i1printf@c:
  2564                           	opt stack 0
  2565                           
  2566                           ; 1 bytes @ 0x27
  2567  0000A7                     	ds	1
  2568  0000A8                     ??i1_password:
  2569                           
  2570                           ; 1 bytes @ 0x28
  2571  0000A8                     	ds	2
  2572  0000AA                     ___fttol@sign1:
  2573                           	opt stack 0
  2574  0000AA                     i1password@i:
  2575                           	opt stack 0
  2576                           
  2577                           ; 2 bytes @ 0x2A
  2578  0000AA                     	ds	1
  2579  0000AB                     ___fttol@lval:
  2580                           	opt stack 0
  2581                           
  2582                           ; 4 bytes @ 0x2B
  2583  0000AB                     	ds	1
  2584  0000AC                     i1password@i_1118:
  2585                           	opt stack 0
  2586                           
  2587                           ; 2 bytes @ 0x2C
  2588  0000AC                     	ds	2
  2589  0000AE                     i1password@i_1120:
  2590                           	opt stack 0
  2591                           
  2592                           ; 2 bytes @ 0x2E
  2593  0000AE                     	ds	1
  2594  0000AF                     ___fttol@exp1:
  2595                           	opt stack 0
  2596                           
  2597                           ; 1 bytes @ 0x2F
  2598  0000AF                     	ds	1
  2599  0000B0                     ??_ADC:
  2600                           
  2601                           ; 1 bytes @ 0x30
  2602  0000B0                     	ds	4
  2603  0000B4                     ??_temp_sensor:
  2604                           
  2605                           ; 1 bytes @ 0x34
  2606  0000B4                     	ds	26
  2607  0000CE                     temp_sensor@i:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x4E
  2611  0000CE                     	ds	2
  2612  0000D0                     temp_sensor@i_981:
  2613                           	opt stack 0
  2614                           
  2615                           ; 2 bytes @ 0x50
  2616  0000D0                     	ds	2
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           
  2624                           	psect	cstackCOMRAM
  2625  000001                     __pcstackCOMRAM:
  2626                           	opt stack 0
  2627  000001                     ?i2_keypad:
  2628                           	opt stack 0
  2629  000001                     ?i2___lldiv:
  2630                           	opt stack 0
  2631  000001                     i2putch@data:
  2632                           	opt stack 0
  2633  000001                     i2Read_b_eep@badd:
  2634                           	opt stack 0
  2635  000001                     i2___lldiv@dividend:
  2636                           	opt stack 0
  2637                           
  2638                           ; 4 bytes @ 0x0
  2639  000001                     	ds	2
  2640  000003                     
  2641                           ; 1 bytes @ 0x2
  2642  000003                     	ds	2
  2643  000005                     i2___lldiv@divisor:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x4
  2647  000005                     	ds	4
  2648  000009                     i2___lldiv@quotient:
  2649                           	opt stack 0
  2650                           
  2651                           ; 4 bytes @ 0x8
  2652  000009                     	ds	4
  2653  00000D                     i2___lldiv@counter:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0xC
  2657  00000D                     	ds	1
  2658  00000E                     ?i2___llmod:
  2659                           	opt stack 0
  2660  00000E                     i2___llmod@dividend:
  2661                           	opt stack 0
  2662                           
  2663                           ; 4 bytes @ 0xD
  2664  00000E                     	ds	4
  2665  000012                     i2___llmod@divisor:
  2666                           	opt stack 0
  2667                           
  2668                           ; 4 bytes @ 0x11
  2669  000012                     	ds	4
  2670  000016                     i2___llmod@counter:
  2671                           	opt stack 0
  2672                           
  2673                           ; 1 bytes @ 0x15
  2674  000016                     	ds	1
  2675  000017                     ?i2_printf:
  2676                           	opt stack 0
  2677  000017                     i2printf@f:
  2678                           	opt stack 0
  2679                           
  2680                           ; 2 bytes @ 0x16
  2681  000017                     	ds	2
  2682  000019                     ??i2_printf:
  2683                           
  2684                           ; 1 bytes @ 0x18
  2685  000019                     	ds	2
  2686  00001B                     i2printf@prec:
  2687                           	opt stack 0
  2688                           
  2689                           ; 2 bytes @ 0x1A
  2690  00001B                     	ds	2
  2691  00001D                     i2printf@ap:
  2692                           	opt stack 0
  2693                           
  2694                           ; 2 bytes @ 0x1C
  2695  00001D                     	ds	2
  2696  00001F                     i2printf@flag:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x1E
  2700  00001F                     	ds	1
  2701  000020                     i2printf@val:
  2702                           	opt stack 0
  2703                           
  2704                           ; 4 bytes @ 0x1F
  2705  000020                     	ds	4
  2706  000024                     i2printf@c:
  2707                           	opt stack 0
  2708                           
  2709                           ; 1 bytes @ 0x23
  2710  000024                     	ds	1
  2711  000025                     ??i2_password:
  2712                           
  2713                           ; 1 bytes @ 0x24
  2714  000025                     	ds	2
  2715  000027                     i2password@i:
  2716                           	opt stack 0
  2717                           
  2718                           ; 2 bytes @ 0x26
  2719  000027                     	ds	2
  2720  000029                     i2password@i_1118:
  2721                           	opt stack 0
  2722                           
  2723                           ; 2 bytes @ 0x28
  2724  000029                     	ds	2
  2725  00002B                     i2password@i_1120:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x2A
  2729  00002B                     	ds	2
  2730  00002D                     ??_alarm:
  2731                           
  2732                           ; 1 bytes @ 0x2C
  2733  00002D                     	ds	23
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           
  2741 ;;
  2742 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2743 ;;
  2744 ;; *************** function _main *****************
  2745 ;; Defined at:
  2746 ;;		line 265 in file "Lab7.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  i               2   68[BANK1 ] int 
  2751 ;;  i               2   66[BANK1 ] int 
  2752 ;;  i               2   70[BANK1 ] int 
  2753 ;;  i               2   64[BANK1 ] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       0       0       0       0       0       0
  2764 ;;      Locals:         0       0       8       0       0       0       0
  2765 ;;      Temps:          0       0       2       0       0       0       0
  2766 ;;      Totals:         0       0      10       0       0       0       0
  2767 ;;Total ram usage:       10 bytes
  2768 ;; Hardware stack levels required when called:   13
  2769 ;; This function calls:
  2770 ;;		_Clear
  2771 ;;		_Read_b_eep
  2772 ;;		_alarm_options
  2773 ;;		_input_options
  2774 ;;		_keypad
  2775 ;;		_password
  2776 ;;		_password_options
  2777 ;;		_printf
  2778 ;;		_temp_options
  2779 ;;		_write_eeprom
  2780 ;; This function is called by:
  2781 ;;		Startup code after reset
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text0
  2786  0008DE                     __ptext0:
  2787                           	opt stack 0
  2788  0008DE                     _main:
  2789                           	opt stack 18
  2790                           
  2791                           ;Lab7.c: 268: TXSTAbits.TXEN = 1;
  2792                           
  2793                           ;incstack = 0
  2794  0008DE  8AAC               	bsf	4012,5,c	;volatile
  2795                           
  2796                           ;Lab7.c: 269: RCSTAbits.SPEN = 1;
  2797  0008E0  8EAB               	bsf	4011,7,c	;volatile
  2798                           
  2799                           ;Lab7.c: 271: TRISB = 0b00000010;
  2800  0008E2  0E02               	movlw	2
  2801  0008E4  6E93               	movwf	3987,c	;volatile
  2802                           
  2803                           ;Lab7.c: 273: PORTBbits.RB2 = 0;
  2804  0008E6  9481               	bcf	3969,2,c	;volatile
  2805                           
  2806                           ;Lab7.c: 274: PORTBbits.RB3 = 0;
  2807  0008E8  9681               	bcf	3969,3,c	;volatile
  2808                           
  2809                           ;Lab7.c: 275: PORTBbits.RB4 = 0;
  2810  0008EA  9881               	bcf	3969,4,c	;volatile
  2811                           
  2812                           ;Lab7.c: 276: PORTBbits.RB5 = 0;
  2813  0008EC  9A81               	bcf	3969,5,c	;volatile
  2814                           
  2815                           ;Lab7.c: 279: TRISCbits.RC7 = 1;
  2816  0008EE  8E94               	bsf	3988,7,c	;volatile
  2817                           
  2818                           ;Lab7.c: 280: TRISCbits.RC6 = 0;
  2819  0008F0  9C94               	bcf	3988,6,c	;volatile
  2820                           
  2821                           ;Lab7.c: 281: SPBRG = 31;
  2822  0008F2  0E1F               	movlw	31
  2823  0008F4  6EAF               	movwf	4015,c	;volatile
  2824                           
  2825                           ;Lab7.c: 282: TXSTAbits.SYNC = 0;
  2826  0008F6  98AC               	bcf	4012,4,c	;volatile
  2827                           
  2828                           ;Lab7.c: 283: TXSTAbits.BRGH = 0;
  2829  0008F8  94AC               	bcf	4012,2,c	;volatile
  2830                           
  2831                           ;Lab7.c: 284: RCSTAbits.RX9 = 0;
  2832  0008FA  9CAB               	bcf	4011,6,c	;volatile
  2833                           
  2834                           ;Lab7.c: 285: RCSTAbits.SPEN = 1;
  2835  0008FC  8EAB               	bsf	4011,7,c	;volatile
  2836                           
  2837                           ;Lab7.c: 286: RCSTAbits.CREN = 1;
  2838  0008FE  88AB               	bsf	4011,4,c	;volatile
  2839                           
  2840                           ;Lab7.c: 289: INTCONbits.GIE = 0;
  2841  000900  9EF2               	bcf	intcon,7,c	;volatile
  2842                           
  2843                           ;Lab7.c: 290: INTCONbits.PEIE = 0;
  2844  000902  9CF2               	bcf	intcon,6,c	;volatile
  2845                           
  2846                           ;Lab7.c: 291: RCONbits.IPEN = 1;
  2847  000904  8ED0               	bsf	4048,7,c	;volatile
  2848                           
  2849                           ;Lab7.c: 293: PIR1bits.ADIF = 0;
  2850  000906  9C9E               	bcf	3998,6,c	;volatile
  2851                           
  2852                           ;Lab7.c: 294: PIE1bits.ADIE = 1;
  2853  000908  8C9D               	bsf	3997,6,c	;volatile
  2854                           
  2855                           ;Lab7.c: 295: IPR1bits.ADIP = 0;
  2856  00090A  9C9F               	bcf	3999,6,c	;volatile
  2857                           
  2858                           ;Lab7.c: 297: INTCON3bits.INT1IP = 1;
  2859  00090C  8CF0               	bsf	intcon3,6,c	;volatile
  2860                           
  2861                           ;Lab7.c: 298: INTCON3bits.INT1IE = 0;
  2862  00090E  96F0               	bcf	intcon3,3,c	;volatile
  2863                           
  2864                           ;Lab7.c: 299: INTCON3bits.INT1IF = 0;
  2865  000910  90F0               	bcf	intcon3,0,c	;volatile
  2866                           
  2867                           ;Lab7.c: 301: ADCON0bits.CHS3 = 0;
  2868  000912  9AC2               	bcf	4034,5,c	;volatile
  2869                           
  2870                           ;Lab7.c: 302: ADCON0bits.CHS2 = 0;
  2871  000914  98C2               	bcf	4034,4,c	;volatile
  2872                           
  2873                           ;Lab7.c: 303: ADCON0bits.CHS1 = 0;
  2874  000916  96C2               	bcf	4034,3,c	;volatile
  2875                           
  2876                           ;Lab7.c: 304: ADCON0bits.CHS0 = 0;
  2877  000918  94C2               	bcf	4034,2,c	;volatile
  2878                           
  2879                           ;Lab7.c: 306: ADCON0bits.GO = 0;
  2880  00091A  92C2               	bcf	4034,1,c	;volatile
  2881                           
  2882                           ;Lab7.c: 307: ADCON0bits.ADON = 1;
  2883  00091C  80C2               	bsf	4034,0,c	;volatile
  2884                           
  2885                           ;Lab7.c: 308: ADCON1bits.VCFG1 = 0;
  2886  00091E  9AC1               	bcf	4033,5,c	;volatile
  2887                           
  2888                           ;Lab7.c: 309: ADCON1bits.VCFG0 = 0;
  2889  000920  98C1               	bcf	4033,4,c	;volatile
  2890                           
  2891                           ;Lab7.c: 311: ADCON1bits.PCFG3 = 1;
  2892  000922  86C1               	bsf	4033,3,c	;volatile
  2893                           
  2894                           ;Lab7.c: 312: ADCON1bits.PCFG2 = 1;
  2895  000924  84C1               	bsf	4033,2,c	;volatile
  2896                           
  2897                           ;Lab7.c: 313: ADCON1bits.PCFG1 = 1;
  2898  000926  82C1               	bsf	4033,1,c	;volatile
  2899                           
  2900                           ;Lab7.c: 314: ADCON1bits.PCFG0 = 0;
  2901  000928  90C1               	bcf	4033,0,c	;volatile
  2902                           
  2903                           ;Lab7.c: 316: ADCON2bits.ADFM = 1;
  2904  00092A  8EC0               	bsf	4032,7,c	;volatile
  2905                           
  2906                           ;Lab7.c: 318: ADCON2bits.ACQT2 = 1;
  2907  00092C  8AC0               	bsf	4032,5,c	;volatile
  2908                           
  2909                           ;Lab7.c: 319: ADCON2bits.ACQT2 = 0;
  2910  00092E  9AC0               	bcf	4032,5,c	;volatile
  2911                           
  2912                           ;Lab7.c: 320: ADCON2bits.ACQT2 = 0;
  2913  000930  9AC0               	bcf	4032,5,c	;volatile
  2914                           
  2915                           ;Lab7.c: 322: ADCON2bits.ADCS2 = 1;
  2916  000932  84C0               	bsf	4032,2,c	;volatile
  2917                           
  2918                           ;Lab7.c: 323: ADCON2bits.ADCS1 = 0;
  2919  000934  92C0               	bcf	4032,1,c	;volatile
  2920                           
  2921                           ;Lab7.c: 324: ADCON2bits.ADCS0 = 0;
  2922  000936  90C0               	bcf	4032,0,c	;volatile
  2923                           
  2924                           ;Lab7.c: 326: T0CONbits.TMR0ON = 0;
  2925  000938  9ED5               	bcf	4053,7,c	;volatile
  2926                           
  2927                           ;Lab7.c: 327: T0CONbits.T08BIT = 0;
  2928  00093A  9CD5               	bcf	4053,6,c	;volatile
  2929                           
  2930                           ;Lab7.c: 328: T0CONbits.T0CS = 0;
  2931  00093C  9AD5               	bcf	4053,5,c	;volatile
  2932                           
  2933                           ;Lab7.c: 329: T0CONbits.PSA = 0;
  2934  00093E  96D5               	bcf	4053,3,c	;volatile
  2935                           
  2936                           ;Lab7.c: 331: T0CONbits.T0PS2 = 1;
  2937  000940  84D5               	bsf	4053,2,c	;volatile
  2938                           
  2939                           ;Lab7.c: 332: T0CONbits.T0PS1 = 0;
  2940  000942  92D5               	bcf	4053,1,c	;volatile
  2941                           
  2942                           ;Lab7.c: 333: T0CONbits.T0PS0 = 1;
  2943  000944  80D5               	bsf	4053,0,c	;volatile
  2944                           
  2945                           ;Lab7.c: 335: INTCONbits.TMR0IE = 1;
  2946  000946  8AF2               	bsf	intcon,5,c	;volatile
  2947                           
  2948                           ;Lab7.c: 336: INTCONbits.TMR0IF = 0;
  2949  000948  94F2               	bcf	intcon,2,c	;volatile
  2950                           
  2951                           ;Lab7.c: 337: INTCON2bits.TMR0IP = 0;
  2952  00094A  94F1               	bcf	intcon2,2,c	;volatile
  2953                           
  2954                           ;Lab7.c: 339: INTCONbits.GIE = 1;
  2955  00094C  8EF2               	bsf	intcon,7,c	;volatile
  2956                           
  2957                           ;Lab7.c: 340: INTCONbits.PEIE = 1;
  2958  00094E  8CF2               	bsf	intcon,6,c	;volatile
  2959                           
  2960                           ;Lab7.c: 342: TMR0H = 0x67;
  2961  000950  0E67               	movlw	103
  2962  000952  6ED7               	movwf	4055,c	;volatile
  2963                           
  2964                           ;Lab7.c: 343: TMR0L = 0x6A;
  2965  000954  0E6A               	movlw	106
  2966  000956  6ED6               	movwf	4054,c	;volatile
  2967                           
  2968                           ;Lab7.c: 345: Clear();
  2969  000958  EC18  F018         	call	_Clear	;wreg free
  2970                           
  2971                           ;Lab7.c: 346: keypad_active = Read_b_eep(keypad_active_loc);
  2972  00095C  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  2973  000960  0101               	movlb	1	; () banked
  2974  000962  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  2975  000964  EC43  F018         	call	_Read_b_eep	;wreg free
  2976  000968  0101               	movlb	1	; () banked
  2977  00096A  6F3E               	movwf	??_main& (0+255),b
  2978  00096C  513E               	movf	??_main& (0+255),w,b
  2979  00096E  6F50               	movwf	_keypad_active& (0+255),b
  2980  000970  6B51               	clrf	(_keypad_active+1)& (0+255),b
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;Lab7.c: 347: system_active = Read_b_eep(system_active_loc);
  2984  000972  C15D  F100         	movff	_system_active_loc,Read_b_eep@badd
  2985  000976  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  2986  000978  EC43  F018         	call	_Read_b_eep	;wreg free
  2987  00097C  0101               	movlb	1	; () banked
  2988  00097E  6F3E               	movwf	??_main& (0+255),b
  2989  000980  513E               	movf	??_main& (0+255),w,b
  2990  000982  6F52               	movwf	_system_active& (0+255),b
  2991  000984  6B53               	clrf	(_system_active+1)& (0+255),b
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;Lab7.c: 348: if(keypad_active == 1 || keypad_active == 2){
  2995  000986  0550               	decf	_keypad_active& (0+255),w,b
  2996  000988  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  2997  00098A  B4D8               	btfsc	status,2,c
  2998  00098C  D005               	goto	u7990
  2999                           
  3000                           ; BSR set to: 1
  3001  00098E  0E02               	movlw	2
  3002  000990  1950               	xorwf	_keypad_active& (0+255),w,b
  3003  000992  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  3004  000994  A4D8               	btfss	status,2,c
  3005  000996  D002               	goto	l181
  3006  000998                     u7990:
  3007                           
  3008                           ; BSR set to: 1
  3009                           ;Lab7.c: 349: PORTBbits.RB4 = 1;
  3010  000998  8881               	bsf	3969,4,c	;volatile
  3011                           
  3012                           ;Lab7.c: 350: }
  3013  00099A  D001               	goto	l184
  3014  00099C                     l181:
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;Lab7.c: 351: else{
  3018                           ;Lab7.c: 352: PORTBbits.RB4 = 0;
  3019  00099C  9881               	bcf	3969,4,c	;volatile
  3020  00099E                     l184:
  3021                           
  3022                           ; BSR set to: 1
  3023                           ;Lab7.c: 353: }
  3024                           ;Lab7.c: 354: if(system_active == 1)
  3025                           
  3026                           ; BSR set to: 1
  3027  00099E  0552               	decf	_system_active& (0+255),w,b
  3028  0009A0  1153               	iorwf	(_system_active+1)& (0+255),w,b
  3029  0009A2  A4D8               	btfss	status,2,c
  3030  0009A4  D051               	goto	l185
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;Lab7.c: 355: {
  3034                           ;Lab7.c: 356: if(keypad_active == 1){
  3035  0009A6  0550               	decf	_keypad_active& (0+255),w,b
  3036  0009A8  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  3037  0009AA  A4D8               	btfss	status,2,c
  3038  0009AC  D009               	goto	l186
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;Lab7.c: 357: printf("INPUT: Keypad\n\r\n\r");
  3042  0009AE  0E89               	movlw	low STR_18
  3043  0009B0  6F16               	movwf	printf@f& (0+255),b
  3044  0009B2  0E7F               	movlw	high STR_18
  3045  0009B4  6F17               	movwf	(printf@f+1)& (0+255),b
  3046  0009B6  EC00  F00C         	call	_printf	;wreg free
  3047                           
  3048                           ;Lab7.c: 358: password();
  3049  0009BA  ECBB  F011         	call	_password	;wreg free
  3050                           
  3051                           ;Lab7.c: 359: }
  3052  0009BE  D018               	goto	l189
  3053  0009C0                     l186:
  3054                           
  3055                           ;Lab7.c: 360: else if(keypad_active == 2){
  3056  0009C0  0E02               	movlw	2
  3057  0009C2  0101               	movlb	1	; () banked
  3058  0009C4  1950               	xorwf	_keypad_active& (0+255),w,b
  3059  0009C6  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  3060  0009C8  A4D8               	btfss	status,2,c
  3061  0009CA  D009               	goto	l188
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;Lab7.c: 361: printf("INPUT: Keypad and Keyboard\n\r\n\r");
  3065  0009CC  0E8B               	movlw	low STR_19
  3066  0009CE  6F16               	movwf	printf@f& (0+255),b
  3067  0009D0  0E7D               	movlw	high STR_19
  3068  0009D2  6F17               	movwf	(printf@f+1)& (0+255),b
  3069  0009D4  EC00  F00C         	call	_printf	;wreg free
  3070                           
  3071                           ;Lab7.c: 362: password();
  3072  0009D8  ECBB  F011         	call	_password	;wreg free
  3073                           
  3074                           ;Lab7.c: 363: }
  3075  0009DC  D009               	goto	l189
  3076  0009DE                     l188:
  3077                           
  3078                           ;Lab7.c: 364: else{
  3079                           ;Lab7.c: 365: printf("INPUT: Keyboard\n\r\n\r");
  3080  0009DE  0E28               	movlw	low STR_20
  3081  0009E0  0101               	movlb	1	; () banked
  3082  0009E2  6F16               	movwf	printf@f& (0+255),b
  3083  0009E4  0E7F               	movlw	high STR_20
  3084  0009E6  6F17               	movwf	(printf@f+1)& (0+255),b
  3085  0009E8  EC00  F00C         	call	_printf	;wreg free
  3086                           
  3087                           ;Lab7.c: 366: password();
  3088  0009EC  ECBB  F011         	call	_password	;wreg free
  3089  0009F0                     l189:
  3090                           
  3091                           ;Lab7.c: 367: }
  3092                           ;Lab7.c: 368: threshold_loc = 0x30;
  3093  0009F0  0E30               	movlw	48
  3094  0009F2  0100               	movlb	0	; () banked
  3095  0009F4  6FE4               	movwf	_threshold_loc& (0+255),b
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;Lab7.c: 369: for(int i = 0;i < 2;i++)
  3099  0009F6  0E00               	movlw	0
  3100  0009F8  0101               	movlb	1	; () banked
  3101  0009FA  6F41               	movwf	(main@i+1)& (0+255),b
  3102  0009FC  0E00               	movlw	0
  3103  0009FE  6F40               	movwf	main@i& (0+255),b
  3104  000A00                     l5736:
  3105                           
  3106                           ; BSR set to: 1
  3107  000A00  BF41               	btfsc	(main@i+1)& (0+255),7,b
  3108  000A02  D006               	goto	l190
  3109  000A04  5141               	movf	(main@i+1)& (0+255),w,b
  3110  000A06  E116               	bnz	l5748
  3111  000A08  0E02               	movlw	2
  3112  000A0A  5D40               	subwf	main@i& (0+255),w,b
  3113  000A0C  B0D8               	btfsc	status,0,c
  3114  000A0E  D012               	goto	u8040
  3115  000A10                     l190:
  3116                           
  3117                           ; BSR set to: 1
  3118                           ;Lab7.c: 370: {
  3119                           ;Lab7.c: 371: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  3120                           
  3121                           ; BSR set to: 1
  3122  000A10  0EE0               	movlw	low _temp_threshold_read
  3123  000A12  2540               	addwf	main@i& (0+255),w,b
  3124  000A14  6ED9               	movwf	fsr2l,c
  3125  000A16  0E00               	movlw	high _temp_threshold_read
  3126  000A18  2141               	addwfc	(main@i+1)& (0+255),w,b
  3127  000A1A  6EDA               	movwf	fsr2h,c
  3128  000A1C  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  3129  000A20  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3130  000A22  EC43  F018         	call	_Read_b_eep	;wreg free
  3131  000A26  6EDF               	movwf	indf2,c
  3132                           
  3133                           ;Lab7.c: 372: threshold_loc += 1;
  3134  000A28  0100               	movlb	0	; () banked
  3135  000A2A  2BE4               	incf	_threshold_loc& (0+255),f,b
  3136                           
  3137                           ; BSR set to: 0
  3138  000A2C  0101               	movlb	1	; () banked
  3139  000A2E  4B40               	infsnz	main@i& (0+255),f,b
  3140  000A30  2B41               	incf	(main@i+1)& (0+255),f,b
  3141  000A32  D7E6               	goto	l5736
  3142  000A34                     u8040:
  3143  000A34                     l5748:
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;Lab7.c: 373: }
  3147                           ;Lab7.c: 374: temp_threshold = temp_threshold_read[0]*10+temp_threshold_read[1];
  3148  000A34  0100               	movlb	0	; () banked
  3149  000A36  51E0               	movf	_temp_threshold_read& (0+255),w,b
  3150  000A38  0D0A               	mullw	10
  3151  000A3A  51E1               	movf	(_temp_threshold_read+1)& (0+255),w,b
  3152  000A3C  24F3               	addwf	prodl,w,c
  3153  000A3E  6E48               	movwf	_temp_threshold,c
  3154  000A40  0E00               	movlw	0
  3155  000A42  20F4               	addwfc	prodh,w,c
  3156  000A44  6E49               	movwf	_temp_threshold+1,c
  3157                           
  3158                           ;Lab7.c: 375: }
  3159  000A46  D09B               	goto	l192
  3160  000A48                     l185:
  3161                           
  3162                           ;Lab7.c: 376: else
  3163                           ;Lab7.c: 377: {
  3164                           ;Lab7.c: 379: printf("SET PASSWORD:\t");
  3165                           
  3166                           ; BSR set to: 0
  3167  000A48  0ECF               	movlw	low STR_21
  3168  000A4A  0101               	movlb	1	; () banked
  3169  000A4C  6F16               	movwf	printf@f& (0+255),b
  3170  000A4E  0E7F               	movlw	high STR_21
  3171  000A50  6F17               	movwf	(printf@f+1)& (0+255),b
  3172  000A52  EC00  F00C         	call	_printf	;wreg free
  3173                           
  3174                           ;Lab7.c: 380: for(int i = 0;i < 4;i++){
  3175  000A56  0E00               	movlw	0
  3176  000A58  0101               	movlb	1	; () banked
  3177  000A5A  6F47               	movwf	(main@i_1079+1)& (0+255),b
  3178  000A5C  0E00               	movlw	0
  3179  000A5E  6F46               	movwf	main@i_1079& (0+255),b
  3180                           
  3181                           ; BSR set to: 1
  3182  000A60  BF47               	btfsc	(main@i_1079+1)& (0+255),7,b
  3183  000A62  D006               	goto	l193
  3184  000A64  5147               	movf	(main@i_1079+1)& (0+255),w,b
  3185  000A66  E148               	bnz	l5776
  3186  000A68  0E04               	movlw	4
  3187  000A6A  5D46               	subwf	main@i_1079& (0+255),w,b
  3188  000A6C  B0D8               	btfsc	status,0,c
  3189  000A6E  D044               	goto	u8090
  3190  000A70                     l193:
  3191                           
  3192                           ; BSR set to: 1
  3193                           
  3194                           ; BSR set to: 1
  3195                           ;Lab7.c: 381: while(PIR1bits.RCIF == 0);
  3196  000A70  AA9E               	btfss	3998,5,c	;volatile
  3197  000A72  D7FE               	goto	l193
  3198                           
  3199                           ;Lab7.c: 382: saved_pass[i] = RCREG;
  3200  000A74  0E48               	movlw	low _saved_pass
  3201  000A76  0101               	movlb	1	; () banked
  3202  000A78  2546               	addwf	main@i_1079& (0+255),w,b
  3203  000A7A  6ED9               	movwf	fsr2l,c
  3204  000A7C  0E01               	movlw	high _saved_pass
  3205  000A7E  2147               	addwfc	(main@i_1079+1)& (0+255),w,b
  3206  000A80  6EDA               	movwf	fsr2h,c
  3207  000A82  CFAE FFDF          	movff	4014,indf2	;volatile
  3208                           
  3209                           ; BSR set to: 1
  3210                           ;Lab7.c: 384: printf("*");
  3211  000A86  0EFD               	movlw	low STR_22
  3212  000A88  6F16               	movwf	printf@f& (0+255),b
  3213  000A8A  0E7F               	movlw	high STR_22
  3214  000A8C  6F17               	movwf	(printf@f+1)& (0+255),b
  3215  000A8E  EC00  F00C         	call	_printf	;wreg free
  3216                           
  3217                           ;Lab7.c: 386: if(saved_pass[i] < '0' || saved_pass[i] > '9')
  3218  000A92  0E48               	movlw	low _saved_pass
  3219  000A94  0101               	movlb	1	; () banked
  3220  000A96  2546               	addwf	main@i_1079& (0+255),w,b
  3221  000A98  6ED9               	movwf	fsr2l,c
  3222  000A9A  0E01               	movlw	high _saved_pass
  3223  000A9C  2147               	addwfc	(main@i_1079+1)& (0+255),w,b
  3224  000A9E  6EDA               	movwf	fsr2h,c
  3225  000AA0  0E2F               	movlw	47
  3226  000AA2  64DF               	cpfsgt	indf2,c
  3227  000AA4  D009               	goto	u8080
  3228                           
  3229                           ; BSR set to: 1
  3230  000AA6  0E48               	movlw	low _saved_pass
  3231  000AA8  2546               	addwf	main@i_1079& (0+255),w,b
  3232  000AAA  6ED9               	movwf	fsr2l,c
  3233  000AAC  0E01               	movlw	high _saved_pass
  3234  000AAE  2147               	addwfc	(main@i_1079+1)& (0+255),w,b
  3235  000AB0  6EDA               	movwf	fsr2h,c
  3236  000AB2  0E39               	movlw	57
  3237  000AB4  64DF               	cpfsgt	indf2,c
  3238  000AB6  D015               	goto	l198
  3239  000AB8                     u8080:
  3240                           
  3241                           ; BSR set to: 1
  3242                           ;Lab7.c: 387: {
  3243                           ;Lab7.c: 388: printf("\n\rONLY 0-9 CAN BE USED IN PASSWORD\n\r");
  3244                           
  3245                           ; BSR set to: 1
  3246  000AB8  0EFE               	movlw	low STR_23
  3247  000ABA  6F16               	movwf	printf@f& (0+255),b
  3248  000ABC  0E7C               	movlw	high STR_23
  3249  000ABE  6F17               	movwf	(printf@f+1)& (0+255),b
  3250  000AC0  EC00  F00C         	call	_printf	;wreg free
  3251                           
  3252                           ;Lab7.c: 389: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3253  000AC4  0E1A               	movlw	26
  3254  000AC6  0101               	movlb	1	; () banked
  3255  000AC8  6F3F               	movwf	(??_main+1)& (0+255),b
  3256  000ACA  0E5E               	movlw	94
  3257  000ACC  6F3E               	movwf	??_main& (0+255),b
  3258  000ACE  0E6E               	movlw	110
  3259  000AD0                     u8217:
  3260  000AD0  2EE8               	decfsz	wreg,f,c
  3261  000AD2  D7FE               	bra	u8217
  3262  000AD4  2F3E               	decfsz	??_main& (0+255),f,b
  3263  000AD6  D7FC               	bra	u8217
  3264  000AD8  2F3F               	decfsz	(??_main+1)& (0+255),f,b
  3265  000ADA  D7FA               	bra	u8217
  3266  000ADC  F000               	nop	
  3267                           
  3268                           ;Lab7.c: 390: return;
  3269  000ADE  EF12  F002         	goto	start
  3270  000AE2                     l198:
  3271  000AE2  0101               	movlb	1	; () banked
  3272  000AE4  4B46               	infsnz	main@i_1079& (0+255),f,b
  3273  000AE6  2B47               	incf	(main@i_1079+1)& (0+255),f,b
  3274                           
  3275                           ; BSR set to: 1
  3276  000AE8  BF47               	btfsc	(main@i_1079+1)& (0+255),7,b
  3277  000AEA  D7C2               	goto	l193
  3278  000AEC  5147               	movf	(main@i_1079+1)& (0+255),w,b
  3279  000AEE  E104               	bnz	l5776
  3280  000AF0  0E04               	movlw	4
  3281  000AF2  5D46               	subwf	main@i_1079& (0+255),w,b
  3282  000AF4  A0D8               	btfss	status,0,c
  3283  000AF6  D7BC               	goto	l193
  3284  000AF8                     u8090:
  3285  000AF8                     l5776:
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;Lab7.c: 391: }
  3289                           ;Lab7.c: 392: }
  3290                           ;Lab7.c: 395: for(int i=0;i<4;i++)
  3291  000AF8  0E00               	movlw	0
  3292  000AFA  6F43               	movwf	(main@i_1082+1)& (0+255),b
  3293  000AFC  0E00               	movlw	0
  3294  000AFE  6F42               	movwf	main@i_1082& (0+255),b
  3295  000B00                     l5778:
  3296                           
  3297                           ; BSR set to: 1
  3298  000B00  BF43               	btfsc	(main@i_1082+1)& (0+255),7,b
  3299  000B02  D006               	goto	l202
  3300  000B04  5143               	movf	(main@i_1082+1)& (0+255),w,b
  3301  000B06  E114               	bnz	l5790
  3302  000B08  0E04               	movlw	4
  3303  000B0A  5D42               	subwf	main@i_1082& (0+255),w,b
  3304  000B0C  B0D8               	btfsc	status,0,c
  3305  000B0E  D010               	goto	u8110
  3306  000B10                     l202:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;Lab7.c: 396: {
  3310                           ;Lab7.c: 397: write_eeprom(pass_loc,saved_pass[i]);
  3311                           
  3312                           ; BSR set to: 1
  3313  000B10  0E48               	movlw	low _saved_pass
  3314  000B12  2542               	addwf	main@i_1082& (0+255),w,b
  3315  000B14  6ED9               	movwf	fsr2l,c
  3316  000B16  0E01               	movlw	high _saved_pass
  3317  000B18  2143               	addwfc	(main@i_1082+1)& (0+255),w,b
  3318  000B1A  6EDA               	movwf	fsr2h,c
  3319  000B1C  50DF               	movf	indf2,w,c
  3320  000B1E  6F00               	movwf	write_eeprom@data& (0+255),b
  3321  000B20  515A               	movf	_pass_loc& (0+255),w,b
  3322  000B22  ECE4  F017         	call	_write_eeprom
  3323                           
  3324                           ;Lab7.c: 398: pass_loc+=1;
  3325  000B26  0101               	movlb	1	; () banked
  3326  000B28  2B5A               	incf	_pass_loc& (0+255),f,b
  3327                           
  3328                           ; BSR set to: 1
  3329  000B2A  4B42               	infsnz	main@i_1082& (0+255),f,b
  3330  000B2C  2B43               	incf	(main@i_1082+1)& (0+255),f,b
  3331  000B2E  D7E8               	goto	l5778
  3332  000B30                     u8110:
  3333  000B30                     l5790:
  3334                           
  3335                           ; BSR set to: 1
  3336                           ;Lab7.c: 399: }
  3337                           ;Lab7.c: 401: printf("\n\rPassword SET\n\r\n\r");
  3338  000B30  0E50               	movlw	low STR_24
  3339  000B32  6F16               	movwf	printf@f& (0+255),b
  3340  000B34  0E7F               	movlw	high STR_24
  3341  000B36  6F17               	movwf	(printf@f+1)& (0+255),b
  3342  000B38  EC00  F00C         	call	_printf	;wreg free
  3343                           
  3344                           ;Lab7.c: 403: write_eeprom(system_active_loc,0x01);
  3345  000B3C  0E01               	movlw	1
  3346  000B3E  0101               	movlb	1	; () banked
  3347  000B40  6F00               	movwf	write_eeprom@data& (0+255),b
  3348  000B42  515D               	movf	_system_active_loc& (0+255),w,b
  3349  000B44  ECE4  F017         	call	_write_eeprom
  3350                           
  3351                           ;Lab7.c: 405: write_eeprom(threshold_loc,7);
  3352  000B48  0E07               	movlw	7
  3353  000B4A  0101               	movlb	1	; () banked
  3354  000B4C  6F00               	movwf	write_eeprom@data& (0+255),b
  3355  000B4E  0100               	movlb	0	; () banked
  3356  000B50  51E4               	movf	_threshold_loc& (0+255),w,b
  3357  000B52  ECE4  F017         	call	_write_eeprom
  3358                           
  3359                           ;Lab7.c: 406: write_eeprom(threshold_loc+1,5);
  3360  000B56  0E05               	movlw	5
  3361  000B58  0101               	movlb	1	; () banked
  3362  000B5A  6F00               	movwf	write_eeprom@data& (0+255),b
  3363  000B5C  0100               	movlb	0	; () banked
  3364  000B5E  29E4               	incf	_threshold_loc& (0+255),w,b
  3365  000B60  ECE4  F017         	call	_write_eeprom
  3366                           
  3367                           ;Lab7.c: 408: write_eeprom(alarm_loc,0);
  3368  000B64  0E00               	movlw	0
  3369  000B66  0101               	movlb	1	; () banked
  3370  000B68  6F00               	movwf	write_eeprom@data& (0+255),b
  3371  000B6A  515E               	movf	_alarm_loc& (0+255),w,b
  3372  000B6C  ECE4  F017         	call	_write_eeprom
  3373                           
  3374                           ;Lab7.c: 409: write_eeprom(temp_loc,0);
  3375  000B70  0E00               	movlw	0
  3376  000B72  0101               	movlb	1	; () banked
  3377  000B74  6F00               	movwf	write_eeprom@data& (0+255),b
  3378  000B76  0100               	movlb	0	; () banked
  3379  000B78  51E5               	movf	_temp_loc& (0+255),w,b
  3380  000B7A  ECE4  F017         	call	_write_eeprom
  3381  000B7E                     l192:
  3382                           
  3383                           ;Lab7.c: 414: {
  3384                           ;Lab7.c: 415: PORTBbits.RB3 = 1;
  3385                           
  3386                           ;Lab7.c: 410: }
  3387                           ;Lab7.c: 413: while(1)
  3388  000B7E  8681               	bsf	3969,3,c	;volatile
  3389                           
  3390                           ;Lab7.c: 416: T0CONbits.TMR0ON = 1;
  3391  000B80  8ED5               	bsf	4053,7,c	;volatile
  3392  000B82                     
  3393                           ;Lab7.c: 419: {
  3394                           ;Lab7.c: 420: alarm_set = Read_b_eep(alarm_loc);
  3395  000B82  C15E  F100         	movff	_alarm_loc,Read_b_eep@badd
  3396  000B86  0101               	movlb	1	; () banked
  3397  000B88  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3398  000B8A  EC43  F018         	call	_Read_b_eep	;wreg free
  3399  000B8E  0101               	movlb	1	; () banked
  3400  000B90  6F3E               	movwf	??_main& (0+255),b
  3401  000B92  513E               	movf	??_main& (0+255),w,b
  3402  000B94  6F54               	movwf	_alarm_set& (0+255),b
  3403  000B96  6B55               	clrf	(_alarm_set+1)& (0+255),b
  3404                           
  3405                           ; BSR set to: 1
  3406                           ;Lab7.c: 421: temp_set = Read_b_eep(temp_loc);
  3407  000B98  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  3408  000B9C  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3409  000B9E  EC43  F018         	call	_Read_b_eep	;wreg free
  3410  000BA2  0101               	movlb	1	; () banked
  3411  000BA4  6F3E               	movwf	??_main& (0+255),b
  3412  000BA6  513E               	movf	??_main& (0+255),w,b
  3413  000BA8  6E4A               	movwf	_temp_set,c
  3414  000BAA  6A4B               	clrf	_temp_set+1,c
  3415                           
  3416                           ; BSR set to: 1
  3417                           ;Lab7.c: 422: keypad_active = Read_b_eep(keypad_active_loc);
  3418  000BAC  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  3419  000BB0  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3420  000BB2  EC43  F018         	call	_Read_b_eep	;wreg free
  3421  000BB6  0101               	movlb	1	; () banked
  3422  000BB8  6F3E               	movwf	??_main& (0+255),b
  3423  000BBA  513E               	movf	??_main& (0+255),w,b
  3424  000BBC  6F50               	movwf	_keypad_active& (0+255),b
  3425  000BBE  6B51               	clrf	(_keypad_active+1)& (0+255),b
  3426                           
  3427                           ; BSR set to: 1
  3428                           ;Lab7.c: 423: threshold_loc = 0x30;
  3429  000BC0  0E30               	movlw	48
  3430  000BC2  0100               	movlb	0	; () banked
  3431  000BC4  6FE4               	movwf	_threshold_loc& (0+255),b
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;Lab7.c: 424: for(int i = 0; i < 2;i++)
  3435  000BC6  0E00               	movlw	0
  3436  000BC8  0101               	movlb	1	; () banked
  3437  000BCA  6F45               	movwf	(main@i_1084+1)& (0+255),b
  3438  000BCC  0E00               	movlw	0
  3439  000BCE  6F44               	movwf	main@i_1084& (0+255),b
  3440  000BD0                     l5816:
  3441                           
  3442                           ; BSR set to: 1
  3443  000BD0  BF45               	btfsc	(main@i_1084+1)& (0+255),7,b
  3444  000BD2  D006               	goto	l206
  3445  000BD4  5145               	movf	(main@i_1084+1)& (0+255),w,b
  3446  000BD6  E116               	bnz	l5828
  3447  000BD8  0E02               	movlw	2
  3448  000BDA  5D44               	subwf	main@i_1084& (0+255),w,b
  3449  000BDC  B0D8               	btfsc	status,0,c
  3450  000BDE  D012               	goto	u8130
  3451  000BE0                     l206:
  3452                           
  3453                           ; BSR set to: 1
  3454                           ;Lab7.c: 425: {
  3455                           ;Lab7.c: 426: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  3456                           
  3457                           ; BSR set to: 1
  3458  000BE0  0EE0               	movlw	low _temp_threshold_read
  3459  000BE2  2544               	addwf	main@i_1084& (0+255),w,b
  3460  000BE4  6ED9               	movwf	fsr2l,c
  3461  000BE6  0E00               	movlw	high _temp_threshold_read
  3462  000BE8  2145               	addwfc	(main@i_1084+1)& (0+255),w,b
  3463  000BEA  6EDA               	movwf	fsr2h,c
  3464  000BEC  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  3465  000BF0  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3466  000BF2  EC43  F018         	call	_Read_b_eep	;wreg free
  3467  000BF6  6EDF               	movwf	indf2,c
  3468                           
  3469                           ;Lab7.c: 427: threshold_loc += 1;
  3470  000BF8  0100               	movlb	0	; () banked
  3471  000BFA  2BE4               	incf	_threshold_loc& (0+255),f,b
  3472                           
  3473                           ; BSR set to: 0
  3474  000BFC  0101               	movlb	1	; () banked
  3475  000BFE  4B44               	infsnz	main@i_1084& (0+255),f,b
  3476  000C00  2B45               	incf	(main@i_1084+1)& (0+255),f,b
  3477  000C02  D7E6               	goto	l5816
  3478  000C04                     u8130:
  3479  000C04                     l5828:
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;Lab7.c: 428: }
  3483                           ;Lab7.c: 429: if(alarm_set != 1){
  3484  000C04  0554               	decf	_alarm_set& (0+255),w,b
  3485  000C06  1155               	iorwf	(_alarm_set+1)& (0+255),w,b
  3486  000C08  B4D8               	btfsc	status,2,c
  3487  000C0A  D007               	goto	l208
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;Lab7.c: 430: printf("Alarm is OFF\n\r");
  3491  000C0C  0E41               	movlw	low (STR_27+5)
  3492  000C0E  6F16               	movwf	printf@f& (0+255),b
  3493  000C10  0E7F               	movlw	high (STR_27+5)
  3494  000C12  6F17               	movwf	(printf@f+1)& (0+255),b
  3495  000C14  EC00  F00C         	call	_printf	;wreg free
  3496                           
  3497                           ;Lab7.c: 431: }
  3498  000C18  D008               	goto	l209
  3499  000C1A                     l208:
  3500                           
  3501                           ;Lab7.c: 432: else
  3502                           ;Lab7.c: 433: {
  3503                           ;Lab7.c: 434: printf("Alarm is ON\n\r");
  3504  000C1A  0E68               	movlw	low (STR_28+5)
  3505  000C1C  0101               	movlb	1	; () banked
  3506  000C1E  6F16               	movwf	printf@f& (0+255),b
  3507  000C20  0E7F               	movlw	high (STR_28+5)
  3508  000C22  6F17               	movwf	(printf@f+1)& (0+255),b
  3509  000C24  EC00  F00C         	call	_printf	;wreg free
  3510                           
  3511                           ;Lab7.c: 435: INTCON3bits.INT1IE = 1;
  3512  000C28  86F0               	bsf	intcon3,3,c	;volatile
  3513  000C2A                     l209:
  3514                           
  3515                           ;Lab7.c: 436: }
  3516                           ;Lab7.c: 437: if(temp_set != 1){
  3517  000C2A  044A               	decf	_temp_set,w,c
  3518  000C2C  104B               	iorwf	_temp_set+1,w,c
  3519  000C2E  B4D8               	btfsc	status,2,c
  3520  000C30  D008               	goto	l210
  3521                           
  3522                           ;Lab7.c: 438: printf("Temp Alarm is OFF\n\r");
  3523  000C32  0E3C               	movlw	low STR_27
  3524  000C34  0101               	movlb	1	; () banked
  3525  000C36  6F16               	movwf	printf@f& (0+255),b
  3526  000C38  0E7F               	movlw	high STR_27
  3527  000C3A  6F17               	movwf	(printf@f+1)& (0+255),b
  3528  000C3C  EC00  F00C         	call	_printf	;wreg free
  3529                           
  3530                           ;Lab7.c: 439: }
  3531  000C40  D007               	goto	l211
  3532  000C42                     l210:
  3533                           
  3534                           ;Lab7.c: 440: else
  3535                           ;Lab7.c: 441: {
  3536                           ;Lab7.c: 442: printf("Temp Alarm is ON\n\r");
  3537  000C42  0E63               	movlw	low STR_28
  3538  000C44  0101               	movlb	1	; () banked
  3539  000C46  6F16               	movwf	printf@f& (0+255),b
  3540  000C48  0E7F               	movlw	high STR_28
  3541  000C4A  6F17               	movwf	(printf@f+1)& (0+255),b
  3542  000C4C  EC00  F00C         	call	_printf	;wreg free
  3543  000C50                     l211:
  3544                           
  3545                           ;Lab7.c: 443: }
  3546                           ;Lab7.c: 444: if(keypad_active == 1)
  3547  000C50  0101               	movlb	1	; () banked
  3548  000C52  0550               	decf	_keypad_active& (0+255),w,b
  3549  000C54  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  3550  000C56  A4D8               	btfss	status,2,c
  3551  000C58  D007               	goto	l212
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;Lab7.c: 445: {
  3555                           ;Lab7.c: 446: printf("INPUT: KEYPAD\n\r");
  3556  000C5A  0EBF               	movlw	low STR_29
  3557  000C5C  6F16               	movwf	printf@f& (0+255),b
  3558  000C5E  0E7F               	movlw	high STR_29
  3559  000C60  6F17               	movwf	(printf@f+1)& (0+255),b
  3560  000C62  EC00  F00C         	call	_printf	;wreg free
  3561                           
  3562                           ;Lab7.c: 447: }
  3563  000C66  D014               	goto	l215
  3564  000C68                     l212:
  3565                           
  3566                           ;Lab7.c: 448: else if(keypad_active == 2)
  3567  000C68  0E02               	movlw	2
  3568  000C6A  0101               	movlb	1	; () banked
  3569  000C6C  1950               	xorwf	_keypad_active& (0+255),w,b
  3570  000C6E  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  3571  000C70  A4D8               	btfss	status,2,c
  3572  000C72  D007               	goto	l214
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;Lab7.c: 449: {
  3576                           ;Lab7.c: 450: printf("INPUT: KEYPAD and KEYBOARD\n\r");
  3577  000C74  0EC9               	movlw	low STR_30
  3578  000C76  6F16               	movwf	printf@f& (0+255),b
  3579  000C78  0E7D               	movlw	high STR_30
  3580  000C7A  6F17               	movwf	(printf@f+1)& (0+255),b
  3581  000C7C  EC00  F00C         	call	_printf	;wreg free
  3582                           
  3583                           ;Lab7.c: 451: }
  3584  000C80  D007               	goto	l215
  3585  000C82                     l214:
  3586                           
  3587                           ;Lab7.c: 452: else
  3588                           ;Lab7.c: 453: {
  3589                           ;Lab7.c: 454: printf("INPUT: KEYBOARD\n\r");
  3590  000C82  0E9B               	movlw	low STR_31
  3591  000C84  0101               	movlb	1	; () banked
  3592  000C86  6F16               	movwf	printf@f& (0+255),b
  3593  000C88  0E7F               	movlw	high STR_31
  3594  000C8A  6F17               	movwf	(printf@f+1)& (0+255),b
  3595  000C8C  EC00  F00C         	call	_printf	;wreg free
  3596  000C90                     l215:
  3597                           
  3598                           ;Lab7.c: 455: }
  3599                           ;Lab7.c: 456: printf(
  3600                           ;Lab7.c: 457: "Temperature Threshold: %d%d\n\r"
  3601                           ;Lab7.c: 458: "Current Temp [F]: %ld"
  3602                           ;Lab7.c: 459: "\n\r\n\r"
  3603                           ;Lab7.c: 460: "Alarm System"
  3604                           ;Lab7.c: 461: "\n\r-----------------\n\r"
  3605                           ;Lab7.c: 462: "1)Password\n\r"
  3606                           ;Lab7.c: 463: "2)PIR Sensor\n\r"
  3607                           ;Lab7.c: 464: "3)Temp Sensor\n\r"
  3608                           ;Lab7.c: 465: "4)Input Method\n\r"
  3609                           ;Lab7.c: 466: "----------------\n\r",temp_threshold_read[0],temp_threshold_read[1],volta
      +                          ge
  3610                           ;Lab7.c: 467: );
  3611  000C90  0E1D               	movlw	low STR_32
  3612  000C92  0101               	movlb	1	; () banked
  3613  000C94  6F16               	movwf	printf@f& (0+255),b
  3614  000C96  0E79               	movlw	high STR_32
  3615  000C98  6F17               	movwf	(printf@f+1)& (0+255),b
  3616  000C9A  C0E0  F118         	movff	_temp_threshold_read,?_printf+2
  3617  000C9E  6B19               	clrf	(?_printf+3)& (0+255),b
  3618  000CA0  C0E1  F11A         	movff	_temp_threshold_read+1,?_printf+4
  3619  000CA4  6B1B               	clrf	(?_printf+5)& (0+255),b
  3620  000CA6  C044  F11C         	movff	_voltage,?_printf+6
  3621  000CAA  C045  F11D         	movff	_voltage+1,?_printf+7
  3622  000CAE  C046  F11E         	movff	_voltage+2,?_printf+8
  3623  000CB2  C047  F11F         	movff	_voltage+3,?_printf+9
  3624  000CB6  EC00  F00C         	call	_printf	;wreg free
  3625                           
  3626                           ;Lab7.c: 470: if(PORTBbits.RB4 == 1){
  3627  000CBA  A881               	btfss	3969,4,c	;volatile
  3628  000CBC  D016               	goto	l216
  3629                           
  3630                           ;Lab7.c: 471: choice = keypad();
  3631  000CBE  ECB8  F00D         	call	_keypad	;wreg free
  3632  000CC2  C100  F0E2         	movff	?_keypad,_choice
  3633  000CC6  C101  F0E3         	movff	?_keypad+1,_choice+1
  3634                           
  3635                           ;Lab7.c: 472: PORTBbits.RB4 = 0;
  3636  000CCA  9881               	bcf	3969,4,c	;volatile
  3637                           
  3638                           ;Lab7.c: 473: _delay((unsigned long)((250)*(20000000/4000.0)));
  3639  000CCC  0E07               	movlw	7
  3640  000CCE  0101               	movlb	1	; () banked
  3641  000CD0  6F3F               	movwf	(??_main+1)& (0+255),b
  3642  000CD2  0E58               	movlw	88
  3643  000CD4  6F3E               	movwf	??_main& (0+255),b
  3644  000CD6  0E59               	movlw	89
  3645  000CD8                     u8227:
  3646  000CD8  2EE8               	decfsz	wreg,f,c
  3647  000CDA  D7FE               	bra	u8227
  3648  000CDC  2F3E               	decfsz	??_main& (0+255),f,b
  3649  000CDE  D7FC               	bra	u8227
  3650  000CE0  2F3F               	decfsz	(??_main+1)& (0+255),f,b
  3651  000CE2  D7FA               	bra	u8227
  3652  000CE4  D000               	nop2	
  3653                           
  3654                           ;Lab7.c: 474: PORTBbits.RB4 = 1;
  3655  000CE6  8881               	bsf	3969,4,c	;volatile
  3656                           
  3657                           ;Lab7.c: 475: }
  3658  000CE8  D006               	goto	l217
  3659  000CEA                     l216:
  3660                           
  3661                           ;Lab7.c: 476: else{
  3662                           ;Lab7.c: 477: while(PIR1bits.RCIF == 0);
  3663  000CEA  AA9E               	btfss	3998,5,c	;volatile
  3664  000CEC  D7FE               	goto	l216
  3665                           
  3666                           ;Lab7.c: 478: choice = RCREG;
  3667  000CEE  CFAE F0E2          	movff	4014,_choice	;volatile
  3668  000CF2  0100               	movlb	0	; () banked
  3669  000CF4  6BE3               	clrf	(_choice+1)& (0+255),b
  3670  000CF6                     l217:
  3671                           
  3672                           ;Lab7.c: 479: }
  3673                           ;Lab7.c: 481: if(triggered == 1)
  3674                           
  3675                           ; BSR set to: 0
  3676  000CF6  0101               	movlb	1	; () banked
  3677  000CF8  0556               	decf	_triggered& (0+255),w,b
  3678  000CFA  1157               	iorwf	(_triggered+1)& (0+255),w,b
  3679  000CFC  A4D8               	btfss	status,2,c
  3680  000CFE  D031               	goto	l223
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;Lab7.c: 482: {
  3684                           ;Lab7.c: 483: printf("\n\rReturning to Menu...\n\r");
  3685  000D00  0E87               	movlw	low STR_33
  3686  000D02  6F16               	movwf	printf@f& (0+255),b
  3687  000D04  0E7E               	movlw	high STR_33
  3688  000D06  6F17               	movwf	(printf@f+1)& (0+255),b
  3689  000D08  EC00  F00C         	call	_printf	;wreg free
  3690                           
  3691                           ;Lab7.c: 484: triggered = 0;
  3692  000D0C  0E00               	movlw	0
  3693  000D0E  0101               	movlb	1	; () banked
  3694  000D10  6F57               	movwf	(_triggered+1)& (0+255),b
  3695  000D12  0E00               	movlw	0
  3696  000D14  6F56               	movwf	_triggered& (0+255),b
  3697                           
  3698                           ; BSR set to: 1
  3699                           ;Lab7.c: 485: Clear();
  3700  000D16  EC18  F018         	call	_Clear	;wreg free
  3701                           
  3702                           ;Lab7.c: 486: break;
  3703  000D1A  D731               	goto	l192
  3704  000D1C                     
  3705                           ;Lab7.c: 490: password_options();
  3706  000D1C  ECFD  F00A         	call	_password_options	;wreg free
  3707                           
  3708                           ;Lab7.c: 491: break;
  3709  000D20  D730               	goto	l205
  3710  000D22                     
  3711                           ;Lab7.c: 493: alarm_options();
  3712  000D22  ECD7  F009         	call	_alarm_options	;wreg free
  3713                           
  3714                           ;Lab7.c: 494: break;
  3715  000D26  D72D               	goto	l205
  3716  000D28                     
  3717                           ;Lab7.c: 496: temp_options();
  3718  000D28  EC14  F002         	call	_temp_options	;wreg free
  3719                           
  3720                           ;Lab7.c: 497: break;
  3721  000D2C  D72A               	goto	l205
  3722  000D2E                     
  3723                           ;Lab7.c: 499: input_options();
  3724  000D2E  EC80  F008         	call	_input_options	;wreg free
  3725                           
  3726                           ;Lab7.c: 500: break;
  3727  000D32  D727               	goto	l205
  3728  000D34                     
  3729                           ;Lab7.c: 502: printf("\nERROR INVALID INPUT\n\r");
  3730  000D34  0ED2               	movlw	low STR_34
  3731  000D36  0101               	movlb	1	; () banked
  3732  000D38  6F16               	movwf	printf@f& (0+255),b
  3733  000D3A  0E7E               	movlw	high STR_34
  3734  000D3C  6F17               	movwf	(printf@f+1)& (0+255),b
  3735  000D3E  EC00  F00C         	call	_printf	;wreg free
  3736                           
  3737                           ;Lab7.c: 503: _delay((unsigned long)((500)*(20000000/4000.0)));
  3738  000D42  0E0D               	movlw	13
  3739  000D44  0101               	movlb	1	; () banked
  3740  000D46  6F3F               	movwf	(??_main+1)& (0+255),b
  3741  000D48  0EAF               	movlw	175
  3742  000D4A  6F3E               	movwf	??_main& (0+255),b
  3743  000D4C  0EB6               	movlw	182
  3744  000D4E                     u8237:
  3745  000D4E  2EE8               	decfsz	wreg,f,c
  3746  000D50  D7FE               	bra	u8237
  3747  000D52  2F3E               	decfsz	??_main& (0+255),f,b
  3748  000D54  D7FC               	bra	u8237
  3749  000D56  2F3F               	decfsz	(??_main+1)& (0+255),f,b
  3750  000D58  D7FA               	bra	u8237
  3751  000D5A  F000               	nop	
  3752                           
  3753                           ;Lab7.c: 504: Clear();
  3754  000D5C  EC18  F018         	call	_Clear	;wreg free
  3755                           
  3756                           ;Lab7.c: 506: }
  3757                           
  3758                           ;Lab7.c: 505: break;
  3759  000D60  D710               	goto	l205
  3760  000D62                     l223:
  3761  000D62  C0E2  F13E         	movff	_choice,??_main
  3762  000D66  C0E3  F13F         	movff	_choice+1,??_main+1
  3763                           
  3764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3765                           ; Switch size 1, requested type "space"
  3766                           ; Number of cases is 1, Range of values is 0 to 0
  3767                           ; switch strategies available:
  3768                           ; Name         Instructions Cycles
  3769                           ; simple_byte            4     3 (average)
  3770                           ;	Chosen strategy is simple_byte
  3771  000D6A  0101               	movlb	1	; () banked
  3772  000D6C  513F               	movf	(??_main+1)& (0+255),w,b
  3773  000D6E  0A00               	xorlw	0	; case 0
  3774  000D70  A4D8               	btfss	status,2,c
  3775  000D72  D7E0               	goto	l229
  3776                           
  3777                           ; BSR set to: 1
  3778                           ; Switch size 1, requested type "space"
  3779                           ; Number of cases is 4, Range of values is 49 to 52
  3780                           ; switch strategies available:
  3781                           ; Name         Instructions Cycles
  3782                           ; simple_byte           13     7 (average)
  3783                           ;	Chosen strategy is simple_byte
  3784  000D74  513E               	movf	??_main& (0+255),w,b
  3785  000D76  0A31               	xorlw	49	; case 49
  3786  000D78  B4D8               	btfsc	status,2,c
  3787  000D7A  D7D0               	goto	l224
  3788  000D7C  0A03               	xorlw	3	; case 50
  3789  000D7E  B4D8               	btfsc	status,2,c
  3790  000D80  D7D0               	goto	l226
  3791  000D82  0A01               	xorlw	1	; case 51
  3792  000D84  B4D8               	btfsc	status,2,c
  3793  000D86  D7D0               	goto	l227
  3794  000D88  0A07               	xorlw	7	; case 52
  3795  000D8A  B4D8               	btfsc	status,2,c
  3796  000D8C  D7D0               	goto	l228
  3797  000D8E  D7D2               	goto	l229
  3798  000D90                     __end_of_main:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           intcon3	equ	0xFF0
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           indf2	equ	0xFDF
  3812                           fsr2h	equ	0xFDA
  3813                           fsr2l	equ	0xFD9
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function _temp_options *****************
  3817 ;; Defined at:
  3818 ;;		line 840 in file "Lab7.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               2   50[BANK1 ] int 
  3823 ;;  i               2   48[BANK1 ] int 
  3824 ;;  i               2   46[BANK1 ] int 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3834 ;;      Params:         0       0       0       0       0       0       0
  3835 ;;      Locals:         0       0       6       0       0       0       0
  3836 ;;      Temps:          0       0       2       0       0       0       0
  3837 ;;      Totals:         0       0       8       0       0       0       0
  3838 ;;Total ram usage:        8 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   11
  3841 ;; This function calls:
  3842 ;;		_Clear
  3843 ;;		_Read_b_eep
  3844 ;;		_keypad
  3845 ;;		_printf
  3846 ;;		_write_eeprom
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text1
  3853  000428                     __ptext1:
  3854                           	opt stack 0
  3855  000428                     _temp_options:
  3856                           	opt stack 19
  3857                           
  3858                           ;Lab7.c: 842: Clear();
  3859                           
  3860                           ;incstack = 0
  3861  000428  EC18  F018         	call	_Clear	;wreg free
  3862  00042C                     
  3863                           ;Lab7.c: 844: {
  3864                           ;Lab7.c: 845: alarm_set = Read_b_eep(alarm_loc);
  3865  00042C  C15E  F100         	movff	_alarm_loc,Read_b_eep@badd
  3866  000430  0101               	movlb	1	; () banked
  3867  000432  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3868  000434  EC43  F018         	call	_Read_b_eep	;wreg free
  3869  000438  0101               	movlb	1	; () banked
  3870  00043A  6F2C               	movwf	??_temp_options& (0+255),b
  3871  00043C  512C               	movf	??_temp_options& (0+255),w,b
  3872  00043E  6F54               	movwf	_alarm_set& (0+255),b
  3873  000440  6B55               	clrf	(_alarm_set+1)& (0+255),b
  3874                           
  3875                           ; BSR set to: 1
  3876                           ;Lab7.c: 846: temp_set = Read_b_eep(temp_loc);
  3877  000442  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  3878  000446  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3879  000448  EC43  F018         	call	_Read_b_eep	;wreg free
  3880  00044C  0101               	movlb	1	; () banked
  3881  00044E  6F2C               	movwf	??_temp_options& (0+255),b
  3882  000450  512C               	movf	??_temp_options& (0+255),w,b
  3883  000452  6E4A               	movwf	_temp_set,c
  3884  000454  6A4B               	clrf	_temp_set+1,c
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;Lab7.c: 847: keypad_active = Read_b_eep(keypad_active_loc);
  3888  000456  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  3889  00045A  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3890  00045C  EC43  F018         	call	_Read_b_eep	;wreg free
  3891  000460  0101               	movlb	1	; () banked
  3892  000462  6F2C               	movwf	??_temp_options& (0+255),b
  3893  000464  512C               	movf	??_temp_options& (0+255),w,b
  3894  000466  6F50               	movwf	_keypad_active& (0+255),b
  3895  000468  6B51               	clrf	(_keypad_active+1)& (0+255),b
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;Lab7.c: 848: threshold_loc = 0x30;
  3899  00046A  0E30               	movlw	48
  3900  00046C  0100               	movlb	0	; () banked
  3901  00046E  6FE4               	movwf	_threshold_loc& (0+255),b
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;Lab7.c: 849: for(int i = 0; i < 2;i++)
  3905  000470  0E00               	movlw	0
  3906  000472  0101               	movlb	1	; () banked
  3907  000474  6F2F               	movwf	(temp_options@i+1)& (0+255),b
  3908  000476  0E00               	movlw	0
  3909  000478  6F2E               	movwf	temp_options@i& (0+255),b
  3910  00047A                     l5006:
  3911                           
  3912                           ; BSR set to: 1
  3913  00047A  BF2F               	btfsc	(temp_options@i+1)& (0+255),7,b
  3914  00047C  D006               	goto	l351
  3915  00047E  512F               	movf	(temp_options@i+1)& (0+255),w,b
  3916  000480  E116               	bnz	l5018
  3917  000482  0E02               	movlw	2
  3918  000484  5D2E               	subwf	temp_options@i& (0+255),w,b
  3919  000486  B0D8               	btfsc	status,0,c
  3920  000488  D012               	goto	u7350
  3921  00048A                     l351:
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;Lab7.c: 850: {
  3925                           ;Lab7.c: 851: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  3926                           
  3927                           ; BSR set to: 1
  3928  00048A  0EE0               	movlw	low _temp_threshold_read
  3929  00048C  252E               	addwf	temp_options@i& (0+255),w,b
  3930  00048E  6ED9               	movwf	fsr2l,c
  3931  000490  0E00               	movlw	high _temp_threshold_read
  3932  000492  212F               	addwfc	(temp_options@i+1)& (0+255),w,b
  3933  000494  6EDA               	movwf	fsr2h,c
  3934  000496  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  3935  00049A  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  3936  00049C  EC43  F018         	call	_Read_b_eep	;wreg free
  3937  0004A0  6EDF               	movwf	indf2,c
  3938                           
  3939                           ;Lab7.c: 852: threshold_loc += 1;
  3940  0004A2  0100               	movlb	0	; () banked
  3941  0004A4  2BE4               	incf	_threshold_loc& (0+255),f,b
  3942                           
  3943                           ; BSR set to: 0
  3944  0004A6  0101               	movlb	1	; () banked
  3945  0004A8  4B2E               	infsnz	temp_options@i& (0+255),f,b
  3946  0004AA  2B2F               	incf	(temp_options@i+1)& (0+255),f,b
  3947  0004AC  D7E6               	goto	l5006
  3948  0004AE                     u7350:
  3949  0004AE                     l5018:
  3950                           
  3951                           ; BSR set to: 1
  3952                           ;Lab7.c: 853: }
  3953                           ;Lab7.c: 854: if(alarm_set != 1){
  3954  0004AE  0554               	decf	_alarm_set& (0+255),w,b
  3955  0004B0  1155               	iorwf	(_alarm_set+1)& (0+255),w,b
  3956  0004B2  B4D8               	btfsc	status,2,c
  3957  0004B4  D007               	goto	l353
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;Lab7.c: 855: printf("Alarm is OFF\n\r");
  3961  0004B6  0E41               	movlw	low (STR_27+5)
  3962  0004B8  6F16               	movwf	printf@f& (0+255),b
  3963  0004BA  0E7F               	movlw	high (STR_27+5)
  3964  0004BC  6F17               	movwf	(printf@f+1)& (0+255),b
  3965  0004BE  EC00  F00C         	call	_printf	;wreg free
  3966                           
  3967                           ;Lab7.c: 856: }
  3968  0004C2  D007               	goto	l354
  3969  0004C4                     l353:
  3970                           
  3971                           ;Lab7.c: 857: else
  3972                           ;Lab7.c: 858: {
  3973                           ;Lab7.c: 859: printf("Alarm is ON\n\r");
  3974  0004C4  0E68               	movlw	low (STR_28+5)
  3975  0004C6  0101               	movlb	1	; () banked
  3976  0004C8  6F16               	movwf	printf@f& (0+255),b
  3977  0004CA  0E7F               	movlw	high (STR_28+5)
  3978  0004CC  6F17               	movwf	(printf@f+1)& (0+255),b
  3979  0004CE  EC00  F00C         	call	_printf	;wreg free
  3980  0004D2                     l354:
  3981                           
  3982                           ;Lab7.c: 860: }
  3983                           ;Lab7.c: 861: if(temp_set != 1){
  3984  0004D2  044A               	decf	_temp_set,w,c
  3985  0004D4  104B               	iorwf	_temp_set+1,w,c
  3986  0004D6  B4D8               	btfsc	status,2,c
  3987  0004D8  D008               	goto	l355
  3988                           
  3989                           ;Lab7.c: 862: printf("Temp Alarm is OFF\n\r");
  3990  0004DA  0E3C               	movlw	low STR_27
  3991  0004DC  0101               	movlb	1	; () banked
  3992  0004DE  6F16               	movwf	printf@f& (0+255),b
  3993  0004E0  0E7F               	movlw	high STR_27
  3994  0004E2  6F17               	movwf	(printf@f+1)& (0+255),b
  3995  0004E4  EC00  F00C         	call	_printf	;wreg free
  3996                           
  3997                           ;Lab7.c: 863: }
  3998  0004E8  D007               	goto	l356
  3999  0004EA                     l355:
  4000                           
  4001                           ;Lab7.c: 864: else
  4002                           ;Lab7.c: 865: {
  4003                           ;Lab7.c: 866: printf("Temp Alarm is ON\n\r");
  4004  0004EA  0E63               	movlw	low STR_28
  4005  0004EC  0101               	movlb	1	; () banked
  4006  0004EE  6F16               	movwf	printf@f& (0+255),b
  4007  0004F0  0E7F               	movlw	high STR_28
  4008  0004F2  6F17               	movwf	(printf@f+1)& (0+255),b
  4009  0004F4  EC00  F00C         	call	_printf	;wreg free
  4010  0004F8                     l356:
  4011                           
  4012                           ;Lab7.c: 867: }
  4013                           ;Lab7.c: 868: if(keypad_active == 1)
  4014  0004F8  0101               	movlb	1	; () banked
  4015  0004FA  0550               	decf	_keypad_active& (0+255),w,b
  4016  0004FC  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  4017  0004FE  A4D8               	btfss	status,2,c
  4018  000500  D007               	goto	l357
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;Lab7.c: 869: {
  4022                           ;Lab7.c: 870: printf("INPUT: KEYPAD\n\r");
  4023  000502  0EBF               	movlw	low STR_29
  4024  000504  6F16               	movwf	printf@f& (0+255),b
  4025  000506  0E7F               	movlw	high STR_29
  4026  000508  6F17               	movwf	(printf@f+1)& (0+255),b
  4027  00050A  EC00  F00C         	call	_printf	;wreg free
  4028                           
  4029                           ;Lab7.c: 871: }
  4030  00050E  D014               	goto	l360
  4031  000510                     l357:
  4032                           
  4033                           ;Lab7.c: 872: else if(keypad_active == 2)
  4034  000510  0E02               	movlw	2
  4035  000512  0101               	movlb	1	; () banked
  4036  000514  1950               	xorwf	_keypad_active& (0+255),w,b
  4037  000516  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  4038  000518  A4D8               	btfss	status,2,c
  4039  00051A  D007               	goto	l359
  4040                           
  4041                           ; BSR set to: 1
  4042                           ;Lab7.c: 873: {
  4043                           ;Lab7.c: 874: printf("INPUT: KEYPAD and KEYBOARD\n\r");
  4044  00051C  0EC9               	movlw	low STR_30
  4045  00051E  6F16               	movwf	printf@f& (0+255),b
  4046  000520  0E7D               	movlw	high STR_30
  4047  000522  6F17               	movwf	(printf@f+1)& (0+255),b
  4048  000524  EC00  F00C         	call	_printf	;wreg free
  4049                           
  4050                           ;Lab7.c: 875: }
  4051  000528  D007               	goto	l360
  4052  00052A                     l359:
  4053                           
  4054                           ;Lab7.c: 876: else
  4055                           ;Lab7.c: 877: {
  4056                           ;Lab7.c: 878: printf("INPUT: KEYBOARD\n\r");
  4057  00052A  0E9B               	movlw	low STR_31
  4058  00052C  0101               	movlb	1	; () banked
  4059  00052E  6F16               	movwf	printf@f& (0+255),b
  4060  000530  0E7F               	movlw	high STR_31
  4061  000532  6F17               	movwf	(printf@f+1)& (0+255),b
  4062  000534  EC00  F00C         	call	_printf	;wreg free
  4063  000538                     l360:
  4064                           
  4065                           ;Lab7.c: 879: }
  4066                           ;Lab7.c: 880: printf("Temperature Threshold: %d%d\n\r"
  4067                           ;Lab7.c: 881: "Current Temp [F]: %ld"
  4068                           ;Lab7.c: 882: "\n\r\n\r"
  4069                           ;Lab7.c: 883: "Temperature Sensor OPTIONS\n\r"
  4070                           ;Lab7.c: 884: "1) Enable/Disable Alarm\n\r"
  4071                           ;Lab7.c: 885: "2) Temperature Threshold\n\r"
  4072                           ;Lab7.c: 886: "3) Return to Menu\n\r",temp_threshold_read[0],temp_threshold_read[1],volt
      +                          age);
  4073  000538  0EC0               	movlw	low STR_82
  4074  00053A  0101               	movlb	1	; () banked
  4075  00053C  6F16               	movwf	printf@f& (0+255),b
  4076  00053E  0E79               	movlw	high STR_82
  4077  000540  6F17               	movwf	(printf@f+1)& (0+255),b
  4078  000542  C0E0  F118         	movff	_temp_threshold_read,?_printf+2
  4079  000546  6B19               	clrf	(?_printf+3)& (0+255),b
  4080  000548  C0E1  F11A         	movff	_temp_threshold_read+1,?_printf+4
  4081  00054C  6B1B               	clrf	(?_printf+5)& (0+255),b
  4082  00054E  C044  F11C         	movff	_voltage,?_printf+6
  4083  000552  C045  F11D         	movff	_voltage+1,?_printf+7
  4084  000556  C046  F11E         	movff	_voltage+2,?_printf+8
  4085  00055A  C047  F11F         	movff	_voltage+3,?_printf+9
  4086  00055E  EC00  F00C         	call	_printf	;wreg free
  4087                           
  4088                           ;Lab7.c: 888: if(PORTBbits.RB4 == 1){
  4089  000562  A881               	btfss	3969,4,c	;volatile
  4090  000564  D016               	goto	l361
  4091                           
  4092                           ;Lab7.c: 889: choice = keypad();
  4093  000566  ECB8  F00D         	call	_keypad	;wreg free
  4094  00056A  C100  F0E2         	movff	?_keypad,_choice
  4095  00056E  C101  F0E3         	movff	?_keypad+1,_choice+1
  4096                           
  4097                           ;Lab7.c: 890: PORTBbits.RB4 = 0;
  4098  000572  9881               	bcf	3969,4,c	;volatile
  4099                           
  4100                           ;Lab7.c: 891: _delay((unsigned long)((250)*(20000000/4000.0)));
  4101  000574  0E07               	movlw	7
  4102  000576  0101               	movlb	1	; () banked
  4103  000578  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4104  00057A  0E58               	movlw	88
  4105  00057C  6F2C               	movwf	??_temp_options& (0+255),b
  4106  00057E  0E59               	movlw	89
  4107  000580                     u8247:
  4108  000580  2EE8               	decfsz	wreg,f,c
  4109  000582  D7FE               	bra	u8247
  4110  000584  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4111  000586  D7FC               	bra	u8247
  4112  000588  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4113  00058A  D7FA               	bra	u8247
  4114  00058C  D000               	nop2	
  4115                           
  4116                           ;Lab7.c: 892: PORTBbits.RB4 = 1;
  4117  00058E  8881               	bsf	3969,4,c	;volatile
  4118                           
  4119                           ;Lab7.c: 893: }
  4120  000590  D006               	goto	l362
  4121  000592                     l361:
  4122                           
  4123                           ;Lab7.c: 894: else{
  4124                           ;Lab7.c: 895: while(PIR1bits.RCIF == 0);
  4125  000592  AA9E               	btfss	3998,5,c	;volatile
  4126  000594  D7FE               	goto	l361
  4127                           
  4128                           ;Lab7.c: 896: choice = RCREG;
  4129  000596  CFAE F0E2          	movff	4014,_choice	;volatile
  4130  00059A  0100               	movlb	0	; () banked
  4131  00059C  6BE3               	clrf	(_choice+1)& (0+255),b
  4132  00059E                     l362:
  4133                           
  4134                           ;Lab7.c: 897: }
  4135                           ;Lab7.c: 899: if(triggered == 1)
  4136                           
  4137                           ; BSR set to: 0
  4138  00059E  0101               	movlb	1	; () banked
  4139  0005A0  0556               	decf	_triggered& (0+255),w,b
  4140  0005A2  1157               	iorwf	(_triggered+1)& (0+255),w,b
  4141  0005A4  A4D8               	btfss	status,2,c
  4142  0005A6  D187               	goto	l368
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;Lab7.c: 900: {
  4146                           ;Lab7.c: 901: printf("\n\rReturning to Menu...\n\r");
  4147  0005A8  0E87               	movlw	low STR_33
  4148  0005AA  6F16               	movwf	printf@f& (0+255),b
  4149  0005AC  0E7E               	movlw	high STR_33
  4150  0005AE  6F17               	movwf	(printf@f+1)& (0+255),b
  4151  0005B0  EC00  F00C         	call	_printf	;wreg free
  4152                           
  4153                           ;Lab7.c: 902: triggered = 0;
  4154  0005B4  0E00               	movlw	0
  4155  0005B6  0101               	movlb	1	; () banked
  4156  0005B8  6F57               	movwf	(_triggered+1)& (0+255),b
  4157  0005BA  0E00               	movlw	0
  4158  0005BC  6F56               	movwf	_triggered& (0+255),b
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;Lab7.c: 903: Clear();
  4162  0005BE  EC18  F018         	call	_Clear	;wreg free
  4163                           
  4164                           ;Lab7.c: 904: break;
  4165  0005C2  0012               	return	
  4166  0005C4                     
  4167                           ;Lab7.c: 908: temp_set = Read_b_eep(temp_loc);
  4168  0005C4  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  4169  0005C8  0101               	movlb	1	; () banked
  4170  0005CA  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4171  0005CC  EC43  F018         	call	_Read_b_eep	;wreg free
  4172  0005D0  0101               	movlb	1	; () banked
  4173  0005D2  6F2C               	movwf	??_temp_options& (0+255),b
  4174  0005D4  512C               	movf	??_temp_options& (0+255),w,b
  4175  0005D6  6E4A               	movwf	_temp_set,c
  4176  0005D8  6A4B               	clrf	_temp_set+1,c
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;Lab7.c: 909: if(temp_set != 1)
  4180  0005DA  044A               	decf	_temp_set,w,c
  4181  0005DC  104B               	iorwf	_temp_set+1,w,c
  4182  0005DE  B4D8               	btfsc	status,2,c
  4183  0005E0  D00E               	goto	l370
  4184                           
  4185                           ; BSR set to: 1
  4186                           ;Lab7.c: 910: {
  4187                           ;Lab7.c: 912: printf("\n\rTemperature Alarm ON\n\r");
  4188  0005E2  0EA0               	movlw	low STR_84
  4189  0005E4  6F16               	movwf	printf@f& (0+255),b
  4190  0005E6  0E7E               	movlw	high STR_84
  4191  0005E8  6F17               	movwf	(printf@f+1)& (0+255),b
  4192  0005EA  EC00  F00C         	call	_printf	;wreg free
  4193                           
  4194                           ;Lab7.c: 913: write_eeprom(temp_loc,0x01);
  4195  0005EE  0E01               	movlw	1
  4196  0005F0  0101               	movlb	1	; () banked
  4197  0005F2  6F00               	movwf	write_eeprom@data& (0+255),b
  4198  0005F4  0100               	movlb	0	; () banked
  4199  0005F6  51E5               	movf	_temp_loc& (0+255),w,b
  4200  0005F8  ECE4  F017         	call	_write_eeprom
  4201                           
  4202                           ;Lab7.c: 914: }
  4203  0005FC  D00E               	goto	l371
  4204  0005FE                     l370:
  4205                           
  4206                           ;Lab7.c: 915: else
  4207                           ;Lab7.c: 916: {
  4208                           ;Lab7.c: 918: printf("\n\rTemperature Alarm OFF\n\r");
  4209  0005FE  0E3A               	movlw	low STR_85
  4210  000600  0101               	movlb	1	; () banked
  4211  000602  6F16               	movwf	printf@f& (0+255),b
  4212  000604  0E7E               	movlw	high STR_85
  4213  000606  6F17               	movwf	(printf@f+1)& (0+255),b
  4214  000608  EC00  F00C         	call	_printf	;wreg free
  4215                           
  4216                           ;Lab7.c: 919: write_eeprom(temp_loc,0x00);
  4217  00060C  0E00               	movlw	0
  4218  00060E  0101               	movlb	1	; () banked
  4219  000610  6F00               	movwf	write_eeprom@data& (0+255),b
  4220  000612  0100               	movlb	0	; () banked
  4221  000614  51E5               	movf	_temp_loc& (0+255),w,b
  4222  000616  ECE4  F017         	call	_write_eeprom
  4223  00061A                     l371:
  4224                           
  4225                           ;Lab7.c: 920: }
  4226                           ;Lab7.c: 921: _delay((unsigned long)((500)*(20000000/4000.0)));
  4227  00061A  0E0D               	movlw	13
  4228  00061C  0101               	movlb	1	; () banked
  4229  00061E  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4230  000620  0EAF               	movlw	175
  4231  000622  6F2C               	movwf	??_temp_options& (0+255),b
  4232  000624  0EB6               	movlw	182
  4233  000626                     u8257:
  4234  000626  2EE8               	decfsz	wreg,f,c
  4235  000628  D7FE               	bra	u8257
  4236  00062A  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4237  00062C  D7FC               	bra	u8257
  4238  00062E  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4239  000630  D7FA               	bra	u8257
  4240  000632  F000               	nop	
  4241                           
  4242                           ;Lab7.c: 922: Clear();
  4243  000634  EC18  F018         	call	_Clear	;wreg free
  4244                           
  4245                           ;Lab7.c: 923: break;
  4246  000638  D6F9               	goto	l350
  4247  00063A                     
  4248                           ;Lab7.c: 925: _delay((unsigned long)((250)*(20000000/4000.0)));
  4249  00063A  0E07               	movlw	7
  4250  00063C  0101               	movlb	1	; () banked
  4251  00063E  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4252  000640  0E58               	movlw	88
  4253  000642  6F2C               	movwf	??_temp_options& (0+255),b
  4254  000644  0E59               	movlw	89
  4255  000646                     u8267:
  4256  000646  2EE8               	decfsz	wreg,f,c
  4257  000648  D7FE               	bra	u8267
  4258  00064A  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4259  00064C  D7FC               	bra	u8267
  4260  00064E  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4261  000650  D7FA               	bra	u8267
  4262  000652  D000               	nop2	
  4263                           
  4264                           ;Lab7.c: 926: printf("\n\rEnter new Temperature Threshold: ");
  4265  000654  0E47               	movlw	low STR_10
  4266  000656  0101               	movlb	1	; () banked
  4267  000658  6F16               	movwf	printf@f& (0+255),b
  4268  00065A  0E7D               	movlw	high STR_10
  4269  00065C  6F17               	movwf	(printf@f+1)& (0+255),b
  4270  00065E  EC00  F00C         	call	_printf	;wreg free
  4271                           
  4272                           ;Lab7.c: 927: threshold_loc = 0x30;
  4273  000662  0E30               	movlw	48
  4274  000664  0100               	movlb	0	; () banked
  4275  000666  6FE4               	movwf	_threshold_loc& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;Lab7.c: 928: if(PORTBbits.RB4 == 1)
  4279  000668  A881               	btfss	3969,4,c	;volatile
  4280  00066A  D07A               	goto	l374
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;Lab7.c: 929: {
  4284                           ;Lab7.c: 930: for(int i = 0;i < 2;i++){
  4285  00066C  0E00               	movlw	0
  4286  00066E  0101               	movlb	1	; () banked
  4287  000670  6F31               	movwf	(temp_options@i_1165+1)& (0+255),b
  4288  000672  0E00               	movlw	0
  4289  000674  6F30               	movwf	temp_options@i_1165& (0+255),b
  4290                           
  4291                           ; BSR set to: 1
  4292  000676  BF31               	btfsc	(temp_options@i_1165+1)& (0+255),7,b
  4293  000678  D008               	goto	l375
  4294  00067A  5131               	movf	(temp_options@i_1165+1)& (0+255),w,b
  4295  00067C  E105               	bnz	u7450
  4296  00067E  0E02               	movlw	2
  4297  000680  5D30               	subwf	temp_options@i_1165& (0+255),w,b
  4298  000682  B0D8               	btfsc	status,0,c
  4299  000684  D0D9               	goto	u7510
  4300  000686  D001               	goto	l375
  4301  000688                     u7450:
  4302                           
  4303                           ; BSR set to: 1
  4304  000688  D0D7               	goto	u7510
  4305  00068A                     l375:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;Lab7.c: 931: temp_threshold_input[i] = keypad();
  4309                           
  4310                           ; BSR set to: 1
  4311  00068A  0EDE               	movlw	low _temp_threshold_input
  4312  00068C  2530               	addwf	temp_options@i_1165& (0+255),w,b
  4313  00068E  6ED9               	movwf	fsr2l,c
  4314  000690  0E00               	movlw	high _temp_threshold_input
  4315  000692  2131               	addwfc	(temp_options@i_1165+1)& (0+255),w,b
  4316  000694  6EDA               	movwf	fsr2h,c
  4317  000696  ECB8  F00D         	call	_keypad	;wreg free
  4318  00069A  0101               	movlb	1	; () banked
  4319  00069C  5100               	movf	?_keypad& (0+255),w,b
  4320  00069E  6EDF               	movwf	indf2,c
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;Lab7.c: 932: temp_threshold_input[i] -= 48;
  4324  0006A0  0EDE               	movlw	low _temp_threshold_input
  4325  0006A2  2530               	addwf	temp_options@i_1165& (0+255),w,b
  4326  0006A4  6ED9               	movwf	fsr2l,c
  4327  0006A6  0E00               	movlw	high _temp_threshold_input
  4328  0006A8  2131               	addwfc	(temp_options@i_1165+1)& (0+255),w,b
  4329  0006AA  6EDA               	movwf	fsr2h,c
  4330  0006AC  0E30               	movlw	48
  4331  0006AE  5EDF               	subwf	indf2,f,c
  4332                           
  4333                           ; BSR set to: 1
  4334                           ;Lab7.c: 933: if(temp_threshold_input[i] < 0 || temp_threshold_input[i] > 9)
  4335  0006B0  0EDE               	movlw	low _temp_threshold_input
  4336  0006B2  2530               	addwf	temp_options@i_1165& (0+255),w,b
  4337  0006B4  6ED9               	movwf	fsr2l,c
  4338  0006B6  0E00               	movlw	high _temp_threshold_input
  4339  0006B8  2131               	addwfc	(temp_options@i_1165+1)& (0+255),w,b
  4340  0006BA  6EDA               	movwf	fsr2h,c
  4341  0006BC  0E09               	movlw	9
  4342  0006BE  64DF               	cpfsgt	indf2,c
  4343  0006C0  D017               	goto	l377
  4344                           
  4345                           ; BSR set to: 1
  4346                           ;Lab7.c: 934: {
  4347                           ;Lab7.c: 935: Clear();
  4348  0006C2  EC18  F018         	call	_Clear	;wreg free
  4349                           
  4350                           ;Lab7.c: 936: printf("\n\rONLY 0-9 CAN BE USED FOR TEMP\n\r\n\r");
  4351  0006C6  0E23               	movlw	low STR_11
  4352  0006C8  0101               	movlb	1	; () banked
  4353  0006CA  6F16               	movwf	printf@f& (0+255),b
  4354  0006CC  0E7D               	movlw	high STR_11
  4355  0006CE  6F17               	movwf	(printf@f+1)& (0+255),b
  4356  0006D0  EC00  F00C         	call	_printf	;wreg free
  4357                           
  4358                           ;Lab7.c: 937: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4359  0006D4  0E1A               	movlw	26
  4360  0006D6  0101               	movlb	1	; () banked
  4361  0006D8  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4362  0006DA  0E5E               	movlw	94
  4363  0006DC  6F2C               	movwf	??_temp_options& (0+255),b
  4364  0006DE  0E6E               	movlw	110
  4365  0006E0                     u8277:
  4366  0006E0  2EE8               	decfsz	wreg,f,c
  4367  0006E2  D7FE               	bra	u8277
  4368  0006E4  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4369  0006E6  D7FC               	bra	u8277
  4370  0006E8  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4371  0006EA  D7FA               	bra	u8277
  4372  0006EC  F000               	nop	
  4373                           
  4374                           ;Lab7.c: 938: return;
  4375  0006EE  0012               	return	
  4376  0006F0                     l377:
  4377                           
  4378                           ;Lab7.c: 939: }
  4379                           ;Lab7.c: 940: printf("%d", temp_threshold_input[i]);
  4380  0006F0  0EFA               	movlw	low STR_12
  4381  0006F2  0101               	movlb	1	; () banked
  4382  0006F4  6F16               	movwf	printf@f& (0+255),b
  4383  0006F6  0E7F               	movlw	high STR_12
  4384  0006F8  6F17               	movwf	(printf@f+1)& (0+255),b
  4385  0006FA  0EDE               	movlw	low _temp_threshold_input
  4386  0006FC  2530               	addwf	temp_options@i_1165& (0+255),w,b
  4387  0006FE  6ED9               	movwf	fsr2l,c
  4388  000700  0E00               	movlw	high _temp_threshold_input
  4389  000702  2131               	addwfc	(temp_options@i_1165+1)& (0+255),w,b
  4390  000704  6EDA               	movwf	fsr2h,c
  4391  000706  50DF               	movf	indf2,w,c
  4392  000708  6F2C               	movwf	??_temp_options& (0+255),b
  4393  00070A  512C               	movf	??_temp_options& (0+255),w,b
  4394  00070C  6F18               	movwf	(?_printf+2)& (0+255),b
  4395  00070E  6B19               	clrf	(?_printf+3)& (0+255),b
  4396  000710  EC00  F00C         	call	_printf	;wreg free
  4397                           
  4398                           ;Lab7.c: 941: write_eeprom(threshold_loc,temp_threshold_input[i]);
  4399  000714  0EDE               	movlw	low _temp_threshold_input
  4400  000716  0101               	movlb	1	; () banked
  4401  000718  2530               	addwf	temp_options@i_1165& (0+255),w,b
  4402  00071A  6ED9               	movwf	fsr2l,c
  4403  00071C  0E00               	movlw	high _temp_threshold_input
  4404  00071E  2131               	addwfc	(temp_options@i_1165+1)& (0+255),w,b
  4405  000720  6EDA               	movwf	fsr2h,c
  4406  000722  50DF               	movf	indf2,w,c
  4407  000724  6F00               	movwf	write_eeprom@data& (0+255),b
  4408  000726  0100               	movlb	0	; () banked
  4409  000728  51E4               	movf	_threshold_loc& (0+255),w,b
  4410  00072A  ECE4  F017         	call	_write_eeprom
  4411                           
  4412                           ;Lab7.c: 942: threshold_loc += 1;
  4413  00072E  0100               	movlb	0	; () banked
  4414  000730  2BE4               	incf	_threshold_loc& (0+255),f,b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;Lab7.c: 944: PORTBbits.RB4 = 0;
  4418  000732  9881               	bcf	3969,4,c	;volatile
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;Lab7.c: 945: _delay((unsigned long)((500)*(20000000/4000.0)));
  4422  000734  0E0D               	movlw	13
  4423  000736  0101               	movlb	1	; () banked
  4424  000738  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4425  00073A  0EAF               	movlw	175
  4426  00073C  6F2C               	movwf	??_temp_options& (0+255),b
  4427  00073E  0EB6               	movlw	182
  4428  000740                     u8287:
  4429  000740  2EE8               	decfsz	wreg,f,c
  4430  000742  D7FE               	bra	u8287
  4431  000744  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4432  000746  D7FC               	bra	u8287
  4433  000748  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4434  00074A  D7FA               	bra	u8287
  4435  00074C  F000               	nop	
  4436                           
  4437                           ;Lab7.c: 946: PORTBbits.RB4 = 1;
  4438  00074E  8881               	bsf	3969,4,c	;volatile
  4439  000750  0101               	movlb	1	; () banked
  4440  000752  4B30               	infsnz	temp_options@i_1165& (0+255),f,b
  4441  000754  2B31               	incf	(temp_options@i_1165+1)& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 1
  4444  000756  BF31               	btfsc	(temp_options@i_1165+1)& (0+255),7,b
  4445  000758  D798               	goto	l375
  4446  00075A  5131               	movf	(temp_options@i_1165+1)& (0+255),w,b
  4447  00075C  E16D               	bnz	l379
  4448  00075E  D78F               	goto	L1
  4449  000760                     l374:
  4450                           
  4451                           ;Lab7.c: 949: else
  4452                           ;Lab7.c: 950: {
  4453                           ;Lab7.c: 951: for(int i = 0;i < 2;i++){
  4454                           
  4455                           ; BSR set to: 1
  4456  000760  0E00               	movlw	0
  4457  000762  0101               	movlb	1	; () banked
  4458  000764  6F33               	movwf	(temp_options@i_1168+1)& (0+255),b
  4459  000766  0E00               	movlw	0
  4460  000768  6F32               	movwf	temp_options@i_1168& (0+255),b
  4461                           
  4462                           ; BSR set to: 1
  4463  00076A  BF33               	btfsc	(temp_options@i_1168+1)& (0+255),7,b
  4464  00076C  D006               	goto	l380
  4465  00076E  5133               	movf	(temp_options@i_1168+1)& (0+255),w,b
  4466  000770  E163               	bnz	l5140
  4467  000772  0E02               	movlw	2
  4468  000774  5D32               	subwf	temp_options@i_1168& (0+255),w,b
  4469  000776  B0D8               	btfsc	status,0,c
  4470  000778  D05F               	goto	u7510
  4471  00077A                     l380:
  4472                           
  4473                           ; BSR set to: 1
  4474                           
  4475                           ; BSR set to: 1
  4476                           ;Lab7.c: 952: while(PIR1bits.RCIF == 0);
  4477  00077A  AA9E               	btfss	3998,5,c	;volatile
  4478  00077C  D7FE               	goto	l380
  4479                           
  4480                           ;Lab7.c: 953: temp_threshold_input[i] = RCREG;
  4481  00077E  0EDE               	movlw	low _temp_threshold_input
  4482  000780  0101               	movlb	1	; () banked
  4483  000782  2532               	addwf	temp_options@i_1168& (0+255),w,b
  4484  000784  6ED9               	movwf	fsr2l,c
  4485  000786  0E00               	movlw	high _temp_threshold_input
  4486  000788  2133               	addwfc	(temp_options@i_1168+1)& (0+255),w,b
  4487  00078A  6EDA               	movwf	fsr2h,c
  4488  00078C  CFAE FFDF          	movff	4014,indf2	;volatile
  4489                           
  4490                           ;Lab7.c: 954: temp_threshold_input[i] -= 48;
  4491  000790  0EDE               	movlw	low _temp_threshold_input
  4492  000792  2532               	addwf	temp_options@i_1168& (0+255),w,b
  4493  000794  6ED9               	movwf	fsr2l,c
  4494  000796  0E00               	movlw	high _temp_threshold_input
  4495  000798  2133               	addwfc	(temp_options@i_1168+1)& (0+255),w,b
  4496  00079A  6EDA               	movwf	fsr2h,c
  4497  00079C  0E30               	movlw	48
  4498  00079E  5EDF               	subwf	indf2,f,c
  4499                           
  4500                           ;Lab7.c: 956: if(temp_threshold_input[i] < 0 || temp_threshold_input[i] > 9)
  4501  0007A0  0EDE               	movlw	low _temp_threshold_input
  4502  0007A2  2532               	addwf	temp_options@i_1168& (0+255),w,b
  4503  0007A4  6ED9               	movwf	fsr2l,c
  4504  0007A6  0E00               	movlw	high _temp_threshold_input
  4505  0007A8  2133               	addwfc	(temp_options@i_1168+1)& (0+255),w,b
  4506  0007AA  6EDA               	movwf	fsr2h,c
  4507  0007AC  0E09               	movlw	9
  4508  0007AE  64DF               	cpfsgt	indf2,c
  4509  0007B0  D017               	goto	l385
  4510                           
  4511                           ; BSR set to: 1
  4512                           ;Lab7.c: 957: {
  4513                           ;Lab7.c: 958: Clear();
  4514  0007B2  EC18  F018         	call	_Clear	;wreg free
  4515                           
  4516                           ;Lab7.c: 959: printf("\n\rONLY 0-9 CAN BE USED FOR TEMP\n\r\n\r");
  4517  0007B6  0E23               	movlw	low STR_11
  4518  0007B8  0101               	movlb	1	; () banked
  4519  0007BA  6F16               	movwf	printf@f& (0+255),b
  4520  0007BC  0E7D               	movlw	high STR_11
  4521  0007BE  6F17               	movwf	(printf@f+1)& (0+255),b
  4522  0007C0  EC00  F00C         	call	_printf	;wreg free
  4523                           
  4524                           ;Lab7.c: 960: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4525  0007C4  0E1A               	movlw	26
  4526  0007C6  0101               	movlb	1	; () banked
  4527  0007C8  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4528  0007CA  0E5E               	movlw	94
  4529  0007CC  6F2C               	movwf	??_temp_options& (0+255),b
  4530  0007CE  0E6E               	movlw	110
  4531  0007D0                     u8297:
  4532  0007D0  2EE8               	decfsz	wreg,f,c
  4533  0007D2  D7FE               	bra	u8297
  4534  0007D4  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4535  0007D6  D7FC               	bra	u8297
  4536  0007D8  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4537  0007DA  D7FA               	bra	u8297
  4538  0007DC  F000               	nop	
  4539                           
  4540                           ;Lab7.c: 961: return;
  4541  0007DE  0012               	return	
  4542  0007E0                     l385:
  4543                           
  4544                           ;Lab7.c: 962: }
  4545                           ;Lab7.c: 963: printf("%d", temp_threshold_input[i]);
  4546  0007E0  0EFA               	movlw	low STR_12
  4547  0007E2  0101               	movlb	1	; () banked
  4548  0007E4  6F16               	movwf	printf@f& (0+255),b
  4549  0007E6  0E7F               	movlw	high STR_12
  4550  0007E8  6F17               	movwf	(printf@f+1)& (0+255),b
  4551  0007EA  0EDE               	movlw	low _temp_threshold_input
  4552  0007EC  2532               	addwf	temp_options@i_1168& (0+255),w,b
  4553  0007EE  6ED9               	movwf	fsr2l,c
  4554  0007F0  0E00               	movlw	high _temp_threshold_input
  4555  0007F2  2133               	addwfc	(temp_options@i_1168+1)& (0+255),w,b
  4556  0007F4  6EDA               	movwf	fsr2h,c
  4557  0007F6  50DF               	movf	indf2,w,c
  4558  0007F8  6F2C               	movwf	??_temp_options& (0+255),b
  4559  0007FA  512C               	movf	??_temp_options& (0+255),w,b
  4560  0007FC  6F18               	movwf	(?_printf+2)& (0+255),b
  4561  0007FE  6B19               	clrf	(?_printf+3)& (0+255),b
  4562  000800  EC00  F00C         	call	_printf	;wreg free
  4563                           
  4564                           ;Lab7.c: 964: write_eeprom(threshold_loc,temp_threshold_input[i]);
  4565  000804  0EDE               	movlw	low _temp_threshold_input
  4566  000806  0101               	movlb	1	; () banked
  4567  000808  2532               	addwf	temp_options@i_1168& (0+255),w,b
  4568  00080A  6ED9               	movwf	fsr2l,c
  4569  00080C  0E00               	movlw	high _temp_threshold_input
  4570  00080E  2133               	addwfc	(temp_options@i_1168+1)& (0+255),w,b
  4571  000810  6EDA               	movwf	fsr2h,c
  4572  000812  50DF               	movf	indf2,w,c
  4573  000814  6F00               	movwf	write_eeprom@data& (0+255),b
  4574  000816  0100               	movlb	0	; () banked
  4575  000818  51E4               	movf	_threshold_loc& (0+255),w,b
  4576  00081A  ECE4  F017         	call	_write_eeprom
  4577                           
  4578                           ;Lab7.c: 965: threshold_loc += 1;
  4579  00081E  0100               	movlb	0	; () banked
  4580  000820  2BE4               	incf	_threshold_loc& (0+255),f,b
  4581                           
  4582                           ; BSR set to: 0
  4583  000822  0101               	movlb	1	; () banked
  4584  000824  4B32               	infsnz	temp_options@i_1168& (0+255),f,b
  4585  000826  2B33               	incf	(temp_options@i_1168+1)& (0+255),f,b
  4586                           
  4587                           ; BSR set to: 1
  4588  000828  BF33               	btfsc	(temp_options@i_1168+1)& (0+255),7,b
  4589  00082A  D7A7               	goto	l380
  4590  00082C  5133               	movf	(temp_options@i_1168+1)& (0+255),w,b
  4591  00082E  E104               	bnz	l5140
  4592  000830  0E02               	movlw	2
  4593  000832  5D32               	subwf	temp_options@i_1168& (0+255),w,b
  4594  000834  A0D8               	btfss	status,0,c
  4595  000836  D7A1               	goto	l380
  4596  000838                     u7510:
  4597  000838                     l379:
  4598  000838                     l5140:
  4599                           
  4600                           ; BSR set to: 1
  4601                           ;Lab7.c: 966: }
  4602                           ;Lab7.c: 967: }
  4603                           ;Lab7.c: 968: temp_threshold_input[0] = temp_threshold_input[0]*10;
  4604  000838  0100               	movlb	0	; () banked
  4605  00083A  51DE               	movf	_temp_threshold_input& (0+255),w,b
  4606  00083C  0D0A               	mullw	10
  4607  00083E  CFF3 F0DE          	movff	prodl,_temp_threshold_input
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;Lab7.c: 969: temp_threshold = temp_threshold_input[0]+temp_threshold_input[1];
  4611  000842  51DE               	movf	_temp_threshold_input& (0+255),w,b
  4612  000844  25DF               	addwf	(_temp_threshold_input+1)& (0+255),w,b
  4613  000846  6E48               	movwf	_temp_threshold,c
  4614  000848  6A49               	clrf	_temp_threshold+1,c
  4615  00084A  3649               	rlcf	_temp_threshold+1,f,c
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;Lab7.c: 970: printf("\n\r\n\rTemperature Threshold set to %d F", temp_threshold);
  4619  00084C  0ED8               	movlw	low STR_91
  4620  00084E  0101               	movlb	1	; () banked
  4621  000850  6F16               	movwf	printf@f& (0+255),b
  4622  000852  0E7C               	movlw	high STR_91
  4623  000854  6F17               	movwf	(printf@f+1)& (0+255),b
  4624  000856  C048  F118         	movff	_temp_threshold,?_printf+2
  4625  00085A  C049  F119         	movff	_temp_threshold+1,?_printf+3
  4626  00085E  EC00  F00C         	call	_printf	;wreg free
  4627                           
  4628                           ;Lab7.c: 971: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4629  000862  0E33               	movlw	51
  4630  000864  0101               	movlb	1	; () banked
  4631  000866  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4632  000868  0EBB               	movlw	187
  4633  00086A  6F2C               	movwf	??_temp_options& (0+255),b
  4634  00086C  0EDF               	movlw	223
  4635  00086E                     u8307:
  4636  00086E  2EE8               	decfsz	wreg,f,c
  4637  000870  D7FE               	bra	u8307
  4638  000872  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4639  000874  D7FC               	bra	u8307
  4640  000876  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4641  000878  D7FA               	bra	u8307
  4642  00087A  D000               	nop2	
  4643                           
  4644                           ;Lab7.c: 972: Clear();
  4645  00087C  EC18  F018         	call	_Clear	;wreg free
  4646                           
  4647                           ;Lab7.c: 973: break;
  4648  000880  D5D5               	goto	l350
  4649  000882                     
  4650                           ;Lab7.c: 975: Clear();
  4651  000882  EC18  F018         	call	_Clear	;wreg free
  4652                           
  4653                           ;Lab7.c: 976: return;
  4654  000886  0012               	return	
  4655  000888                     
  4656                           ;Lab7.c: 978: printf("\nERROR INVALID INPUT\n\r");
  4657  000888  0ED2               	movlw	low STR_34
  4658  00088A  0101               	movlb	1	; () banked
  4659  00088C  6F16               	movwf	printf@f& (0+255),b
  4660  00088E  0E7E               	movlw	high STR_34
  4661  000890  6F17               	movwf	(printf@f+1)& (0+255),b
  4662  000892  EC00  F00C         	call	_printf	;wreg free
  4663                           
  4664                           ;Lab7.c: 979: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4665  000896  0E1A               	movlw	26
  4666  000898  0101               	movlb	1	; () banked
  4667  00089A  6F2D               	movwf	(??_temp_options+1)& (0+255),b
  4668  00089C  0E5E               	movlw	94
  4669  00089E  6F2C               	movwf	??_temp_options& (0+255),b
  4670  0008A0  0E6E               	movlw	110
  4671  0008A2                     u8317:
  4672  0008A2  2EE8               	decfsz	wreg,f,c
  4673  0008A4  D7FE               	bra	u8317
  4674  0008A6  2F2C               	decfsz	??_temp_options& (0+255),f,b
  4675  0008A8  D7FC               	bra	u8317
  4676  0008AA  2F2D               	decfsz	(??_temp_options+1)& (0+255),f,b
  4677  0008AC  D7FA               	bra	u8317
  4678  0008AE  F000               	nop	
  4679                           
  4680                           ;Lab7.c: 980: Clear();
  4681  0008B0  EC18  F018         	call	_Clear	;wreg free
  4682                           
  4683                           ;Lab7.c: 982: }
  4684                           
  4685                           ;Lab7.c: 981: break;
  4686  0008B4  D5BB               	goto	l350
  4687  0008B6                     l368:
  4688  0008B6  C0E2  F12C         	movff	_choice,??_temp_options
  4689  0008BA  C0E3  F12D         	movff	_choice+1,??_temp_options+1
  4690                           
  4691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4692                           ; Switch size 1, requested type "space"
  4693                           ; Number of cases is 1, Range of values is 0 to 0
  4694                           ; switch strategies available:
  4695                           ; Name         Instructions Cycles
  4696                           ; simple_byte            4     3 (average)
  4697                           ;	Chosen strategy is simple_byte
  4698  0008BE  0101               	movlb	1	; () banked
  4699  0008C0  512D               	movf	(??_temp_options+1)& (0+255),w,b
  4700  0008C2  0A00               	xorlw	0	; case 0
  4701  0008C4  A4D8               	btfss	status,2,c
  4702  0008C6  D7E0               	goto	l387
  4703                           
  4704                           ; BSR set to: 1
  4705                           ; Switch size 1, requested type "space"
  4706                           ; Number of cases is 3, Range of values is 49 to 51
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte           10     6 (average)
  4710                           ;	Chosen strategy is simple_byte
  4711  0008C8  512C               	movf	??_temp_options& (0+255),w,b
  4712  0008CA  0A31               	xorlw	49	; case 49
  4713  0008CC  B4D8               	btfsc	status,2,c
  4714  0008CE  D67A               	goto	l369
  4715  0008D0  0A03               	xorlw	3	; case 50
  4716  0008D2  B4D8               	btfsc	status,2,c
  4717  0008D4  D6B2               	goto	l373
  4718  0008D6  0A01               	xorlw	1	; case 51
  4719  0008D8  B4D8               	btfsc	status,2,c
  4720  0008DA  D7D3               	goto	l386
  4721  0008DC  D7D5               	goto	l387
  4722  0008DE                     __end_of_temp_options:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           intcon2	equ	0xFF1
  4732                           intcon3	equ	0xFF0
  4733                           postinc0	equ	0xFEE
  4734                           wreg	equ	0xFE8
  4735                           indf2	equ	0xFDF
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _password_options *****************
  4741 ;; Defined at:
  4742 ;;		line 664 in file "Lab7.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  i               2   60[BANK1 ] int 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4756 ;;      Params:         0       0       0       0       0       0       0
  4757 ;;      Locals:         0       0       2       0       0       0       0
  4758 ;;      Temps:          0       0       2       0       0       0       0
  4759 ;;      Totals:         0       0       4       0       0       0       0
  4760 ;;Total ram usage:        4 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:   12
  4763 ;; This function calls:
  4764 ;;		_Clear
  4765 ;;		_Read_b_eep
  4766 ;;		_keypad
  4767 ;;		_password_change
  4768 ;;		_printf
  4769 ;; This function is called by:
  4770 ;;		_main
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text2
  4775  0015FA                     __ptext2:
  4776                           	opt stack 0
  4777  0015FA                     _password_options:
  4778                           	opt stack 18
  4779                           
  4780                           ;Lab7.c: 666: Clear();
  4781                           
  4782                           ;incstack = 0
  4783  0015FA  EC18  F018         	call	_Clear	;wreg free
  4784  0015FE                     
  4785                           ;Lab7.c: 668: {
  4786                           ;Lab7.c: 669: alarm_set = Read_b_eep(alarm_loc);
  4787  0015FE  C15E  F100         	movff	_alarm_loc,Read_b_eep@badd
  4788  001602  0101               	movlb	1	; () banked
  4789  001604  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4790  001606  EC43  F018         	call	_Read_b_eep	;wreg free
  4791  00160A  0101               	movlb	1	; () banked
  4792  00160C  6F3A               	movwf	??_password_options& (0+255),b
  4793  00160E  513A               	movf	??_password_options& (0+255),w,b
  4794  001610  6F54               	movwf	_alarm_set& (0+255),b
  4795  001612  6B55               	clrf	(_alarm_set+1)& (0+255),b
  4796                           
  4797                           ; BSR set to: 1
  4798                           ;Lab7.c: 670: temp_set = Read_b_eep(temp_loc);
  4799  001614  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  4800  001618  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4801  00161A  EC43  F018         	call	_Read_b_eep	;wreg free
  4802  00161E  0101               	movlb	1	; () banked
  4803  001620  6F3A               	movwf	??_password_options& (0+255),b
  4804  001622  513A               	movf	??_password_options& (0+255),w,b
  4805  001624  6E4A               	movwf	_temp_set,c
  4806  001626  6A4B               	clrf	_temp_set+1,c
  4807                           
  4808                           ; BSR set to: 1
  4809                           ;Lab7.c: 671: keypad_active = Read_b_eep(keypad_active_loc);
  4810  001628  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  4811  00162C  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4812  00162E  EC43  F018         	call	_Read_b_eep	;wreg free
  4813  001632  0101               	movlb	1	; () banked
  4814  001634  6F3A               	movwf	??_password_options& (0+255),b
  4815  001636  513A               	movf	??_password_options& (0+255),w,b
  4816  001638  6F50               	movwf	_keypad_active& (0+255),b
  4817  00163A  6B51               	clrf	(_keypad_active+1)& (0+255),b
  4818                           
  4819                           ; BSR set to: 1
  4820                           ;Lab7.c: 672: threshold_loc = 0x30;
  4821  00163C  0E30               	movlw	48
  4822  00163E  0100               	movlb	0	; () banked
  4823  001640  6FE4               	movwf	_threshold_loc& (0+255),b
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;Lab7.c: 673: for(int i = 0; i < 2;i++)
  4827  001642  0E00               	movlw	0
  4828  001644  0101               	movlb	1	; () banked
  4829  001646  6F3D               	movwf	(password_options@i+1)& (0+255),b
  4830  001648  0E00               	movlw	0
  4831  00164A  6F3C               	movwf	password_options@i& (0+255),b
  4832  00164C                     l4824:
  4833                           
  4834                           ; BSR set to: 1
  4835  00164C  BF3D               	btfsc	(password_options@i+1)& (0+255),7,b
  4836  00164E  D006               	goto	l295
  4837  001650  513D               	movf	(password_options@i+1)& (0+255),w,b
  4838  001652  E116               	bnz	l4836
  4839  001654  0E02               	movlw	2
  4840  001656  5D3C               	subwf	password_options@i& (0+255),w,b
  4841  001658  B0D8               	btfsc	status,0,c
  4842  00165A  D012               	goto	u7160
  4843  00165C                     l295:
  4844                           
  4845                           ; BSR set to: 1
  4846                           ;Lab7.c: 674: {
  4847                           ;Lab7.c: 675: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  4848                           
  4849                           ; BSR set to: 1
  4850  00165C  0EE0               	movlw	low _temp_threshold_read
  4851  00165E  253C               	addwf	password_options@i& (0+255),w,b
  4852  001660  6ED9               	movwf	fsr2l,c
  4853  001662  0E00               	movlw	high _temp_threshold_read
  4854  001664  213D               	addwfc	(password_options@i+1)& (0+255),w,b
  4855  001666  6EDA               	movwf	fsr2h,c
  4856  001668  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  4857  00166C  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4858  00166E  EC43  F018         	call	_Read_b_eep	;wreg free
  4859  001672  6EDF               	movwf	indf2,c
  4860                           
  4861                           ;Lab7.c: 676: threshold_loc += 1;
  4862  001674  0100               	movlb	0	; () banked
  4863  001676  2BE4               	incf	_threshold_loc& (0+255),f,b
  4864                           
  4865                           ; BSR set to: 0
  4866  001678  0101               	movlb	1	; () banked
  4867  00167A  4B3C               	infsnz	password_options@i& (0+255),f,b
  4868  00167C  2B3D               	incf	(password_options@i+1)& (0+255),f,b
  4869  00167E  D7E6               	goto	l4824
  4870  001680                     u7160:
  4871  001680                     l4836:
  4872                           
  4873                           ; BSR set to: 1
  4874                           ;Lab7.c: 677: }
  4875                           ;Lab7.c: 678: if(alarm_set != 1){
  4876  001680  0554               	decf	_alarm_set& (0+255),w,b
  4877  001682  1155               	iorwf	(_alarm_set+1)& (0+255),w,b
  4878  001684  B4D8               	btfsc	status,2,c
  4879  001686  D007               	goto	l297
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;Lab7.c: 679: printf("Alarm is OFF\n\r");
  4883  001688  0E41               	movlw	low (STR_27+5)
  4884  00168A  6F16               	movwf	printf@f& (0+255),b
  4885  00168C  0E7F               	movlw	high (STR_27+5)
  4886  00168E  6F17               	movwf	(printf@f+1)& (0+255),b
  4887  001690  EC00  F00C         	call	_printf	;wreg free
  4888                           
  4889                           ;Lab7.c: 680: }
  4890  001694  D007               	goto	l298
  4891  001696                     l297:
  4892                           
  4893                           ;Lab7.c: 681: else
  4894                           ;Lab7.c: 682: {
  4895                           ;Lab7.c: 683: printf("Alarm is ON\n\r");
  4896  001696  0E68               	movlw	low (STR_28+5)
  4897  001698  0101               	movlb	1	; () banked
  4898  00169A  6F16               	movwf	printf@f& (0+255),b
  4899  00169C  0E7F               	movlw	high (STR_28+5)
  4900  00169E  6F17               	movwf	(printf@f+1)& (0+255),b
  4901  0016A0  EC00  F00C         	call	_printf	;wreg free
  4902  0016A4                     l298:
  4903                           
  4904                           ;Lab7.c: 684: }
  4905                           ;Lab7.c: 685: if(temp_set != 1){
  4906  0016A4  044A               	decf	_temp_set,w,c
  4907  0016A6  104B               	iorwf	_temp_set+1,w,c
  4908  0016A8  B4D8               	btfsc	status,2,c
  4909  0016AA  D008               	goto	l299
  4910                           
  4911                           ;Lab7.c: 686: printf("Temp Alarm is OFF\n\r");
  4912  0016AC  0E3C               	movlw	low STR_27
  4913  0016AE  0101               	movlb	1	; () banked
  4914  0016B0  6F16               	movwf	printf@f& (0+255),b
  4915  0016B2  0E7F               	movlw	high STR_27
  4916  0016B4  6F17               	movwf	(printf@f+1)& (0+255),b
  4917  0016B6  EC00  F00C         	call	_printf	;wreg free
  4918                           
  4919                           ;Lab7.c: 687: }
  4920  0016BA  D007               	goto	l300
  4921  0016BC                     l299:
  4922                           
  4923                           ;Lab7.c: 688: else
  4924                           ;Lab7.c: 689: {
  4925                           ;Lab7.c: 690: printf("Temp Alarm is ON\n\r");
  4926  0016BC  0E63               	movlw	low STR_28
  4927  0016BE  0101               	movlb	1	; () banked
  4928  0016C0  6F16               	movwf	printf@f& (0+255),b
  4929  0016C2  0E7F               	movlw	high STR_28
  4930  0016C4  6F17               	movwf	(printf@f+1)& (0+255),b
  4931  0016C6  EC00  F00C         	call	_printf	;wreg free
  4932  0016CA                     l300:
  4933                           
  4934                           ;Lab7.c: 691: }
  4935                           ;Lab7.c: 692: if(keypad_active == 1)
  4936  0016CA  0101               	movlb	1	; () banked
  4937  0016CC  0550               	decf	_keypad_active& (0+255),w,b
  4938  0016CE  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  4939  0016D0  A4D8               	btfss	status,2,c
  4940  0016D2  D007               	goto	l301
  4941                           
  4942                           ; BSR set to: 1
  4943                           ;Lab7.c: 693: {
  4944                           ;Lab7.c: 694: printf("INPUT: KEYPAD\n\r");
  4945  0016D4  0EBF               	movlw	low STR_29
  4946  0016D6  6F16               	movwf	printf@f& (0+255),b
  4947  0016D8  0E7F               	movlw	high STR_29
  4948  0016DA  6F17               	movwf	(printf@f+1)& (0+255),b
  4949  0016DC  EC00  F00C         	call	_printf	;wreg free
  4950                           
  4951                           ;Lab7.c: 695: }
  4952  0016E0  D014               	goto	l304
  4953  0016E2                     l301:
  4954                           
  4955                           ;Lab7.c: 696: else if(keypad_active == 2)
  4956  0016E2  0E02               	movlw	2
  4957  0016E4  0101               	movlb	1	; () banked
  4958  0016E6  1950               	xorwf	_keypad_active& (0+255),w,b
  4959  0016E8  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  4960  0016EA  A4D8               	btfss	status,2,c
  4961  0016EC  D007               	goto	l303
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;Lab7.c: 697: {
  4965                           ;Lab7.c: 698: printf("INPUT: KEYPAD and KEYBOARD\n\r");
  4966  0016EE  0EC9               	movlw	low STR_30
  4967  0016F0  6F16               	movwf	printf@f& (0+255),b
  4968  0016F2  0E7D               	movlw	high STR_30
  4969  0016F4  6F17               	movwf	(printf@f+1)& (0+255),b
  4970  0016F6  EC00  F00C         	call	_printf	;wreg free
  4971                           
  4972                           ;Lab7.c: 699: }
  4973  0016FA  D007               	goto	l304
  4974  0016FC                     l303:
  4975                           
  4976                           ;Lab7.c: 700: else
  4977                           ;Lab7.c: 701: {
  4978                           ;Lab7.c: 702: printf("INPUT: KEYBOARD\n\r");
  4979  0016FC  0E9B               	movlw	low STR_31
  4980  0016FE  0101               	movlb	1	; () banked
  4981  001700  6F16               	movwf	printf@f& (0+255),b
  4982  001702  0E7F               	movlw	high STR_31
  4983  001704  6F17               	movwf	(printf@f+1)& (0+255),b
  4984  001706  EC00  F00C         	call	_printf	;wreg free
  4985  00170A                     l304:
  4986                           
  4987                           ;Lab7.c: 703: }
  4988                           ;Lab7.c: 704: printf(
  4989                           ;Lab7.c: 705: "Temperature Threshold: %d%d\n\r"
  4990                           ;Lab7.c: 706: "Current Temp [F]: %ld"
  4991                           ;Lab7.c: 707: "\n\r\n\r"
  4992                           ;Lab7.c: 708: "PASSWORD OPTIONS\n\r"
  4993                           ;Lab7.c: 709: "1)Change Password\n\r"
  4994                           ;Lab7.c: 710: "2) Return to Menu\n\r",temp_threshold_read[0],temp_threshold_read[1], vol
      +                          tage);
  4995  00170A  0E57               	movlw	low STR_59
  4996  00170C  0101               	movlb	1	; () banked
  4997  00170E  6F16               	movwf	printf@f& (0+255),b
  4998  001710  0E7B               	movlw	high STR_59
  4999  001712  6F17               	movwf	(printf@f+1)& (0+255),b
  5000  001714  C0E0  F118         	movff	_temp_threshold_read,?_printf+2
  5001  001718  6B19               	clrf	(?_printf+3)& (0+255),b
  5002  00171A  C0E1  F11A         	movff	_temp_threshold_read+1,?_printf+4
  5003  00171E  6B1B               	clrf	(?_printf+5)& (0+255),b
  5004  001720  C044  F11C         	movff	_voltage,?_printf+6
  5005  001724  C045  F11D         	movff	_voltage+1,?_printf+7
  5006  001728  C046  F11E         	movff	_voltage+2,?_printf+8
  5007  00172C  C047  F11F         	movff	_voltage+3,?_printf+9
  5008  001730  EC00  F00C         	call	_printf	;wreg free
  5009                           
  5010                           ;Lab7.c: 712: if(PORTBbits.RB4 == 1){
  5011  001734  A881               	btfss	3969,4,c	;volatile
  5012  001736  D016               	goto	l305
  5013                           
  5014                           ;Lab7.c: 713: choice = keypad();
  5015  001738  ECB8  F00D         	call	_keypad	;wreg free
  5016  00173C  C100  F0E2         	movff	?_keypad,_choice
  5017  001740  C101  F0E3         	movff	?_keypad+1,_choice+1
  5018                           
  5019                           ;Lab7.c: 714: PORTBbits.RB4 = 0;
  5020  001744  9881               	bcf	3969,4,c	;volatile
  5021                           
  5022                           ;Lab7.c: 715: _delay((unsigned long)((250)*(20000000/4000.0)));
  5023  001746  0E07               	movlw	7
  5024  001748  0101               	movlb	1	; () banked
  5025  00174A  6F3B               	movwf	(??_password_options+1)& (0+255),b
  5026  00174C  0E58               	movlw	88
  5027  00174E  6F3A               	movwf	??_password_options& (0+255),b
  5028  001750  0E59               	movlw	89
  5029  001752                     u8327:
  5030  001752  2EE8               	decfsz	wreg,f,c
  5031  001754  D7FE               	bra	u8327
  5032  001756  2F3A               	decfsz	??_password_options& (0+255),f,b
  5033  001758  D7FC               	bra	u8327
  5034  00175A  2F3B               	decfsz	(??_password_options+1)& (0+255),f,b
  5035  00175C  D7FA               	bra	u8327
  5036  00175E  D000               	nop2	
  5037                           
  5038                           ;Lab7.c: 716: PORTBbits.RB4 = 1;
  5039  001760  8881               	bsf	3969,4,c	;volatile
  5040                           
  5041                           ;Lab7.c: 717: }
  5042  001762  D006               	goto	l306
  5043  001764                     l305:
  5044                           
  5045                           ;Lab7.c: 718: else{
  5046                           ;Lab7.c: 719: while(PIR1bits.RCIF == 0);
  5047  001764  AA9E               	btfss	3998,5,c	;volatile
  5048  001766  D7FE               	goto	l305
  5049                           
  5050                           ;Lab7.c: 720: choice = RCREG;
  5051  001768  CFAE F0E2          	movff	4014,_choice	;volatile
  5052  00176C  0100               	movlb	0	; () banked
  5053  00176E  6BE3               	clrf	(_choice+1)& (0+255),b
  5054  001770                     l306:
  5055                           
  5056                           ;Lab7.c: 721: }
  5057                           ;Lab7.c: 723: if(triggered == 1)
  5058                           
  5059                           ; BSR set to: 0
  5060  001770  0101               	movlb	1	; () banked
  5061  001772  0556               	decf	_triggered& (0+255),w,b
  5062  001774  1157               	iorwf	(_triggered+1)& (0+255),w,b
  5063  001776  A4D8               	btfss	status,2,c
  5064  001778  D032               	goto	l312
  5065                           
  5066                           ; BSR set to: 1
  5067                           ;Lab7.c: 724: {
  5068                           ;Lab7.c: 725: printf("\n\rReturning to Menu...\n\r");
  5069  00177A  0E87               	movlw	low STR_33
  5070  00177C  6F16               	movwf	printf@f& (0+255),b
  5071  00177E  0E7E               	movlw	high STR_33
  5072  001780  6F17               	movwf	(printf@f+1)& (0+255),b
  5073  001782  EC00  F00C         	call	_printf	;wreg free
  5074                           
  5075                           ;Lab7.c: 726: triggered = 0;
  5076  001786  0E00               	movlw	0
  5077  001788  0101               	movlb	1	; () banked
  5078  00178A  6F57               	movwf	(_triggered+1)& (0+255),b
  5079  00178C  0E00               	movlw	0
  5080  00178E  6F56               	movwf	_triggered& (0+255),b
  5081                           
  5082                           ; BSR set to: 1
  5083                           ;Lab7.c: 727: Clear();
  5084  001790  EC18  F018         	call	_Clear	;wreg free
  5085                           
  5086                           ;Lab7.c: 728: break;
  5087  001794  0012               	return	
  5088  001796                     
  5089                           ;Lab7.c: 732: printf("Changed Password\n\r\n\r");
  5090  001796  0EFE               	movlw	low STR_61
  5091  001798  0101               	movlb	1	; () banked
  5092  00179A  6F16               	movwf	printf@f& (0+255),b
  5093  00179C  0E7E               	movlw	high STR_61
  5094  00179E  6F17               	movwf	(printf@f+1)& (0+255),b
  5095  0017A0  EC00  F00C         	call	_printf	;wreg free
  5096                           
  5097                           ;Lab7.c: 733: password_change();
  5098  0017A4  ECC8  F006         	call	_password_change	;wreg free
  5099                           
  5100                           ;Lab7.c: 734: break;
  5101  0017A8  D72A               	goto	l294
  5102  0017AA                     
  5103                           ;Lab7.c: 736: Clear();
  5104  0017AA  EC18  F018         	call	_Clear	;wreg free
  5105                           
  5106                           ;Lab7.c: 737: return;
  5107  0017AE  0012               	return	
  5108  0017B0                     
  5109                           ;Lab7.c: 739: printf("\nERROR INVALID INPUT\n\r");
  5110  0017B0  0ED2               	movlw	low STR_34
  5111  0017B2  0101               	movlb	1	; () banked
  5112  0017B4  6F16               	movwf	printf@f& (0+255),b
  5113  0017B6  0E7E               	movlw	high STR_34
  5114  0017B8  6F17               	movwf	(printf@f+1)& (0+255),b
  5115  0017BA  EC00  F00C         	call	_printf	;wreg free
  5116                           
  5117                           ;Lab7.c: 740: _delay((unsigned long)((500)*(20000000/4000.0)));
  5118  0017BE  0E0D               	movlw	13
  5119  0017C0  0101               	movlb	1	; () banked
  5120  0017C2  6F3B               	movwf	(??_password_options+1)& (0+255),b
  5121  0017C4  0EAF               	movlw	175
  5122  0017C6  6F3A               	movwf	??_password_options& (0+255),b
  5123  0017C8  0EB6               	movlw	182
  5124  0017CA                     u8337:
  5125  0017CA  2EE8               	decfsz	wreg,f,c
  5126  0017CC  D7FE               	bra	u8337
  5127  0017CE  2F3A               	decfsz	??_password_options& (0+255),f,b
  5128  0017D0  D7FC               	bra	u8337
  5129  0017D2  2F3B               	decfsz	(??_password_options+1)& (0+255),f,b
  5130  0017D4  D7FA               	bra	u8337
  5131  0017D6  F000               	nop	
  5132                           
  5133                           ;Lab7.c: 741: Clear();
  5134  0017D8  EC18  F018         	call	_Clear	;wreg free
  5135                           
  5136                           ;Lab7.c: 743: }
  5137                           
  5138                           ;Lab7.c: 742: break;
  5139  0017DC  D710               	goto	l294
  5140  0017DE                     l312:
  5141  0017DE  C0E2  F13A         	movff	_choice,??_password_options
  5142  0017E2  C0E3  F13B         	movff	_choice+1,??_password_options+1
  5143                           
  5144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5145                           ; Switch size 1, requested type "space"
  5146                           ; Number of cases is 1, Range of values is 0 to 0
  5147                           ; switch strategies available:
  5148                           ; Name         Instructions Cycles
  5149                           ; simple_byte            4     3 (average)
  5150                           ;	Chosen strategy is simple_byte
  5151  0017E6  0101               	movlb	1	; () banked
  5152  0017E8  513B               	movf	(??_password_options+1)& (0+255),w,b
  5153  0017EA  0A00               	xorlw	0	; case 0
  5154  0017EC  A4D8               	btfss	status,2,c
  5155  0017EE  D7E0               	goto	l317
  5156                           
  5157                           ; BSR set to: 1
  5158                           ; Switch size 1, requested type "space"
  5159                           ; Number of cases is 2, Range of values is 49 to 50
  5160                           ; switch strategies available:
  5161                           ; Name         Instructions Cycles
  5162                           ; simple_byte            7     4 (average)
  5163                           ;	Chosen strategy is simple_byte
  5164  0017F0  513A               	movf	??_password_options& (0+255),w,b
  5165  0017F2  0A31               	xorlw	49	; case 49
  5166  0017F4  B4D8               	btfsc	status,2,c
  5167  0017F6  D7CF               	goto	l313
  5168  0017F8  0A03               	xorlw	3	; case 50
  5169  0017FA  B4D8               	btfsc	status,2,c
  5170  0017FC  D7D6               	goto	l315
  5171  0017FE  D7D8               	goto	l317
  5172  001800                     __end_of_password_options:
  5173                           	opt stack 0
  5174                           tblptru	equ	0xFF8
  5175                           tblptrh	equ	0xFF7
  5176                           tblptrl	equ	0xFF6
  5177                           tablat	equ	0xFF5
  5178                           prodh	equ	0xFF4
  5179                           prodl	equ	0xFF3
  5180                           intcon	equ	0xFF2
  5181                           intcon2	equ	0xFF1
  5182                           intcon3	equ	0xFF0
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           indf2	equ	0xFDF
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _password_change *****************
  5191 ;; Defined at:
  5192 ;;		line 510 in file "Lab7.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  i               2   56[BANK1 ] int 
  5197 ;;  i               2   54[BANK1 ] int 
  5198 ;;  i               2   52[BANK1 ] int 
  5199 ;;  i               2   48[BANK1 ] int 
  5200 ;;  i               2   46[BANK1 ] int 
  5201 ;;  i               2   50[BANK1 ] int 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5211 ;;      Params:         0       0       0       0       0       0       0
  5212 ;;      Locals:         0       0      12       0       0       0       0
  5213 ;;      Temps:          0       0       2       0       0       0       0
  5214 ;;      Totals:         0       0      14       0       0       0       0
  5215 ;;Total ram usage:       14 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:   11
  5218 ;; This function calls:
  5219 ;;		_Clear
  5220 ;;		_Read_b_eep
  5221 ;;		_keypad
  5222 ;;		_printf
  5223 ;;		_write_eeprom
  5224 ;; This function is called by:
  5225 ;;		_password_options
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text3
  5230  000D90                     __ptext3:
  5231                           	opt stack 0
  5232  000D90                     _password_change:
  5233                           	opt stack 18
  5234                           
  5235                           ;Lab7.c: 513: {
  5236                           ;Lab7.c: 514: Clear();
  5237                           
  5238                           ;incstack = 0
  5239                           ;Lab7.c: 512: while(1)
  5240  000D90  EC18  F018         	call	_Clear	;wreg free
  5241                           
  5242                           ;Lab7.c: 515: _delay((unsigned long)((250)*(20000000/4000.0)));
  5243  000D94  0E07               	movlw	7
  5244  000D96  0101               	movlb	1	; () banked
  5245  000D98  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5246  000D9A  0E58               	movlw	88
  5247  000D9C  6F2C               	movwf	??_password_change& (0+255),b
  5248  000D9E  0E59               	movlw	89
  5249  000DA0                     u8347:
  5250  000DA0  2EE8               	decfsz	wreg,f,c
  5251  000DA2  D7FE               	bra	u8347
  5252  000DA4  2F2C               	decfsz	??_password_change& (0+255),f,b
  5253  000DA6  D7FC               	bra	u8347
  5254  000DA8  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5255  000DAA  D7FA               	bra	u8347
  5256  000DAC  D000               	nop2	
  5257                           
  5258                           ;Lab7.c: 516: printf("Enter Current Password: ");
  5259  000DAE  0EB9               	movlw	low STR_35
  5260  000DB0  0101               	movlb	1	; () banked
  5261  000DB2  6F16               	movwf	printf@f& (0+255),b
  5262  000DB4  0E7E               	movlw	high STR_35
  5263  000DB6  6F17               	movwf	(printf@f+1)& (0+255),b
  5264  000DB8  EC00  F00C         	call	_printf	;wreg free
  5265                           
  5266                           ;Lab7.c: 517: if(PORTBbits.RB4 == 1)
  5267  000DBC  A881               	btfss	3969,4,c	;volatile
  5268  000DBE  D031               	goto	l236
  5269                           
  5270                           ;Lab7.c: 518: {
  5271                           ;Lab7.c: 519: for(int i = 0;i < 4;i++){
  5272  000DC0  0E00               	movlw	0
  5273  000DC2  0101               	movlb	1	; () banked
  5274  000DC4  6F2F               	movwf	(password_change@i+1)& (0+255),b
  5275  000DC6  0E00               	movlw	0
  5276  000DC8  6F2E               	movwf	password_change@i& (0+255),b
  5277  000DCA                     l3974:
  5278                           
  5279                           ; BSR set to: 1
  5280  000DCA  BF2F               	btfsc	(password_change@i+1)& (0+255),7,b
  5281  000DCC  D006               	goto	l237
  5282  000DCE  512F               	movf	(password_change@i+1)& (0+255),w,b
  5283  000DD0  E151               	bnz	l4006
  5284  000DD2  0E04               	movlw	4
  5285  000DD4  5D2E               	subwf	password_change@i& (0+255),w,b
  5286  000DD6  B0D8               	btfsc	status,0,c
  5287  000DD8  D04D               	goto	u5180
  5288  000DDA                     l237:
  5289                           
  5290                           ; BSR set to: 1
  5291                           ;Lab7.c: 520: pass[i] = keypad();
  5292                           
  5293                           ; BSR set to: 1
  5294  000DDA  0E4C               	movlw	low _pass
  5295  000DDC  252E               	addwf	password_change@i& (0+255),w,b
  5296  000DDE  6ED9               	movwf	fsr2l,c
  5297  000DE0  0E01               	movlw	high _pass
  5298  000DE2  212F               	addwfc	(password_change@i+1)& (0+255),w,b
  5299  000DE4  6EDA               	movwf	fsr2h,c
  5300  000DE6  ECB8  F00D         	call	_keypad	;wreg free
  5301  000DEA  0101               	movlb	1	; () banked
  5302  000DEC  5100               	movf	?_keypad& (0+255),w,b
  5303  000DEE  6EDF               	movwf	indf2,c
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;Lab7.c: 521: printf("*");
  5307  000DF0  0EFD               	movlw	low STR_22
  5308  000DF2  6F16               	movwf	printf@f& (0+255),b
  5309  000DF4  0E7F               	movlw	high STR_22
  5310  000DF6  6F17               	movwf	(printf@f+1)& (0+255),b
  5311  000DF8  EC00  F00C         	call	_printf	;wreg free
  5312                           
  5313                           ;Lab7.c: 522: PORTBbits.RB4 = 0;
  5314  000DFC  9881               	bcf	3969,4,c	;volatile
  5315                           
  5316                           ;Lab7.c: 523: _delay((unsigned long)((500)*(20000000/4000.0)));
  5317  000DFE  0E0D               	movlw	13
  5318  000E00  0101               	movlb	1	; () banked
  5319  000E02  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5320  000E04  0EAF               	movlw	175
  5321  000E06  6F2C               	movwf	??_password_change& (0+255),b
  5322  000E08  0EB6               	movlw	182
  5323  000E0A                     u8357:
  5324  000E0A  2EE8               	decfsz	wreg,f,c
  5325  000E0C  D7FE               	bra	u8357
  5326  000E0E  2F2C               	decfsz	??_password_change& (0+255),f,b
  5327  000E10  D7FC               	bra	u8357
  5328  000E12  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5329  000E14  D7FA               	bra	u8357
  5330  000E16  F000               	nop	
  5331                           
  5332                           ;Lab7.c: 524: PORTBbits.RB4 = 1;
  5333  000E18  8881               	bsf	3969,4,c	;volatile
  5334  000E1A  0101               	movlb	1	; () banked
  5335  000E1C  4B2E               	infsnz	password_change@i& (0+255),f,b
  5336  000E1E  2B2F               	incf	(password_change@i+1)& (0+255),f,b
  5337  000E20  D7D4               	goto	l3974
  5338  000E22                     l236:
  5339                           
  5340                           ;Lab7.c: 527: else
  5341                           ;Lab7.c: 528: {
  5342                           ;Lab7.c: 529: for(int i = 0;i < 4;i++){
  5343                           
  5344                           ; BSR set to: 1
  5345  000E22  0E00               	movlw	0
  5346  000E24  0101               	movlb	1	; () banked
  5347  000E26  6F31               	movwf	(password_change@i_1099+1)& (0+255),b
  5348  000E28  0E00               	movlw	0
  5349  000E2A  6F30               	movwf	password_change@i_1099& (0+255),b
  5350                           
  5351                           ; BSR set to: 1
  5352  000E2C  BF31               	btfsc	(password_change@i_1099+1)& (0+255),7,b
  5353  000E2E  D006               	goto	l240
  5354  000E30  5131               	movf	(password_change@i_1099+1)& (0+255),w,b
  5355  000E32  E120               	bnz	l4006
  5356  000E34  0E04               	movlw	4
  5357  000E36  5D30               	subwf	password_change@i_1099& (0+255),w,b
  5358  000E38  B0D8               	btfsc	status,0,c
  5359  000E3A  D01C               	goto	u5180
  5360  000E3C                     l240:
  5361                           
  5362                           ; BSR set to: 1
  5363                           
  5364                           ; BSR set to: 1
  5365                           ;Lab7.c: 530: while(PIR1bits.RCIF == 0);
  5366  000E3C  AA9E               	btfss	3998,5,c	;volatile
  5367  000E3E  D7FE               	goto	l240
  5368                           
  5369                           ;Lab7.c: 531: pass[i] = RCREG;
  5370  000E40  0E4C               	movlw	low _pass
  5371  000E42  0101               	movlb	1	; () banked
  5372  000E44  2530               	addwf	password_change@i_1099& (0+255),w,b
  5373  000E46  6ED9               	movwf	fsr2l,c
  5374  000E48  0E01               	movlw	high _pass
  5375  000E4A  2131               	addwfc	(password_change@i_1099+1)& (0+255),w,b
  5376  000E4C  6EDA               	movwf	fsr2h,c
  5377  000E4E  CFAE FFDF          	movff	4014,indf2	;volatile
  5378                           
  5379                           ; BSR set to: 1
  5380                           ;Lab7.c: 532: printf("*");
  5381  000E52  0EFD               	movlw	low STR_22
  5382  000E54  6F16               	movwf	printf@f& (0+255),b
  5383  000E56  0E7F               	movlw	high STR_22
  5384  000E58  6F17               	movwf	(printf@f+1)& (0+255),b
  5385  000E5A  EC00  F00C         	call	_printf	;wreg free
  5386  000E5E  0101               	movlb	1	; () banked
  5387  000E60  4B30               	infsnz	password_change@i_1099& (0+255),f,b
  5388  000E62  2B31               	incf	(password_change@i_1099+1)& (0+255),f,b
  5389                           
  5390                           ; BSR set to: 1
  5391  000E64  BF31               	btfsc	(password_change@i_1099+1)& (0+255),7,b
  5392  000E66  D7EA               	goto	l240
  5393  000E68  5131               	movf	(password_change@i_1099+1)& (0+255),w,b
  5394  000E6A  E104               	bnz	l4006
  5395  000E6C  0E04               	movlw	4
  5396  000E6E  5D30               	subwf	password_change@i_1099& (0+255),w,b
  5397  000E70  A0D8               	btfss	status,0,c
  5398  000E72  D7E4               	goto	l240
  5399  000E74                     u5180:
  5400  000E74                     l4006:
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;Lab7.c: 534: }
  5404                           ;Lab7.c: 535: }
  5405                           ;Lab7.c: 538: pass_loc = 0x00;
  5406  000E74  0E00               	movlw	0
  5407  000E76  6F5A               	movwf	_pass_loc& (0+255),b
  5408                           
  5409                           ;Lab7.c: 539: for(int i = 0;i < 4;i++)
  5410  000E78  0E00               	movlw	0
  5411  000E7A  6F33               	movwf	(password_change@i_1101+1)& (0+255),b
  5412  000E7C  0E00               	movlw	0
  5413  000E7E  6F32               	movwf	password_change@i_1101& (0+255),b
  5414  000E80                     l4008:
  5415                           
  5416                           ; BSR set to: 1
  5417  000E80  BF33               	btfsc	(password_change@i_1101+1)& (0+255),7,b
  5418  000E82  D006               	goto	l245
  5419  000E84  5133               	movf	(password_change@i_1101+1)& (0+255),w,b
  5420  000E86  E122               	bnz	l4028
  5421  000E88  0E04               	movlw	4
  5422  000E8A  5D32               	subwf	password_change@i_1101& (0+255),w,b
  5423  000E8C  B0D8               	btfsc	status,0,c
  5424  000E8E  D01E               	goto	u5210
  5425  000E90                     l245:
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;Lab7.c: 540: {
  5429                           ;Lab7.c: 541: pass_check = Read_b_eep(pass_loc);
  5430                           
  5431                           ; BSR set to: 1
  5432  000E90  C15A  F100         	movff	_pass_loc,Read_b_eep@badd
  5433  000E94  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  5434  000E96  EC43  F018         	call	_Read_b_eep	;wreg free
  5435  000E9A  0101               	movlb	1	; () banked
  5436  000E9C  6F5B               	movwf	_pass_check& (0+255),b
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;Lab7.c: 542: pass_loc+=1;
  5440  000E9E  2B5A               	incf	_pass_loc& (0+255),f,b
  5441                           
  5442                           ; BSR set to: 1
  5443                           ;Lab7.c: 543: if(pass_check != pass[i])
  5444  000EA0  0E4C               	movlw	low _pass
  5445  000EA2  2532               	addwf	password_change@i_1101& (0+255),w,b
  5446  000EA4  6ED9               	movwf	fsr2l,c
  5447  000EA6  0E01               	movlw	high _pass
  5448  000EA8  2133               	addwfc	(password_change@i_1101+1)& (0+255),w,b
  5449  000EAA  6EDA               	movwf	fsr2h,c
  5450  000EAC  515B               	movf	_pass_check& (0+255),w,b
  5451  000EAE  18DE               	xorwf	postinc2,w,c
  5452  000EB0  B4D8               	btfsc	status,2,c
  5453  000EB2  D005               	goto	l247
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;Lab7.c: 544: {
  5457                           ;Lab7.c: 545: check = 1;
  5458  000EB4  0E00               	movlw	0
  5459  000EB6  6F59               	movwf	(_check+1)& (0+255),b
  5460  000EB8  0E01               	movlw	1
  5461  000EBA  6F58               	movwf	_check& (0+255),b
  5462                           
  5463                           ;Lab7.c: 546: break;
  5464  000EBC  D007               	goto	u5210
  5465  000EBE                     l247:
  5466                           
  5467                           ; BSR set to: 1
  5468                           ;Lab7.c: 548: else
  5469                           ;Lab7.c: 549: {
  5470                           ;Lab7.c: 550: check = 0;
  5471                           
  5472                           ; BSR set to: 1
  5473  000EBE  0E00               	movlw	0
  5474  000EC0  6F59               	movwf	(_check+1)& (0+255),b
  5475  000EC2  0E00               	movlw	0
  5476  000EC4  6F58               	movwf	_check& (0+255),b
  5477                           
  5478                           ; BSR set to: 1
  5479                           
  5480                           ; BSR set to: 1
  5481  000EC6  4B32               	infsnz	password_change@i_1101& (0+255),f,b
  5482  000EC8  2B33               	incf	(password_change@i_1101+1)& (0+255),f,b
  5483  000ECA  D7DA               	goto	l4008
  5484  000ECC                     u5210:
  5485  000ECC                     l4028:
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;Lab7.c: 551: }
  5489                           ;Lab7.c: 553: }
  5490                           ;Lab7.c: 555: if(check == 0)
  5491  000ECC  5158               	movf	_check& (0+255),w,b
  5492  000ECE  1159               	iorwf	(_check+1)& (0+255),w,b
  5493  000ED0  A4D8               	btfss	status,2,c
  5494  000ED2  D0FF               	goto	l249
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;Lab7.c: 556: {
  5498                           ;Lab7.c: 557: Clear();
  5499  000ED4  EC18  F018         	call	_Clear	;wreg free
  5500                           
  5501                           ;Lab7.c: 558: _delay((unsigned long)((250)*(20000000/4000.0)));
  5502  000ED8  0E07               	movlw	7
  5503  000EDA  0101               	movlb	1	; () banked
  5504  000EDC  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5505  000EDE  0E58               	movlw	88
  5506  000EE0  6F2C               	movwf	??_password_change& (0+255),b
  5507  000EE2  0E59               	movlw	89
  5508  000EE4                     u8367:
  5509  000EE4  2EE8               	decfsz	wreg,f,c
  5510  000EE6  D7FE               	bra	u8367
  5511  000EE8  2F2C               	decfsz	??_password_change& (0+255),f,b
  5512  000EEA  D7FC               	bra	u8367
  5513  000EEC  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5514  000EEE  D7FA               	bra	u8367
  5515  000EF0  D000               	nop2	
  5516                           
  5517                           ;Lab7.c: 559: printf("Enter New Password: ");
  5518  000EF2  0E13               	movlw	low STR_38
  5519  000EF4  0101               	movlb	1	; () banked
  5520  000EF6  6F16               	movwf	printf@f& (0+255),b
  5521  000EF8  0E7F               	movlw	high STR_38
  5522  000EFA  6F17               	movwf	(printf@f+1)& (0+255),b
  5523  000EFC  EC00  F00C         	call	_printf	;wreg free
  5524                           
  5525                           ;Lab7.c: 560: if(PORTBbits.RB4 == 1)
  5526  000F00  A881               	btfss	3969,4,c	;volatile
  5527  000F02  D068               	goto	l250
  5528                           
  5529                           ;Lab7.c: 561: {
  5530                           ;Lab7.c: 562: for(int i = 0;i < 4;i++){
  5531  000F04  0E00               	movlw	0
  5532  000F06  0101               	movlb	1	; () banked
  5533  000F08  6F37               	movwf	(password_change@i_1103+1)& (0+255),b
  5534  000F0A  0E00               	movlw	0
  5535  000F0C  6F36               	movwf	password_change@i_1103& (0+255),b
  5536                           
  5537                           ; BSR set to: 1
  5538  000F0E  BF37               	btfsc	(password_change@i_1103+1)& (0+255),7,b
  5539  000F10  D008               	goto	l251
  5540  000F12  5137               	movf	(password_change@i_1103+1)& (0+255),w,b
  5541  000F14  E105               	bnz	u5240
  5542  000F16  0E04               	movlw	4
  5543  000F18  5D36               	subwf	password_change@i_1103& (0+255),w,b
  5544  000F1A  B0D8               	btfsc	status,0,c
  5545  000F1C  D0B5               	goto	u5320
  5546  000F1E  D001               	goto	l251
  5547  000F20                     u5240:
  5548                           
  5549                           ; BSR set to: 1
  5550  000F20  D0B3               	goto	u5320
  5551  000F22                     l251:
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;Lab7.c: 563: saved_pass[i] = keypad();
  5555                           
  5556                           ; BSR set to: 1
  5557  000F22  0E48               	movlw	low _saved_pass
  5558  000F24  2536               	addwf	password_change@i_1103& (0+255),w,b
  5559  000F26  6ED9               	movwf	fsr2l,c
  5560  000F28  0E01               	movlw	high _saved_pass
  5561  000F2A  2137               	addwfc	(password_change@i_1103+1)& (0+255),w,b
  5562  000F2C  6EDA               	movwf	fsr2h,c
  5563  000F2E  ECB8  F00D         	call	_keypad	;wreg free
  5564  000F32  0101               	movlb	1	; () banked
  5565  000F34  5100               	movf	?_keypad& (0+255),w,b
  5566  000F36  6EDF               	movwf	indf2,c
  5567                           
  5568                           ; BSR set to: 1
  5569                           ;Lab7.c: 564: printf("*");
  5570  000F38  0EFD               	movlw	low STR_22
  5571  000F3A  6F16               	movwf	printf@f& (0+255),b
  5572  000F3C  0E7F               	movlw	high STR_22
  5573  000F3E  6F17               	movwf	(printf@f+1)& (0+255),b
  5574  000F40  EC00  F00C         	call	_printf	;wreg free
  5575                           
  5576                           ;Lab7.c: 565: PORTBbits.RB4 = 0;
  5577  000F44  9881               	bcf	3969,4,c	;volatile
  5578                           
  5579                           ;Lab7.c: 566: _delay((unsigned long)((500)*(20000000/4000.0)));
  5580  000F46  0E0D               	movlw	13
  5581  000F48  0101               	movlb	1	; () banked
  5582  000F4A  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5583  000F4C  0EAF               	movlw	175
  5584  000F4E  6F2C               	movwf	??_password_change& (0+255),b
  5585  000F50  0EB6               	movlw	182
  5586  000F52                     u8377:
  5587  000F52  2EE8               	decfsz	wreg,f,c
  5588  000F54  D7FE               	bra	u8377
  5589  000F56  2F2C               	decfsz	??_password_change& (0+255),f,b
  5590  000F58  D7FC               	bra	u8377
  5591  000F5A  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5592  000F5C  D7FA               	bra	u8377
  5593  000F5E  F000               	nop	
  5594                           
  5595                           ;Lab7.c: 567: PORTBbits.RB4 = 1;
  5596  000F60  8881               	bsf	3969,4,c	;volatile
  5597                           
  5598                           ;Lab7.c: 568: if(saved_pass[i] < '0' || saved_pass[i] > '9')
  5599  000F62  0E48               	movlw	low _saved_pass
  5600  000F64  0101               	movlb	1	; () banked
  5601  000F66  2536               	addwf	password_change@i_1103& (0+255),w,b
  5602  000F68  6ED9               	movwf	fsr2l,c
  5603  000F6A  0E01               	movlw	high _saved_pass
  5604  000F6C  2137               	addwfc	(password_change@i_1103+1)& (0+255),w,b
  5605  000F6E  6EDA               	movwf	fsr2h,c
  5606  000F70  0E2F               	movlw	47
  5607  000F72  64DF               	cpfsgt	indf2,c
  5608  000F74  D009               	goto	u5260
  5609                           
  5610                           ; BSR set to: 1
  5611  000F76  0E48               	movlw	low _saved_pass
  5612  000F78  2536               	addwf	password_change@i_1103& (0+255),w,b
  5613  000F7A  6ED9               	movwf	fsr2l,c
  5614  000F7C  0E01               	movlw	high _saved_pass
  5615  000F7E  2137               	addwfc	(password_change@i_1103+1)& (0+255),w,b
  5616  000F80  6EDA               	movwf	fsr2h,c
  5617  000F82  0E39               	movlw	57
  5618  000F84  64DF               	cpfsgt	indf2,c
  5619  000F86  D01E               	goto	l253
  5620  000F88                     u5260:
  5621                           
  5622                           ; BSR set to: 1
  5623                           ;Lab7.c: 569: {
  5624                           ;Lab7.c: 570: Clear();
  5625                           
  5626                           ; BSR set to: 1
  5627  000F88  EC18  F018         	call	_Clear	;wreg free
  5628                           
  5629                           ;Lab7.c: 571: printf("\n\rONLY 0-9 CAN BE USED IN PASSWORD\n\r");
  5630  000F8C  0EFE               	movlw	low STR_23
  5631  000F8E  0101               	movlb	1	; () banked
  5632  000F90  6F16               	movwf	printf@f& (0+255),b
  5633  000F92  0E7C               	movlw	high STR_23
  5634  000F94  6F17               	movwf	(printf@f+1)& (0+255),b
  5635  000F96  EC00  F00C         	call	_printf	;wreg free
  5636                           
  5637                           ;Lab7.c: 572: printf("Returning to Password Menu...\n\r");
  5638  000F9A  0E6B               	movlw	low STR_41
  5639  000F9C  0101               	movlb	1	; () banked
  5640  000F9E  6F16               	movwf	printf@f& (0+255),b
  5641  000FA0  0E7D               	movlw	high STR_41
  5642  000FA2  6F17               	movwf	(printf@f+1)& (0+255),b
  5643  000FA4  EC00  F00C         	call	_printf	;wreg free
  5644                           
  5645                           ;Lab7.c: 573: _delay((unsigned long)((1000)*(20000000/4000.0)));
  5646  000FA8  0E1A               	movlw	26
  5647  000FAA  0101               	movlb	1	; () banked
  5648  000FAC  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5649  000FAE  0E5E               	movlw	94
  5650  000FB0  6F2C               	movwf	??_password_change& (0+255),b
  5651  000FB2  0E6E               	movlw	110
  5652  000FB4                     u8387:
  5653  000FB4  2EE8               	decfsz	wreg,f,c
  5654  000FB6  D7FE               	bra	u8387
  5655  000FB8  2F2C               	decfsz	??_password_change& (0+255),f,b
  5656  000FBA  D7FC               	bra	u8387
  5657  000FBC  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5658  000FBE  D7FA               	bra	u8387
  5659  000FC0  F000               	nop	
  5660                           
  5661                           ;Lab7.c: 574: return;
  5662  000FC2  0012               	return	
  5663  000FC4                     l253:
  5664  000FC4  0101               	movlb	1	; () banked
  5665  000FC6  4B36               	infsnz	password_change@i_1103& (0+255),f,b
  5666  000FC8  2B37               	incf	(password_change@i_1103+1)& (0+255),f,b
  5667                           
  5668                           ; BSR set to: 1
  5669  000FCA  BF37               	btfsc	(password_change@i_1103+1)& (0+255),7,b
  5670  000FCC  D7AA               	goto	l251
  5671  000FCE  5137               	movf	(password_change@i_1103+1)& (0+255),w,b
  5672  000FD0  E15B               	bnz	l4092
  5673  000FD2  D7A1               	goto	L2
  5674  000FD4                     l250:
  5675                           
  5676                           ;Lab7.c: 578: else
  5677                           ;Lab7.c: 579: {
  5678                           ;Lab7.c: 580: for(int i = 0;i < 4;i++){
  5679                           
  5680                           ; BSR set to: 1
  5681  000FD4  0E00               	movlw	0
  5682  000FD6  0101               	movlb	1	; () banked
  5683  000FD8  6F39               	movwf	(password_change@i_1107+1)& (0+255),b
  5684  000FDA  0E00               	movlw	0
  5685  000FDC  6F38               	movwf	password_change@i_1107& (0+255),b
  5686                           
  5687                           ; BSR set to: 1
  5688  000FDE  BF39               	btfsc	(password_change@i_1107+1)& (0+255),7,b
  5689  000FE0  D006               	goto	l258
  5690  000FE2  5139               	movf	(password_change@i_1107+1)& (0+255),w,b
  5691  000FE4  E151               	bnz	l4092
  5692  000FE6  0E04               	movlw	4
  5693  000FE8  5D38               	subwf	password_change@i_1107& (0+255),w,b
  5694  000FEA  B0D8               	btfsc	status,0,c
  5695  000FEC  D04D               	goto	u5320
  5696  000FEE                     l258:
  5697                           
  5698                           ; BSR set to: 1
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;Lab7.c: 581: while(PIR1bits.RCIF == 0);
  5702  000FEE  AA9E               	btfss	3998,5,c	;volatile
  5703  000FF0  D7FE               	goto	l258
  5704                           
  5705                           ;Lab7.c: 582: saved_pass[i] = RCREG;
  5706  000FF2  0E48               	movlw	low _saved_pass
  5707  000FF4  0101               	movlb	1	; () banked
  5708  000FF6  2538               	addwf	password_change@i_1107& (0+255),w,b
  5709  000FF8  6ED9               	movwf	fsr2l,c
  5710  000FFA  0E01               	movlw	high _saved_pass
  5711  000FFC  2139               	addwfc	(password_change@i_1107+1)& (0+255),w,b
  5712  000FFE  6EDA               	movwf	fsr2h,c
  5713  001000  CFAE FFDF          	movff	4014,indf2	;volatile
  5714                           
  5715                           ; BSR set to: 1
  5716                           ;Lab7.c: 583: printf("*");
  5717  001004  0EFD               	movlw	low STR_22
  5718  001006  6F16               	movwf	printf@f& (0+255),b
  5719  001008  0E7F               	movlw	high STR_22
  5720  00100A  6F17               	movwf	(printf@f+1)& (0+255),b
  5721  00100C  EC00  F00C         	call	_printf	;wreg free
  5722                           
  5723                           ;Lab7.c: 584: if(saved_pass[i] < '0' || saved_pass[i] > '9')
  5724  001010  0E48               	movlw	low _saved_pass
  5725  001012  0101               	movlb	1	; () banked
  5726  001014  2538               	addwf	password_change@i_1107& (0+255),w,b
  5727  001016  6ED9               	movwf	fsr2l,c
  5728  001018  0E01               	movlw	high _saved_pass
  5729  00101A  2139               	addwfc	(password_change@i_1107+1)& (0+255),w,b
  5730  00101C  6EDA               	movwf	fsr2h,c
  5731  00101E  0E2F               	movlw	47
  5732  001020  64DF               	cpfsgt	indf2,c
  5733  001022  D009               	goto	u5310
  5734                           
  5735                           ; BSR set to: 1
  5736  001024  0E48               	movlw	low _saved_pass
  5737  001026  2538               	addwf	password_change@i_1107& (0+255),w,b
  5738  001028  6ED9               	movwf	fsr2l,c
  5739  00102A  0E01               	movlw	high _saved_pass
  5740  00102C  2139               	addwfc	(password_change@i_1107+1)& (0+255),w,b
  5741  00102E  6EDA               	movwf	fsr2h,c
  5742  001030  0E39               	movlw	57
  5743  001032  64DF               	cpfsgt	indf2,c
  5744  001034  D01E               	goto	l263
  5745  001036                     u5310:
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;Lab7.c: 585: {
  5749                           ;Lab7.c: 586: Clear();
  5750                           
  5751                           ; BSR set to: 1
  5752  001036  EC18  F018         	call	_Clear	;wreg free
  5753                           
  5754                           ;Lab7.c: 587: printf("\n\rONLY 0-9 CAN BE USED IN PASSWORD\n\r");
  5755  00103A  0EFE               	movlw	low STR_23
  5756  00103C  0101               	movlb	1	; () banked
  5757  00103E  6F16               	movwf	printf@f& (0+255),b
  5758  001040  0E7C               	movlw	high STR_23
  5759  001042  6F17               	movwf	(printf@f+1)& (0+255),b
  5760  001044  EC00  F00C         	call	_printf	;wreg free
  5761                           
  5762                           ;Lab7.c: 588: printf("Returning to Password Menu...\n\r");
  5763  001048  0E6B               	movlw	low STR_41
  5764  00104A  0101               	movlb	1	; () banked
  5765  00104C  6F16               	movwf	printf@f& (0+255),b
  5766  00104E  0E7D               	movlw	high STR_41
  5767  001050  6F17               	movwf	(printf@f+1)& (0+255),b
  5768  001052  EC00  F00C         	call	_printf	;wreg free
  5769                           
  5770                           ;Lab7.c: 589: _delay((unsigned long)((1000)*(20000000/4000.0)));
  5771  001056  0E1A               	movlw	26
  5772  001058  0101               	movlb	1	; () banked
  5773  00105A  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5774  00105C  0E5E               	movlw	94
  5775  00105E  6F2C               	movwf	??_password_change& (0+255),b
  5776  001060  0E6E               	movlw	110
  5777  001062                     u8397:
  5778  001062  2EE8               	decfsz	wreg,f,c
  5779  001064  D7FE               	bra	u8397
  5780  001066  2F2C               	decfsz	??_password_change& (0+255),f,b
  5781  001068  D7FC               	bra	u8397
  5782  00106A  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5783  00106C  D7FA               	bra	u8397
  5784  00106E  F000               	nop	
  5785                           
  5786                           ;Lab7.c: 590: return;
  5787  001070  0012               	return	
  5788  001072                     l263:
  5789  001072  0101               	movlb	1	; () banked
  5790  001074  4B38               	infsnz	password_change@i_1107& (0+255),f,b
  5791  001076  2B39               	incf	(password_change@i_1107+1)& (0+255),f,b
  5792                           
  5793                           ; BSR set to: 1
  5794  001078  BF39               	btfsc	(password_change@i_1107+1)& (0+255),7,b
  5795  00107A  D7B9               	goto	l258
  5796  00107C  5139               	movf	(password_change@i_1107+1)& (0+255),w,b
  5797  00107E  E104               	bnz	l4092
  5798  001080  0E04               	movlw	4
  5799  001082  5D38               	subwf	password_change@i_1107& (0+255),w,b
  5800  001084  A0D8               	btfss	status,0,c
  5801  001086  D7B3               	goto	l258
  5802  001088                     u5320:
  5803  001088                     l4092:
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;Lab7.c: 591: }
  5807                           ;Lab7.c: 592: }
  5808                           ;Lab7.c: 593: }
  5809                           ;Lab7.c: 594: pass_loc = 0x00;
  5810  001088  0E00               	movlw	0
  5811  00108A  6F5A               	movwf	_pass_loc& (0+255),b
  5812                           
  5813                           ;Lab7.c: 595: for(int i=0;i<4;i++)
  5814  00108C  0E00               	movlw	0
  5815  00108E  6F35               	movwf	(password_change@i_1111+1)& (0+255),b
  5816  001090  0E00               	movlw	0
  5817  001092  6F34               	movwf	password_change@i_1111& (0+255),b
  5818  001094                     l4094:
  5819                           
  5820                           ; BSR set to: 1
  5821  001094  BF35               	btfsc	(password_change@i_1111+1)& (0+255),7,b
  5822  001096  D006               	goto	l266
  5823  001098  5135               	movf	(password_change@i_1111+1)& (0+255),w,b
  5824  00109A  E114               	bnz	l4106
  5825  00109C  0E04               	movlw	4
  5826  00109E  5D34               	subwf	password_change@i_1111& (0+255),w,b
  5827  0010A0  B0D8               	btfsc	status,0,c
  5828  0010A2  D010               	goto	u5340
  5829  0010A4                     l266:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;Lab7.c: 596: {
  5833                           ;Lab7.c: 597: write_eeprom(pass_loc,saved_pass[i]);
  5834                           
  5835                           ; BSR set to: 1
  5836  0010A4  0E48               	movlw	low _saved_pass
  5837  0010A6  2534               	addwf	password_change@i_1111& (0+255),w,b
  5838  0010A8  6ED9               	movwf	fsr2l,c
  5839  0010AA  0E01               	movlw	high _saved_pass
  5840  0010AC  2135               	addwfc	(password_change@i_1111+1)& (0+255),w,b
  5841  0010AE  6EDA               	movwf	fsr2h,c
  5842  0010B0  50DF               	movf	indf2,w,c
  5843  0010B2  6F00               	movwf	write_eeprom@data& (0+255),b
  5844  0010B4  515A               	movf	_pass_loc& (0+255),w,b
  5845  0010B6  ECE4  F017         	call	_write_eeprom
  5846                           
  5847                           ;Lab7.c: 598: pass_loc += 1;
  5848  0010BA  0101               	movlb	1	; () banked
  5849  0010BC  2B5A               	incf	_pass_loc& (0+255),f,b
  5850                           
  5851                           ; BSR set to: 1
  5852  0010BE  4B34               	infsnz	password_change@i_1111& (0+255),f,b
  5853  0010C0  2B35               	incf	(password_change@i_1111+1)& (0+255),f,b
  5854  0010C2  D7E8               	goto	l4094
  5855  0010C4                     u5340:
  5856  0010C4                     l4106:
  5857                           
  5858                           ; BSR set to: 1
  5859                           ;Lab7.c: 599: }
  5860                           ;Lab7.c: 600: printf("\n\r\n\rPassword Changed\n\r\n\r");
  5861  0010C4  0E6E               	movlw	low STR_45
  5862  0010C6  6F16               	movwf	printf@f& (0+255),b
  5863  0010C8  0E7E               	movlw	high STR_45
  5864  0010CA  6F17               	movwf	(printf@f+1)& (0+255),b
  5865  0010CC  EC00  F00C         	call	_printf	;wreg free
  5866                           
  5867                           ;Lab7.c: 601: break;
  5868  0010D0  0012               	return	
  5869  0010D2                     l249:
  5870                           
  5871                           ;Lab7.c: 603: else
  5872                           ;Lab7.c: 604: {
  5873                           ;Lab7.c: 605: printf("\n\rPassword Invalid. Going back to Password Menu....\n\r");
  5874  0010D2  0E01               	movlw	low STR_46
  5875  0010D4  0101               	movlb	1	; () banked
  5876  0010D6  6F16               	movwf	printf@f& (0+255),b
  5877  0010D8  0E7C               	movlw	high STR_46
  5878  0010DA  6F17               	movwf	(printf@f+1)& (0+255),b
  5879  0010DC  EC00  F00C         	call	_printf	;wreg free
  5880                           
  5881                           ;Lab7.c: 606: _delay((unsigned long)((1000)*(20000000/4000.0)));
  5882  0010E0  0E1A               	movlw	26
  5883  0010E2  0101               	movlb	1	; () banked
  5884  0010E4  6F2D               	movwf	(??_password_change+1)& (0+255),b
  5885  0010E6  0E5E               	movlw	94
  5886  0010E8  6F2C               	movwf	??_password_change& (0+255),b
  5887  0010EA  0E6E               	movlw	110
  5888  0010EC                     u8407:
  5889  0010EC  2EE8               	decfsz	wreg,f,c
  5890  0010EE  D7FE               	bra	u8407
  5891  0010F0  2F2C               	decfsz	??_password_change& (0+255),f,b
  5892  0010F2  D7FC               	bra	u8407
  5893  0010F4  2F2D               	decfsz	(??_password_change+1)& (0+255),f,b
  5894  0010F6  D7FA               	bra	u8407
  5895  0010F8  F000               	nop	
  5896                           
  5897                           ;Lab7.c: 607: Clear();
  5898  0010FA  EC18  F018         	call	_Clear	;wreg free
  5899                           
  5900                           ;Lab7.c: 608: break;
  5901  0010FE  0012               	return	
  5902  001100                     __end_of_password_change:
  5903                           	opt stack 0
  5904                           tblptru	equ	0xFF8
  5905                           tblptrh	equ	0xFF7
  5906                           tblptrl	equ	0xFF6
  5907                           tablat	equ	0xFF5
  5908                           prodh	equ	0xFF4
  5909                           prodl	equ	0xFF3
  5910                           intcon	equ	0xFF2
  5911                           intcon2	equ	0xFF1
  5912                           intcon3	equ	0xFF0
  5913                           postinc0	equ	0xFEE
  5914                           wreg	equ	0xFE8
  5915                           indf2	equ	0xFDF
  5916                           postinc2	equ	0xFDE
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921 ;; *************** function _password *****************
  5922 ;; Defined at:
  5923 ;;		line 612 in file "Lab7.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  i               2   48[BANK1 ] int 
  5928 ;;  i               2   46[BANK1 ] int 
  5929 ;;  i               2   50[BANK1 ] int 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5939 ;;      Params:         0       0       0       0       0       0       0
  5940 ;;      Locals:         0       0       6       0       0       0       0
  5941 ;;      Temps:          0       0       2       0       0       0       0
  5942 ;;      Totals:         0       0       8       0       0       0       0
  5943 ;;Total ram usage:        8 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:   10
  5946 ;; This function calls:
  5947 ;;		_Read_b_eep
  5948 ;;		_keypad
  5949 ;;		_printf
  5950 ;; This function is called by:
  5951 ;;		_main
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text4
  5956  002376                     __ptext4:
  5957                           	opt stack 0
  5958  002376                     _password:
  5959                           	opt stack 20
  5960                           
  5961                           ;Lab7.c: 615: {
  5962                           ;Lab7.c: 616: _delay((unsigned long)((250)*(20000000/4000.0)));
  5963                           
  5964                           ;incstack = 0
  5965                           ;Lab7.c: 614: while(1)
  5966  002376  0E07               	movlw	7
  5967  002378  0101               	movlb	1	; () banked
  5968  00237A  6F2D               	movwf	(??_password+1)& (0+255),b
  5969  00237C  0E58               	movlw	88
  5970  00237E  6F2C               	movwf	??_password& (0+255),b
  5971  002380  0E59               	movlw	89
  5972  002382                     u8417:
  5973  002382  2EE8               	decfsz	wreg,f,c
  5974  002384  D7FE               	bra	u8417
  5975  002386  2F2C               	decfsz	??_password& (0+255),f,b
  5976  002388  D7FC               	bra	u8417
  5977  00238A  2F2D               	decfsz	(??_password+1)& (0+255),f,b
  5978  00238C  D7FA               	bra	u8417
  5979  00238E  D000               	nop2	
  5980                           
  5981                           ;Lab7.c: 617: printf("PASSWORD:\t");
  5982  002390  0ED3               	movlw	low (STR_21+4)
  5983  002392  0101               	movlb	1	; () banked
  5984  002394  6F16               	movwf	printf@f& (0+255),b
  5985  002396  0E7F               	movlw	high (STR_21+4)
  5986  002398  6F17               	movwf	(printf@f+1)& (0+255),b
  5987  00239A  EC00  F00C         	call	_printf	;wreg free
  5988                           
  5989                           ;Lab7.c: 618: if(PORTBbits.RB4 == 1)
  5990  00239E  A881               	btfss	3969,4,c	;volatile
  5991  0023A0  D031               	goto	l274
  5992                           
  5993                           ;Lab7.c: 619: {
  5994                           ;Lab7.c: 620: for(int i = 0;i < 4;i++){
  5995  0023A2  0E00               	movlw	0
  5996  0023A4  0101               	movlb	1	; () banked
  5997  0023A6  6F2F               	movwf	(password@i+1)& (0+255),b
  5998  0023A8  0E00               	movlw	0
  5999  0023AA  6F2E               	movwf	password@i& (0+255),b
  6000  0023AC                     l4732:
  6001                           
  6002                           ; BSR set to: 1
  6003  0023AC  BF2F               	btfsc	(password@i+1)& (0+255),7,b
  6004  0023AE  D006               	goto	l275
  6005  0023B0  512F               	movf	(password@i+1)& (0+255),w,b
  6006  0023B2  E151               	bnz	l4764
  6007  0023B4  0E04               	movlw	4
  6008  0023B6  5D2E               	subwf	password@i& (0+255),w,b
  6009  0023B8  B0D8               	btfsc	status,0,c
  6010  0023BA  D04D               	goto	u7100
  6011  0023BC                     l275:
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;Lab7.c: 621: pass[i] = keypad();
  6015                           
  6016                           ; BSR set to: 1
  6017  0023BC  0E4C               	movlw	low _pass
  6018  0023BE  252E               	addwf	password@i& (0+255),w,b
  6019  0023C0  6ED9               	movwf	fsr2l,c
  6020  0023C2  0E01               	movlw	high _pass
  6021  0023C4  212F               	addwfc	(password@i+1)& (0+255),w,b
  6022  0023C6  6EDA               	movwf	fsr2h,c
  6023  0023C8  ECB8  F00D         	call	_keypad	;wreg free
  6024  0023CC  0101               	movlb	1	; () banked
  6025  0023CE  5100               	movf	?_keypad& (0+255),w,b
  6026  0023D0  6EDF               	movwf	indf2,c
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;Lab7.c: 622: printf("*");
  6030  0023D2  0EFD               	movlw	low STR_22
  6031  0023D4  6F16               	movwf	printf@f& (0+255),b
  6032  0023D6  0E7F               	movlw	high STR_22
  6033  0023D8  6F17               	movwf	(printf@f+1)& (0+255),b
  6034  0023DA  EC00  F00C         	call	_printf	;wreg free
  6035                           
  6036                           ;Lab7.c: 623: PORTBbits.RB4 = 0;
  6037  0023DE  9881               	bcf	3969,4,c	;volatile
  6038                           
  6039                           ;Lab7.c: 624: _delay((unsigned long)((500)*(20000000/4000.0)));
  6040  0023E0  0E0D               	movlw	13
  6041  0023E2  0101               	movlb	1	; () banked
  6042  0023E4  6F2D               	movwf	(??_password+1)& (0+255),b
  6043  0023E6  0EAF               	movlw	175
  6044  0023E8  6F2C               	movwf	??_password& (0+255),b
  6045  0023EA  0EB6               	movlw	182
  6046  0023EC                     u8427:
  6047  0023EC  2EE8               	decfsz	wreg,f,c
  6048  0023EE  D7FE               	bra	u8427
  6049  0023F0  2F2C               	decfsz	??_password& (0+255),f,b
  6050  0023F2  D7FC               	bra	u8427
  6051  0023F4  2F2D               	decfsz	(??_password+1)& (0+255),f,b
  6052  0023F6  D7FA               	bra	u8427
  6053  0023F8  F000               	nop	
  6054                           
  6055                           ;Lab7.c: 625: PORTBbits.RB4 = 1;
  6056  0023FA  8881               	bsf	3969,4,c	;volatile
  6057  0023FC  0101               	movlb	1	; () banked
  6058  0023FE  4B2E               	infsnz	password@i& (0+255),f,b
  6059  002400  2B2F               	incf	(password@i+1)& (0+255),f,b
  6060  002402  D7D4               	goto	l4732
  6061  002404                     l274:
  6062                           
  6063                           ;Lab7.c: 628: else
  6064                           ;Lab7.c: 629: {
  6065                           ;Lab7.c: 630: for(int i = 0;i < 4;i++){
  6066                           
  6067                           ; BSR set to: 1
  6068  002404  0E00               	movlw	0
  6069  002406  0101               	movlb	1	; () banked
  6070  002408  6F31               	movwf	(password@i_1118+1)& (0+255),b
  6071  00240A  0E00               	movlw	0
  6072  00240C  6F30               	movwf	password@i_1118& (0+255),b
  6073                           
  6074                           ; BSR set to: 1
  6075  00240E  BF31               	btfsc	(password@i_1118+1)& (0+255),7,b
  6076  002410  D006               	goto	l278
  6077  002412  5131               	movf	(password@i_1118+1)& (0+255),w,b
  6078  002414  E120               	bnz	l4764
  6079  002416  0E04               	movlw	4
  6080  002418  5D30               	subwf	password@i_1118& (0+255),w,b
  6081  00241A  B0D8               	btfsc	status,0,c
  6082  00241C  D01C               	goto	u7100
  6083  00241E                     l278:
  6084                           
  6085                           ; BSR set to: 1
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;Lab7.c: 631: while(PIR1bits.RCIF == 0);
  6089  00241E  AA9E               	btfss	3998,5,c	;volatile
  6090  002420  D7FE               	goto	l278
  6091                           
  6092                           ;Lab7.c: 632: pass[i] = RCREG;
  6093  002422  0E4C               	movlw	low _pass
  6094  002424  0101               	movlb	1	; () banked
  6095  002426  2530               	addwf	password@i_1118& (0+255),w,b
  6096  002428  6ED9               	movwf	fsr2l,c
  6097  00242A  0E01               	movlw	high _pass
  6098  00242C  2131               	addwfc	(password@i_1118+1)& (0+255),w,b
  6099  00242E  6EDA               	movwf	fsr2h,c
  6100  002430  CFAE FFDF          	movff	4014,indf2	;volatile
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;Lab7.c: 633: printf("*");
  6104  002434  0EFD               	movlw	low STR_22
  6105  002436  6F16               	movwf	printf@f& (0+255),b
  6106  002438  0E7F               	movlw	high STR_22
  6107  00243A  6F17               	movwf	(printf@f+1)& (0+255),b
  6108  00243C  EC00  F00C         	call	_printf	;wreg free
  6109  002440  0101               	movlb	1	; () banked
  6110  002442  4B30               	infsnz	password@i_1118& (0+255),f,b
  6111  002444  2B31               	incf	(password@i_1118+1)& (0+255),f,b
  6112                           
  6113                           ; BSR set to: 1
  6114  002446  BF31               	btfsc	(password@i_1118+1)& (0+255),7,b
  6115  002448  D7EA               	goto	l278
  6116  00244A  5131               	movf	(password@i_1118+1)& (0+255),w,b
  6117  00244C  E104               	bnz	l4764
  6118  00244E  0E04               	movlw	4
  6119  002450  5D30               	subwf	password@i_1118& (0+255),w,b
  6120  002452  A0D8               	btfss	status,0,c
  6121  002454  D7E4               	goto	l278
  6122  002456                     u7100:
  6123  002456                     l4764:
  6124                           
  6125                           ; BSR set to: 1
  6126                           ;Lab7.c: 634: }
  6127                           ;Lab7.c: 635: }
  6128                           ;Lab7.c: 636: pass_loc = 0x00;
  6129  002456  0E00               	movlw	0
  6130  002458  6F5A               	movwf	_pass_loc& (0+255),b
  6131                           
  6132                           ;Lab7.c: 637: for(int i = 0;i < 4;i++)
  6133  00245A  0E00               	movlw	0
  6134  00245C  6F33               	movwf	(password@i_1120+1)& (0+255),b
  6135  00245E  0E00               	movlw	0
  6136  002460  6F32               	movwf	password@i_1120& (0+255),b
  6137  002462                     l4766:
  6138                           
  6139                           ; BSR set to: 1
  6140  002462  BF33               	btfsc	(password@i_1120+1)& (0+255),7,b
  6141  002464  D006               	goto	l283
  6142  002466  5133               	movf	(password@i_1120+1)& (0+255),w,b
  6143  002468  E122               	bnz	l4786
  6144  00246A  0E04               	movlw	4
  6145  00246C  5D32               	subwf	password@i_1120& (0+255),w,b
  6146  00246E  B0D8               	btfsc	status,0,c
  6147  002470  D01E               	goto	u7130
  6148  002472                     l283:
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;Lab7.c: 638: {
  6152                           ;Lab7.c: 639: pass_check = Read_b_eep(pass_loc);
  6153                           
  6154                           ; BSR set to: 1
  6155  002472  C15A  F100         	movff	_pass_loc,Read_b_eep@badd
  6156  002476  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6157  002478  EC43  F018         	call	_Read_b_eep	;wreg free
  6158  00247C  0101               	movlb	1	; () banked
  6159  00247E  6F5B               	movwf	_pass_check& (0+255),b
  6160                           
  6161                           ; BSR set to: 1
  6162                           ;Lab7.c: 640: pass_loc+=1;
  6163  002480  2B5A               	incf	_pass_loc& (0+255),f,b
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;Lab7.c: 641: if(pass_check != pass[i])
  6167  002482  0E4C               	movlw	low _pass
  6168  002484  2532               	addwf	password@i_1120& (0+255),w,b
  6169  002486  6ED9               	movwf	fsr2l,c
  6170  002488  0E01               	movlw	high _pass
  6171  00248A  2133               	addwfc	(password@i_1120+1)& (0+255),w,b
  6172  00248C  6EDA               	movwf	fsr2h,c
  6173  00248E  515B               	movf	_pass_check& (0+255),w,b
  6174  002490  18DE               	xorwf	postinc2,w,c
  6175  002492  B4D8               	btfsc	status,2,c
  6176  002494  D005               	goto	l285
  6177                           
  6178                           ; BSR set to: 1
  6179                           ;Lab7.c: 642: {
  6180                           ;Lab7.c: 643: check = 1;
  6181  002496  0E00               	movlw	0
  6182  002498  6F59               	movwf	(_check+1)& (0+255),b
  6183  00249A  0E01               	movlw	1
  6184  00249C  6F58               	movwf	_check& (0+255),b
  6185                           
  6186                           ;Lab7.c: 644: break;
  6187  00249E  D007               	goto	u7130
  6188  0024A0                     l285:
  6189                           
  6190                           ; BSR set to: 1
  6191                           ;Lab7.c: 646: else
  6192                           ;Lab7.c: 647: {
  6193                           ;Lab7.c: 648: check = 0;
  6194                           
  6195                           ; BSR set to: 1
  6196  0024A0  0E00               	movlw	0
  6197  0024A2  6F59               	movwf	(_check+1)& (0+255),b
  6198  0024A4  0E00               	movlw	0
  6199  0024A6  6F58               	movwf	_check& (0+255),b
  6200                           
  6201                           ; BSR set to: 1
  6202                           
  6203                           ; BSR set to: 1
  6204  0024A8  4B32               	infsnz	password@i_1120& (0+255),f,b
  6205  0024AA  2B33               	incf	(password@i_1120+1)& (0+255),f,b
  6206  0024AC  D7DA               	goto	l4766
  6207  0024AE                     u7130:
  6208  0024AE                     l4786:
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;Lab7.c: 649: }
  6212                           ;Lab7.c: 651: }
  6213                           ;Lab7.c: 653: if(check == 0)
  6214  0024AE  5158               	movf	_check& (0+255),w,b
  6215  0024B0  1159               	iorwf	(_check+1)& (0+255),w,b
  6216  0024B2  A4D8               	btfss	status,2,c
  6217  0024B4  D007               	goto	l287
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;Lab7.c: 654: {
  6221                           ;Lab7.c: 655: printf("\n\rPASSWORD VALID\n\r\n\r");
  6222  0024B6  0EE9               	movlw	low STR_50
  6223  0024B8  6F16               	movwf	printf@f& (0+255),b
  6224  0024BA  0E7E               	movlw	high STR_50
  6225  0024BC  6F17               	movwf	(printf@f+1)& (0+255),b
  6226  0024BE  EC00  F00C         	call	_printf	;wreg free
  6227                           
  6228                           ;Lab7.c: 656: return;
  6229  0024C2  0012               	return	
  6230  0024C4                     l287:
  6231                           
  6232                           ;Lab7.c: 658: else
  6233                           ;Lab7.c: 659: {
  6234                           ;Lab7.c: 660: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
  6235  0024C4  0E02               	movlw	low STR_51
  6236  0024C6  0101               	movlb	1	; () banked
  6237  0024C8  6F16               	movwf	printf@f& (0+255),b
  6238  0024CA  0E7E               	movlw	high STR_51
  6239  0024CC  6F17               	movwf	(printf@f+1)& (0+255),b
  6240  0024CE  EC00  F00C         	call	_printf	;wreg free
  6241  0024D2  D751               	goto	_password
  6242  0024D4                     __end_of_password:
  6243                           	opt stack 0
  6244                           tblptru	equ	0xFF8
  6245                           tblptrh	equ	0xFF7
  6246                           tblptrl	equ	0xFF6
  6247                           tablat	equ	0xFF5
  6248                           prodh	equ	0xFF4
  6249                           prodl	equ	0xFF3
  6250                           intcon	equ	0xFF2
  6251                           intcon2	equ	0xFF1
  6252                           intcon3	equ	0xFF0
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           indf2	equ	0xFDF
  6256                           postinc2	equ	0xFDE
  6257                           fsr2h	equ	0xFDA
  6258                           fsr2l	equ	0xFD9
  6259                           status	equ	0xFD8
  6260                           
  6261 ;; *************** function _input_options *****************
  6262 ;; Defined at:
  6263 ;;		line 985 in file "Lab7.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  i               2   46[BANK1 ] int 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6277 ;;      Params:         0       0       0       0       0       0       0
  6278 ;;      Locals:         0       0       2       0       0       0       0
  6279 ;;      Temps:          0       0       2       0       0       0       0
  6280 ;;      Totals:         0       0       4       0       0       0       0
  6281 ;;Total ram usage:        4 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:   11
  6284 ;; This function calls:
  6285 ;;		_Clear
  6286 ;;		_Read_b_eep
  6287 ;;		_keypad
  6288 ;;		_printf
  6289 ;;		_write_eeprom
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text5
  6296  001100                     __ptext5:
  6297                           	opt stack 0
  6298  001100                     _input_options:
  6299                           	opt stack 19
  6300                           
  6301                           ;Lab7.c: 987: Clear();
  6302                           
  6303                           ;incstack = 0
  6304  001100  EC18  F018         	call	_Clear	;wreg free
  6305  001104                     
  6306                           ;Lab7.c: 989: {
  6307                           ;Lab7.c: 990: alarm_set = Read_b_eep(alarm_loc);
  6308  001104  C15E  F100         	movff	_alarm_loc,Read_b_eep@badd
  6309  001108  0101               	movlb	1	; () banked
  6310  00110A  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6311  00110C  EC43  F018         	call	_Read_b_eep	;wreg free
  6312  001110  0101               	movlb	1	; () banked
  6313  001112  6F2C               	movwf	??_input_options& (0+255),b
  6314  001114  512C               	movf	??_input_options& (0+255),w,b
  6315  001116  6F54               	movwf	_alarm_set& (0+255),b
  6316  001118  6B55               	clrf	(_alarm_set+1)& (0+255),b
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;Lab7.c: 991: temp_set = Read_b_eep(temp_loc);
  6320  00111A  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  6321  00111E  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6322  001120  EC43  F018         	call	_Read_b_eep	;wreg free
  6323  001124  0101               	movlb	1	; () banked
  6324  001126  6F2C               	movwf	??_input_options& (0+255),b
  6325  001128  512C               	movf	??_input_options& (0+255),w,b
  6326  00112A  6E4A               	movwf	_temp_set,c
  6327  00112C  6A4B               	clrf	_temp_set+1,c
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;Lab7.c: 992: keypad_active = Read_b_eep(keypad_active_loc);
  6331  00112E  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  6332  001132  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6333  001134  EC43  F018         	call	_Read_b_eep	;wreg free
  6334  001138  0101               	movlb	1	; () banked
  6335  00113A  6F2C               	movwf	??_input_options& (0+255),b
  6336  00113C  512C               	movf	??_input_options& (0+255),w,b
  6337  00113E  6F50               	movwf	_keypad_active& (0+255),b
  6338  001140  6B51               	clrf	(_keypad_active+1)& (0+255),b
  6339                           
  6340                           ; BSR set to: 1
  6341                           ;Lab7.c: 993: threshold_loc = 0x30;
  6342  001142  0E30               	movlw	48
  6343  001144  0100               	movlb	0	; () banked
  6344  001146  6FE4               	movwf	_threshold_loc& (0+255),b
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;Lab7.c: 994: for(int i = 0; i < 2;i++)
  6348  001148  0E00               	movlw	0
  6349  00114A  0101               	movlb	1	; () banked
  6350  00114C  6F2F               	movwf	(input_options@i+1)& (0+255),b
  6351  00114E  0E00               	movlw	0
  6352  001150  6F2E               	movwf	input_options@i& (0+255),b
  6353  001152                     l5180:
  6354                           
  6355                           ; BSR set to: 1
  6356  001152  BF2F               	btfsc	(input_options@i+1)& (0+255),7,b
  6357  001154  D006               	goto	l392
  6358  001156  512F               	movf	(input_options@i+1)& (0+255),w,b
  6359  001158  E116               	bnz	l5192
  6360  00115A  0E02               	movlw	2
  6361  00115C  5D2E               	subwf	input_options@i& (0+255),w,b
  6362  00115E  B0D8               	btfsc	status,0,c
  6363  001160  D012               	goto	u7530
  6364  001162                     l392:
  6365                           
  6366                           ; BSR set to: 1
  6367                           ;Lab7.c: 995: {
  6368                           ;Lab7.c: 996: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  6369                           
  6370                           ; BSR set to: 1
  6371  001162  0EE0               	movlw	low _temp_threshold_read
  6372  001164  252E               	addwf	input_options@i& (0+255),w,b
  6373  001166  6ED9               	movwf	fsr2l,c
  6374  001168  0E00               	movlw	high _temp_threshold_read
  6375  00116A  212F               	addwfc	(input_options@i+1)& (0+255),w,b
  6376  00116C  6EDA               	movwf	fsr2h,c
  6377  00116E  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  6378  001172  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6379  001174  EC43  F018         	call	_Read_b_eep	;wreg free
  6380  001178  6EDF               	movwf	indf2,c
  6381                           
  6382                           ;Lab7.c: 997: threshold_loc += 1;
  6383  00117A  0100               	movlb	0	; () banked
  6384  00117C  2BE4               	incf	_threshold_loc& (0+255),f,b
  6385                           
  6386                           ; BSR set to: 0
  6387  00117E  0101               	movlb	1	; () banked
  6388  001180  4B2E               	infsnz	input_options@i& (0+255),f,b
  6389  001182  2B2F               	incf	(input_options@i+1)& (0+255),f,b
  6390  001184  D7E6               	goto	l5180
  6391  001186                     u7530:
  6392  001186                     l5192:
  6393                           
  6394                           ; BSR set to: 1
  6395                           ;Lab7.c: 998: }
  6396                           ;Lab7.c: 999: Clear();
  6397  001186  EC18  F018         	call	_Clear	;wreg free
  6398                           
  6399                           ;Lab7.c: 1000: if(alarm_set != 1){
  6400  00118A  0101               	movlb	1	; () banked
  6401  00118C  0554               	decf	_alarm_set& (0+255),w,b
  6402  00118E  1155               	iorwf	(_alarm_set+1)& (0+255),w,b
  6403  001190  B4D8               	btfsc	status,2,c
  6404  001192  D007               	goto	l394
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;Lab7.c: 1001: printf("Alarm is OFF\n\r");
  6408  001194  0E41               	movlw	low (STR_27+5)
  6409  001196  6F16               	movwf	printf@f& (0+255),b
  6410  001198  0E7F               	movlw	high (STR_27+5)
  6411  00119A  6F17               	movwf	(printf@f+1)& (0+255),b
  6412  00119C  EC00  F00C         	call	_printf	;wreg free
  6413                           
  6414                           ;Lab7.c: 1002: }
  6415  0011A0  D007               	goto	l395
  6416  0011A2                     l394:
  6417                           
  6418                           ;Lab7.c: 1003: else
  6419                           ;Lab7.c: 1004: {
  6420                           ;Lab7.c: 1005: printf("Alarm is ON\n\r");
  6421  0011A2  0E68               	movlw	low (STR_28+5)
  6422  0011A4  0101               	movlb	1	; () banked
  6423  0011A6  6F16               	movwf	printf@f& (0+255),b
  6424  0011A8  0E7F               	movlw	high (STR_28+5)
  6425  0011AA  6F17               	movwf	(printf@f+1)& (0+255),b
  6426  0011AC  EC00  F00C         	call	_printf	;wreg free
  6427  0011B0                     l395:
  6428                           
  6429                           ;Lab7.c: 1006: }
  6430                           ;Lab7.c: 1007: if(temp_set != 1){
  6431  0011B0  044A               	decf	_temp_set,w,c
  6432  0011B2  104B               	iorwf	_temp_set+1,w,c
  6433  0011B4  B4D8               	btfsc	status,2,c
  6434  0011B6  D008               	goto	l396
  6435                           
  6436                           ;Lab7.c: 1008: printf("Temp Alarm is OFF\n\r");
  6437  0011B8  0E3C               	movlw	low STR_27
  6438  0011BA  0101               	movlb	1	; () banked
  6439  0011BC  6F16               	movwf	printf@f& (0+255),b
  6440  0011BE  0E7F               	movlw	high STR_27
  6441  0011C0  6F17               	movwf	(printf@f+1)& (0+255),b
  6442  0011C2  EC00  F00C         	call	_printf	;wreg free
  6443                           
  6444                           ;Lab7.c: 1009: }
  6445  0011C6  D007               	goto	l397
  6446  0011C8                     l396:
  6447                           
  6448                           ;Lab7.c: 1010: else
  6449                           ;Lab7.c: 1011: {
  6450                           ;Lab7.c: 1012: printf("Temp Alarm is ON\n\r");
  6451  0011C8  0E63               	movlw	low STR_28
  6452  0011CA  0101               	movlb	1	; () banked
  6453  0011CC  6F16               	movwf	printf@f& (0+255),b
  6454  0011CE  0E7F               	movlw	high STR_28
  6455  0011D0  6F17               	movwf	(printf@f+1)& (0+255),b
  6456  0011D2  EC00  F00C         	call	_printf	;wreg free
  6457  0011D6                     l397:
  6458                           
  6459                           ;Lab7.c: 1013: }
  6460                           ;Lab7.c: 1014: if(keypad_active == 1)
  6461  0011D6  0101               	movlb	1	; () banked
  6462  0011D8  0550               	decf	_keypad_active& (0+255),w,b
  6463  0011DA  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  6464  0011DC  A4D8               	btfss	status,2,c
  6465  0011DE  D007               	goto	l398
  6466                           
  6467                           ; BSR set to: 1
  6468                           ;Lab7.c: 1015: {
  6469                           ;Lab7.c: 1016: printf("INPUT: KEYPAD\n\r");
  6470  0011E0  0EBF               	movlw	low STR_29
  6471  0011E2  6F16               	movwf	printf@f& (0+255),b
  6472  0011E4  0E7F               	movlw	high STR_29
  6473  0011E6  6F17               	movwf	(printf@f+1)& (0+255),b
  6474  0011E8  EC00  F00C         	call	_printf	;wreg free
  6475                           
  6476                           ;Lab7.c: 1017: }
  6477  0011EC  D014               	goto	l401
  6478  0011EE                     l398:
  6479                           
  6480                           ;Lab7.c: 1018: else if(keypad_active == 2)
  6481  0011EE  0E02               	movlw	2
  6482  0011F0  0101               	movlb	1	; () banked
  6483  0011F2  1950               	xorwf	_keypad_active& (0+255),w,b
  6484  0011F4  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  6485  0011F6  A4D8               	btfss	status,2,c
  6486  0011F8  D007               	goto	l400
  6487                           
  6488                           ; BSR set to: 1
  6489                           ;Lab7.c: 1019: {
  6490                           ;Lab7.c: 1020: printf("INPUT: KEYPAD and KEYBOARD\n\r");
  6491  0011FA  0EC9               	movlw	low STR_30
  6492  0011FC  6F16               	movwf	printf@f& (0+255),b
  6493  0011FE  0E7D               	movlw	high STR_30
  6494  001200  6F17               	movwf	(printf@f+1)& (0+255),b
  6495  001202  EC00  F00C         	call	_printf	;wreg free
  6496                           
  6497                           ;Lab7.c: 1021: }
  6498  001206  D007               	goto	l401
  6499  001208                     l400:
  6500                           
  6501                           ;Lab7.c: 1022: else
  6502                           ;Lab7.c: 1023: {
  6503                           ;Lab7.c: 1024: printf("INPUT: KEYBOARD\n\r");
  6504  001208  0E9B               	movlw	low STR_31
  6505  00120A  0101               	movlb	1	; () banked
  6506  00120C  6F16               	movwf	printf@f& (0+255),b
  6507  00120E  0E7F               	movlw	high STR_31
  6508  001210  6F17               	movwf	(printf@f+1)& (0+255),b
  6509  001212  EC00  F00C         	call	_printf	;wreg free
  6510  001216                     l401:
  6511                           
  6512                           ;Lab7.c: 1025: }
  6513                           ;Lab7.c: 1026: printf("Temperature Threshold: %d%d\n\r"
  6514                           ;Lab7.c: 1027: "Current Temp [F]: %ld"
  6515                           ;Lab7.c: 1028: "\n\r\n\r"
  6516                           ;Lab7.c: 1029: "INPUT OPTIONS:\n\r"
  6517                           ;Lab7.c: 1030: "1) Use Keypad\n\r"
  6518                           ;Lab7.c: 1031: "2) Use Keyboard\n\r"
  6519                           ;Lab7.c: 1032: "3) Use BOTH\n\r"
  6520                           ;Lab7.c: 1033: "4) Return to Menu\n\r",temp_threshold_read[0], temp_threshold_read[1],vo
      +                          ltage);
  6521  001216  0E59               	movlw	low STR_100
  6522  001218  0101               	movlb	1	; () banked
  6523  00121A  6F16               	movwf	printf@f& (0+255),b
  6524  00121C  0E7A               	movlw	high STR_100
  6525  00121E  6F17               	movwf	(printf@f+1)& (0+255),b
  6526  001220  C0E0  F118         	movff	_temp_threshold_read,?_printf+2
  6527  001224  6B19               	clrf	(?_printf+3)& (0+255),b
  6528  001226  C0E1  F11A         	movff	_temp_threshold_read+1,?_printf+4
  6529  00122A  6B1B               	clrf	(?_printf+5)& (0+255),b
  6530  00122C  C044  F11C         	movff	_voltage,?_printf+6
  6531  001230  C045  F11D         	movff	_voltage+1,?_printf+7
  6532  001234  C046  F11E         	movff	_voltage+2,?_printf+8
  6533  001238  C047  F11F         	movff	_voltage+3,?_printf+9
  6534  00123C  EC00  F00C         	call	_printf	;wreg free
  6535                           
  6536                           ;Lab7.c: 1035: if(PORTBbits.RB4 == 1){
  6537  001240  A881               	btfss	3969,4,c	;volatile
  6538  001242  D016               	goto	l402
  6539                           
  6540                           ;Lab7.c: 1036: choice = keypad();
  6541  001244  ECB8  F00D         	call	_keypad	;wreg free
  6542  001248  C100  F0E2         	movff	?_keypad,_choice
  6543  00124C  C101  F0E3         	movff	?_keypad+1,_choice+1
  6544                           
  6545                           ;Lab7.c: 1037: PORTBbits.RB4 = 0;
  6546  001250  9881               	bcf	3969,4,c	;volatile
  6547                           
  6548                           ;Lab7.c: 1038: _delay((unsigned long)((250)*(20000000/4000.0)));
  6549  001252  0E07               	movlw	7
  6550  001254  0101               	movlb	1	; () banked
  6551  001256  6F2D               	movwf	(??_input_options+1)& (0+255),b
  6552  001258  0E58               	movlw	88
  6553  00125A  6F2C               	movwf	??_input_options& (0+255),b
  6554  00125C  0E59               	movlw	89
  6555  00125E                     u8437:
  6556  00125E  2EE8               	decfsz	wreg,f,c
  6557  001260  D7FE               	bra	u8437
  6558  001262  2F2C               	decfsz	??_input_options& (0+255),f,b
  6559  001264  D7FC               	bra	u8437
  6560  001266  2F2D               	decfsz	(??_input_options+1)& (0+255),f,b
  6561  001268  D7FA               	bra	u8437
  6562  00126A  D000               	nop2	
  6563                           
  6564                           ;Lab7.c: 1039: PORTBbits.RB4 = 1;
  6565  00126C  8881               	bsf	3969,4,c	;volatile
  6566                           
  6567                           ;Lab7.c: 1040: }
  6568  00126E  D006               	goto	l403
  6569  001270                     l402:
  6570                           
  6571                           ;Lab7.c: 1041: else{
  6572                           ;Lab7.c: 1042: while(PIR1bits.RCIF == 0);
  6573  001270  AA9E               	btfss	3998,5,c	;volatile
  6574  001272  D7FE               	goto	l402
  6575                           
  6576                           ;Lab7.c: 1043: choice = RCREG;
  6577  001274  CFAE F0E2          	movff	4014,_choice	;volatile
  6578  001278  0100               	movlb	0	; () banked
  6579  00127A  6BE3               	clrf	(_choice+1)& (0+255),b
  6580  00127C                     l403:
  6581                           
  6582                           ;Lab7.c: 1044: }
  6583                           ;Lab7.c: 1046: if(triggered == 1)
  6584                           
  6585                           ; BSR set to: 0
  6586  00127C  0101               	movlb	1	; () banked
  6587  00127E  0556               	decf	_triggered& (0+255),w,b
  6588  001280  1157               	iorwf	(_triggered+1)& (0+255),w,b
  6589  001282  A4D8               	btfss	status,2,c
  6590  001284  D07D               	goto	l409
  6591                           
  6592                           ; BSR set to: 1
  6593                           ;Lab7.c: 1047: {
  6594                           ;Lab7.c: 1048: printf("\n\rReturning to Menu...\n\r");
  6595  001286  0E87               	movlw	low STR_33
  6596  001288  6F16               	movwf	printf@f& (0+255),b
  6597  00128A  0E7E               	movlw	high STR_33
  6598  00128C  6F17               	movwf	(printf@f+1)& (0+255),b
  6599  00128E  EC00  F00C         	call	_printf	;wreg free
  6600                           
  6601                           ;Lab7.c: 1049: triggered = 0;
  6602  001292  0E00               	movlw	0
  6603  001294  0101               	movlb	1	; () banked
  6604  001296  6F57               	movwf	(_triggered+1)& (0+255),b
  6605  001298  0E00               	movlw	0
  6606  00129A  6F56               	movwf	_triggered& (0+255),b
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;Lab7.c: 1050: Clear();
  6610  00129C  EC18  F018         	call	_Clear	;wreg free
  6611                           
  6612                           ;Lab7.c: 1051: break;
  6613  0012A0  0012               	return	
  6614  0012A2                     
  6615                           ;Lab7.c: 1055: printf("\n\rUsing Keypad as Input\n\r");
  6616  0012A2  0E54               	movlw	low STR_102
  6617  0012A4  0101               	movlb	1	; () banked
  6618  0012A6  6F16               	movwf	printf@f& (0+255),b
  6619  0012A8  0E7E               	movlw	high STR_102
  6620  0012AA  6F17               	movwf	(printf@f+1)& (0+255),b
  6621  0012AC  EC00  F00C         	call	_printf	;wreg free
  6622                           
  6623                           ;Lab7.c: 1056: TRISCbits.RC7 = 0;
  6624  0012B0  9E94               	bcf	3988,7,c	;volatile
  6625                           
  6626                           ;Lab7.c: 1057: PORTBbits.RB4 = 1;
  6627  0012B2  8881               	bsf	3969,4,c	;volatile
  6628                           
  6629                           ;Lab7.c: 1058: write_eeprom(keypad_active_loc,0x01);
  6630  0012B4  0E01               	movlw	1
  6631  0012B6  0101               	movlb	1	; () banked
  6632  0012B8  6F00               	movwf	write_eeprom@data& (0+255),b
  6633  0012BA  515C               	movf	_keypad_active_loc& (0+255),w,b
  6634  0012BC  ECE4  F017         	call	_write_eeprom
  6635                           
  6636                           ;Lab7.c: 1059: _delay((unsigned long)((500)*(20000000/4000.0)));
  6637  0012C0  0E0D               	movlw	13
  6638  0012C2  0101               	movlb	1	; () banked
  6639  0012C4  6F2D               	movwf	(??_input_options+1)& (0+255),b
  6640  0012C6  0EAF               	movlw	175
  6641  0012C8  6F2C               	movwf	??_input_options& (0+255),b
  6642  0012CA  0EB6               	movlw	182
  6643  0012CC                     u8447:
  6644  0012CC  2EE8               	decfsz	wreg,f,c
  6645  0012CE  D7FE               	bra	u8447
  6646  0012D0  2F2C               	decfsz	??_input_options& (0+255),f,b
  6647  0012D2  D7FC               	bra	u8447
  6648  0012D4  2F2D               	decfsz	(??_input_options+1)& (0+255),f,b
  6649  0012D6  D7FA               	bra	u8447
  6650  0012D8  D037               	goto	L4
  6651  0012DA                     
  6652                           ;Lab7.c: 1062: printf("\n\rUsing Keyboard as Input\n\r");
  6653  0012DA  0E1E               	movlw	low STR_103
  6654  0012DC  0101               	movlb	1	; () banked
  6655  0012DE  6F16               	movwf	printf@f& (0+255),b
  6656  0012E0  0E7E               	movlw	high STR_103
  6657  0012E2  6F17               	movwf	(printf@f+1)& (0+255),b
  6658  0012E4  EC00  F00C         	call	_printf	;wreg free
  6659                           
  6660                           ;Lab7.c: 1063: TRISCbits.RC7 = 1;
  6661  0012E8  8E94               	bsf	3988,7,c	;volatile
  6662                           
  6663                           ;Lab7.c: 1064: PORTBbits.RB4 = 0;
  6664  0012EA  9881               	bcf	3969,4,c	;volatile
  6665                           
  6666                           ;Lab7.c: 1065: write_eeprom(keypad_active_loc,0x00);
  6667  0012EC  0E00               	movlw	0
  6668  0012EE  0101               	movlb	1	; () banked
  6669  0012F0  6F00               	movwf	write_eeprom@data& (0+255),b
  6670  0012F2  515C               	movf	_keypad_active_loc& (0+255),w,b
  6671  0012F4  ECE4  F017         	call	_write_eeprom
  6672                           
  6673                           ;Lab7.c: 1066: _delay((unsigned long)((500)*(20000000/4000.0)));
  6674  0012F8  0E0D               	movlw	13
  6675  0012FA  0101               	movlb	1	; () banked
  6676  0012FC  6F2D               	movwf	(??_input_options+1)& (0+255),b
  6677  0012FE  0EAF               	movlw	175
  6678  001300  6F2C               	movwf	??_input_options& (0+255),b
  6679  001302  0EB6               	movlw	182
  6680  001304                     u8457:
  6681  001304  2EE8               	decfsz	wreg,f,c
  6682  001306  D7FE               	bra	u8457
  6683  001308  2F2C               	decfsz	??_input_options& (0+255),f,b
  6684  00130A  D7FC               	bra	u8457
  6685  00130C  2F2D               	decfsz	(??_input_options+1)& (0+255),f,b
  6686  00130E  D7FA               	bra	u8457
  6687  001310  D01B               	goto	L4
  6688  001312                     
  6689                           ;Lab7.c: 1069: printf("\n\rBOTH\n\r");
  6690  001312  0EDE               	movlw	low STR_104
  6691  001314  0101               	movlb	1	; () banked
  6692  001316  6F16               	movwf	printf@f& (0+255),b
  6693  001318  0E7F               	movlw	high STR_104
  6694  00131A  6F17               	movwf	(printf@f+1)& (0+255),b
  6695  00131C  EC00  F00C         	call	_printf	;wreg free
  6696                           
  6697                           ;Lab7.c: 1070: TRISCbits.RC7 = 1;
  6698  001320  8E94               	bsf	3988,7,c	;volatile
  6699                           
  6700                           ;Lab7.c: 1071: PORTBbits.RB4 = 1;
  6701  001322  8881               	bsf	3969,4,c	;volatile
  6702                           
  6703                           ;Lab7.c: 1072: write_eeprom(keypad_active_loc,0x02);
  6704  001324  0E02               	movlw	2
  6705  001326  0101               	movlb	1	; () banked
  6706  001328  6F00               	movwf	write_eeprom@data& (0+255),b
  6707  00132A  515C               	movf	_keypad_active_loc& (0+255),w,b
  6708  00132C  ECE4  F017         	call	_write_eeprom
  6709                           
  6710                           ;Lab7.c: 1073: _delay((unsigned long)((500)*(20000000/4000.0)));
  6711  001330  0E0D               	movlw	13
  6712  001332  0101               	movlb	1	; () banked
  6713  001334  6F2D               	movwf	(??_input_options+1)& (0+255),b
  6714  001336  0EAF               	movlw	175
  6715  001338  6F2C               	movwf	??_input_options& (0+255),b
  6716  00133A  0EB6               	movlw	182
  6717  00133C                     u8467:
  6718  00133C  2EE8               	decfsz	wreg,f,c
  6719  00133E  D7FE               	bra	u8467
  6720  001340  2F2C               	decfsz	??_input_options& (0+255),f,b
  6721  001342  D7FC               	bra	u8467
  6722  001344  2F2D               	decfsz	(??_input_options+1)& (0+255),f,b
  6723  001346  D7FA               	bra	u8467
  6724  001348                     L4:
  6725  001348  F000               	nop	
  6726                           
  6727                           ;Lab7.c: 1074: break;
  6728  00134A  D6DC               	goto	l391
  6729  00134C                     
  6730                           ;Lab7.c: 1076: Clear();
  6731  00134C  EC18  F018         	call	_Clear	;wreg free
  6732                           
  6733                           ;Lab7.c: 1077: return;
  6734  001350  0012               	return	
  6735  001352                     
  6736                           ;Lab7.c: 1079: printf("\nERROR INVALID INPUT\n\r");
  6737  001352  0ED2               	movlw	low STR_34
  6738  001354  0101               	movlb	1	; () banked
  6739  001356  6F16               	movwf	printf@f& (0+255),b
  6740  001358  0E7E               	movlw	high STR_34
  6741  00135A  6F17               	movwf	(printf@f+1)& (0+255),b
  6742  00135C  EC00  F00C         	call	_printf	;wreg free
  6743                           
  6744                           ;Lab7.c: 1080: _delay((unsigned long)((500)*(20000000/4000.0)));
  6745  001360  0E0D               	movlw	13
  6746  001362  0101               	movlb	1	; () banked
  6747  001364  6F2D               	movwf	(??_input_options+1)& (0+255),b
  6748  001366  0EAF               	movlw	175
  6749  001368  6F2C               	movwf	??_input_options& (0+255),b
  6750  00136A  0EB6               	movlw	182
  6751  00136C                     u8477:
  6752  00136C  2EE8               	decfsz	wreg,f,c
  6753  00136E  D7FE               	bra	u8477
  6754  001370  2F2C               	decfsz	??_input_options& (0+255),f,b
  6755  001372  D7FC               	bra	u8477
  6756  001374  2F2D               	decfsz	(??_input_options+1)& (0+255),f,b
  6757  001376  D7FA               	bra	u8477
  6758  001378  F000               	nop	
  6759                           
  6760                           ;Lab7.c: 1081: Clear();
  6761  00137A  EC18  F018         	call	_Clear	;wreg free
  6762                           
  6763                           ;Lab7.c: 1083: }
  6764                           
  6765                           ;Lab7.c: 1082: break;
  6766  00137E  D6C2               	goto	l391
  6767  001380                     l409:
  6768  001380  C0E2  F12C         	movff	_choice,??_input_options
  6769  001384  C0E3  F12D         	movff	_choice+1,??_input_options+1
  6770                           
  6771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6772                           ; Switch size 1, requested type "space"
  6773                           ; Number of cases is 1, Range of values is 0 to 0
  6774                           ; switch strategies available:
  6775                           ; Name         Instructions Cycles
  6776                           ; simple_byte            4     3 (average)
  6777                           ;	Chosen strategy is simple_byte
  6778  001388  0101               	movlb	1	; () banked
  6779  00138A  512D               	movf	(??_input_options+1)& (0+255),w,b
  6780  00138C  0A00               	xorlw	0	; case 0
  6781  00138E  A4D8               	btfss	status,2,c
  6782  001390  D7E0               	goto	l416
  6783                           
  6784                           ; BSR set to: 1
  6785                           ; Switch size 1, requested type "space"
  6786                           ; Number of cases is 4, Range of values is 49 to 52
  6787                           ; switch strategies available:
  6788                           ; Name         Instructions Cycles
  6789                           ; simple_byte           13     7 (average)
  6790                           ;	Chosen strategy is simple_byte
  6791  001392  512C               	movf	??_input_options& (0+255),w,b
  6792  001394  0A31               	xorlw	49	; case 49
  6793  001396  B4D8               	btfsc	status,2,c
  6794  001398  D784               	goto	l410
  6795  00139A  0A03               	xorlw	3	; case 50
  6796  00139C  B4D8               	btfsc	status,2,c
  6797  00139E  D79D               	goto	l412
  6798  0013A0  0A01               	xorlw	1	; case 51
  6799  0013A2  B4D8               	btfsc	status,2,c
  6800  0013A4  D7B6               	goto	l413
  6801  0013A6  0A07               	xorlw	7	; case 52
  6802  0013A8  B4D8               	btfsc	status,2,c
  6803  0013AA  D7D0               	goto	l414
  6804  0013AC  D7D2               	goto	l416
  6805  0013AE                     __end_of_input_options:
  6806                           	opt stack 0
  6807                           tblptru	equ	0xFF8
  6808                           tblptrh	equ	0xFF7
  6809                           tblptrl	equ	0xFF6
  6810                           tablat	equ	0xFF5
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           intcon2	equ	0xFF1
  6815                           intcon3	equ	0xFF0
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           fsr2h	equ	0xFDA
  6821                           fsr2l	equ	0xFD9
  6822                           status	equ	0xFD8
  6823                           
  6824 ;; *************** function _alarm_options *****************
  6825 ;; Defined at:
  6826 ;;		line 746 in file "Lab7.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  i               2   46[BANK1 ] int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6840 ;;      Params:         0       0       0       0       0       0       0
  6841 ;;      Locals:         0       0       2       0       0       0       0
  6842 ;;      Temps:          0       0       2       0       0       0       0
  6843 ;;      Totals:         0       0       4       0       0       0       0
  6844 ;;Total ram usage:        4 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:   11
  6847 ;; This function calls:
  6848 ;;		_Clear
  6849 ;;		_Read_b_eep
  6850 ;;		_keypad
  6851 ;;		_printf
  6852 ;;		_write_eeprom
  6853 ;; This function is called by:
  6854 ;;		_main
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text6
  6859  0013AE                     __ptext6:
  6860                           	opt stack 0
  6861  0013AE                     _alarm_options:
  6862                           	opt stack 19
  6863                           
  6864                           ;Lab7.c: 748: Clear();
  6865                           
  6866                           ;incstack = 0
  6867  0013AE  EC18  F018         	call	_Clear	;wreg free
  6868  0013B2                     
  6869                           ;Lab7.c: 750: {
  6870                           ;Lab7.c: 751: alarm_set = Read_b_eep(alarm_loc);
  6871  0013B2  C15E  F100         	movff	_alarm_loc,Read_b_eep@badd
  6872  0013B6  0101               	movlb	1	; () banked
  6873  0013B8  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6874  0013BA  EC43  F018         	call	_Read_b_eep	;wreg free
  6875  0013BE  0101               	movlb	1	; () banked
  6876  0013C0  6F2C               	movwf	??_alarm_options& (0+255),b
  6877  0013C2  512C               	movf	??_alarm_options& (0+255),w,b
  6878  0013C4  6F54               	movwf	_alarm_set& (0+255),b
  6879  0013C6  6B55               	clrf	(_alarm_set+1)& (0+255),b
  6880                           
  6881                           ; BSR set to: 1
  6882                           ;Lab7.c: 752: temp_set = Read_b_eep(temp_loc);
  6883  0013C8  C0E5  F100         	movff	_temp_loc,Read_b_eep@badd
  6884  0013CC  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6885  0013CE  EC43  F018         	call	_Read_b_eep	;wreg free
  6886  0013D2  0101               	movlb	1	; () banked
  6887  0013D4  6F2C               	movwf	??_alarm_options& (0+255),b
  6888  0013D6  512C               	movf	??_alarm_options& (0+255),w,b
  6889  0013D8  6E4A               	movwf	_temp_set,c
  6890  0013DA  6A4B               	clrf	_temp_set+1,c
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;Lab7.c: 753: keypad_active = Read_b_eep(keypad_active_loc);
  6894  0013DC  C15C  F100         	movff	_keypad_active_loc,Read_b_eep@badd
  6895  0013E0  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6896  0013E2  EC43  F018         	call	_Read_b_eep	;wreg free
  6897  0013E6  0101               	movlb	1	; () banked
  6898  0013E8  6F2C               	movwf	??_alarm_options& (0+255),b
  6899  0013EA  512C               	movf	??_alarm_options& (0+255),w,b
  6900  0013EC  6F50               	movwf	_keypad_active& (0+255),b
  6901  0013EE  6B51               	clrf	(_keypad_active+1)& (0+255),b
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;Lab7.c: 754: threshold_loc = 0x30;
  6905  0013F0  0E30               	movlw	48
  6906  0013F2  0100               	movlb	0	; () banked
  6907  0013F4  6FE4               	movwf	_threshold_loc& (0+255),b
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;Lab7.c: 755: for(int i = 0; i < 2;i++)
  6911  0013F6  0E00               	movlw	0
  6912  0013F8  0101               	movlb	1	; () banked
  6913  0013FA  6F2F               	movwf	(alarm_options@i+1)& (0+255),b
  6914  0013FC  0E00               	movlw	0
  6915  0013FE  6F2E               	movwf	alarm_options@i& (0+255),b
  6916  001400                     l4908:
  6917                           
  6918                           ; BSR set to: 1
  6919  001400  BF2F               	btfsc	(alarm_options@i+1)& (0+255),7,b
  6920  001402  D006               	goto	l322
  6921  001404  512F               	movf	(alarm_options@i+1)& (0+255),w,b
  6922  001406  E116               	bnz	l4920
  6923  001408  0E02               	movlw	2
  6924  00140A  5D2E               	subwf	alarm_options@i& (0+255),w,b
  6925  00140C  B0D8               	btfsc	status,0,c
  6926  00140E  D012               	goto	u7250
  6927  001410                     l322:
  6928                           
  6929                           ; BSR set to: 1
  6930                           ;Lab7.c: 756: {
  6931                           ;Lab7.c: 757: temp_threshold_read[i] = Read_b_eep(threshold_loc);
  6932                           
  6933                           ; BSR set to: 1
  6934  001410  0EE0               	movlw	low _temp_threshold_read
  6935  001412  252E               	addwf	alarm_options@i& (0+255),w,b
  6936  001414  6ED9               	movwf	fsr2l,c
  6937  001416  0E00               	movlw	high _temp_threshold_read
  6938  001418  212F               	addwfc	(alarm_options@i+1)& (0+255),w,b
  6939  00141A  6EDA               	movwf	fsr2h,c
  6940  00141C  C0E4  F100         	movff	_threshold_loc,Read_b_eep@badd
  6941  001420  6B01               	clrf	(Read_b_eep@badd+1)& (0+255),b
  6942  001422  EC43  F018         	call	_Read_b_eep	;wreg free
  6943  001426  6EDF               	movwf	indf2,c
  6944                           
  6945                           ;Lab7.c: 758: threshold_loc += 1;
  6946  001428  0100               	movlb	0	; () banked
  6947  00142A  2BE4               	incf	_threshold_loc& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 0
  6950  00142C  0101               	movlb	1	; () banked
  6951  00142E  4B2E               	infsnz	alarm_options@i& (0+255),f,b
  6952  001430  2B2F               	incf	(alarm_options@i+1)& (0+255),f,b
  6953  001432  D7E6               	goto	l4908
  6954  001434                     u7250:
  6955  001434                     l4920:
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;Lab7.c: 759: }
  6959                           ;Lab7.c: 760: if(alarm_set != 1){
  6960  001434  0554               	decf	_alarm_set& (0+255),w,b
  6961  001436  1155               	iorwf	(_alarm_set+1)& (0+255),w,b
  6962  001438  B4D8               	btfsc	status,2,c
  6963  00143A  D007               	goto	l324
  6964                           
  6965                           ; BSR set to: 1
  6966                           ;Lab7.c: 761: printf("Alarm is OFF\n\r");
  6967  00143C  0E41               	movlw	low (STR_27+5)
  6968  00143E  6F16               	movwf	printf@f& (0+255),b
  6969  001440  0E7F               	movlw	high (STR_27+5)
  6970  001442  6F17               	movwf	(printf@f+1)& (0+255),b
  6971  001444  EC00  F00C         	call	_printf	;wreg free
  6972                           
  6973                           ;Lab7.c: 762: }
  6974  001448  D007               	goto	l325
  6975  00144A                     l324:
  6976                           
  6977                           ;Lab7.c: 763: else
  6978                           ;Lab7.c: 764: {
  6979                           ;Lab7.c: 765: printf("Alarm is ON\n\r");
  6980  00144A  0E68               	movlw	low (STR_28+5)
  6981  00144C  0101               	movlb	1	; () banked
  6982  00144E  6F16               	movwf	printf@f& (0+255),b
  6983  001450  0E7F               	movlw	high (STR_28+5)
  6984  001452  6F17               	movwf	(printf@f+1)& (0+255),b
  6985  001454  EC00  F00C         	call	_printf	;wreg free
  6986  001458                     l325:
  6987                           
  6988                           ;Lab7.c: 766: }
  6989                           ;Lab7.c: 767: if(temp_set != 1){
  6990  001458  044A               	decf	_temp_set,w,c
  6991  00145A  104B               	iorwf	_temp_set+1,w,c
  6992  00145C  B4D8               	btfsc	status,2,c
  6993  00145E  D008               	goto	l326
  6994                           
  6995                           ;Lab7.c: 768: printf("Temp Alarm is OFF\n\r");
  6996  001460  0E3C               	movlw	low STR_27
  6997  001462  0101               	movlb	1	; () banked
  6998  001464  6F16               	movwf	printf@f& (0+255),b
  6999  001466  0E7F               	movlw	high STR_27
  7000  001468  6F17               	movwf	(printf@f+1)& (0+255),b
  7001  00146A  EC00  F00C         	call	_printf	;wreg free
  7002                           
  7003                           ;Lab7.c: 769: }
  7004  00146E  D007               	goto	l327
  7005  001470                     l326:
  7006                           
  7007                           ;Lab7.c: 770: else
  7008                           ;Lab7.c: 771: {
  7009                           ;Lab7.c: 772: printf("Temp Alarm is ON\n\r");
  7010  001470  0E63               	movlw	low STR_28
  7011  001472  0101               	movlb	1	; () banked
  7012  001474  6F16               	movwf	printf@f& (0+255),b
  7013  001476  0E7F               	movlw	high STR_28
  7014  001478  6F17               	movwf	(printf@f+1)& (0+255),b
  7015  00147A  EC00  F00C         	call	_printf	;wreg free
  7016  00147E                     l327:
  7017                           
  7018                           ;Lab7.c: 773: }
  7019                           ;Lab7.c: 774: if(keypad_active == 1)
  7020  00147E  0101               	movlb	1	; () banked
  7021  001480  0550               	decf	_keypad_active& (0+255),w,b
  7022  001482  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  7023  001484  A4D8               	btfss	status,2,c
  7024  001486  D007               	goto	l328
  7025                           
  7026                           ; BSR set to: 1
  7027                           ;Lab7.c: 775: {
  7028                           ;Lab7.c: 776: printf("INPUT: KEYPAD\n\r");
  7029  001488  0EBF               	movlw	low STR_29
  7030  00148A  6F16               	movwf	printf@f& (0+255),b
  7031  00148C  0E7F               	movlw	high STR_29
  7032  00148E  6F17               	movwf	(printf@f+1)& (0+255),b
  7033  001490  EC00  F00C         	call	_printf	;wreg free
  7034                           
  7035                           ;Lab7.c: 777: }
  7036  001494  D014               	goto	l331
  7037  001496                     l328:
  7038                           
  7039                           ;Lab7.c: 778: else if(keypad_active == 2)
  7040  001496  0E02               	movlw	2
  7041  001498  0101               	movlb	1	; () banked
  7042  00149A  1950               	xorwf	_keypad_active& (0+255),w,b
  7043  00149C  1151               	iorwf	(_keypad_active+1)& (0+255),w,b
  7044  00149E  A4D8               	btfss	status,2,c
  7045  0014A0  D007               	goto	l330
  7046                           
  7047                           ; BSR set to: 1
  7048                           ;Lab7.c: 779: {
  7049                           ;Lab7.c: 780: printf("INPUT: KEYPAD and KEYBOARD\n\r");
  7050  0014A2  0EC9               	movlw	low STR_30
  7051  0014A4  6F16               	movwf	printf@f& (0+255),b
  7052  0014A6  0E7D               	movlw	high STR_30
  7053  0014A8  6F17               	movwf	(printf@f+1)& (0+255),b
  7054  0014AA  EC00  F00C         	call	_printf	;wreg free
  7055                           
  7056                           ;Lab7.c: 781: }
  7057  0014AE  D007               	goto	l331
  7058  0014B0                     l330:
  7059                           
  7060                           ;Lab7.c: 782: else
  7061                           ;Lab7.c: 783: {
  7062                           ;Lab7.c: 784: printf("INPUT: KEYBOARD\n\r");
  7063  0014B0  0E9B               	movlw	low STR_31
  7064  0014B2  0101               	movlb	1	; () banked
  7065  0014B4  6F16               	movwf	printf@f& (0+255),b
  7066  0014B6  0E7F               	movlw	high STR_31
  7067  0014B8  6F17               	movwf	(printf@f+1)& (0+255),b
  7068  0014BA  EC00  F00C         	call	_printf	;wreg free
  7069  0014BE                     l331:
  7070                           
  7071                           ;Lab7.c: 785: }
  7072                           ;Lab7.c: 786: printf("Temperature Threshold: %d%d\n\r"
  7073                           ;Lab7.c: 787: "Current Temp [F]: %ld"
  7074                           ;Lab7.c: 788: "\n\r\n\r"
  7075                           ;Lab7.c: 789: "PIR Sensor OPTIONS\n\r"
  7076                           ;Lab7.c: 790: "1) Enable/Disable Alarm\n\r"
  7077                           ;Lab7.c: 791: "2) Return to Menu\n\r",temp_threshold_read[0],temp_threshold_read[1],volt
      +                          age);
  7078  0014BE  0EE0               	movlw	low STR_70
  7079  0014C0  0101               	movlb	1	; () banked
  7080  0014C2  6F16               	movwf	printf@f& (0+255),b
  7081  0014C4  0E7A               	movlw	high STR_70
  7082  0014C6  6F17               	movwf	(printf@f+1)& (0+255),b
  7083  0014C8  C0E0  F118         	movff	_temp_threshold_read,?_printf+2
  7084  0014CC  6B19               	clrf	(?_printf+3)& (0+255),b
  7085  0014CE  C0E1  F11A         	movff	_temp_threshold_read+1,?_printf+4
  7086  0014D2  6B1B               	clrf	(?_printf+5)& (0+255),b
  7087  0014D4  C044  F11C         	movff	_voltage,?_printf+6
  7088  0014D8  C045  F11D         	movff	_voltage+1,?_printf+7
  7089  0014DC  C046  F11E         	movff	_voltage+2,?_printf+8
  7090  0014E0  C047  F11F         	movff	_voltage+3,?_printf+9
  7091  0014E4  EC00  F00C         	call	_printf	;wreg free
  7092                           
  7093                           ;Lab7.c: 793: if(PORTBbits.RB4 == 1){
  7094  0014E8  A881               	btfss	3969,4,c	;volatile
  7095  0014EA  D016               	goto	l332
  7096                           
  7097                           ;Lab7.c: 794: choice = keypad();
  7098  0014EC  ECB8  F00D         	call	_keypad	;wreg free
  7099  0014F0  C100  F0E2         	movff	?_keypad,_choice
  7100  0014F4  C101  F0E3         	movff	?_keypad+1,_choice+1
  7101                           
  7102                           ;Lab7.c: 795: PORTBbits.RB4 = 0;
  7103  0014F8  9881               	bcf	3969,4,c	;volatile
  7104                           
  7105                           ;Lab7.c: 796: _delay((unsigned long)((250)*(20000000/4000.0)));
  7106  0014FA  0E07               	movlw	7
  7107  0014FC  0101               	movlb	1	; () banked
  7108  0014FE  6F2D               	movwf	(??_alarm_options+1)& (0+255),b
  7109  001500  0E58               	movlw	88
  7110  001502  6F2C               	movwf	??_alarm_options& (0+255),b
  7111  001504  0E59               	movlw	89
  7112  001506                     u8487:
  7113  001506  2EE8               	decfsz	wreg,f,c
  7114  001508  D7FE               	bra	u8487
  7115  00150A  2F2C               	decfsz	??_alarm_options& (0+255),f,b
  7116  00150C  D7FC               	bra	u8487
  7117  00150E  2F2D               	decfsz	(??_alarm_options+1)& (0+255),f,b
  7118  001510  D7FA               	bra	u8487
  7119  001512  D000               	nop2	
  7120                           
  7121                           ;Lab7.c: 797: PORTBbits.RB4 = 1;
  7122  001514  8881               	bsf	3969,4,c	;volatile
  7123                           
  7124                           ;Lab7.c: 798: }
  7125  001516  D006               	goto	l333
  7126  001518                     l332:
  7127                           
  7128                           ;Lab7.c: 799: else{
  7129                           ;Lab7.c: 800: while(PIR1bits.RCIF == 0);
  7130  001518  AA9E               	btfss	3998,5,c	;volatile
  7131  00151A  D7FE               	goto	l332
  7132                           
  7133                           ;Lab7.c: 801: choice = RCREG;
  7134  00151C  CFAE F0E2          	movff	4014,_choice	;volatile
  7135  001520  0100               	movlb	0	; () banked
  7136  001522  6BE3               	clrf	(_choice+1)& (0+255),b
  7137  001524                     l333:
  7138                           
  7139                           ;Lab7.c: 802: }
  7140                           ;Lab7.c: 804: if(triggered == 1)
  7141                           
  7142                           ; BSR set to: 0
  7143  001524  0101               	movlb	1	; () banked
  7144  001526  0556               	decf	_triggered& (0+255),w,b
  7145  001528  1157               	iorwf	(_triggered+1)& (0+255),w,b
  7146  00152A  A4D8               	btfss	status,2,c
  7147  00152C  D055               	goto	l339
  7148                           
  7149                           ; BSR set to: 1
  7150                           ;Lab7.c: 805: {
  7151                           ;Lab7.c: 806: printf("\n\rReturning to Menu...\n\r");
  7152  00152E  0E87               	movlw	low STR_33
  7153  001530  6F16               	movwf	printf@f& (0+255),b
  7154  001532  0E7E               	movlw	high STR_33
  7155  001534  6F17               	movwf	(printf@f+1)& (0+255),b
  7156  001536  EC00  F00C         	call	_printf	;wreg free
  7157                           
  7158                           ;Lab7.c: 807: triggered = 0;
  7159  00153A  0E00               	movlw	0
  7160  00153C  0101               	movlb	1	; () banked
  7161  00153E  6F57               	movwf	(_triggered+1)& (0+255),b
  7162  001540  0E00               	movlw	0
  7163  001542  6F56               	movwf	_triggered& (0+255),b
  7164                           
  7165                           ; BSR set to: 1
  7166                           ;Lab7.c: 808: Clear();
  7167  001544  EC18  F018         	call	_Clear	;wreg free
  7168                           
  7169                           ;Lab7.c: 809: break;
  7170  001548  0012               	return	
  7171  00154A                     l340:
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;Lab7.c: 813: if(INTCON3bits.INT1IE == 0){
  7175  00154A  B6F0               	btfsc	intcon3,3,c	;volatile
  7176  00154C  D00E               	goto	l341
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;Lab7.c: 814: INTCON3bits.INT1IE = 1;
  7180  00154E  86F0               	bsf	intcon3,3,c	;volatile
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;Lab7.c: 815: printf("Alarm Enabled\n\n\r\r");
  7184  001550  0EAD               	movlw	low STR_72
  7185  001552  6F16               	movwf	printf@f& (0+255),b
  7186  001554  0E7F               	movlw	high STR_72
  7187  001556  6F17               	movwf	(printf@f+1)& (0+255),b
  7188  001558  EC00  F00C         	call	_printf	;wreg free
  7189                           
  7190                           ;Lab7.c: 817: write_eeprom(alarm_loc,0x01);
  7191  00155C  0E01               	movlw	1
  7192  00155E  0101               	movlb	1	; () banked
  7193  001560  6F00               	movwf	write_eeprom@data& (0+255),b
  7194  001562  515E               	movf	_alarm_loc& (0+255),w,b
  7195  001564  ECE4  F017         	call	_write_eeprom
  7196                           
  7197                           ;Lab7.c: 818: }
  7198  001568  D00D               	goto	l342
  7199  00156A                     l341:
  7200                           
  7201                           ; BSR set to: 1
  7202                           ;Lab7.c: 819: else
  7203                           ;Lab7.c: 820: {
  7204                           ;Lab7.c: 821: INTCON3bits.INT1IE = 0;
  7205  00156A  96F0               	bcf	intcon3,3,c	;volatile
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;Lab7.c: 822: printf("Alarm Disabled\n\n\r\r");
  7209  00156C  0E76               	movlw	low STR_73
  7210  00156E  6F16               	movwf	printf@f& (0+255),b
  7211  001570  0E7F               	movlw	high STR_73
  7212  001572  6F17               	movwf	(printf@f+1)& (0+255),b
  7213  001574  EC00  F00C         	call	_printf	;wreg free
  7214                           
  7215                           ;Lab7.c: 824: write_eeprom(alarm_loc,0x00);
  7216  001578  0E00               	movlw	0
  7217  00157A  0101               	movlb	1	; () banked
  7218  00157C  6F00               	movwf	write_eeprom@data& (0+255),b
  7219  00157E  515E               	movf	_alarm_loc& (0+255),w,b
  7220  001580  ECE4  F017         	call	_write_eeprom
  7221  001584                     l342:
  7222                           
  7223                           ;Lab7.c: 825: }
  7224                           ;Lab7.c: 826: _delay((unsigned long)((500)*(20000000/4000.0)));
  7225  001584  0E0D               	movlw	13
  7226  001586  0101               	movlb	1	; () banked
  7227  001588  6F2D               	movwf	(??_alarm_options+1)& (0+255),b
  7228  00158A  0EAF               	movlw	175
  7229  00158C  6F2C               	movwf	??_alarm_options& (0+255),b
  7230  00158E  0EB6               	movlw	182
  7231  001590                     u8497:
  7232  001590  2EE8               	decfsz	wreg,f,c
  7233  001592  D7FE               	bra	u8497
  7234  001594  2F2C               	decfsz	??_alarm_options& (0+255),f,b
  7235  001596  D7FC               	bra	u8497
  7236  001598  2F2D               	decfsz	(??_alarm_options+1)& (0+255),f,b
  7237  00159A  D7FA               	bra	u8497
  7238  00159C  F000               	nop	
  7239                           
  7240                           ;Lab7.c: 827: Clear();
  7241  00159E  EC18  F018         	call	_Clear	;wreg free
  7242                           
  7243                           ;Lab7.c: 828: break;
  7244  0015A2  D707               	goto	l321
  7245  0015A4                     
  7246                           ;Lab7.c: 830: Clear();
  7247  0015A4  EC18  F018         	call	_Clear	;wreg free
  7248                           
  7249                           ;Lab7.c: 831: return;
  7250  0015A8  0012               	return	
  7251  0015AA                     
  7252                           ;Lab7.c: 833: printf("\nERROR INVALID INPUT\n\r");
  7253  0015AA  0ED2               	movlw	low STR_34
  7254  0015AC  0101               	movlb	1	; () banked
  7255  0015AE  6F16               	movwf	printf@f& (0+255),b
  7256  0015B0  0E7E               	movlw	high STR_34
  7257  0015B2  6F17               	movwf	(printf@f+1)& (0+255),b
  7258  0015B4  EC00  F00C         	call	_printf	;wreg free
  7259                           
  7260                           ;Lab7.c: 834: _delay((unsigned long)((500)*(20000000/4000.0)));
  7261  0015B8  0E0D               	movlw	13
  7262  0015BA  0101               	movlb	1	; () banked
  7263  0015BC  6F2D               	movwf	(??_alarm_options+1)& (0+255),b
  7264  0015BE  0EAF               	movlw	175
  7265  0015C0  6F2C               	movwf	??_alarm_options& (0+255),b
  7266  0015C2  0EB6               	movlw	182
  7267  0015C4                     u8507:
  7268  0015C4  2EE8               	decfsz	wreg,f,c
  7269  0015C6  D7FE               	bra	u8507
  7270  0015C8  2F2C               	decfsz	??_alarm_options& (0+255),f,b
  7271  0015CA  D7FC               	bra	u8507
  7272  0015CC  2F2D               	decfsz	(??_alarm_options+1)& (0+255),f,b
  7273  0015CE  D7FA               	bra	u8507
  7274  0015D0  F000               	nop	
  7275                           
  7276                           ;Lab7.c: 835: Clear();
  7277  0015D2  EC18  F018         	call	_Clear	;wreg free
  7278                           
  7279                           ;Lab7.c: 837: }
  7280                           
  7281                           ;Lab7.c: 836: break;
  7282  0015D6  D6ED               	goto	l321
  7283  0015D8                     l339:
  7284  0015D8  C0E2  F12C         	movff	_choice,??_alarm_options
  7285  0015DC  C0E3  F12D         	movff	_choice+1,??_alarm_options+1
  7286                           
  7287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7288                           ; Switch size 1, requested type "space"
  7289                           ; Number of cases is 1, Range of values is 0 to 0
  7290                           ; switch strategies available:
  7291                           ; Name         Instructions Cycles
  7292                           ; simple_byte            4     3 (average)
  7293                           ;	Chosen strategy is simple_byte
  7294  0015E0  0101               	movlb	1	; () banked
  7295  0015E2  512D               	movf	(??_alarm_options+1)& (0+255),w,b
  7296  0015E4  0A00               	xorlw	0	; case 0
  7297  0015E6  A4D8               	btfss	status,2,c
  7298  0015E8  D7E0               	goto	l346
  7299                           
  7300                           ; BSR set to: 1
  7301                           ; Switch size 1, requested type "space"
  7302                           ; Number of cases is 2, Range of values is 49 to 50
  7303                           ; switch strategies available:
  7304                           ; Name         Instructions Cycles
  7305                           ; simple_byte            7     4 (average)
  7306                           ;	Chosen strategy is simple_byte
  7307  0015EA  512C               	movf	??_alarm_options& (0+255),w,b
  7308  0015EC  0A31               	xorlw	49	; case 49
  7309  0015EE  B4D8               	btfsc	status,2,c
  7310  0015F0  D7AC               	goto	l340
  7311  0015F2  0A03               	xorlw	3	; case 50
  7312  0015F4  B4D8               	btfsc	status,2,c
  7313  0015F6  D7D6               	goto	l344
  7314  0015F8  D7D8               	goto	l346
  7315  0015FA                     __end_of_alarm_options:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           intcon2	equ	0xFF1
  7325                           intcon3	equ	0xFF0
  7326                           postinc0	equ	0xFEE
  7327                           wreg	equ	0xFE8
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           fsr2h	equ	0xFDA
  7331                           fsr2l	equ	0xFD9
  7332                           status	equ	0xFD8
  7333                           
  7334 ;; *************** function _write_eeprom *****************
  7335 ;; Defined at:
  7336 ;;		line 117 in file "Lab7.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  address         1    wreg     unsigned char 
  7339 ;;  data            1    0[BANK1 ] unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  address         1    2[BANK1 ] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         0       0       1       0       0       0       0
  7352 ;;      Locals:         0       0       1       0       0       0       0
  7353 ;;      Temps:          0       0       1       0       0       0       0
  7354 ;;      Totals:         0       0       3       0       0       0       0
  7355 ;;Total ram usage:        3 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    8
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;;		_password_change
  7363 ;;		_alarm_options
  7364 ;;		_temp_options
  7365 ;;		_input_options
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text7
  7370  002FC8                     __ptext7:
  7371                           	opt stack 0
  7372  002FC8                     _write_eeprom:
  7373                           	opt stack 22
  7374                           
  7375                           ;incstack = 0
  7376                           ;write_eeprom@address stored from wreg
  7377  002FC8  0101               	movlb	1	; () banked
  7378  002FCA  6F02               	movwf	write_eeprom@address& (0+255),b
  7379                           
  7380                           ;Lab7.c: 119: EEADR = address;
  7381  002FCC  C102  FFA9         	movff	write_eeprom@address,4009	;volatile
  7382                           
  7383                           ;Lab7.c: 120: EEDATA = data;
  7384  002FD0  C100  FFA8         	movff	write_eeprom@data,4008	;volatile
  7385                           
  7386                           ;Lab7.c: 121: EECON1bits.EEPGD = 0;
  7387  002FD4  9EA6               	bcf	4006,7,c	;volsfr
  7388                           
  7389                           ;Lab7.c: 122: EECON1bits.CFGS = 0;
  7390  002FD6  9CA6               	bcf	4006,6,c	;volsfr
  7391                           
  7392                           ;Lab7.c: 123: EECON1bits.WREN = 1;
  7393  002FD8  84A6               	bsf	4006,2,c	;volsfr
  7394                           
  7395                           ;Lab7.c: 124: INTCONbits.GIE = 0;
  7396  002FDA  9EF2               	bcf	intcon,7,c	;volatile
  7397                           
  7398                           ;Lab7.c: 125: EECON2 = 0x55;
  7399  002FDC  0E55               	movlw	85
  7400  002FDE  6EA7               	movwf	4007,c	;volsfr
  7401                           
  7402                           ;Lab7.c: 126: EECON2 = 0x0aa;
  7403  002FE0  0EAA               	movlw	170
  7404  002FE2  6EA7               	movwf	4007,c	;volsfr
  7405                           
  7406                           ;Lab7.c: 127: EECON1bits.WR = 1;
  7407  002FE4  82A6               	bsf	4006,1,c	;volsfr
  7408                           
  7409                           ;Lab7.c: 128: _delay((unsigned long)((30)*(20000000/4000.0)));
  7410  002FE6  0EC3               	movlw	195
  7411  002FE8  0101               	movlb	1	; () banked
  7412  002FEA  6F01               	movwf	??_write_eeprom& (0+255),b
  7413  002FEC  0ECD               	movlw	205
  7414  002FEE                     u8517:
  7415  002FEE  2EE8               	decfsz	wreg,f,c
  7416  002FF0  D7FE               	bra	u8517
  7417  002FF2  2F01               	decfsz	??_write_eeprom& (0+255),f,b
  7418  002FF4  D7FC               	bra	u8517
  7419                           
  7420                           ;Lab7.c: 129: INTCONbits.GIE = 1;
  7421  002FF6  8EF2               	bsf	intcon,7,c	;volatile
  7422                           
  7423                           ;Lab7.c: 130: EECON1bits.WREN = 0;
  7424  002FF8  94A6               	bcf	4006,2,c	;volsfr
  7425  002FFA  0012               	return		;funcret
  7426  002FFC                     __end_of_write_eeprom:
  7427                           	opt stack 0
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           prodh	equ	0xFF4
  7433                           prodl	equ	0xFF3
  7434                           intcon	equ	0xFF2
  7435                           intcon2	equ	0xFF1
  7436                           intcon3	equ	0xFF0
  7437                           postinc0	equ	0xFEE
  7438                           wreg	equ	0xFE8
  7439                           indf2	equ	0xFDF
  7440                           postinc2	equ	0xFDE
  7441                           fsr2h	equ	0xFDA
  7442                           fsr2l	equ	0xFD9
  7443                           status	equ	0xFD8
  7444                           
  7445 ;; *************** function _keypad *****************
  7446 ;; Defined at:
  7447 ;;		line 1086 in file "Lab7.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  2    0[BANK1 ] int 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7461 ;;      Params:         0       0       2       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0
  7464 ;;      Totals:         0       0       2       0       0       0       0
  7465 ;;Total ram usage:        2 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    8
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_main
  7472 ;;		_password_change
  7473 ;;		_password
  7474 ;;		_password_options
  7475 ;;		_alarm_options
  7476 ;;		_temp_options
  7477 ;;		_input_options
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text8
  7482  001B70                     __ptext8:
  7483                           	opt stack 0
  7484  001B70                     _keypad:
  7485                           	opt stack 21
  7486                           
  7487                           ;Lab7.c: 1089: {
  7488                           ;Lab7.c: 1091: TRISDbits.RD0 = 0;
  7489                           
  7490                           ;incstack = 0
  7491                           ;Lab7.c: 1088: while(1)
  7492  001B70  9095               	bcf	3989,0,c	;volatile
  7493                           
  7494                           ;Lab7.c: 1092: TRISDbits.RD1 = 0;
  7495  001B72  9295               	bcf	3989,1,c	;volatile
  7496                           
  7497                           ;Lab7.c: 1093: TRISDbits.RD2 = 0;
  7498  001B74  9495               	bcf	3989,2,c	;volatile
  7499                           
  7500                           ;Lab7.c: 1094: TRISDbits.RD3 = 0;
  7501  001B76  9695               	bcf	3989,3,c	;volatile
  7502                           
  7503                           ;Lab7.c: 1095: TRISDbits.RD4 = 1;
  7504  001B78  8895               	bsf	3989,4,c	;volatile
  7505                           
  7506                           ;Lab7.c: 1096: TRISDbits.RD5 = 1;
  7507  001B7A  8A95               	bsf	3989,5,c	;volatile
  7508                           
  7509                           ;Lab7.c: 1097: TRISDbits.RD6 = 1;
  7510  001B7C  8C95               	bsf	3989,6,c	;volatile
  7511                           
  7512                           ;Lab7.c: 1098: TRISDbits.RD7 = 1;
  7513  001B7E  8E95               	bsf	3989,7,c	;volatile
  7514                           
  7515                           ;Lab7.c: 1101: PORTDbits.RD0 = 1;
  7516  001B80  8083               	bsf	3971,0,c	;volatile
  7517                           
  7518                           ;Lab7.c: 1102: PORTDbits.RD1 = 0;
  7519  001B82  9283               	bcf	3971,1,c	;volatile
  7520                           
  7521                           ;Lab7.c: 1103: PORTDbits.RD2 = 0;
  7522  001B84  9483               	bcf	3971,2,c	;volatile
  7523                           
  7524                           ;Lab7.c: 1104: PORTDbits.RD3 = 0;
  7525  001B86  9683               	bcf	3971,3,c	;volatile
  7526                           
  7527                           ;Lab7.c: 1105: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7528  001B88  B883               	btfsc	3971,4,c	;volatile
  7529  001B8A  BA83               	btfsc	3971,5,c	;volatile
  7530  001B8C  D009               	goto	l421
  7531  001B8E  AC83               	btfss	3971,6,c	;volatile
  7532  001B90  BE83               	btfsc	3971,7,c	;volatile
  7533  001B92  D006               	goto	l421
  7534                           
  7535                           ;Lab7.c: 1106: {
  7536                           ;Lab7.c: 1107: return '1';
  7537  001B94  0E00               	movlw	0
  7538  001B96  0101               	movlb	1	; () banked
  7539  001B98  6F01               	movwf	(?_keypad+1)& (0+255),b
  7540  001B9A  0E31               	movlw	49
  7541  001B9C  6F00               	movwf	?_keypad& (0+255),b
  7542                           
  7543                           ; BSR set to: 1
  7544  001B9E  0012               	return	
  7545  001BA0                     l421:
  7546                           
  7547                           ;Lab7.c: 1108: }
  7548                           ;Lab7.c: 1109: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7549  001BA0  A883               	btfss	3971,4,c	;volatile
  7550  001BA2  AA83               	btfss	3971,5,c	;volatile
  7551  001BA4  D009               	goto	l423
  7552  001BA6  AC83               	btfss	3971,6,c	;volatile
  7553  001BA8  BE83               	btfsc	3971,7,c	;volatile
  7554  001BAA  D006               	goto	l423
  7555                           
  7556                           ;Lab7.c: 1110: {
  7557                           ;Lab7.c: 1111: return '2';
  7558  001BAC  0E00               	movlw	0
  7559  001BAE  0101               	movlb	1	; () banked
  7560  001BB0  6F01               	movwf	(?_keypad+1)& (0+255),b
  7561  001BB2  0E32               	movlw	50
  7562  001BB4  6F00               	movwf	?_keypad& (0+255),b
  7563                           
  7564                           ; BSR set to: 1
  7565  001BB6  0012               	return	
  7566  001BB8                     l423:
  7567                           
  7568                           ;Lab7.c: 1112: }
  7569                           ;Lab7.c: 1113: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
  7570  001BB8  A883               	btfss	3971,4,c	;volatile
  7571  001BBA  BA83               	btfsc	3971,5,c	;volatile
  7572  001BBC  D009               	goto	l424
  7573  001BBE  BC83               	btfsc	3971,6,c	;volatile
  7574  001BC0  BE83               	btfsc	3971,7,c	;volatile
  7575  001BC2  D006               	goto	l424
  7576                           
  7577                           ;Lab7.c: 1114: {
  7578                           ;Lab7.c: 1115: return '3';
  7579  001BC4  0E00               	movlw	0
  7580  001BC6  0101               	movlb	1	; () banked
  7581  001BC8  6F01               	movwf	(?_keypad+1)& (0+255),b
  7582  001BCA  0E33               	movlw	51
  7583  001BCC  6F00               	movwf	?_keypad& (0+255),b
  7584                           
  7585                           ; BSR set to: 1
  7586  001BCE  0012               	return	
  7587  001BD0                     l424:
  7588                           
  7589                           ;Lab7.c: 1116: }
  7590                           ;Lab7.c: 1117: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
  7591  001BD0  A883               	btfss	3971,4,c	;volatile
  7592  001BD2  BA83               	btfsc	3971,5,c	;volatile
  7593  001BD4  D009               	goto	l425
  7594  001BD6  AC83               	btfss	3971,6,c	;volatile
  7595  001BD8  AE83               	btfss	3971,7,c	;volatile
  7596  001BDA  D006               	goto	l425
  7597                           
  7598                           ;Lab7.c: 1118: {
  7599                           ;Lab7.c: 1119: return 'A';
  7600  001BDC  0E00               	movlw	0
  7601  001BDE  0101               	movlb	1	; () banked
  7602  001BE0  6F01               	movwf	(?_keypad+1)& (0+255),b
  7603  001BE2  0E41               	movlw	65
  7604  001BE4  6F00               	movwf	?_keypad& (0+255),b
  7605                           
  7606                           ; BSR set to: 1
  7607  001BE6  0012               	return	
  7608  001BE8                     l425:
  7609                           
  7610                           ;Lab7.c: 1120: }
  7611                           ;Lab7.c: 1122: PORTDbits.RD0 = 0;
  7612  001BE8  9083               	bcf	3971,0,c	;volatile
  7613                           
  7614                           ;Lab7.c: 1123: PORTDbits.RD1 = 1;
  7615  001BEA  8283               	bsf	3971,1,c	;volatile
  7616                           
  7617                           ;Lab7.c: 1124: PORTDbits.RD2 = 0;
  7618  001BEC  9483               	bcf	3971,2,c	;volatile
  7619                           
  7620                           ;Lab7.c: 1125: PORTDbits.RD3 = 0;
  7621  001BEE  9683               	bcf	3971,3,c	;volatile
  7622                           
  7623                           ;Lab7.c: 1126: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7624  001BF0  B883               	btfsc	3971,4,c	;volatile
  7625  001BF2  BA83               	btfsc	3971,5,c	;volatile
  7626  001BF4  D009               	goto	l426
  7627  001BF6  AC83               	btfss	3971,6,c	;volatile
  7628  001BF8  BE83               	btfsc	3971,7,c	;volatile
  7629  001BFA  D006               	goto	l426
  7630                           
  7631                           ;Lab7.c: 1127: {
  7632                           ;Lab7.c: 1128: return '4';
  7633  001BFC  0E00               	movlw	0
  7634  001BFE  0101               	movlb	1	; () banked
  7635  001C00  6F01               	movwf	(?_keypad+1)& (0+255),b
  7636  001C02  0E34               	movlw	52
  7637  001C04  6F00               	movwf	?_keypad& (0+255),b
  7638                           
  7639                           ; BSR set to: 1
  7640  001C06  0012               	return	
  7641  001C08                     l426:
  7642                           
  7643                           ;Lab7.c: 1129: }
  7644                           ;Lab7.c: 1130: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7645  001C08  A883               	btfss	3971,4,c	;volatile
  7646  001C0A  AA83               	btfss	3971,5,c	;volatile
  7647  001C0C  D009               	goto	l427
  7648  001C0E  AC83               	btfss	3971,6,c	;volatile
  7649  001C10  BE83               	btfsc	3971,7,c	;volatile
  7650  001C12  D006               	goto	l427
  7651                           
  7652                           ;Lab7.c: 1131: {
  7653                           ;Lab7.c: 1132: return '5';
  7654  001C14  0E00               	movlw	0
  7655  001C16  0101               	movlb	1	; () banked
  7656  001C18  6F01               	movwf	(?_keypad+1)& (0+255),b
  7657  001C1A  0E35               	movlw	53
  7658  001C1C  6F00               	movwf	?_keypad& (0+255),b
  7659                           
  7660                           ; BSR set to: 1
  7661  001C1E  0012               	return	
  7662  001C20                     l427:
  7663                           
  7664                           ;Lab7.c: 1133: }
  7665                           ;Lab7.c: 1134: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
  7666  001C20  A883               	btfss	3971,4,c	;volatile
  7667  001C22  BA83               	btfsc	3971,5,c	;volatile
  7668  001C24  D009               	goto	l428
  7669  001C26  BC83               	btfsc	3971,6,c	;volatile
  7670  001C28  BE83               	btfsc	3971,7,c	;volatile
  7671  001C2A  D006               	goto	l428
  7672                           
  7673                           ;Lab7.c: 1135: {
  7674                           ;Lab7.c: 1136: return '6';
  7675  001C2C  0E00               	movlw	0
  7676  001C2E  0101               	movlb	1	; () banked
  7677  001C30  6F01               	movwf	(?_keypad+1)& (0+255),b
  7678  001C32  0E36               	movlw	54
  7679  001C34  6F00               	movwf	?_keypad& (0+255),b
  7680                           
  7681                           ; BSR set to: 1
  7682  001C36  0012               	return	
  7683  001C38                     l428:
  7684                           
  7685                           ;Lab7.c: 1137: }
  7686                           ;Lab7.c: 1138: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
  7687  001C38  A883               	btfss	3971,4,c	;volatile
  7688  001C3A  BA83               	btfsc	3971,5,c	;volatile
  7689  001C3C  D009               	goto	l429
  7690  001C3E  AC83               	btfss	3971,6,c	;volatile
  7691  001C40  AE83               	btfss	3971,7,c	;volatile
  7692  001C42  D006               	goto	l429
  7693                           
  7694                           ;Lab7.c: 1139: {
  7695                           ;Lab7.c: 1140: return 'B';
  7696  001C44  0E00               	movlw	0
  7697  001C46  0101               	movlb	1	; () banked
  7698  001C48  6F01               	movwf	(?_keypad+1)& (0+255),b
  7699  001C4A  0E42               	movlw	66
  7700  001C4C  6F00               	movwf	?_keypad& (0+255),b
  7701                           
  7702                           ; BSR set to: 1
  7703  001C4E  0012               	return	
  7704  001C50                     l429:
  7705                           
  7706                           ;Lab7.c: 1141: }
  7707                           ;Lab7.c: 1143: PORTDbits.RD0 = 0;
  7708  001C50  9083               	bcf	3971,0,c	;volatile
  7709                           
  7710                           ;Lab7.c: 1144: PORTDbits.RD1 = 0;
  7711  001C52  9283               	bcf	3971,1,c	;volatile
  7712                           
  7713                           ;Lab7.c: 1145: PORTDbits.RD2 = 1;
  7714  001C54  8483               	bsf	3971,2,c	;volatile
  7715                           
  7716                           ;Lab7.c: 1146: PORTDbits.RD3 = 0;
  7717  001C56  9683               	bcf	3971,3,c	;volatile
  7718                           
  7719                           ;Lab7.c: 1147: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7720  001C58  B883               	btfsc	3971,4,c	;volatile
  7721  001C5A  BA83               	btfsc	3971,5,c	;volatile
  7722  001C5C  D009               	goto	l430
  7723  001C5E  AC83               	btfss	3971,6,c	;volatile
  7724  001C60  BE83               	btfsc	3971,7,c	;volatile
  7725  001C62  D006               	goto	l430
  7726                           
  7727                           ;Lab7.c: 1148: {
  7728                           ;Lab7.c: 1149: return '7';
  7729  001C64  0E00               	movlw	0
  7730  001C66  0101               	movlb	1	; () banked
  7731  001C68  6F01               	movwf	(?_keypad+1)& (0+255),b
  7732  001C6A  0E37               	movlw	55
  7733  001C6C  6F00               	movwf	?_keypad& (0+255),b
  7734                           
  7735                           ; BSR set to: 1
  7736  001C6E  0012               	return	
  7737  001C70                     l430:
  7738                           
  7739                           ;Lab7.c: 1150: }
  7740                           ;Lab7.c: 1151: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7741  001C70  A883               	btfss	3971,4,c	;volatile
  7742  001C72  AA83               	btfss	3971,5,c	;volatile
  7743  001C74  D009               	goto	l431
  7744  001C76  AC83               	btfss	3971,6,c	;volatile
  7745  001C78  BE83               	btfsc	3971,7,c	;volatile
  7746  001C7A  D006               	goto	l431
  7747                           
  7748                           ;Lab7.c: 1152: {
  7749                           ;Lab7.c: 1153: return '8';
  7750  001C7C  0E00               	movlw	0
  7751  001C7E  0101               	movlb	1	; () banked
  7752  001C80  6F01               	movwf	(?_keypad+1)& (0+255),b
  7753  001C82  0E38               	movlw	56
  7754  001C84  6F00               	movwf	?_keypad& (0+255),b
  7755                           
  7756                           ; BSR set to: 1
  7757  001C86  0012               	return	
  7758  001C88                     l431:
  7759                           
  7760                           ;Lab7.c: 1154: }
  7761                           ;Lab7.c: 1155: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
  7762  001C88  A883               	btfss	3971,4,c	;volatile
  7763  001C8A  BA83               	btfsc	3971,5,c	;volatile
  7764  001C8C  D009               	goto	l432
  7765  001C8E  BC83               	btfsc	3971,6,c	;volatile
  7766  001C90  BE83               	btfsc	3971,7,c	;volatile
  7767  001C92  D006               	goto	l432
  7768                           
  7769                           ;Lab7.c: 1156: {
  7770                           ;Lab7.c: 1157: return '9';
  7771  001C94  0E00               	movlw	0
  7772  001C96  0101               	movlb	1	; () banked
  7773  001C98  6F01               	movwf	(?_keypad+1)& (0+255),b
  7774  001C9A  0E39               	movlw	57
  7775  001C9C  6F00               	movwf	?_keypad& (0+255),b
  7776                           
  7777                           ; BSR set to: 1
  7778  001C9E  0012               	return	
  7779  001CA0                     l432:
  7780                           
  7781                           ;Lab7.c: 1158: }
  7782                           ;Lab7.c: 1159: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
  7783  001CA0  A883               	btfss	3971,4,c	;volatile
  7784  001CA2  BA83               	btfsc	3971,5,c	;volatile
  7785  001CA4  D009               	goto	l433
  7786  001CA6  AC83               	btfss	3971,6,c	;volatile
  7787  001CA8  AE83               	btfss	3971,7,c	;volatile
  7788  001CAA  D006               	goto	l433
  7789                           
  7790                           ;Lab7.c: 1160: {
  7791                           ;Lab7.c: 1161: return 'C';
  7792  001CAC  0E00               	movlw	0
  7793  001CAE  0101               	movlb	1	; () banked
  7794  001CB0  6F01               	movwf	(?_keypad+1)& (0+255),b
  7795  001CB2  0E43               	movlw	67
  7796  001CB4  6F00               	movwf	?_keypad& (0+255),b
  7797                           
  7798                           ; BSR set to: 1
  7799  001CB6  0012               	return	
  7800  001CB8                     l433:
  7801                           
  7802                           ;Lab7.c: 1162: }
  7803                           ;Lab7.c: 1164: PORTDbits.RD0 = 0;
  7804  001CB8  9083               	bcf	3971,0,c	;volatile
  7805                           
  7806                           ;Lab7.c: 1165: PORTDbits.RD1 = 0;
  7807  001CBA  9283               	bcf	3971,1,c	;volatile
  7808                           
  7809                           ;Lab7.c: 1166: PORTDbits.RD2 = 0;
  7810  001CBC  9483               	bcf	3971,2,c	;volatile
  7811                           
  7812                           ;Lab7.c: 1167: PORTDbits.RD3 = 1;
  7813  001CBE  8683               	bsf	3971,3,c	;volatile
  7814                           
  7815                           ;Lab7.c: 1168: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7816  001CC0  B883               	btfsc	3971,4,c	;volatile
  7817  001CC2  BA83               	btfsc	3971,5,c	;volatile
  7818  001CC4  D009               	goto	l434
  7819  001CC6  AC83               	btfss	3971,6,c	;volatile
  7820  001CC8  BE83               	btfsc	3971,7,c	;volatile
  7821  001CCA  D006               	goto	l434
  7822                           
  7823                           ;Lab7.c: 1169: {
  7824                           ;Lab7.c: 1170: return '*';
  7825  001CCC  0E00               	movlw	0
  7826  001CCE  0101               	movlb	1	; () banked
  7827  001CD0  6F01               	movwf	(?_keypad+1)& (0+255),b
  7828  001CD2  0E2A               	movlw	42
  7829  001CD4  6F00               	movwf	?_keypad& (0+255),b
  7830                           
  7831                           ; BSR set to: 1
  7832  001CD6  0012               	return	
  7833  001CD8                     l434:
  7834                           
  7835                           ;Lab7.c: 1171: }
  7836                           ;Lab7.c: 1172: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
  7837  001CD8  A883               	btfss	3971,4,c	;volatile
  7838  001CDA  AA83               	btfss	3971,5,c	;volatile
  7839  001CDC  D009               	goto	l435
  7840  001CDE  AC83               	btfss	3971,6,c	;volatile
  7841  001CE0  BE83               	btfsc	3971,7,c	;volatile
  7842  001CE2  D006               	goto	l435
  7843                           
  7844                           ;Lab7.c: 1173: {
  7845                           ;Lab7.c: 1174: return '0';
  7846  001CE4  0E00               	movlw	0
  7847  001CE6  0101               	movlb	1	; () banked
  7848  001CE8  6F01               	movwf	(?_keypad+1)& (0+255),b
  7849  001CEA  0E30               	movlw	48
  7850  001CEC  6F00               	movwf	?_keypad& (0+255),b
  7851                           
  7852                           ; BSR set to: 1
  7853  001CEE  0012               	return	
  7854  001CF0                     l435:
  7855                           
  7856                           ;Lab7.c: 1175: }
  7857                           ;Lab7.c: 1176: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
  7858  001CF0  A883               	btfss	3971,4,c	;volatile
  7859  001CF2  BA83               	btfsc	3971,5,c	;volatile
  7860  001CF4  D009               	goto	l436
  7861  001CF6  BC83               	btfsc	3971,6,c	;volatile
  7862  001CF8  BE83               	btfsc	3971,7,c	;volatile
  7863  001CFA  D006               	goto	l436
  7864                           
  7865                           ;Lab7.c: 1177: {
  7866                           ;Lab7.c: 1178: return '#';
  7867  001CFC  0E00               	movlw	0
  7868  001CFE  0101               	movlb	1	; () banked
  7869  001D00  6F01               	movwf	(?_keypad+1)& (0+255),b
  7870  001D02  0E23               	movlw	35
  7871  001D04  6F00               	movwf	?_keypad& (0+255),b
  7872                           
  7873                           ; BSR set to: 1
  7874  001D06  0012               	return	
  7875  001D08                     l436:
  7876                           
  7877                           ;Lab7.c: 1179: }
  7878                           ;Lab7.c: 1180: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
  7879  001D08  A883               	btfss	3971,4,c	;volatile
  7880  001D0A  BA83               	btfsc	3971,5,c	;volatile
  7881  001D0C  D731               	goto	_keypad
  7882  001D0E  AC83               	btfss	3971,6,c	;volatile
  7883  001D10  AE83               	btfss	3971,7,c	;volatile
  7884  001D12  D72E               	goto	_keypad
  7885                           
  7886                           ;Lab7.c: 1181: {
  7887                           ;Lab7.c: 1182: return 'D';
  7888  001D14  0E00               	movlw	0
  7889  001D16  0101               	movlb	1	; () banked
  7890  001D18  6F01               	movwf	(?_keypad+1)& (0+255),b
  7891  001D1A  0E44               	movlw	68
  7892  001D1C  6F00               	movwf	?_keypad& (0+255),b
  7893                           
  7894                           ; BSR set to: 1
  7895  001D1E  0012               	return	
  7896  001D20                     __end_of_keypad:
  7897                           	opt stack 0
  7898                           tblptru	equ	0xFF8
  7899                           tblptrh	equ	0xFF7
  7900                           tblptrl	equ	0xFF6
  7901                           tablat	equ	0xFF5
  7902                           prodh	equ	0xFF4
  7903                           prodl	equ	0xFF3
  7904                           intcon	equ	0xFF2
  7905                           intcon2	equ	0xFF1
  7906                           intcon3	equ	0xFF0
  7907                           postinc0	equ	0xFEE
  7908                           wreg	equ	0xFE8
  7909                           indf2	equ	0xFDF
  7910                           postinc2	equ	0xFDE
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function _Read_b_eep *****************
  7916 ;; Defined at:
  7917 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\EEP\read_B.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  badd            2    0[BANK1 ] unsigned int 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      unsigned char 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7931 ;;      Params:         0       0       2       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0
  7934 ;;      Totals:         0       0       2       0       0       0       0
  7935 ;;Total ram usage:        2 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    8
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;;		_password_change
  7943 ;;		_password
  7944 ;;		_password_options
  7945 ;;		_alarm_options
  7946 ;;		_temp_options
  7947 ;;		_input_options
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text9
  7952  003086                     __ptext9:
  7953                           	opt stack 0
  7954  003086                     _Read_b_eep:
  7955                           	opt stack 21
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;incstack = 0
  7959  003086  C100  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  7960  00308A  9CA6               	bcf	4006,6,c	;volsfr
  7961  00308C  9EA6               	bcf	4006,7,c	;volsfr
  7962  00308E  80A6               	bsf	4006,0,c	;volsfr
  7963  003090  F000               	nop	
  7964  003092  F000               	nop	
  7965  003094  50A8               	movf	4008,w,c	;volatile
  7966  003096  0012               	return	
  7967  003098                     __end_of_Read_b_eep:
  7968                           	opt stack 0
  7969                           tblptru	equ	0xFF8
  7970                           tblptrh	equ	0xFF7
  7971                           tblptrl	equ	0xFF6
  7972                           tablat	equ	0xFF5
  7973                           prodh	equ	0xFF4
  7974                           prodl	equ	0xFF3
  7975                           intcon	equ	0xFF2
  7976                           intcon2	equ	0xFF1
  7977                           intcon3	equ	0xFF0
  7978                           postinc0	equ	0xFEE
  7979                           wreg	equ	0xFE8
  7980                           indf2	equ	0xFDF
  7981                           postinc2	equ	0xFDE
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8
  7985                           
  7986 ;; *************** function _Clear *****************
  7987 ;; Defined at:
  7988 ;;		line 112 in file "Lab7.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8002 ;;      Params:         0       0       0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0
  8005 ;;      Totals:         0       0       0       0       0       0       0
  8006 ;;Total ram usage:        0 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:   10
  8009 ;; This function calls:
  8010 ;;		_printf
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;;		_password_change
  8014 ;;		_password_options
  8015 ;;		_alarm_options
  8016 ;;		_temp_options
  8017 ;;		_input_options
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text10
  8022  003030                     __ptext10:
  8023                           	opt stack 0
  8024  003030                     _Clear:
  8025                           	opt stack 19
  8026                           
  8027                           ;Lab7.c: 114: printf("\033[2J");
  8028                           
  8029                           ;incstack = 0
  8030  003030  0EF5               	movlw	low STR_1
  8031  003032  0101               	movlb	1	; () banked
  8032  003034  6F16               	movwf	printf@f& (0+255),b
  8033  003036  0E7F               	movlw	high STR_1
  8034  003038  6F17               	movwf	(printf@f+1)& (0+255),b
  8035  00303A  EC00  F00C         	call	_printf	;wreg free
  8036                           
  8037                           ;Lab7.c: 115: printf("\033[0;0H");
  8038  00303E  0EEE               	movlw	low STR_2
  8039  003040  0101               	movlb	1	; () banked
  8040  003042  6F16               	movwf	printf@f& (0+255),b
  8041  003044  0E7F               	movlw	high STR_2
  8042  003046  6F17               	movwf	(printf@f+1)& (0+255),b
  8043  003048  EC00  F00C         	call	_printf	;wreg free
  8044  00304C  0012               	return		;funcret
  8045  00304E                     __end_of_Clear:
  8046                           	opt stack 0
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           intcon	equ	0xFF2
  8054                           intcon2	equ	0xFF1
  8055                           intcon3	equ	0xFF0
  8056                           postinc0	equ	0xFEE
  8057                           wreg	equ	0xFE8
  8058                           indf2	equ	0xFDF
  8059                           postinc2	equ	0xFDE
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function _printf *****************
  8065 ;; Defined at:
  8066 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  f               2   22[BANK1 ] PTR const unsigned char 
  8069 ;;		 -> STR_105(23), STR_104(9), STR_103(28), STR_102(26), 
  8070 ;;		 -> STR_101(25), STR_100(135), STR_99(18), STR_98(29), 
  8071 ;;		 -> STR_97(16), STR_96(19), STR_95(20), STR_94(14), 
  8072 ;;		 -> STR_93(15), STR_92(23), STR_91(38), STR_90(3), 
  8073 ;;		 -> STR_89(36), STR_88(3), STR_87(36), STR_86(36), 
  8074 ;;		 -> STR_85(26), STR_84(25), STR_83(25), STR_82(153), 
  8075 ;;		 -> STR_81(18), STR_80(29), STR_79(16), STR_78(19), 
  8076 ;;		 -> STR_77(20), STR_76(14), STR_75(15), STR_74(23), 
  8077 ;;		 -> STR_73(19), STR_72(18), STR_71(25), STR_70(119), 
  8078 ;;		 -> STR_69(18), STR_68(29), STR_67(16), STR_66(19), 
  8079 ;;		 -> STR_65(20), STR_64(14), STR_63(15), STR_62(23), 
  8080 ;;		 -> STR_61(21), STR_60(25), STR_59(111), STR_58(18), 
  8081 ;;		 -> STR_57(29), STR_56(16), STR_55(19), STR_54(20), 
  8082 ;;		 -> STR_53(14), STR_52(15), STR_51(28), STR_50(21), 
  8083 ;;		 -> STR_49(2), STR_48(2), STR_47(11), STR_46(54), 
  8084 ;;		 -> STR_45(25), STR_44(32), STR_43(37), STR_42(2), 
  8085 ;;		 -> STR_41(32), STR_40(37), STR_39(2), STR_38(21), 
  8086 ;;		 -> STR_37(2), STR_36(2), STR_35(25), STR_34(23), 
  8087 ;;		 -> STR_33(25), STR_32(163), STR_31(18), STR_30(29), 
  8088 ;;		 -> STR_29(16), STR_28(19), STR_27(20), STR_26(14), 
  8089 ;;		 -> STR_25(15), STR_24(19), STR_23(37), STR_22(2), 
  8090 ;;		 -> STR_21(15), STR_20(20), STR_19(31), STR_18(18), 
  8091 ;;		 -> STR_17(39), STR_16(39), STR_15(7), STR_14(3), 
  8092 ;;		 -> STR_13(39), STR_12(3), STR_11(36), STR_10(36), 
  8093 ;;		 -> STR_9(59), STR_8(31), STR_7(44), STR_6(39), 
  8094 ;;		 -> STR_5(39), STR_4(31), STR_3(28), STR_2(7), 
  8095 ;;		 -> STR_1(5), 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  val             4   39[BANK1 ] unsigned long 
  8098 ;;  tmpval          4    0        struct .
  8099 ;;  cp              3    0        PTR const unsigned char 
  8100 ;;  ap              2   36[BANK1 ] PTR void [1]
  8101 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
  8102 ;;  prec            2   34[BANK1 ] int 
  8103 ;;  len             2    0        unsigned int 
  8104 ;;  c               1   43[BANK1 ] char 
  8105 ;;  flag            1   38[BANK1 ] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  2   22[BANK1 ] int 
  8108 ;; Registers used:
  8109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8115 ;;      Params:         0       0      10       0       0       0       0
  8116 ;;      Locals:         0       0      10       0       0       0       0
  8117 ;;      Temps:          0       0       2       0       0       0       0
  8118 ;;      Totals:         0       0      22       0       0       0       0
  8119 ;;Total ram usage:       22 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    9
  8122 ;; This function calls:
  8123 ;;		___lldiv
  8124 ;;		___llmod
  8125 ;;		_putch
  8126 ;; This function is called by:
  8127 ;;		_Clear
  8128 ;;		_main
  8129 ;;		_password_change
  8130 ;;		_password
  8131 ;;		_password_options
  8132 ;;		_alarm_options
  8133 ;;		_temp_options
  8134 ;;		_input_options
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text11
  8139  001800                     __ptext11:
  8140                           	opt stack 0
  8141  001800                     _printf:
  8142                           	opt stack 20
  8143                           
  8144                           ;doprnt.c: 466: va_list ap;
  8145                           ;doprnt.c: 499: signed char c;
  8146                           ;doprnt.c: 504: int prec;
  8147                           ;doprnt.c: 508: unsigned char flag;
  8148                           ;doprnt.c: 523: union {
  8149                           ;doprnt.c: 524: unsigned long vd;
  8150                           ;doprnt.c: 525: double integ;
  8151                           ;doprnt.c: 526: } tmpval;
  8152                           ;doprnt.c: 528: unsigned long val;
  8153                           ;doprnt.c: 529: unsigned len;
  8154                           ;doprnt.c: 530: const char * cp;
  8155                           ;doprnt.c: 533: *ap = __va_start();
  8156                           
  8157                           ;incstack = 0
  8158  001800  0E18               	movlw	low (?_printf+2)
  8159  001802  0101               	movlb	1	; () banked
  8160  001804  6F24               	movwf	printf@ap& (0+255),b
  8161  001806  0E01               	movlw	high (?_printf+2)
  8162  001808  6F25               	movwf	(printf@ap+1)& (0+255),b
  8163                           
  8164                           ;doprnt.c: 536: while(c = *f++) {
  8165  00180A  D0C8               	goto	u4250
  8166  00180C                     
  8167                           ; BSR set to: 1
  8168                           ;doprnt.c: 538: if(c != '%')
  8169                           
  8170                           ; BSR set to: 1
  8171  00180C  0E25               	movlw	37
  8172  00180E  192B               	xorwf	printf@c& (0+255),w,b
  8173  001810  B4D8               	btfsc	status,2,c
  8174  001812  D004               	goto	l452
  8175                           
  8176                           ; BSR set to: 1
  8177                           ;doprnt.c: 540: {
  8178                           ;doprnt.c: 541: (putch(c) );
  8179  001814  512B               	movf	printf@c& (0+255),w,b
  8180  001816  EC5E  F018         	call	_putch
  8181                           
  8182                           ;doprnt.c: 542: continue;
  8183  00181A  D0C0               	goto	u4250
  8184  00181C                     l452:
  8185                           
  8186                           ;doprnt.c: 543: }
  8187                           ;doprnt.c: 548: flag = 0;
  8188  00181C  0E00               	movlw	0
  8189  00181E  0101               	movlb	1	; () banked
  8190  001820  6F26               	movwf	printf@flag& (0+255),b
  8191                           
  8192                           ; BSR set to: 1
  8193                           ;doprnt.c: 635: switch(c = *f++) {
  8194                           
  8195                           ;doprnt.c: 633: loop:
  8196  001822  D001               	goto	l454
  8197  001824                     
  8198                           ; BSR set to: 1
  8199                           ;doprnt.c: 643: flag |= 0x10;
  8200                           
  8201                           ; BSR set to: 1
  8202  001824  8926               	bsf	printf@flag& (0+255),4,b
  8203  001826                     l454:
  8204                           
  8205                           ; BSR set to: 1
  8206                           
  8207                           ; BSR set to: 1
  8208  001826  C116  FFF6         	movff	printf@f,tblptrl
  8209  00182A  C117  FFF7         	movff	printf@f+1,tblptrh
  8210  00182E  4B16               	infsnz	printf@f& (0+255),f,b
  8211  001830  2B17               	incf	(printf@f+1)& (0+255),f,b
  8212  001832                     	if	0	;tblptru may be non-zero
  8213  001832                     	endif
  8214  001832                     	if	0	;tblptru may be non-zero
  8215  001832                     	endif
  8216  001832  0008               	tblrd		*
  8217  001834  CFF5 F12B          	movff	tablat,printf@c
  8218  001838  512B               	movf	printf@c& (0+255),w,b
  8219                           
  8220                           ; Switch size 1, requested type "space"
  8221                           ; Number of cases is 4, Range of values is 0 to 108
  8222                           ; switch strategies available:
  8223                           ; Name         Instructions Cycles
  8224                           ; simple_byte           13     7 (average)
  8225                           ;	Chosen strategy is simple_byte
  8226  00183A  0A00               	xorlw	0	; case 0
  8227  00183C  B4D8               	btfsc	status,2,c
  8228  00183E  0012               	return	
  8229  001840  0A64               	xorlw	100	; case 100
  8230  001842  B4D8               	btfsc	status,2,c
  8231  001844  D007               	goto	l460
  8232  001846  0A0D               	xorlw	13	; case 105
  8233  001848  B4D8               	btfsc	status,2,c
  8234  00184A  D004               	goto	l460
  8235  00184C  0A05               	xorlw	5	; case 108
  8236  00184E  B4D8               	btfsc	status,2,c
  8237  001850  D7E9               	goto	l457
  8238  001852  D0A4               	goto	u4250
  8239  001854                     l460:
  8240                           
  8241                           ; BSR set to: 1
  8242                           ;doprnt.c: 1253: {
  8243                           ;doprnt.c: 1255: if(flag & 0x10)
  8244  001854  A926               	btfss	printf@flag& (0+255),4,b
  8245  001856  D00E               	goto	l462
  8246                           
  8247                           ; BSR set to: 1
  8248                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  8249  001858  C124  FFD9         	movff	printf@ap,fsr2l
  8250  00185C  C125  FFDA         	movff	printf@ap+1,fsr2h
  8251  001860  CFDE F127          	movff	postinc2,printf@val
  8252  001864  CFDE F128          	movff	postinc2,printf@val+1
  8253  001868  CFDE F129          	movff	postinc2,printf@val+2
  8254  00186C  CFDE F12A          	movff	postinc2,printf@val+3
  8255                           
  8256                           ; BSR set to: 1
  8257  001870  0E04               	movlw	4
  8258  001872  D00E               	goto	L5
  8259  001874                     l462:
  8260                           
  8261                           ; BSR set to: 1
  8262                           ;doprnt.c: 1257: else
  8263                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8264                           
  8265                           ; BSR set to: 1
  8266  001874  C124  FFD9         	movff	printf@ap,fsr2l
  8267  001878  C125  FFDA         	movff	printf@ap+1,fsr2h
  8268  00187C  CFDE F127          	movff	postinc2,printf@val
  8269  001880  CFDD F128          	movff	postdec2,printf@val+1
  8270  001884  0E00               	movlw	0
  8271  001886  BF28               	btfsc	(printf@val+1)& (0+255),7,b
  8272  001888  0EFF               	movlw	-1
  8273  00188A  6F29               	movwf	(printf@val+2)& (0+255),b
  8274  00188C  6F2A               	movwf	(printf@val+3)& (0+255),b
  8275                           
  8276                           ; BSR set to: 1
  8277  00188E  0E02               	movlw	2
  8278  001890                     L5:
  8279  001890  2724               	addwf	printf@ap& (0+255),f,b
  8280  001892  0E00               	movlw	0
  8281  001894  2325               	addwfc	(printf@ap+1)& (0+255),f,b
  8282                           
  8283                           ; BSR set to: 1
  8284                           ;doprnt.c: 1261: if((long)val < 0) {
  8285                           
  8286                           ; BSR set to: 1
  8287  001896  AF2A               	btfss	(printf@val+3)& (0+255),7,b
  8288  001898  D00A               	goto	l464
  8289                           
  8290                           ; BSR set to: 1
  8291                           ;doprnt.c: 1262: flag |= 0x03;
  8292  00189A  0E03               	movlw	3
  8293  00189C  1326               	iorwf	printf@flag& (0+255),f,b
  8294                           
  8295                           ; BSR set to: 1
  8296                           ;doprnt.c: 1263: val = -val;
  8297  00189E  1F2A               	comf	(printf@val+3)& (0+255),f,b
  8298  0018A0  1F29               	comf	(printf@val+2)& (0+255),f,b
  8299  0018A2  1F28               	comf	(printf@val+1)& (0+255),f,b
  8300  0018A4  6D27               	negf	printf@val& (0+255),b
  8301  0018A6  0E00               	movlw	0
  8302  0018A8  2328               	addwfc	(printf@val+1)& (0+255),f,b
  8303  0018AA  2329               	addwfc	(printf@val+2)& (0+255),f,b
  8304  0018AC  232A               	addwfc	(printf@val+3)& (0+255),f,b
  8305  0018AE                     l464:
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;doprnt.c: 1264: }
  8309                           ;doprnt.c: 1266: }
  8310                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8311                           
  8312                           ; BSR set to: 1
  8313  0018AE  0E01               	movlw	1
  8314  0018B0  6F2B               	movwf	printf@c& (0+255),b
  8315  0018B2                     l3626:
  8316                           
  8317                           ; BSR set to: 1
  8318  0018B2  0E0A               	movlw	10
  8319  0018B4  192B               	xorwf	printf@c& (0+255),w,b
  8320  0018B6  B4D8               	btfsc	status,2,c
  8321  0018B8  D018               	goto	u4230
  8322                           
  8323                           ; BSR set to: 1
  8324                           ;doprnt.c: 1306: if(val < dpowers[c])
  8325                           
  8326                           ; BSR set to: 1
  8327                           
  8328                           ; BSR set to: 1
  8329  0018BA  512B               	movf	printf@c& (0+255),w,b
  8330  0018BC  0D04               	mullw	4
  8331  0018BE  0EF5               	movlw	low _dpowers
  8332  0018C0  24F3               	addwf	prodl,w,c
  8333  0018C2  6EF6               	movwf	tblptrl,c
  8334  0018C4  0E78               	movlw	high _dpowers
  8335  0018C6  20F4               	addwfc	prodh,w,c
  8336  0018C8  6EF7               	movwf	tblptrh,c
  8337  0018CA                     	if	0	;There are less than 3 active tblptr bytes
  8338  0018CA                     	endif
  8339  0018CA  0009               	tblrd		*+
  8340  0018CC  50F5               	movf	tablat,w,c
  8341  0018CE  5D27               	subwf	printf@val& (0+255),w,b
  8342  0018D0  0009               	tblrd		*+
  8343  0018D2  50F5               	movf	tablat,w,c
  8344  0018D4  5928               	subwfb	(printf@val+1)& (0+255),w,b
  8345  0018D6  0009               	tblrd		*+
  8346  0018D8  50F5               	movf	tablat,w,c
  8347  0018DA  5929               	subwfb	(printf@val+2)& (0+255),w,b
  8348  0018DC  0009               	tblrd		*+
  8349  0018DE  50F5               	movf	tablat,w,c
  8350  0018E0  592A               	subwfb	(printf@val+3)& (0+255),w,b
  8351  0018E2  A0D8               	btfss	status,0,c
  8352  0018E4  D002               	goto	u4230
  8353                           
  8354                           ; BSR set to: 1
  8355                           
  8356                           ; BSR set to: 1
  8357                           
  8358                           ; BSR set to: 1
  8359                           ;doprnt.c: 1307: break;
  8360  0018E6  2B2B               	incf	printf@c& (0+255),f,b
  8361  0018E8  D7E4               	goto	l3626
  8362  0018EA                     u4230:
  8363                           
  8364                           ; BSR set to: 1
  8365                           ;doprnt.c: 1422: {
  8366                           ;doprnt.c: 1438: if(flag & 0x03)
  8367                           
  8368                           ; BSR set to: 1
  8369  0018EA  C126  F120         	movff	printf@flag,??_printf
  8370  0018EE  0E03               	movlw	3
  8371  0018F0  1720               	andwf	??_printf& (0+255),f,b
  8372  0018F2  B4D8               	btfsc	status,2,c
  8373  0018F4  D003               	goto	l468
  8374                           
  8375                           ; BSR set to: 1
  8376                           ;doprnt.c: 1439: (putch('-') );
  8377  0018F6  0E2D               	movlw	45
  8378  0018F8  EC5E  F018         	call	_putch
  8379  0018FC                     l468:
  8380                           
  8381                           ;doprnt.c: 1469: }
  8382                           ;doprnt.c: 1472: prec = c;
  8383  0018FC  0101               	movlb	1	; () banked
  8384  0018FE  512B               	movf	printf@c& (0+255),w,b
  8385  001900  6F22               	movwf	printf@prec& (0+255),b
  8386  001902  6B23               	clrf	(printf@prec+1)& (0+255),b
  8387  001904  BF22               	btfsc	printf@prec& (0+255),7,b
  8388  001906  0723               	decf	(printf@prec+1)& (0+255),f,b
  8389                           
  8390                           ;doprnt.c: 1474: while(prec--) {
  8391  001908  D040               	goto	l469
  8392  00190A                     l3644:
  8393                           
  8394                           ; BSR set to: 1
  8395                           ;doprnt.c: 1478: {
  8396                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8397  00190A  C122  F120         	movff	printf@prec,??_printf
  8398  00190E  C123  F121         	movff	printf@prec+1,??_printf+1
  8399  001912  90D8               	bcf	status,0,c
  8400  001914  3720               	rlcf	??_printf& (0+255),f,b
  8401  001916  3721               	rlcf	(??_printf+1)& (0+255),f,b
  8402  001918  90D8               	bcf	status,0,c
  8403  00191A  3720               	rlcf	??_printf& (0+255),f,b
  8404  00191C  3721               	rlcf	(??_printf+1)& (0+255),f,b
  8405  00191E  0EF5               	movlw	low _dpowers
  8406  001920  2520               	addwf	??_printf& (0+255),w,b
  8407  001922  6EF6               	movwf	tblptrl,c
  8408  001924  0E78               	movlw	high _dpowers
  8409  001926  2121               	addwfc	(??_printf+1)& (0+255),w,b
  8410  001928  6EF7               	movwf	tblptrh,c
  8411  00192A                     	if	0	;There are less than 3 active tblptr bytes
  8412  00192A                     	endif
  8413  00192A  0009               	tblrd		*+
  8414  00192C  CFF5 F104          	movff	tablat,___lldiv@divisor
  8415  001930  0009               	tblrd		*+
  8416  001932  CFF5 F105          	movff	tablat,___lldiv@divisor+1
  8417  001936  0009               	tblrd		*+
  8418  001938  CFF5 F106          	movff	tablat,___lldiv@divisor+2
  8419  00193C  000A               	tblrd		*-
  8420  00193E  CFF5 F107          	movff	tablat,___lldiv@divisor+3
  8421  001942  C127  F100         	movff	printf@val,___lldiv@dividend
  8422  001946  C128  F101         	movff	printf@val+1,___lldiv@dividend+1
  8423  00194A  C129  F102         	movff	printf@val+2,___lldiv@dividend+2
  8424  00194E  C12A  F103         	movff	printf@val+3,___lldiv@dividend+3
  8425  001952  ECE7  F015         	call	___lldiv	;wreg free
  8426  001956  C100  F10D         	movff	?___lldiv,___llmod@dividend
  8427  00195A  C101  F10E         	movff	?___lldiv+1,___llmod@dividend+1
  8428  00195E  C102  F10F         	movff	?___lldiv+2,___llmod@dividend+2
  8429  001962  C103  F110         	movff	?___lldiv+3,___llmod@dividend+3
  8430  001966  0E0A               	movlw	10
  8431  001968  0101               	movlb	1	; () banked
  8432  00196A  6F11               	movwf	___llmod@divisor& (0+255),b
  8433  00196C  0E00               	movlw	0
  8434  00196E  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
  8435  001970  0E00               	movlw	0
  8436  001972  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
  8437  001974  0E00               	movlw	0
  8438  001976  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
  8439  001978  EC1D  F017         	call	___llmod	;wreg free
  8440  00197C  0101               	movlb	1	; () banked
  8441  00197E  510D               	movf	?___llmod& (0+255),w,b
  8442  001980  0F30               	addlw	48
  8443  001982  6F2B               	movwf	printf@c& (0+255),b
  8444                           
  8445                           ; BSR set to: 1
  8446                           ;doprnt.c: 1523: }
  8447                           ;doprnt.c: 1524: (putch(c) );
  8448  001984  512B               	movf	printf@c& (0+255),w,b
  8449  001986  EC5E  F018         	call	_putch
  8450  00198A                     l469:
  8451  00198A  0101               	movlb	1	; () banked
  8452  00198C  0722               	decf	printf@prec& (0+255),f,b
  8453  00198E  A0D8               	btfss	status,0,c
  8454  001990  0723               	decf	(printf@prec+1)& (0+255),f,b
  8455  001992  2922               	incf	printf@prec& (0+255),w,b
  8456  001994  E1BA               	bnz	l3644
  8457  001996  2923               	incf	(printf@prec+1)& (0+255),w,b
  8458  001998  A4D8               	btfss	status,2,c
  8459  00199A  D7B7               	goto	l470
  8460  00199C                     u4250:
  8461                           
  8462                           ; BSR set to: 1
  8463                           
  8464                           ; BSR set to: 1
  8465  00199C  C116  FFF6         	movff	printf@f,tblptrl
  8466  0019A0  C117  FFF7         	movff	printf@f+1,tblptrh
  8467  0019A4  0101               	movlb	1	; () banked
  8468  0019A6  4B16               	infsnz	printf@f& (0+255),f,b
  8469  0019A8  2B17               	incf	(printf@f+1)& (0+255),f,b
  8470  0019AA                     	if	0	;tblptru may be non-zero
  8471  0019AA                     	endif
  8472  0019AA                     	if	0	;tblptru may be non-zero
  8473  0019AA                     	endif
  8474  0019AA  0008               	tblrd		*
  8475  0019AC  CFF5 F12B          	movff	tablat,printf@c
  8476  0019B0  512B               	movf	printf@c& (0+255),w,b
  8477  0019B2  B4D8               	btfsc	status,2,c
  8478  0019B4  0012               	return	
  8479  0019B6  D72A               	goto	l451
  8480  0019B8                     __end_of_printf:
  8481                           	opt stack 0
  8482                           tblptru	equ	0xFF8
  8483                           tblptrh	equ	0xFF7
  8484                           tblptrl	equ	0xFF6
  8485                           tablat	equ	0xFF5
  8486                           prodh	equ	0xFF4
  8487                           prodl	equ	0xFF3
  8488                           intcon	equ	0xFF2
  8489                           intcon2	equ	0xFF1
  8490                           intcon3	equ	0xFF0
  8491                           postinc0	equ	0xFEE
  8492                           wreg	equ	0xFE8
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8
  8499                           
  8500 ;; *************** function _putch *****************
  8501 ;; Defined at:
  8502 ;;		line 106 in file "Lab7.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  data            1    wreg     unsigned char 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  data            1    0[BANK1 ] unsigned char 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1    wreg      void 
  8509 ;; Registers used:
  8510 ;;		wreg
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8516 ;;      Params:         0       0       0       0       0       0       0
  8517 ;;      Locals:         0       0       1       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0
  8519 ;;      Totals:         0       0       1       0       0       0       0
  8520 ;;Total ram usage:        1 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:    8
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_printf
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text12
  8531  0030BC                     __ptext12:
  8532                           	opt stack 0
  8533  0030BC                     _putch:
  8534                           	opt stack 20
  8535                           
  8536                           ; BSR set to: 1
  8537                           ;incstack = 0
  8538                           ;putch@data stored from wreg
  8539  0030BC  0101               	movlb	1	; () banked
  8540  0030BE  6F00               	movwf	putch@data& (0+255),b
  8541  0030C0                     
  8542                           ;Lab7.c: 109: continue;
  8543                           
  8544                           ;Lab7.c: 108: while(!PIR1bits.TXIF)
  8545  0030C0  A89E               	btfss	3998,4,c	;volatile
  8546  0030C2  D7FE               	goto	l3554
  8547                           
  8548                           ;Lab7.c: 110: TXREG = data;
  8549  0030C4  C100  FFAD         	movff	putch@data,4013	;volatile
  8550  0030C8  0012               	return		;funcret
  8551  0030CA                     __end_of_putch:
  8552                           	opt stack 0
  8553                           tblptru	equ	0xFF8
  8554                           tblptrh	equ	0xFF7
  8555                           tblptrl	equ	0xFF6
  8556                           tablat	equ	0xFF5
  8557                           prodh	equ	0xFF4
  8558                           prodl	equ	0xFF3
  8559                           intcon	equ	0xFF2
  8560                           intcon2	equ	0xFF1
  8561                           intcon3	equ	0xFF0
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           indf2	equ	0xFDF
  8565                           postinc2	equ	0xFDE
  8566                           postdec2	equ	0xFDD
  8567                           fsr2h	equ	0xFDA
  8568                           fsr2l	equ	0xFD9
  8569                           status	equ	0xFD8
  8570                           
  8571 ;; *************** function ___llmod *****************
  8572 ;; Defined at:
  8573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  dividend        4   13[BANK1 ] unsigned long 
  8576 ;;  divisor         4   17[BANK1 ] unsigned long 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  counter         1   21[BANK1 ] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  4   13[BANK1 ] unsigned long 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8588 ;;      Params:         0       0       8       0       0       0       0
  8589 ;;      Locals:         0       0       1       0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0
  8591 ;;      Totals:         0       0       9       0       0       0       0
  8592 ;;Total ram usage:        9 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    8
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_printf
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text13
  8603  002E3A                     __ptext13:
  8604                           	opt stack 0
  8605  002E3A                     ___llmod:
  8606                           	opt stack 20
  8607                           
  8608                           ;incstack = 0
  8609  002E3A  0101               	movlb	1	; () banked
  8610  002E3C  5111               	movf	___llmod@divisor& (0+255),w,b
  8611  002E3E  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8612  002E40  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8613  002E42  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8614  002E44  B4D8               	btfsc	status,2,c
  8615  002E46  D024               	goto	l850
  8616                           
  8617                           ; BSR set to: 1
  8618  002E48  0E01               	movlw	1
  8619  002E4A  6F15               	movwf	___llmod@counter& (0+255),b
  8620  002E4C  D006               	goto	l845
  8621  002E4E                     
  8622                           ; BSR set to: 1
  8623                           
  8624                           ; BSR set to: 1
  8625  002E4E  90D8               	bcf	status,0,c
  8626  002E50  3711               	rlcf	___llmod@divisor& (0+255),f,b
  8627  002E52  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8628  002E54  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8629  002E56  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8630  002E58  2B15               	incf	___llmod@counter& (0+255),f,b
  8631  002E5A                     l845:
  8632                           
  8633                           ; BSR set to: 1
  8634                           
  8635                           ; BSR set to: 1
  8636  002E5A  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8637  002E5C  D7F8               	goto	l846
  8638  002E5E                     u4160:
  8639                           
  8640                           ; BSR set to: 1
  8641                           
  8642                           ; BSR set to: 1
  8643                           
  8644                           ; BSR set to: 1
  8645  002E5E  5111               	movf	___llmod@divisor& (0+255),w,b
  8646  002E60  5D0D               	subwf	___llmod@dividend& (0+255),w,b
  8647  002E62  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
  8648  002E64  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8649  002E66  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
  8650  002E68  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8651  002E6A  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
  8652  002E6C  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8653  002E6E  A0D8               	btfss	status,0,c
  8654  002E70  D008               	goto	l849
  8655                           
  8656                           ; BSR set to: 1
  8657  002E72  5111               	movf	___llmod@divisor& (0+255),w,b
  8658  002E74  5F0D               	subwf	___llmod@dividend& (0+255),f,b
  8659  002E76  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
  8660  002E78  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8661  002E7A  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
  8662  002E7C  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8663  002E7E  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
  8664  002E80  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8665  002E82                     l849:
  8666                           
  8667                           ; BSR set to: 1
  8668                           
  8669                           ; BSR set to: 1
  8670  002E82  90D8               	bcf	status,0,c
  8671  002E84  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8672  002E86  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8673  002E88  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8674  002E8A  3311               	rrcf	___llmod@divisor& (0+255),f,b
  8675                           
  8676                           ; BSR set to: 1
  8677  002E8C  2F15               	decfsz	___llmod@counter& (0+255),f,b
  8678  002E8E  D7E7               	goto	u4160
  8679  002E90                     l850:
  8680                           
  8681                           ; BSR set to: 1
  8682                           
  8683                           ; BSR set to: 1
  8684  002E90  C10D  F10D         	movff	___llmod@dividend,?___llmod
  8685  002E94  C10E  F10E         	movff	___llmod@dividend+1,?___llmod+1
  8686  002E98  C10F  F10F         	movff	___llmod@dividend+2,?___llmod+2
  8687  002E9C  C110  F110         	movff	___llmod@dividend+3,?___llmod+3
  8688                           
  8689                           ; BSR set to: 1
  8690  002EA0  0012               	return		;funcret
  8691  002EA2                     __end_of___llmod:
  8692                           	opt stack 0
  8693                           tblptru	equ	0xFF8
  8694                           tblptrh	equ	0xFF7
  8695                           tblptrl	equ	0xFF6
  8696                           tablat	equ	0xFF5
  8697                           prodh	equ	0xFF4
  8698                           prodl	equ	0xFF3
  8699                           intcon	equ	0xFF2
  8700                           intcon2	equ	0xFF1
  8701                           intcon3	equ	0xFF0
  8702                           postinc0	equ	0xFEE
  8703                           wreg	equ	0xFE8
  8704                           indf2	equ	0xFDF
  8705                           postinc2	equ	0xFDE
  8706                           postdec2	equ	0xFDD
  8707                           fsr2h	equ	0xFDA
  8708                           fsr2l	equ	0xFD9
  8709                           status	equ	0xFD8
  8710                           
  8711 ;; *************** function ___lldiv *****************
  8712 ;; Defined at:
  8713 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  dividend        4    0[BANK1 ] unsigned long 
  8716 ;;  divisor         4    4[BANK1 ] unsigned long 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  quotient        4    8[BANK1 ] unsigned long 
  8719 ;;  counter         1   12[BANK1 ] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  4    0[BANK1 ] unsigned long 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8729 ;;      Params:         0       0       8       0       0       0       0
  8730 ;;      Locals:         0       0       5       0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0
  8732 ;;      Totals:         0       0      13       0       0       0       0
  8733 ;;Total ram usage:       13 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    8
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_printf
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text14
  8744  002BCE                     __ptext14:
  8745                           	opt stack 0
  8746  002BCE                     ___lldiv:
  8747                           	opt stack 20
  8748                           
  8749                           ; BSR set to: 1
  8750                           ;incstack = 0
  8751  002BCE  0E00               	movlw	0
  8752  002BD0  0101               	movlb	1	; () banked
  8753  002BD2  6F08               	movwf	___lldiv@quotient& (0+255),b
  8754  002BD4  0E00               	movlw	0
  8755  002BD6  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
  8756  002BD8  0E00               	movlw	0
  8757  002BDA  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8758  002BDC  0E00               	movlw	0
  8759  002BDE  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8760                           
  8761                           ; BSR set to: 1
  8762  002BE0  5104               	movf	___lldiv@divisor& (0+255),w,b
  8763  002BE2  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8764  002BE4  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8765  002BE6  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8766  002BE8  B4D8               	btfsc	status,2,c
  8767  002BEA  D02A               	goto	l840
  8768                           
  8769                           ; BSR set to: 1
  8770  002BEC  0E01               	movlw	1
  8771  002BEE  6F0C               	movwf	___lldiv@counter& (0+255),b
  8772  002BF0  D006               	goto	l835
  8773  002BF2                     
  8774                           ; BSR set to: 1
  8775                           
  8776                           ; BSR set to: 1
  8777  002BF2  90D8               	bcf	status,0,c
  8778  002BF4  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  8779  002BF6  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8780  002BF8  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8781  002BFA  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8782  002BFC  2B0C               	incf	___lldiv@counter& (0+255),f,b
  8783  002BFE                     l835:
  8784                           
  8785                           ; BSR set to: 1
  8786                           
  8787                           ; BSR set to: 1
  8788  002BFE  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8789  002C00  D7F8               	goto	l836
  8790  002C02                     u4130:
  8791                           
  8792                           ; BSR set to: 1
  8793                           
  8794                           ; BSR set to: 1
  8795                           
  8796                           ; BSR set to: 1
  8797  002C02  90D8               	bcf	status,0,c
  8798  002C04  3708               	rlcf	___lldiv@quotient& (0+255),f,b
  8799  002C06  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8800  002C08  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8801  002C0A  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8802                           
  8803                           ; BSR set to: 1
  8804  002C0C  5104               	movf	___lldiv@divisor& (0+255),w,b
  8805  002C0E  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  8806  002C10  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8807  002C12  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8808  002C14  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8809  002C16  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8810  002C18  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8811  002C1A  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8812  002C1C  A0D8               	btfss	status,0,c
  8813  002C1E  D009               	goto	l839
  8814                           
  8815                           ; BSR set to: 1
  8816  002C20  5104               	movf	___lldiv@divisor& (0+255),w,b
  8817  002C22  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  8818  002C24  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8819  002C26  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8820  002C28  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8821  002C2A  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8822  002C2C  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8823  002C2E  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8824                           
  8825                           ; BSR set to: 1
  8826  002C30  8108               	bsf	___lldiv@quotient& (0+255),0,b
  8827  002C32                     l839:
  8828                           
  8829                           ; BSR set to: 1
  8830                           
  8831                           ; BSR set to: 1
  8832  002C32  90D8               	bcf	status,0,c
  8833  002C34  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8834  002C36  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8835  002C38  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8836  002C3A  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  8837                           
  8838                           ; BSR set to: 1
  8839  002C3C  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
  8840  002C3E  D7E1               	goto	u4130
  8841  002C40                     l840:
  8842                           
  8843                           ; BSR set to: 1
  8844                           
  8845                           ; BSR set to: 1
  8846  002C40  C108  F100         	movff	___lldiv@quotient,?___lldiv
  8847  002C44  C109  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  8848  002C48  C10A  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  8849  002C4C  C10B  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  8850                           
  8851                           ; BSR set to: 1
  8852  002C50  0012               	return		;funcret
  8853  002C52                     __end_of___lldiv:
  8854                           	opt stack 0
  8855                           tblptru	equ	0xFF8
  8856                           tblptrh	equ	0xFF7
  8857                           tblptrl	equ	0xFF6
  8858                           tablat	equ	0xFF5
  8859                           prodh	equ	0xFF4
  8860                           prodl	equ	0xFF3
  8861                           intcon	equ	0xFF2
  8862                           intcon2	equ	0xFF1
  8863                           intcon3	equ	0xFF0
  8864                           postinc0	equ	0xFEE
  8865                           wreg	equ	0xFE8
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8
  8872                           
  8873 ;; *************** function _temp_sensor *****************
  8874 ;; Defined at:
  8875 ;;		line 152 in file "Lab7.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  i               2   80[BANK0 ] int 
  8880 ;;  i               2   78[BANK0 ] int 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8890 ;;      Params:         0       0       0       0       0       0       0
  8891 ;;      Locals:         0       4       0       0       0       0       0
  8892 ;;      Temps:          0      26       0       0       0       0       0
  8893 ;;      Totals:         0      30       0       0       0       0       0
  8894 ;;Total ram usage:       30 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    7
  8897 ;; This function calls:
  8898 ;;		_ADC
  8899 ;;		i1_Clear
  8900 ;;		i1_Read_b_eep
  8901 ;;		i1_keypad
  8902 ;;		i1_password
  8903 ;;		i1_printf
  8904 ;;		i1_write_eeprom
  8905 ;; This function is called by:
  8906 ;;		Interrupt level 1
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	intcodelo
  8911  000018                     __pintcodelo:
  8912                           	opt stack 0
  8913  000018                     _temp_sensor:
  8914                           	opt stack 18
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;incstack = 0
  8918  000018  804F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8919  00001A  CFD8 F0B9          	movff	status,??_temp_sensor+5
  8920  00001E  CFE8 F0BA          	movff	wreg,??_temp_sensor+6
  8921  000022  CFE0 F0BB          	movff	bsr,??_temp_sensor+7
  8922  000026  CFFA F0BC          	movff	pclath,??_temp_sensor+8
  8923  00002A  CFFB F0BD          	movff	pclatu,??_temp_sensor+9
  8924  00002E  CFE9 F0BE          	movff	fsr0l,??_temp_sensor+10
  8925  000032  CFEA F0BF          	movff	fsr0h,??_temp_sensor+11
  8926  000036  CFE1 F0C0          	movff	fsr1l,??_temp_sensor+12
  8927  00003A  CFE2 F0C1          	movff	fsr1h,??_temp_sensor+13
  8928  00003E  CFD9 F0C2          	movff	fsr2l,??_temp_sensor+14
  8929  000042  CFDA F0C3          	movff	fsr2h,??_temp_sensor+15
  8930  000046  CFF3 F0C4          	movff	prodl,??_temp_sensor+16
  8931  00004A  CFF4 F0C5          	movff	prodh,??_temp_sensor+17
  8932  00004E  CFF6 F0C6          	movff	tblptrl,??_temp_sensor+18
  8933  000052  CFF7 F0C7          	movff	tblptrh,??_temp_sensor+19
  8934  000056  CFF8 F0C8          	movff	tblptru,??_temp_sensor+20
  8935  00005A  CFF5 F0C9          	movff	tablat,??_temp_sensor+21
  8936  00005E  C04F  F0CA         	movff	btemp,??_temp_sensor+22
  8937  000062  C050  F0CB         	movff	btemp+1,??_temp_sensor+23
  8938  000066  C051  F0CC         	movff	btemp+2,??_temp_sensor+24
  8939  00006A  C052  F0CD         	movff	btemp+3,??_temp_sensor+25
  8940                           
  8941                           ;Lab7.c: 154: if(INTCONbits.TMR0IF == 1)
  8942  00006E  A4F2               	btfss	intcon,2,c	;volatile
  8943  000070  D1AA               	goto	i1l154
  8944                           
  8945                           ;Lab7.c: 155: {
  8946                           ;Lab7.c: 156: PORTBbits.RB5 = 1;
  8947  000072  8A81               	bsf	3969,5,c	;volatile
  8948                           
  8949                           ;Lab7.c: 157: _delay((unsigned long)((10)*(20000000/4000.0)));
  8950  000074  0E41               	movlw	65
  8951  000076  0100               	movlb	0	; () banked
  8952  000078  6FB4               	movwf	??_temp_sensor& (0+255),b
  8953  00007A  0EEE               	movlw	238
  8954  00007C                     i1u852_27:
  8955  00007C  2EE8               	decfsz	wreg,f,c
  8956  00007E  D7FE               	bra	i1u852_27
  8957  000080  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  8958  000082  D7FC               	bra	i1u852_27
  8959  000084  F000               	nop	
  8960                           
  8961                           ;Lab7.c: 158: ADCON0bits.GO = 1;
  8962  000086  82C2               	bsf	4034,1,c	;volatile
  8963                           
  8964                           ;Lab7.c: 159: _delay((unsigned long)((10)*(20000000/4000.0)));
  8965  000088  0E41               	movlw	65
  8966  00008A  0100               	movlb	0	; () banked
  8967  00008C  6FB4               	movwf	??_temp_sensor& (0+255),b
  8968  00008E  0EEE               	movlw	238
  8969  000090                     i1u853_27:
  8970  000090  2EE8               	decfsz	wreg,f,c
  8971  000092  D7FE               	bra	i1u853_27
  8972  000094  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  8973  000096  D7FC               	bra	i1u853_27
  8974  000098  F000               	nop	
  8975                           
  8976                           ;Lab7.c: 160: if(PIR1bits.ADIF == 1)
  8977  00009A  BC9E               	btfsc	3998,6,c	;volatile
  8978                           
  8979                           ;Lab7.c: 161: {
  8980                           ;Lab7.c: 162: ADC();
  8981  00009C  EC0F  F013         	call	_ADC	;wreg free
  8982                           
  8983                           ;Lab7.c: 163: }
  8984                           ;Lab7.c: 164: temp_set = Read_b_eep(temp_loc);
  8985  0000A0  C0E5  F080         	movff	_temp_loc,i1Read_b_eep@badd
  8986  0000A4  0100               	movlb	0	; () banked
  8987  0000A6  6B81               	clrf	(i1Read_b_eep@badd+1)& (0+255),b
  8988  0000A8  EC4C  F018         	call	i1_Read_b_eep	;wreg free
  8989  0000AC  0100               	movlb	0	; () banked
  8990  0000AE  6FB4               	movwf	??_temp_sensor& (0+255),b
  8991  0000B0  51B4               	movf	??_temp_sensor& (0+255),w,b
  8992  0000B2  6E4A               	movwf	_temp_set,c
  8993  0000B4  6A4B               	clrf	_temp_set+1,c
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;Lab7.c: 165: temp_threshold = temp_threshold_read[0]*10 + temp_threshold_read[1];
  8997  0000B6  51E0               	movf	_temp_threshold_read& (0+255),w,b
  8998  0000B8  0D0A               	mullw	10
  8999  0000BA  51E1               	movf	(_temp_threshold_read+1)& (0+255),w,b
  9000  0000BC  24F3               	addwf	prodl,w,c
  9001  0000BE  6E48               	movwf	_temp_threshold,c
  9002  0000C0  0E00               	movlw	0
  9003  0000C2  20F4               	addwfc	prodh,w,c
  9004  0000C4  6E49               	movwf	_temp_threshold+1,c
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;Lab7.c: 167: if((voltage>=temp_threshold) && temp_set == 1)
  9008  0000C6  C048  F0B4         	movff	_temp_threshold,??_temp_sensor
  9009  0000CA  C049  F0B5         	movff	_temp_threshold+1,??_temp_sensor+1
  9010  0000CE  0E00               	movlw	0
  9011  0000D0  BFB5               	btfsc	(??_temp_sensor+1)& (0+255),7,b
  9012  0000D2  0EFF               	movlw	255
  9013  0000D4  6FB6               	movwf	(??_temp_sensor+2)& (0+255),b
  9014  0000D6  6FB7               	movwf	(??_temp_sensor+3)& (0+255),b
  9015  0000D8  51B4               	movf	??_temp_sensor& (0+255),w,b
  9016  0000DA  5C44               	subwf	_voltage,w,c
  9017  0000DC  51B5               	movf	(??_temp_sensor+1)& (0+255),w,b
  9018  0000DE  5845               	subwfb	_voltage+1,w,c
  9019  0000E0  51B6               	movf	(??_temp_sensor+2)& (0+255),w,b
  9020  0000E2  5846               	subwfb	_voltage+2,w,c
  9021  0000E4  5047               	movf	_voltage+3,w,c
  9022  0000E6  0A80               	xorlw	128
  9023  0000E8  6FB8               	movwf	(??_temp_sensor+4)& (0+255),b
  9024  0000EA  51B7               	movf	(??_temp_sensor+3)& (0+255),w,b
  9025  0000EC  0A80               	xorlw	128
  9026  0000EE  59B8               	subwfb	(??_temp_sensor+4)& (0+255),w,b
  9027  0000F0  A0D8               	btfss	status,0,c
  9028  0000F2  D169               	goto	i1l154
  9029                           
  9030                           ; BSR set to: 0
  9031  0000F4  044A               	decf	_temp_set,w,c
  9032  0000F6  104B               	iorwf	_temp_set+1,w,c
  9033  0000F8  A4D8               	btfss	status,2,c
  9034  0000FA  D165               	goto	i1l154
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;Lab7.c: 168: {
  9038                           ;Lab7.c: 169: Clear();
  9039  0000FC  EC27  F018         	call	i1_Clear	;wreg free
  9040                           
  9041                           ;Lab7.c: 170: triggered = 1;
  9042  000100  0E00               	movlw	0
  9043  000102  0101               	movlb	1	; () banked
  9044  000104  6F57               	movwf	(_triggered+1)& (0+255),b
  9045  000106  0E01               	movlw	1
  9046  000108  6F56               	movwf	_triggered& (0+255),b
  9047                           
  9048                           ; BSR set to: 1
  9049                           ;Lab7.c: 171: PORTBbits.RB5 = 1;
  9050  00010A  8A81               	bsf	3969,5,c	;volatile
  9051                           
  9052                           ; BSR set to: 1
  9053                           ;Lab7.c: 172: printf("\n\r\n\r\n\rTEMP THRESHOLD OF %d%d EXCEEDED\n\r\n\r\n\r",temp_thre
      +                          shold_read[0],temp_threshold_read[1]);
  9054  00010C  0E37               	movlw	low STR_7
  9055  00010E  0100               	movlb	0	; () banked
  9056  000110  6F96               	movwf	i1printf@f& (0+255),b
  9057  000112  0E7C               	movlw	high STR_7
  9058  000114  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9059  000116  C0E0  F098         	movff	_temp_threshold_read,?i1_printf+2
  9060  00011A  6B99               	clrf	(?i1_printf+3)& (0+255),b
  9061  00011C  C0E1  F09A         	movff	_temp_threshold_read+1,?i1_printf+4
  9062  000120  6B9B               	clrf	(?i1_printf+5)& (0+255),b
  9063  000122  ECDC  F00C         	call	i1_printf	;wreg free
  9064                           
  9065                           ;Lab7.c: 173: printf("\n\rENTER PASSWORD TO CONTINUE\n\r");
  9066  000126  0EAA               	movlw	low STR_4
  9067  000128  0100               	movlb	0	; () banked
  9068  00012A  6F96               	movwf	i1printf@f& (0+255),b
  9069  00012C  0E7D               	movlw	high STR_4
  9070  00012E  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9071  000130  ECDC  F00C         	call	i1_printf	;wreg free
  9072                           
  9073                           ;Lab7.c: 174: T0CONbits.TMR0ON = 0;
  9074  000134  9ED5               	bcf	4053,7,c	;volatile
  9075                           
  9076                           ;Lab7.c: 176: password();
  9077  000136  EC05  F011         	call	i1_password	;wreg free
  9078                           
  9079                           ;Lab7.c: 177: printf("\n\rDo you want to change the temp threshold?\n\r1)Yes\n\rANY)No")
      +                          ;
  9080  00013A  0EC6               	movlw	low STR_9
  9081  00013C  0100               	movlb	0	; () banked
  9082  00013E  6F96               	movwf	i1printf@f& (0+255),b
  9083  000140  0E7B               	movlw	high STR_9
  9084  000142  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9085  000144  ECDC  F00C         	call	i1_printf	;wreg free
  9086                           
  9087                           ;Lab7.c: 178: if(PORTBbits.RB4 == 1)
  9088  000148  A881               	btfss	3969,4,c	;volatile
  9089  00014A  D016               	goto	i1l155
  9090                           
  9091                           ;Lab7.c: 179: {
  9092                           ;Lab7.c: 180: choice = keypad();
  9093  00014C  EC90  F00E         	call	i1_keypad	;wreg free
  9094  000150  C080  F0E2         	movff	?i1_keypad,_choice
  9095  000154  C081  F0E3         	movff	?i1_keypad+1,_choice+1
  9096                           
  9097                           ;Lab7.c: 181: PORTBbits.RB4 = 0;
  9098  000158  9881               	bcf	3969,4,c	;volatile
  9099                           
  9100                           ;Lab7.c: 182: _delay((unsigned long)((250)*(20000000/4000.0)));
  9101  00015A  0E07               	movlw	7
  9102  00015C  0100               	movlb	0	; () banked
  9103  00015E  6FB5               	movwf	(??_temp_sensor+1)& (0+255),b
  9104  000160  0E58               	movlw	88
  9105  000162  6FB4               	movwf	??_temp_sensor& (0+255),b
  9106  000164  0E59               	movlw	89
  9107  000166                     i1u854_27:
  9108  000166  2EE8               	decfsz	wreg,f,c
  9109  000168  D7FE               	bra	i1u854_27
  9110  00016A  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  9111  00016C  D7FC               	bra	i1u854_27
  9112  00016E  2FB5               	decfsz	(??_temp_sensor+1)& (0+255),f,b
  9113  000170  D7FA               	bra	i1u854_27
  9114  000172  D000               	nop2	
  9115                           
  9116                           ;Lab7.c: 183: PORTBbits.RB4 = 1;
  9117  000174  8881               	bsf	3969,4,c	;volatile
  9118                           
  9119                           ;Lab7.c: 184: }
  9120  000176  D006               	goto	i1l156
  9121  000178                     i1l155:
  9122                           
  9123                           ;Lab7.c: 185: else
  9124                           ;Lab7.c: 186: {
  9125                           ;Lab7.c: 187: while(PIR1bits.RCIF == 0);
  9126  000178  AA9E               	btfss	3998,5,c	;volatile
  9127  00017A  D7FE               	goto	i1l155
  9128                           
  9129                           ;Lab7.c: 188: choice = RCREG;
  9130  00017C  CFAE F0E2          	movff	4014,_choice	;volatile
  9131  000180  0100               	movlb	0	; () banked
  9132  000182  6BE3               	clrf	(_choice+1)& (0+255),b
  9133  000184                     i1l156:
  9134                           
  9135                           ;Lab7.c: 189: }
  9136                           ;Lab7.c: 191: if(choice == 49){
  9137                           
  9138                           ; BSR set to: 0
  9139  000184  0E31               	movlw	49
  9140  000186  0100               	movlb	0	; () banked
  9141  000188  19E2               	xorwf	_choice& (0+255),w,b
  9142  00018A  11E3               	iorwf	(_choice+1)& (0+255),w,b
  9143  00018C  A4D8               	btfss	status,2,c
  9144  00018E  D113               	goto	i1l160
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;Lab7.c: 192: _delay((unsigned long)((250)*(20000000/4000.0)));
  9148  000190  0E07               	movlw	7
  9149  000192  0100               	movlb	0	; () banked
  9150  000194  6FB5               	movwf	(??_temp_sensor+1)& (0+255),b
  9151  000196  0E58               	movlw	88
  9152  000198  6FB4               	movwf	??_temp_sensor& (0+255),b
  9153  00019A  0E59               	movlw	89
  9154  00019C                     i1u855_27:
  9155  00019C  2EE8               	decfsz	wreg,f,c
  9156  00019E  D7FE               	bra	i1u855_27
  9157  0001A0  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  9158  0001A2  D7FC               	bra	i1u855_27
  9159  0001A4  2FB5               	decfsz	(??_temp_sensor+1)& (0+255),f,b
  9160  0001A6  D7FA               	bra	i1u855_27
  9161  0001A8  D000               	nop2	
  9162                           
  9163                           ;Lab7.c: 193: printf("\n\rEnter new Temperature Threshold: ");
  9164  0001AA  0E47               	movlw	low STR_10
  9165  0001AC  0100               	movlb	0	; () banked
  9166  0001AE  6F96               	movwf	i1printf@f& (0+255),b
  9167  0001B0  0E7D               	movlw	high STR_10
  9168  0001B2  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9169  0001B4  ECDC  F00C         	call	i1_printf	;wreg free
  9170                           
  9171                           ;Lab7.c: 194: threshold_loc = 0x30;
  9172  0001B8  0E30               	movlw	48
  9173  0001BA  0100               	movlb	0	; () banked
  9174  0001BC  6FE4               	movwf	_threshold_loc& (0+255),b
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;Lab7.c: 195: if(PORTBbits.RB4 == 1)
  9178  0001BE  A881               	btfss	3969,4,c	;volatile
  9179  0001C0  D076               	goto	i1l161
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;Lab7.c: 196: {
  9183                           ;Lab7.c: 197: for(int i = 0;i < 2;i++){
  9184  0001C2  0E00               	movlw	0
  9185  0001C4  6FCF               	movwf	(temp_sensor@i+1)& (0+255),b
  9186  0001C6  0E00               	movlw	0
  9187  0001C8  6FCE               	movwf	temp_sensor@i& (0+255),b
  9188                           
  9189                           ; BSR set to: 0
  9190  0001CA  BFCF               	btfsc	(temp_sensor@i+1)& (0+255),7,b
  9191  0001CC  D008               	goto	i1l162
  9192  0001CE  51CF               	movf	(temp_sensor@i+1)& (0+255),w,b
  9193  0001D0  E105               	bnz	i1u791_20
  9194  0001D2  0E02               	movlw	2
  9195  0001D4  5DCE               	subwf	temp_sensor@i& (0+255),w,b
  9196  0001D6  B0D8               	btfsc	status,0,c
  9197  0001D8  D0D3               	goto	i1u797_20
  9198  0001DA  D001               	goto	i1l162
  9199  0001DC                     i1u791_20:
  9200                           
  9201                           ; BSR set to: 0
  9202  0001DC  D0D1               	goto	i1u797_20
  9203  0001DE                     i1l162:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;Lab7.c: 198: temp_threshold_input[i] = keypad();
  9207                           
  9208                           ; BSR set to: 0
  9209  0001DE  0EDE               	movlw	low _temp_threshold_input
  9210  0001E0  25CE               	addwf	temp_sensor@i& (0+255),w,b
  9211  0001E2  6ED9               	movwf	fsr2l,c
  9212  0001E4  0E00               	movlw	high _temp_threshold_input
  9213  0001E6  21CF               	addwfc	(temp_sensor@i+1)& (0+255),w,b
  9214  0001E8  6EDA               	movwf	fsr2h,c
  9215  0001EA  EC90  F00E         	call	i1_keypad	;wreg free
  9216  0001EE  0100               	movlb	0	; () banked
  9217  0001F0  5180               	movf	?i1_keypad& (0+255),w,b
  9218  0001F2  6EDF               	movwf	indf2,c
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;Lab7.c: 199: temp_threshold_input[i] -= 48;
  9222  0001F4  0EDE               	movlw	low _temp_threshold_input
  9223  0001F6  25CE               	addwf	temp_sensor@i& (0+255),w,b
  9224  0001F8  6ED9               	movwf	fsr2l,c
  9225  0001FA  0E00               	movlw	high _temp_threshold_input
  9226  0001FC  21CF               	addwfc	(temp_sensor@i+1)& (0+255),w,b
  9227  0001FE  6EDA               	movwf	fsr2h,c
  9228  000200  0E30               	movlw	48
  9229  000202  5EDF               	subwf	indf2,f,c
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;Lab7.c: 200: if(temp_threshold_input[i] < 0 || temp_threshold_input[i] > 9)
  9233  000204  0EDE               	movlw	low _temp_threshold_input
  9234  000206  25CE               	addwf	temp_sensor@i& (0+255),w,b
  9235  000208  6ED9               	movwf	fsr2l,c
  9236  00020A  0E00               	movlw	high _temp_threshold_input
  9237  00020C  21CF               	addwfc	(temp_sensor@i+1)& (0+255),w,b
  9238  00020E  6EDA               	movwf	fsr2h,c
  9239  000210  0E09               	movlw	9
  9240  000212  64DF               	cpfsgt	indf2,c
  9241  000214  D016               	goto	i1l164
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;Lab7.c: 201: {
  9245                           ;Lab7.c: 202: Clear();
  9246  000216  EC27  F018         	call	i1_Clear	;wreg free
  9247                           
  9248                           ;Lab7.c: 203: printf("\n\rONLY 0-9 CAN BE USED FOR TEMP\n\r\n\r");
  9249  00021A  0E23               	movlw	low STR_11
  9250  00021C  0100               	movlb	0	; () banked
  9251  00021E  6F96               	movwf	i1printf@f& (0+255),b
  9252  000220  0E7D               	movlw	high STR_11
  9253  000222  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9254  000224  ECDC  F00C         	call	i1_printf	;wreg free
  9255                           
  9256                           ;Lab7.c: 204: _delay((unsigned long)((1000)*(20000000/4000.0)));
  9257  000228  0E1A               	movlw	26
  9258  00022A  0100               	movlb	0	; () banked
  9259  00022C  6FB5               	movwf	(??_temp_sensor+1)& (0+255),b
  9260  00022E  0E5E               	movlw	94
  9261  000230  6FB4               	movwf	??_temp_sensor& (0+255),b
  9262  000232  0E6E               	movlw	110
  9263  000234                     i1u856_27:
  9264  000234  2EE8               	decfsz	wreg,f,c
  9265  000236  D7FE               	bra	i1u856_27
  9266  000238  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  9267  00023A  D7FC               	bra	i1u856_27
  9268  00023C  2FB5               	decfsz	(??_temp_sensor+1)& (0+255),f,b
  9269  00023E  D7FA               	bra	i1u856_27
  9270  000240  D073               	goto	L6
  9271  000242                     i1l164:
  9272                           
  9273                           ;Lab7.c: 206: }
  9274                           ;Lab7.c: 207: write_eeprom(threshold_loc,temp_threshold_input[i]);
  9275  000242  0EDE               	movlw	low _temp_threshold_input
  9276  000244  0100               	movlb	0	; () banked
  9277  000246  25CE               	addwf	temp_sensor@i& (0+255),w,b
  9278  000248  6ED9               	movwf	fsr2l,c
  9279  00024A  0E00               	movlw	high _temp_threshold_input
  9280  00024C  21CF               	addwfc	(temp_sensor@i+1)& (0+255),w,b
  9281  00024E  6EDA               	movwf	fsr2h,c
  9282  000250  50DF               	movf	indf2,w,c
  9283  000252  6F80               	movwf	i1write_eeprom@data& (0+255),b
  9284  000254  51E4               	movf	_threshold_loc& (0+255),w,b
  9285  000256  ECFE  F017         	call	i1_write_eeprom
  9286                           
  9287                           ;Lab7.c: 208: threshold_loc += 1;
  9288  00025A  0100               	movlb	0	; () banked
  9289  00025C  2BE4               	incf	_threshold_loc& (0+255),f,b
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;Lab7.c: 210: printf("%d", temp_threshold_input[i]);
  9293  00025E  0EFA               	movlw	low STR_12
  9294  000260  6F96               	movwf	i1printf@f& (0+255),b
  9295  000262  0E7F               	movlw	high STR_12
  9296  000264  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9297  000266  0EDE               	movlw	low _temp_threshold_input
  9298  000268  25CE               	addwf	temp_sensor@i& (0+255),w,b
  9299  00026A  6ED9               	movwf	fsr2l,c
  9300  00026C  0E00               	movlw	high _temp_threshold_input
  9301  00026E  21CF               	addwfc	(temp_sensor@i+1)& (0+255),w,b
  9302  000270  6EDA               	movwf	fsr2h,c
  9303  000272  50DF               	movf	indf2,w,c
  9304  000274  6FB4               	movwf	??_temp_sensor& (0+255),b
  9305  000276  51B4               	movf	??_temp_sensor& (0+255),w,b
  9306  000278  6F98               	movwf	(?i1_printf+2)& (0+255),b
  9307  00027A  6B99               	clrf	(?i1_printf+3)& (0+255),b
  9308  00027C  ECDC  F00C         	call	i1_printf	;wreg free
  9309                           
  9310                           ;Lab7.c: 211: PORTBbits.RB4 = 0;
  9311  000280  9881               	bcf	3969,4,c	;volatile
  9312                           
  9313                           ;Lab7.c: 212: _delay((unsigned long)((500)*(20000000/4000.0)));
  9314  000282  0E0D               	movlw	13
  9315  000284  0100               	movlb	0	; () banked
  9316  000286  6FB5               	movwf	(??_temp_sensor+1)& (0+255),b
  9317  000288  0EAF               	movlw	175
  9318  00028A  6FB4               	movwf	??_temp_sensor& (0+255),b
  9319  00028C  0EB6               	movlw	182
  9320  00028E                     i1u857_27:
  9321  00028E  2EE8               	decfsz	wreg,f,c
  9322  000290  D7FE               	bra	i1u857_27
  9323  000292  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  9324  000294  D7FC               	bra	i1u857_27
  9325  000296  2FB5               	decfsz	(??_temp_sensor+1)& (0+255),f,b
  9326  000298  D7FA               	bra	i1u857_27
  9327  00029A  F000               	nop	
  9328                           
  9329                           ;Lab7.c: 213: PORTBbits.RB4 = 1;
  9330  00029C  8881               	bsf	3969,4,c	;volatile
  9331  00029E  0100               	movlb	0	; () banked
  9332  0002A0  4BCE               	infsnz	temp_sensor@i& (0+255),f,b
  9333  0002A2  2BCF               	incf	(temp_sensor@i+1)& (0+255),f,b
  9334                           
  9335                           ; BSR set to: 0
  9336  0002A4  BFCF               	btfsc	(temp_sensor@i+1)& (0+255),7,b
  9337  0002A6  D79B               	goto	i1l162
  9338  0002A8  51CF               	movf	(temp_sensor@i+1)& (0+255),w,b
  9339  0002AA  E16A               	bnz	i1l166
  9340  0002AC  D792               	goto	L7
  9341  0002AE                     i1l161:
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;Lab7.c: 216: else
  9345                           ;Lab7.c: 217: {
  9346                           ;Lab7.c: 218: for(int i = 0;i < 2;i++){
  9347                           
  9348                           ; BSR set to: 0
  9349  0002AE  0E00               	movlw	0
  9350  0002B0  6FD1               	movwf	(temp_sensor@i_981+1)& (0+255),b
  9351  0002B2  0E00               	movlw	0
  9352  0002B4  6FD0               	movwf	temp_sensor@i_981& (0+255),b
  9353                           
  9354                           ; BSR set to: 0
  9355  0002B6  BFD1               	btfsc	(temp_sensor@i_981+1)& (0+255),7,b
  9356  0002B8  D006               	goto	i1l167
  9357  0002BA  51D1               	movf	(temp_sensor@i_981+1)& (0+255),w,b
  9358  0002BC  E161               	bnz	i1l5586
  9359  0002BE  0E02               	movlw	2
  9360  0002C0  5DD0               	subwf	temp_sensor@i_981& (0+255),w,b
  9361  0002C2  B0D8               	btfsc	status,0,c
  9362  0002C4  D05D               	goto	i1u797_20
  9363  0002C6                     i1l167:
  9364                           
  9365                           ; BSR set to: 0
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;Lab7.c: 219: while(PIR1bits.RCIF == 0);
  9369  0002C6  AA9E               	btfss	3998,5,c	;volatile
  9370  0002C8  D7FE               	goto	i1l167
  9371                           
  9372                           ;Lab7.c: 220: temp_threshold_input[i] = RCREG;
  9373  0002CA  0EDE               	movlw	low _temp_threshold_input
  9374  0002CC  0100               	movlb	0	; () banked
  9375  0002CE  25D0               	addwf	temp_sensor@i_981& (0+255),w,b
  9376  0002D0  6ED9               	movwf	fsr2l,c
  9377  0002D2  0E00               	movlw	high _temp_threshold_input
  9378  0002D4  21D1               	addwfc	(temp_sensor@i_981+1)& (0+255),w,b
  9379  0002D6  6EDA               	movwf	fsr2h,c
  9380  0002D8  CFAE FFDF          	movff	4014,indf2	;volatile
  9381                           
  9382                           ;Lab7.c: 221: temp_threshold_input[i] -= 48;
  9383  0002DC  0EDE               	movlw	low _temp_threshold_input
  9384  0002DE  25D0               	addwf	temp_sensor@i_981& (0+255),w,b
  9385  0002E0  6ED9               	movwf	fsr2l,c
  9386  0002E2  0E00               	movlw	high _temp_threshold_input
  9387  0002E4  21D1               	addwfc	(temp_sensor@i_981+1)& (0+255),w,b
  9388  0002E6  6EDA               	movwf	fsr2h,c
  9389  0002E8  0E30               	movlw	48
  9390  0002EA  5EDF               	subwf	indf2,f,c
  9391                           
  9392                           ;Lab7.c: 223: if(temp_threshold_input[i] < 0 || temp_threshold_input[i] > 9)
  9393  0002EC  0EDE               	movlw	low _temp_threshold_input
  9394  0002EE  25D0               	addwf	temp_sensor@i_981& (0+255),w,b
  9395  0002F0  6ED9               	movwf	fsr2l,c
  9396  0002F2  0E00               	movlw	high _temp_threshold_input
  9397  0002F4  21D1               	addwfc	(temp_sensor@i_981+1)& (0+255),w,b
  9398  0002F6  6EDA               	movwf	fsr2h,c
  9399  0002F8  0E09               	movlw	9
  9400  0002FA  64DF               	cpfsgt	indf2,c
  9401  0002FC  D017               	goto	i1l172
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;Lab7.c: 224: {
  9405                           ;Lab7.c: 225: Clear();
  9406  0002FE  EC27  F018         	call	i1_Clear	;wreg free
  9407                           
  9408                           ;Lab7.c: 226: printf("\n\rONLY 0-9 CAN BE USED IN PASSWORD\n\r\n\r");
  9409  000302  0E63               	movlw	low STR_13
  9410  000304  0100               	movlb	0	; () banked
  9411  000306  6F96               	movwf	i1printf@f& (0+255),b
  9412  000308  0E7C               	movlw	high STR_13
  9413  00030A  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9414  00030C  ECDC  F00C         	call	i1_printf	;wreg free
  9415                           
  9416                           ;Lab7.c: 227: _delay((unsigned long)((1000)*(20000000/4000.0)));
  9417  000310  0E1A               	movlw	26
  9418  000312  0100               	movlb	0	; () banked
  9419  000314  6FB5               	movwf	(??_temp_sensor+1)& (0+255),b
  9420  000316  0E5E               	movlw	94
  9421  000318  6FB4               	movwf	??_temp_sensor& (0+255),b
  9422  00031A  0E6E               	movlw	110
  9423  00031C                     i1u858_27:
  9424  00031C  2EE8               	decfsz	wreg,f,c
  9425  00031E  D7FE               	bra	i1u858_27
  9426  000320  2FB4               	decfsz	??_temp_sensor& (0+255),f,b
  9427  000322  D7FC               	bra	i1u858_27
  9428  000324  2FB5               	decfsz	(??_temp_sensor+1)& (0+255),f,b
  9429  000326  D7FA               	bra	i1u858_27
  9430  000328                     L6:
  9431  000328  F000               	nop	
  9432                           
  9433                           ;Lab7.c: 228: return;
  9434  00032A  D050               	goto	i1l165
  9435  00032C                     i1l172:
  9436                           
  9437                           ;Lab7.c: 229: }
  9438                           ;Lab7.c: 230: printf("%d", temp_threshold_input[i]);
  9439  00032C  0EFA               	movlw	low STR_12
  9440  00032E  0100               	movlb	0	; () banked
  9441  000330  6F96               	movwf	i1printf@f& (0+255),b
  9442  000332  0E7F               	movlw	high STR_12
  9443  000334  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9444  000336  0EDE               	movlw	low _temp_threshold_input
  9445  000338  25D0               	addwf	temp_sensor@i_981& (0+255),w,b
  9446  00033A  6ED9               	movwf	fsr2l,c
  9447  00033C  0E00               	movlw	high _temp_threshold_input
  9448  00033E  21D1               	addwfc	(temp_sensor@i_981+1)& (0+255),w,b
  9449  000340  6EDA               	movwf	fsr2h,c
  9450  000342  50DF               	movf	indf2,w,c
  9451  000344  6FB4               	movwf	??_temp_sensor& (0+255),b
  9452  000346  51B4               	movf	??_temp_sensor& (0+255),w,b
  9453  000348  6F98               	movwf	(?i1_printf+2)& (0+255),b
  9454  00034A  6B99               	clrf	(?i1_printf+3)& (0+255),b
  9455  00034C  ECDC  F00C         	call	i1_printf	;wreg free
  9456                           
  9457                           ;Lab7.c: 231: write_eeprom(threshold_loc,temp_threshold_input[i]);
  9458  000350  0EDE               	movlw	low _temp_threshold_input
  9459  000352  0100               	movlb	0	; () banked
  9460  000354  25D0               	addwf	temp_sensor@i_981& (0+255),w,b
  9461  000356  6ED9               	movwf	fsr2l,c
  9462  000358  0E00               	movlw	high _temp_threshold_input
  9463  00035A  21D1               	addwfc	(temp_sensor@i_981+1)& (0+255),w,b
  9464  00035C  6EDA               	movwf	fsr2h,c
  9465  00035E  50DF               	movf	indf2,w,c
  9466  000360  6F80               	movwf	i1write_eeprom@data& (0+255),b
  9467  000362  51E4               	movf	_threshold_loc& (0+255),w,b
  9468  000364  ECFE  F017         	call	i1_write_eeprom
  9469                           
  9470                           ;Lab7.c: 232: threshold_loc += 1;
  9471  000368  0100               	movlb	0	; () banked
  9472  00036A  2BE4               	incf	_threshold_loc& (0+255),f,b
  9473                           
  9474                           ; BSR set to: 0
  9475  00036C  4BD0               	infsnz	temp_sensor@i_981& (0+255),f,b
  9476  00036E  2BD1               	incf	(temp_sensor@i_981+1)& (0+255),f,b
  9477                           
  9478                           ; BSR set to: 0
  9479  000370  BFD1               	btfsc	(temp_sensor@i_981+1)& (0+255),7,b
  9480  000372  D7A9               	goto	i1l167
  9481  000374  51D1               	movf	(temp_sensor@i_981+1)& (0+255),w,b
  9482  000376  E104               	bnz	i1l5586
  9483  000378  0E02               	movlw	2
  9484  00037A  5DD0               	subwf	temp_sensor@i_981& (0+255),w,b
  9485  00037C  A0D8               	btfss	status,0,c
  9486  00037E  D7A3               	goto	i1l167
  9487  000380                     i1u797_20:
  9488  000380                     i1l166:
  9489  000380                     i1l5586:
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;Lab7.c: 233: }
  9493                           ;Lab7.c: 234: }
  9494                           ;Lab7.c: 235: temp_threshold_input[0] = temp_threshold_input[0]*10;
  9495  000380  51DE               	movf	_temp_threshold_input& (0+255),w,b
  9496  000382  0D0A               	mullw	10
  9497  000384  CFF3 F0DE          	movff	prodl,_temp_threshold_input
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;Lab7.c: 236: temp_threshold = temp_threshold_input[0]+temp_threshold_input[1];
  9501  000388  51DE               	movf	_temp_threshold_input& (0+255),w,b
  9502  00038A  25DF               	addwf	(_temp_threshold_input+1)& (0+255),w,b
  9503  00038C  6E48               	movwf	_temp_threshold,c
  9504  00038E  6A49               	clrf	_temp_threshold+1,c
  9505  000390  3649               	rlcf	_temp_threshold+1,f,c
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;Lab7.c: 237: printf("\n\r%d\n\r", temp_threshold);
  9509  000392  0EE7               	movlw	low STR_15
  9510  000394  6F96               	movwf	i1printf@f& (0+255),b
  9511  000396  0E7F               	movlw	high STR_15
  9512  000398  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9513  00039A  C048  F098         	movff	_temp_threshold,?i1_printf+2
  9514  00039E  C049  F099         	movff	_temp_threshold+1,?i1_printf+3
  9515  0003A2  ECDC  F00C         	call	i1_printf	;wreg free
  9516                           
  9517                           ;Lab7.c: 238: printf("\n\rPress Any Button to return to Menu\n\r");
  9518  0003A6  0EB1               	movlw	low STR_6
  9519  0003A8  0100               	movlb	0	; () banked
  9520  0003AA  6F96               	movwf	i1printf@f& (0+255),b
  9521  0003AC  0E7C               	movlw	high STR_6
  9522  0003AE  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9523  0003B0  ECDC  F00C         	call	i1_printf	;wreg free
  9524                           
  9525                           ;Lab7.c: 239: }
  9526  0003B4  D007               	goto	i1l173
  9527  0003B6                     i1l160:
  9528                           
  9529                           ;Lab7.c: 240: else{
  9530                           ;Lab7.c: 241: printf("\n\rPress Any Button to return to Menu\n\r");
  9531  0003B6  0EB1               	movlw	low STR_6
  9532  0003B8  0100               	movlb	0	; () banked
  9533  0003BA  6F96               	movwf	i1printf@f& (0+255),b
  9534  0003BC  0E7C               	movlw	high STR_6
  9535  0003BE  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9536  0003C0  ECDC  F00C         	call	i1_printf	;wreg free
  9537  0003C4                     i1l173:
  9538                           
  9539                           ;Lab7.c: 242: }
  9540                           ;Lab7.c: 243: T0CONbits.TMR0ON = 1;
  9541  0003C4  8ED5               	bsf	4053,7,c	;volatile
  9542  0003C6                     i1l154:
  9543                           
  9544                           ;Lab7.c: 244: }
  9545                           ;Lab7.c: 246: }
  9546                           ;Lab7.c: 248: PIR1bits.ADIF = 0;
  9547  0003C6  9C9E               	bcf	3998,6,c	;volatile
  9548                           
  9549                           ;Lab7.c: 249: INTCONbits.TMR0IF = 0;
  9550  0003C8  94F2               	bcf	intcon,2,c	;volatile
  9551                           
  9552                           ;Lab7.c: 250: PORTBbits.RB5 = 0;
  9553  0003CA  9A81               	bcf	3969,5,c	;volatile
  9554  0003CC                     i1l165:
  9555  0003CC  C0CD  F052         	movff	??_temp_sensor+25,btemp+3
  9556  0003D0  C0CC  F051         	movff	??_temp_sensor+24,btemp+2
  9557  0003D4  C0CB  F050         	movff	??_temp_sensor+23,btemp+1
  9558  0003D8  C0CA  F04F         	movff	??_temp_sensor+22,btemp
  9559  0003DC  C0C9  FFF5         	movff	??_temp_sensor+21,tablat
  9560  0003E0  C0C8  FFF8         	movff	??_temp_sensor+20,tblptru
  9561  0003E4  C0C7  FFF7         	movff	??_temp_sensor+19,tblptrh
  9562  0003E8  C0C6  FFF6         	movff	??_temp_sensor+18,tblptrl
  9563  0003EC  C0C5  FFF4         	movff	??_temp_sensor+17,prodh
  9564  0003F0  C0C4  FFF3         	movff	??_temp_sensor+16,prodl
  9565  0003F4  C0C3  FFDA         	movff	??_temp_sensor+15,fsr2h
  9566  0003F8  C0C2  FFD9         	movff	??_temp_sensor+14,fsr2l
  9567  0003FC  C0C1  FFE2         	movff	??_temp_sensor+13,fsr1h
  9568  000400  C0C0  FFE1         	movff	??_temp_sensor+12,fsr1l
  9569  000404  C0BF  FFEA         	movff	??_temp_sensor+11,fsr0h
  9570  000408  C0BE  FFE9         	movff	??_temp_sensor+10,fsr0l
  9571  00040C  C0BD  FFFB         	movff	??_temp_sensor+9,pclatu
  9572  000410  C0BC  FFFA         	movff	??_temp_sensor+8,pclath
  9573  000414  C0BB  FFE0         	movff	??_temp_sensor+7,bsr
  9574  000418  C0BA  FFE8         	movff	??_temp_sensor+6,wreg
  9575  00041C  C0B9  FFD8         	movff	??_temp_sensor+5,status
  9576  000420  904F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9577  000422  0010               	retfie	
  9578  000424                     __end_of_temp_sensor:
  9579                           	opt stack 0
  9580                           pclatu	equ	0xFFB
  9581                           pclath	equ	0xFFA
  9582                           tblptru	equ	0xFF8
  9583                           tblptrh	equ	0xFF7
  9584                           tblptrl	equ	0xFF6
  9585                           tablat	equ	0xFF5
  9586                           prodh	equ	0xFF4
  9587                           prodl	equ	0xFF3
  9588                           intcon	equ	0xFF2
  9589                           intcon2	equ	0xFF1
  9590                           intcon3	equ	0xFF0
  9591                           postinc0	equ	0xFEE
  9592                           fsr0h	equ	0xFEA
  9593                           fsr0l	equ	0xFE9
  9594                           wreg	equ	0xFE8
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           bsr	equ	0xFE0
  9598                           indf2	equ	0xFDF
  9599                           postinc2	equ	0xFDE
  9600                           postdec2	equ	0xFDD
  9601                           fsr2h	equ	0xFDA
  9602                           fsr2l	equ	0xFD9
  9603                           status	equ	0xFD8
  9604                           
  9605 ;; *************** function i1_write_eeprom *****************
  9606 ;; Defined at:
  9607 ;;		line 117 in file "Lab7.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  address         1    wreg     unsigned char 
  9610 ;;  data            1    0[BANK0 ] unsigned char 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  address         1    2[BANK0 ] unsigned char 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9622 ;;      Params:         0       1       0       0       0       0       0
  9623 ;;      Locals:         0       1       0       0       0       0       0
  9624 ;;      Temps:          0       1       0       0       0       0       0
  9625 ;;      Totals:         0       3       0       0       0       0       0
  9626 ;;Total ram usage:        3 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:    4
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_temp_sensor
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text16
  9637  002FFC                     __ptext16:
  9638                           	opt stack 0
  9639  002FFC                     i1_write_eeprom:
  9640                           	opt stack 20
  9641                           
  9642                           ;incstack = 0
  9643                           ;i1write_eeprom@address stored from wreg
  9644  002FFC  0100               	movlb	0	; () banked
  9645  002FFE  6F82               	movwf	i1write_eeprom@address& (0+255),b
  9646                           
  9647                           ;Lab7.c: 119: EEADR = address;
  9648  003000  C082  FFA9         	movff	i1write_eeprom@address,4009	;volatile
  9649                           
  9650                           ;Lab7.c: 120: EEDATA = data;
  9651  003004  C080  FFA8         	movff	i1write_eeprom@data,4008	;volatile
  9652                           
  9653                           ;Lab7.c: 121: EECON1bits.EEPGD = 0;
  9654  003008  9EA6               	bcf	4006,7,c	;volsfr
  9655                           
  9656                           ;Lab7.c: 122: EECON1bits.CFGS = 0;
  9657  00300A  9CA6               	bcf	4006,6,c	;volsfr
  9658                           
  9659                           ;Lab7.c: 123: EECON1bits.WREN = 1;
  9660  00300C  84A6               	bsf	4006,2,c	;volsfr
  9661                           
  9662                           ;Lab7.c: 124: INTCONbits.GIE = 0;
  9663  00300E  9EF2               	bcf	intcon,7,c	;volatile
  9664                           
  9665                           ;Lab7.c: 125: EECON2 = 0x55;
  9666  003010  0E55               	movlw	85
  9667  003012  6EA7               	movwf	4007,c	;volsfr
  9668                           
  9669                           ;Lab7.c: 126: EECON2 = 0x0aa;
  9670  003014  0EAA               	movlw	170
  9671  003016  6EA7               	movwf	4007,c	;volsfr
  9672                           
  9673                           ;Lab7.c: 127: EECON1bits.WR = 1;
  9674  003018  82A6               	bsf	4006,1,c	;volsfr
  9675                           
  9676                           ;Lab7.c: 128: _delay((unsigned long)((30)*(20000000/4000.0)));
  9677  00301A  0EC3               	movlw	195
  9678  00301C  0100               	movlb	0	; () banked
  9679  00301E  6F81               	movwf	??i1_write_eeprom& (0+255),b
  9680  003020  0ECD               	movlw	205
  9681  003022                     i1u859_27:
  9682  003022  2EE8               	decfsz	wreg,f,c
  9683  003024  D7FE               	bra	i1u859_27
  9684  003026  2F81               	decfsz	??i1_write_eeprom& (0+255),f,b
  9685  003028  D7FC               	bra	i1u859_27
  9686                           
  9687                           ;Lab7.c: 129: INTCONbits.GIE = 1;
  9688  00302A  8EF2               	bsf	intcon,7,c	;volatile
  9689                           
  9690                           ;Lab7.c: 130: EECON1bits.WREN = 0;
  9691  00302C  94A6               	bcf	4006,2,c	;volsfr
  9692  00302E  0012               	return		;funcret
  9693  003030                     __end_ofi1_write_eeprom:
  9694                           	opt stack 0
  9695                           pclatu	equ	0xFFB
  9696                           pclath	equ	0xFFA
  9697                           tblptru	equ	0xFF8
  9698                           tblptrh	equ	0xFF7
  9699                           tblptrl	equ	0xFF6
  9700                           tablat	equ	0xFF5
  9701                           prodh	equ	0xFF4
  9702                           prodl	equ	0xFF3
  9703                           intcon	equ	0xFF2
  9704                           intcon2	equ	0xFF1
  9705                           intcon3	equ	0xFF0
  9706                           postinc0	equ	0xFEE
  9707                           fsr0h	equ	0xFEA
  9708                           fsr0l	equ	0xFE9
  9709                           wreg	equ	0xFE8
  9710                           fsr1h	equ	0xFE2
  9711                           fsr1l	equ	0xFE1
  9712                           bsr	equ	0xFE0
  9713                           indf2	equ	0xFDF
  9714                           postinc2	equ	0xFDE
  9715                           postdec2	equ	0xFDD
  9716                           fsr2h	equ	0xFDA
  9717                           fsr2l	equ	0xFD9
  9718                           status	equ	0xFD8
  9719                           
  9720 ;; *************** function i1_password *****************
  9721 ;; Defined at:
  9722 ;;		line 612 in file "Lab7.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  password        2   46[BANK0 ] int 
  9727 ;;  password        2   44[BANK0 ] int 
  9728 ;;  password        2   42[BANK0 ] int 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9738 ;;      Params:         0       0       0       0       0       0       0
  9739 ;;      Locals:         0       6       0       0       0       0       0
  9740 ;;      Temps:          0       2       0       0       0       0       0
  9741 ;;      Totals:         0       8       0       0       0       0       0
  9742 ;;Total ram usage:        8 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    6
  9745 ;; This function calls:
  9746 ;;		i1_Read_b_eep
  9747 ;;		i1_keypad
  9748 ;;		i1_printf
  9749 ;; This function is called by:
  9750 ;;		_temp_sensor
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text17
  9755  00220A                     __ptext17:
  9756                           	opt stack 0
  9757  00220A                     i1_password:
  9758                           	opt stack 18
  9759                           
  9760                           ;Lab7.c: 615: {
  9761                           ;Lab7.c: 616: _delay((unsigned long)((250)*(20000000/4000.0)));
  9762                           
  9763                           ;incstack = 0
  9764                           ;Lab7.c: 614: while(1)
  9765  00220A  0E07               	movlw	7
  9766  00220C  0100               	movlb	0	; () banked
  9767  00220E  6FA9               	movwf	(??i1_password+1)& (0+255),b
  9768  002210  0E58               	movlw	88
  9769  002212  6FA8               	movwf	??i1_password& (0+255),b
  9770  002214  0E59               	movlw	89
  9771  002216                     i1u860_27:
  9772  002216  2EE8               	decfsz	wreg,f,c
  9773  002218  D7FE               	bra	i1u860_27
  9774  00221A  2FA8               	decfsz	??i1_password& (0+255),f,b
  9775  00221C  D7FC               	bra	i1u860_27
  9776  00221E  2FA9               	decfsz	(??i1_password+1)& (0+255),f,b
  9777  002220  D7FA               	bra	i1u860_27
  9778  002222  D000               	nop2	
  9779                           
  9780                           ;Lab7.c: 617: printf("PASSWORD:\t");
  9781  002224  0ED3               	movlw	low (STR_21+4)
  9782  002226  0100               	movlb	0	; () banked
  9783  002228  6F96               	movwf	i1printf@f& (0+255),b
  9784  00222A  0E7F               	movlw	high (STR_21+4)
  9785  00222C  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9786  00222E  ECDC  F00C         	call	i1_printf	;wreg free
  9787                           
  9788                           ;Lab7.c: 618: if(PORTBbits.RB4 == 1)
  9789  002232  A881               	btfss	3969,4,c	;volatile
  9790  002234  D031               	goto	i1l274
  9791                           
  9792                           ;Lab7.c: 619: {
  9793                           ;Lab7.c: 620: for(int i = 0;i < 4;i++){
  9794  002236  0E00               	movlw	0
  9795  002238  0100               	movlb	0	; () banked
  9796  00223A  6FAB               	movwf	(i1password@i+1)& (0+255),b
  9797  00223C  0E00               	movlw	0
  9798  00223E  6FAA               	movwf	i1password@i& (0+255),b
  9799  002240                     i1l5318:
  9800                           
  9801                           ; BSR set to: 0
  9802  002240  BFAB               	btfsc	(i1password@i+1)& (0+255),7,b
  9803  002242  D006               	goto	i1l275
  9804  002244  51AB               	movf	(i1password@i+1)& (0+255),w,b
  9805  002246  E151               	bnz	i1l5350
  9806  002248  0E04               	movlw	4
  9807  00224A  5DAA               	subwf	i1password@i& (0+255),w,b
  9808  00224C  B0D8               	btfsc	status,0,c
  9809  00224E  D04D               	goto	i1u766_20
  9810  002250                     i1l275:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;Lab7.c: 621: pass[i] = keypad();
  9814                           
  9815                           ; BSR set to: 0
  9816  002250  0E4C               	movlw	low _pass
  9817  002252  25AA               	addwf	i1password@i& (0+255),w,b
  9818  002254  6ED9               	movwf	fsr2l,c
  9819  002256  0E01               	movlw	high _pass
  9820  002258  21AB               	addwfc	(i1password@i+1)& (0+255),w,b
  9821  00225A  6EDA               	movwf	fsr2h,c
  9822  00225C  EC90  F00E         	call	i1_keypad	;wreg free
  9823  002260  0100               	movlb	0	; () banked
  9824  002262  5180               	movf	?i1_keypad& (0+255),w,b
  9825  002264  6EDF               	movwf	indf2,c
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;Lab7.c: 622: printf("*");
  9829  002266  0EFD               	movlw	low STR_22
  9830  002268  6F96               	movwf	i1printf@f& (0+255),b
  9831  00226A  0E7F               	movlw	high STR_22
  9832  00226C  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9833  00226E  ECDC  F00C         	call	i1_printf	;wreg free
  9834                           
  9835                           ;Lab7.c: 623: PORTBbits.RB4 = 0;
  9836  002272  9881               	bcf	3969,4,c	;volatile
  9837                           
  9838                           ;Lab7.c: 624: _delay((unsigned long)((500)*(20000000/4000.0)));
  9839  002274  0E0D               	movlw	13
  9840  002276  0100               	movlb	0	; () banked
  9841  002278  6FA9               	movwf	(??i1_password+1)& (0+255),b
  9842  00227A  0EAF               	movlw	175
  9843  00227C  6FA8               	movwf	??i1_password& (0+255),b
  9844  00227E  0EB6               	movlw	182
  9845  002280                     i1u861_27:
  9846  002280  2EE8               	decfsz	wreg,f,c
  9847  002282  D7FE               	bra	i1u861_27
  9848  002284  2FA8               	decfsz	??i1_password& (0+255),f,b
  9849  002286  D7FC               	bra	i1u861_27
  9850  002288  2FA9               	decfsz	(??i1_password+1)& (0+255),f,b
  9851  00228A  D7FA               	bra	i1u861_27
  9852  00228C  F000               	nop	
  9853                           
  9854                           ;Lab7.c: 625: PORTBbits.RB4 = 1;
  9855  00228E  8881               	bsf	3969,4,c	;volatile
  9856  002290  0100               	movlb	0	; () banked
  9857  002292  4BAA               	infsnz	i1password@i& (0+255),f,b
  9858  002294  2BAB               	incf	(i1password@i+1)& (0+255),f,b
  9859  002296  D7D4               	goto	i1l5318
  9860  002298                     i1l274:
  9861                           
  9862                           ;Lab7.c: 628: else
  9863                           ;Lab7.c: 629: {
  9864                           ;Lab7.c: 630: for(int i = 0;i < 4;i++){
  9865                           
  9866                           ; BSR set to: 0
  9867  002298  0E00               	movlw	0
  9868  00229A  0100               	movlb	0	; () banked
  9869  00229C  6FAD               	movwf	(i1password@i_1118+1)& (0+255),b
  9870  00229E  0E00               	movlw	0
  9871  0022A0  6FAC               	movwf	i1password@i_1118& (0+255),b
  9872                           
  9873                           ; BSR set to: 0
  9874  0022A2  BFAD               	btfsc	(i1password@i_1118+1)& (0+255),7,b
  9875  0022A4  D006               	goto	i1l278
  9876  0022A6  51AD               	movf	(i1password@i_1118+1)& (0+255),w,b
  9877  0022A8  E120               	bnz	i1l5350
  9878  0022AA  0E04               	movlw	4
  9879  0022AC  5DAC               	subwf	i1password@i_1118& (0+255),w,b
  9880  0022AE  B0D8               	btfsc	status,0,c
  9881  0022B0  D01C               	goto	i1u766_20
  9882  0022B2                     i1l278:
  9883                           
  9884                           ; BSR set to: 0
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;Lab7.c: 631: while(PIR1bits.RCIF == 0);
  9888  0022B2  AA9E               	btfss	3998,5,c	;volatile
  9889  0022B4  D7FE               	goto	i1l278
  9890                           
  9891                           ;Lab7.c: 632: pass[i] = RCREG;
  9892  0022B6  0E4C               	movlw	low _pass
  9893  0022B8  0100               	movlb	0	; () banked
  9894  0022BA  25AC               	addwf	i1password@i_1118& (0+255),w,b
  9895  0022BC  6ED9               	movwf	fsr2l,c
  9896  0022BE  0E01               	movlw	high _pass
  9897  0022C0  21AD               	addwfc	(i1password@i_1118+1)& (0+255),w,b
  9898  0022C2  6EDA               	movwf	fsr2h,c
  9899  0022C4  CFAE FFDF          	movff	4014,indf2	;volatile
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;Lab7.c: 633: printf("*");
  9903  0022C8  0EFD               	movlw	low STR_22
  9904  0022CA  6F96               	movwf	i1printf@f& (0+255),b
  9905  0022CC  0E7F               	movlw	high STR_22
  9906  0022CE  6F97               	movwf	(i1printf@f+1)& (0+255),b
  9907  0022D0  ECDC  F00C         	call	i1_printf	;wreg free
  9908  0022D4  0100               	movlb	0	; () banked
  9909  0022D6  4BAC               	infsnz	i1password@i_1118& (0+255),f,b
  9910  0022D8  2BAD               	incf	(i1password@i_1118+1)& (0+255),f,b
  9911                           
  9912                           ; BSR set to: 0
  9913  0022DA  BFAD               	btfsc	(i1password@i_1118+1)& (0+255),7,b
  9914  0022DC  D7EA               	goto	i1l278
  9915  0022DE  51AD               	movf	(i1password@i_1118+1)& (0+255),w,b
  9916  0022E0  E104               	bnz	i1l5350
  9917  0022E2  0E04               	movlw	4
  9918  0022E4  5DAC               	subwf	i1password@i_1118& (0+255),w,b
  9919  0022E6  A0D8               	btfss	status,0,c
  9920  0022E8  D7E4               	goto	i1l278
  9921  0022EA                     i1u766_20:
  9922  0022EA                     i1l5350:
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;Lab7.c: 634: }
  9926                           ;Lab7.c: 635: }
  9927                           ;Lab7.c: 636: pass_loc = 0x00;
  9928  0022EA  0E00               	movlw	0
  9929  0022EC  0101               	movlb	1	; () banked
  9930  0022EE  6F5A               	movwf	_pass_loc& (0+255),b
  9931                           
  9932                           ;Lab7.c: 637: for(int i = 0;i < 4;i++)
  9933  0022F0  0E00               	movlw	0
  9934  0022F2  0100               	movlb	0	; () banked
  9935  0022F4  6FAF               	movwf	(i1password@i_1120+1)& (0+255),b
  9936  0022F6  0E00               	movlw	0
  9937  0022F8  6FAE               	movwf	i1password@i_1120& (0+255),b
  9938  0022FA                     i1l5352:
  9939                           
  9940                           ; BSR set to: 0
  9941  0022FA  BFAF               	btfsc	(i1password@i_1120+1)& (0+255),7,b
  9942  0022FC  D006               	goto	i1l283
  9943  0022FE  51AF               	movf	(i1password@i_1120+1)& (0+255),w,b
  9944  002300  E125               	bnz	i1l5372
  9945  002302  0E04               	movlw	4
  9946  002304  5DAE               	subwf	i1password@i_1120& (0+255),w,b
  9947  002306  B0D8               	btfsc	status,0,c
  9948  002308  D021               	goto	i1u769_20
  9949  00230A                     i1l283:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;Lab7.c: 638: {
  9953                           ;Lab7.c: 639: pass_check = Read_b_eep(pass_loc);
  9954                           
  9955                           ; BSR set to: 0
  9956  00230A  C15A  F080         	movff	_pass_loc,i1Read_b_eep@badd
  9957  00230E  6B81               	clrf	(i1Read_b_eep@badd+1)& (0+255),b
  9958  002310  EC4C  F018         	call	i1_Read_b_eep	;wreg free
  9959  002314  0101               	movlb	1	; () banked
  9960  002316  6F5B               	movwf	_pass_check& (0+255),b
  9961                           
  9962                           ; BSR set to: 1
  9963                           ;Lab7.c: 640: pass_loc+=1;
  9964  002318  2B5A               	incf	_pass_loc& (0+255),f,b
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;Lab7.c: 641: if(pass_check != pass[i])
  9968  00231A  0E4C               	movlw	low _pass
  9969  00231C  0100               	movlb	0	; () banked
  9970  00231E  25AE               	addwf	i1password@i_1120& (0+255),w,b
  9971  002320  6ED9               	movwf	fsr2l,c
  9972  002322  0E01               	movlw	high _pass
  9973  002324  21AF               	addwfc	(i1password@i_1120+1)& (0+255),w,b
  9974  002326  6EDA               	movwf	fsr2h,c
  9975  002328  0101               	movlb	1	; () banked
  9976  00232A  515B               	movf	_pass_check& (0+255),w,b
  9977  00232C  18DE               	xorwf	postinc2,w,c
  9978  00232E  B4D8               	btfsc	status,2,c
  9979  002330  D005               	goto	i1l285
  9980                           
  9981                           ; BSR set to: 1
  9982                           ;Lab7.c: 642: {
  9983                           ;Lab7.c: 643: check = 1;
  9984  002332  0E00               	movlw	0
  9985  002334  6F59               	movwf	(_check+1)& (0+255),b
  9986  002336  0E01               	movlw	1
  9987  002338  6F58               	movwf	_check& (0+255),b
  9988                           
  9989                           ;Lab7.c: 644: break;
  9990  00233A  D008               	goto	i1u769_20
  9991  00233C                     i1l285:
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;Lab7.c: 646: else
  9995                           ;Lab7.c: 647: {
  9996                           ;Lab7.c: 648: check = 0;
  9997                           
  9998                           ; BSR set to: 1
  9999  00233C  0E00               	movlw	0
 10000  00233E  6F59               	movwf	(_check+1)& (0+255),b
 10001  002340  0E00               	movlw	0
 10002  002342  6F58               	movwf	_check& (0+255),b
 10003                           
 10004                           ; BSR set to: 1
 10005                           
 10006                           ; BSR set to: 1
 10007  002344  0100               	movlb	0	; () banked
 10008  002346  4BAE               	infsnz	i1password@i_1120& (0+255),f,b
 10009  002348  2BAF               	incf	(i1password@i_1120+1)& (0+255),f,b
 10010  00234A  D7D7               	goto	i1l5352
 10011  00234C                     i1u769_20:
 10012  00234C                     i1l5372:
 10013                           
 10014                           ;Lab7.c: 649: }
 10015                           ;Lab7.c: 651: }
 10016                           ;Lab7.c: 653: if(check == 0)
 10017  00234C  0101               	movlb	1	; () banked
 10018  00234E  5158               	movf	_check& (0+255),w,b
 10019  002350  1159               	iorwf	(_check+1)& (0+255),w,b
 10020  002352  A4D8               	btfss	status,2,c
 10021  002354  D008               	goto	i1l287
 10022                           
 10023                           ; BSR set to: 1
 10024                           ;Lab7.c: 654: {
 10025                           ;Lab7.c: 655: printf("\n\rPASSWORD VALID\n\r\n\r");
 10026  002356  0EE9               	movlw	low STR_50
 10027  002358  0100               	movlb	0	; () banked
 10028  00235A  6F96               	movwf	i1printf@f& (0+255),b
 10029  00235C  0E7E               	movlw	high STR_50
 10030  00235E  6F97               	movwf	(i1printf@f+1)& (0+255),b
 10031  002360  ECDC  F00C         	call	i1_printf	;wreg free
 10032                           
 10033                           ;Lab7.c: 656: return;
 10034  002364  0012               	return	
 10035  002366                     i1l287:
 10036                           
 10037                           ;Lab7.c: 658: else
 10038                           ;Lab7.c: 659: {
 10039                           ;Lab7.c: 660: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
 10040  002366  0E02               	movlw	low STR_51
 10041  002368  0100               	movlb	0	; () banked
 10042  00236A  6F96               	movwf	i1printf@f& (0+255),b
 10043  00236C  0E7E               	movlw	high STR_51
 10044  00236E  6F97               	movwf	(i1printf@f+1)& (0+255),b
 10045  002370  ECDC  F00C         	call	i1_printf	;wreg free
 10046  002374  D74A               	goto	i1_password
 10047  002376                     __end_ofi1_password:
 10048                           	opt stack 0
 10049                           pclatu	equ	0xFFB
 10050                           pclath	equ	0xFFA
 10051                           tblptru	equ	0xFF8
 10052                           tblptrh	equ	0xFF7
 10053                           tblptrl	equ	0xFF6
 10054                           tablat	equ	0xFF5
 10055                           prodh	equ	0xFF4
 10056                           prodl	equ	0xFF3
 10057                           intcon	equ	0xFF2
 10058                           intcon2	equ	0xFF1
 10059                           intcon3	equ	0xFF0
 10060                           postinc0	equ	0xFEE
 10061                           fsr0h	equ	0xFEA
 10062                           fsr0l	equ	0xFE9
 10063                           wreg	equ	0xFE8
 10064                           fsr1h	equ	0xFE2
 10065                           fsr1l	equ	0xFE1
 10066                           bsr	equ	0xFE0
 10067                           indf2	equ	0xFDF
 10068                           postinc2	equ	0xFDE
 10069                           postdec2	equ	0xFDD
 10070                           fsr2h	equ	0xFDA
 10071                           fsr2l	equ	0xFD9
 10072                           status	equ	0xFD8
 10073                           
 10074 ;; *************** function i1_keypad *****************
 10075 ;; Defined at:
 10076 ;;		line 1086 in file "Lab7.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  2    0[BANK0 ] int 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10090 ;;      Params:         0       2       0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0
 10093 ;;      Totals:         0       2       0       0       0       0       0
 10094 ;;Total ram usage:        2 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    4
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_temp_sensor
 10101 ;;		i1_password
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text18
 10106  001D20                     __ptext18:
 10107                           	opt stack 0
 10108  001D20                     i1_keypad:
 10109                           	opt stack 19
 10110                           
 10111                           ;Lab7.c: 1089: {
 10112                           ;Lab7.c: 1091: TRISDbits.RD0 = 0;
 10113                           
 10114                           ;incstack = 0
 10115                           ;Lab7.c: 1088: while(1)
 10116  001D20  9095               	bcf	3989,0,c	;volatile
 10117                           
 10118                           ;Lab7.c: 1092: TRISDbits.RD1 = 0;
 10119  001D22  9295               	bcf	3989,1,c	;volatile
 10120                           
 10121                           ;Lab7.c: 1093: TRISDbits.RD2 = 0;
 10122  001D24  9495               	bcf	3989,2,c	;volatile
 10123                           
 10124                           ;Lab7.c: 1094: TRISDbits.RD3 = 0;
 10125  001D26  9695               	bcf	3989,3,c	;volatile
 10126                           
 10127                           ;Lab7.c: 1095: TRISDbits.RD4 = 1;
 10128  001D28  8895               	bsf	3989,4,c	;volatile
 10129                           
 10130                           ;Lab7.c: 1096: TRISDbits.RD5 = 1;
 10131  001D2A  8A95               	bsf	3989,5,c	;volatile
 10132                           
 10133                           ;Lab7.c: 1097: TRISDbits.RD6 = 1;
 10134  001D2C  8C95               	bsf	3989,6,c	;volatile
 10135                           
 10136                           ;Lab7.c: 1098: TRISDbits.RD7 = 1;
 10137  001D2E  8E95               	bsf	3989,7,c	;volatile
 10138                           
 10139                           ;Lab7.c: 1101: PORTDbits.RD0 = 1;
 10140  001D30  8083               	bsf	3971,0,c	;volatile
 10141                           
 10142                           ;Lab7.c: 1102: PORTDbits.RD1 = 0;
 10143  001D32  9283               	bcf	3971,1,c	;volatile
 10144                           
 10145                           ;Lab7.c: 1103: PORTDbits.RD2 = 0;
 10146  001D34  9483               	bcf	3971,2,c	;volatile
 10147                           
 10148                           ;Lab7.c: 1104: PORTDbits.RD3 = 0;
 10149  001D36  9683               	bcf	3971,3,c	;volatile
 10150                           
 10151                           ;Lab7.c: 1105: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10152  001D38  B883               	btfsc	3971,4,c	;volatile
 10153  001D3A  BA83               	btfsc	3971,5,c	;volatile
 10154  001D3C  D009               	goto	i1l421
 10155  001D3E  AC83               	btfss	3971,6,c	;volatile
 10156  001D40  BE83               	btfsc	3971,7,c	;volatile
 10157  001D42  D006               	goto	i1l421
 10158                           
 10159                           ;Lab7.c: 1106: {
 10160                           ;Lab7.c: 1107: return '1';
 10161  001D44  0E00               	movlw	0
 10162  001D46  0100               	movlb	0	; () banked
 10163  001D48  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10164  001D4A  0E31               	movlw	49
 10165  001D4C  6F80               	movwf	?i1_keypad& (0+255),b
 10166                           
 10167                           ; BSR set to: 0
 10168  001D4E  0012               	return	
 10169  001D50                     i1l421:
 10170                           
 10171                           ;Lab7.c: 1108: }
 10172                           ;Lab7.c: 1109: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10173  001D50  A883               	btfss	3971,4,c	;volatile
 10174  001D52  AA83               	btfss	3971,5,c	;volatile
 10175  001D54  D009               	goto	i1l423
 10176  001D56  AC83               	btfss	3971,6,c	;volatile
 10177  001D58  BE83               	btfsc	3971,7,c	;volatile
 10178  001D5A  D006               	goto	i1l423
 10179                           
 10180                           ;Lab7.c: 1110: {
 10181                           ;Lab7.c: 1111: return '2';
 10182  001D5C  0E00               	movlw	0
 10183  001D5E  0100               	movlb	0	; () banked
 10184  001D60  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10185  001D62  0E32               	movlw	50
 10186  001D64  6F80               	movwf	?i1_keypad& (0+255),b
 10187                           
 10188                           ; BSR set to: 0
 10189  001D66  0012               	return	
 10190  001D68                     i1l423:
 10191                           
 10192                           ;Lab7.c: 1112: }
 10193                           ;Lab7.c: 1113: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 10194  001D68  A883               	btfss	3971,4,c	;volatile
 10195  001D6A  BA83               	btfsc	3971,5,c	;volatile
 10196  001D6C  D009               	goto	i1l424
 10197  001D6E  BC83               	btfsc	3971,6,c	;volatile
 10198  001D70  BE83               	btfsc	3971,7,c	;volatile
 10199  001D72  D006               	goto	i1l424
 10200                           
 10201                           ;Lab7.c: 1114: {
 10202                           ;Lab7.c: 1115: return '3';
 10203  001D74  0E00               	movlw	0
 10204  001D76  0100               	movlb	0	; () banked
 10205  001D78  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10206  001D7A  0E33               	movlw	51
 10207  001D7C  6F80               	movwf	?i1_keypad& (0+255),b
 10208                           
 10209                           ; BSR set to: 0
 10210  001D7E  0012               	return	
 10211  001D80                     i1l424:
 10212                           
 10213                           ;Lab7.c: 1116: }
 10214                           ;Lab7.c: 1117: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 10215  001D80  A883               	btfss	3971,4,c	;volatile
 10216  001D82  BA83               	btfsc	3971,5,c	;volatile
 10217  001D84  D009               	goto	i1l425
 10218  001D86  AC83               	btfss	3971,6,c	;volatile
 10219  001D88  AE83               	btfss	3971,7,c	;volatile
 10220  001D8A  D006               	goto	i1l425
 10221                           
 10222                           ;Lab7.c: 1118: {
 10223                           ;Lab7.c: 1119: return 'A';
 10224  001D8C  0E00               	movlw	0
 10225  001D8E  0100               	movlb	0	; () banked
 10226  001D90  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10227  001D92  0E41               	movlw	65
 10228  001D94  6F80               	movwf	?i1_keypad& (0+255),b
 10229                           
 10230                           ; BSR set to: 0
 10231  001D96  0012               	return	
 10232  001D98                     i1l425:
 10233                           
 10234                           ;Lab7.c: 1120: }
 10235                           ;Lab7.c: 1122: PORTDbits.RD0 = 0;
 10236  001D98  9083               	bcf	3971,0,c	;volatile
 10237                           
 10238                           ;Lab7.c: 1123: PORTDbits.RD1 = 1;
 10239  001D9A  8283               	bsf	3971,1,c	;volatile
 10240                           
 10241                           ;Lab7.c: 1124: PORTDbits.RD2 = 0;
 10242  001D9C  9483               	bcf	3971,2,c	;volatile
 10243                           
 10244                           ;Lab7.c: 1125: PORTDbits.RD3 = 0;
 10245  001D9E  9683               	bcf	3971,3,c	;volatile
 10246                           
 10247                           ;Lab7.c: 1126: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10248  001DA0  B883               	btfsc	3971,4,c	;volatile
 10249  001DA2  BA83               	btfsc	3971,5,c	;volatile
 10250  001DA4  D009               	goto	i1l426
 10251  001DA6  AC83               	btfss	3971,6,c	;volatile
 10252  001DA8  BE83               	btfsc	3971,7,c	;volatile
 10253  001DAA  D006               	goto	i1l426
 10254                           
 10255                           ;Lab7.c: 1127: {
 10256                           ;Lab7.c: 1128: return '4';
 10257  001DAC  0E00               	movlw	0
 10258  001DAE  0100               	movlb	0	; () banked
 10259  001DB0  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10260  001DB2  0E34               	movlw	52
 10261  001DB4  6F80               	movwf	?i1_keypad& (0+255),b
 10262                           
 10263                           ; BSR set to: 0
 10264  001DB6  0012               	return	
 10265  001DB8                     i1l426:
 10266                           
 10267                           ;Lab7.c: 1129: }
 10268                           ;Lab7.c: 1130: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10269  001DB8  A883               	btfss	3971,4,c	;volatile
 10270  001DBA  AA83               	btfss	3971,5,c	;volatile
 10271  001DBC  D009               	goto	i1l427
 10272  001DBE  AC83               	btfss	3971,6,c	;volatile
 10273  001DC0  BE83               	btfsc	3971,7,c	;volatile
 10274  001DC2  D006               	goto	i1l427
 10275                           
 10276                           ;Lab7.c: 1131: {
 10277                           ;Lab7.c: 1132: return '5';
 10278  001DC4  0E00               	movlw	0
 10279  001DC6  0100               	movlb	0	; () banked
 10280  001DC8  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10281  001DCA  0E35               	movlw	53
 10282  001DCC  6F80               	movwf	?i1_keypad& (0+255),b
 10283                           
 10284                           ; BSR set to: 0
 10285  001DCE  0012               	return	
 10286  001DD0                     i1l427:
 10287                           
 10288                           ;Lab7.c: 1133: }
 10289                           ;Lab7.c: 1134: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 10290  001DD0  A883               	btfss	3971,4,c	;volatile
 10291  001DD2  BA83               	btfsc	3971,5,c	;volatile
 10292  001DD4  D009               	goto	i1l428
 10293  001DD6  BC83               	btfsc	3971,6,c	;volatile
 10294  001DD8  BE83               	btfsc	3971,7,c	;volatile
 10295  001DDA  D006               	goto	i1l428
 10296                           
 10297                           ;Lab7.c: 1135: {
 10298                           ;Lab7.c: 1136: return '6';
 10299  001DDC  0E00               	movlw	0
 10300  001DDE  0100               	movlb	0	; () banked
 10301  001DE0  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10302  001DE2  0E36               	movlw	54
 10303  001DE4  6F80               	movwf	?i1_keypad& (0+255),b
 10304                           
 10305                           ; BSR set to: 0
 10306  001DE6  0012               	return	
 10307  001DE8                     i1l428:
 10308                           
 10309                           ;Lab7.c: 1137: }
 10310                           ;Lab7.c: 1138: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 10311  001DE8  A883               	btfss	3971,4,c	;volatile
 10312  001DEA  BA83               	btfsc	3971,5,c	;volatile
 10313  001DEC  D009               	goto	i1l429
 10314  001DEE  AC83               	btfss	3971,6,c	;volatile
 10315  001DF0  AE83               	btfss	3971,7,c	;volatile
 10316  001DF2  D006               	goto	i1l429
 10317                           
 10318                           ;Lab7.c: 1139: {
 10319                           ;Lab7.c: 1140: return 'B';
 10320  001DF4  0E00               	movlw	0
 10321  001DF6  0100               	movlb	0	; () banked
 10322  001DF8  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10323  001DFA  0E42               	movlw	66
 10324  001DFC  6F80               	movwf	?i1_keypad& (0+255),b
 10325                           
 10326                           ; BSR set to: 0
 10327  001DFE  0012               	return	
 10328  001E00                     i1l429:
 10329                           
 10330                           ;Lab7.c: 1141: }
 10331                           ;Lab7.c: 1143: PORTDbits.RD0 = 0;
 10332  001E00  9083               	bcf	3971,0,c	;volatile
 10333                           
 10334                           ;Lab7.c: 1144: PORTDbits.RD1 = 0;
 10335  001E02  9283               	bcf	3971,1,c	;volatile
 10336                           
 10337                           ;Lab7.c: 1145: PORTDbits.RD2 = 1;
 10338  001E04  8483               	bsf	3971,2,c	;volatile
 10339                           
 10340                           ;Lab7.c: 1146: PORTDbits.RD3 = 0;
 10341  001E06  9683               	bcf	3971,3,c	;volatile
 10342                           
 10343                           ;Lab7.c: 1147: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10344  001E08  B883               	btfsc	3971,4,c	;volatile
 10345  001E0A  BA83               	btfsc	3971,5,c	;volatile
 10346  001E0C  D009               	goto	i1l430
 10347  001E0E  AC83               	btfss	3971,6,c	;volatile
 10348  001E10  BE83               	btfsc	3971,7,c	;volatile
 10349  001E12  D006               	goto	i1l430
 10350                           
 10351                           ;Lab7.c: 1148: {
 10352                           ;Lab7.c: 1149: return '7';
 10353  001E14  0E00               	movlw	0
 10354  001E16  0100               	movlb	0	; () banked
 10355  001E18  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10356  001E1A  0E37               	movlw	55
 10357  001E1C  6F80               	movwf	?i1_keypad& (0+255),b
 10358                           
 10359                           ; BSR set to: 0
 10360  001E1E  0012               	return	
 10361  001E20                     i1l430:
 10362                           
 10363                           ;Lab7.c: 1150: }
 10364                           ;Lab7.c: 1151: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10365  001E20  A883               	btfss	3971,4,c	;volatile
 10366  001E22  AA83               	btfss	3971,5,c	;volatile
 10367  001E24  D009               	goto	i1l431
 10368  001E26  AC83               	btfss	3971,6,c	;volatile
 10369  001E28  BE83               	btfsc	3971,7,c	;volatile
 10370  001E2A  D006               	goto	i1l431
 10371                           
 10372                           ;Lab7.c: 1152: {
 10373                           ;Lab7.c: 1153: return '8';
 10374  001E2C  0E00               	movlw	0
 10375  001E2E  0100               	movlb	0	; () banked
 10376  001E30  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10377  001E32  0E38               	movlw	56
 10378  001E34  6F80               	movwf	?i1_keypad& (0+255),b
 10379                           
 10380                           ; BSR set to: 0
 10381  001E36  0012               	return	
 10382  001E38                     i1l431:
 10383                           
 10384                           ;Lab7.c: 1154: }
 10385                           ;Lab7.c: 1155: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 10386  001E38  A883               	btfss	3971,4,c	;volatile
 10387  001E3A  BA83               	btfsc	3971,5,c	;volatile
 10388  001E3C  D009               	goto	i1l432
 10389  001E3E  BC83               	btfsc	3971,6,c	;volatile
 10390  001E40  BE83               	btfsc	3971,7,c	;volatile
 10391  001E42  D006               	goto	i1l432
 10392                           
 10393                           ;Lab7.c: 1156: {
 10394                           ;Lab7.c: 1157: return '9';
 10395  001E44  0E00               	movlw	0
 10396  001E46  0100               	movlb	0	; () banked
 10397  001E48  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10398  001E4A  0E39               	movlw	57
 10399  001E4C  6F80               	movwf	?i1_keypad& (0+255),b
 10400                           
 10401                           ; BSR set to: 0
 10402  001E4E  0012               	return	
 10403  001E50                     i1l432:
 10404                           
 10405                           ;Lab7.c: 1158: }
 10406                           ;Lab7.c: 1159: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 10407  001E50  A883               	btfss	3971,4,c	;volatile
 10408  001E52  BA83               	btfsc	3971,5,c	;volatile
 10409  001E54  D009               	goto	i1l433
 10410  001E56  AC83               	btfss	3971,6,c	;volatile
 10411  001E58  AE83               	btfss	3971,7,c	;volatile
 10412  001E5A  D006               	goto	i1l433
 10413                           
 10414                           ;Lab7.c: 1160: {
 10415                           ;Lab7.c: 1161: return 'C';
 10416  001E5C  0E00               	movlw	0
 10417  001E5E  0100               	movlb	0	; () banked
 10418  001E60  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10419  001E62  0E43               	movlw	67
 10420  001E64  6F80               	movwf	?i1_keypad& (0+255),b
 10421                           
 10422                           ; BSR set to: 0
 10423  001E66  0012               	return	
 10424  001E68                     i1l433:
 10425                           
 10426                           ;Lab7.c: 1162: }
 10427                           ;Lab7.c: 1164: PORTDbits.RD0 = 0;
 10428  001E68  9083               	bcf	3971,0,c	;volatile
 10429                           
 10430                           ;Lab7.c: 1165: PORTDbits.RD1 = 0;
 10431  001E6A  9283               	bcf	3971,1,c	;volatile
 10432                           
 10433                           ;Lab7.c: 1166: PORTDbits.RD2 = 0;
 10434  001E6C  9483               	bcf	3971,2,c	;volatile
 10435                           
 10436                           ;Lab7.c: 1167: PORTDbits.RD3 = 1;
 10437  001E6E  8683               	bsf	3971,3,c	;volatile
 10438                           
 10439                           ;Lab7.c: 1168: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10440  001E70  B883               	btfsc	3971,4,c	;volatile
 10441  001E72  BA83               	btfsc	3971,5,c	;volatile
 10442  001E74  D009               	goto	i1l434
 10443  001E76  AC83               	btfss	3971,6,c	;volatile
 10444  001E78  BE83               	btfsc	3971,7,c	;volatile
 10445  001E7A  D006               	goto	i1l434
 10446                           
 10447                           ;Lab7.c: 1169: {
 10448                           ;Lab7.c: 1170: return '*';
 10449  001E7C  0E00               	movlw	0
 10450  001E7E  0100               	movlb	0	; () banked
 10451  001E80  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10452  001E82  0E2A               	movlw	42
 10453  001E84  6F80               	movwf	?i1_keypad& (0+255),b
 10454                           
 10455                           ; BSR set to: 0
 10456  001E86  0012               	return	
 10457  001E88                     i1l434:
 10458                           
 10459                           ;Lab7.c: 1171: }
 10460                           ;Lab7.c: 1172: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 10461  001E88  A883               	btfss	3971,4,c	;volatile
 10462  001E8A  AA83               	btfss	3971,5,c	;volatile
 10463  001E8C  D009               	goto	i1l435
 10464  001E8E  AC83               	btfss	3971,6,c	;volatile
 10465  001E90  BE83               	btfsc	3971,7,c	;volatile
 10466  001E92  D006               	goto	i1l435
 10467                           
 10468                           ;Lab7.c: 1173: {
 10469                           ;Lab7.c: 1174: return '0';
 10470  001E94  0E00               	movlw	0
 10471  001E96  0100               	movlb	0	; () banked
 10472  001E98  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10473  001E9A  0E30               	movlw	48
 10474  001E9C  6F80               	movwf	?i1_keypad& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477  001E9E  0012               	return	
 10478  001EA0                     i1l435:
 10479                           
 10480                           ;Lab7.c: 1175: }
 10481                           ;Lab7.c: 1176: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 10482  001EA0  A883               	btfss	3971,4,c	;volatile
 10483  001EA2  BA83               	btfsc	3971,5,c	;volatile
 10484  001EA4  D009               	goto	i1l436
 10485  001EA6  BC83               	btfsc	3971,6,c	;volatile
 10486  001EA8  BE83               	btfsc	3971,7,c	;volatile
 10487  001EAA  D006               	goto	i1l436
 10488                           
 10489                           ;Lab7.c: 1177: {
 10490                           ;Lab7.c: 1178: return '#';
 10491  001EAC  0E00               	movlw	0
 10492  001EAE  0100               	movlb	0	; () banked
 10493  001EB0  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10494  001EB2  0E23               	movlw	35
 10495  001EB4  6F80               	movwf	?i1_keypad& (0+255),b
 10496                           
 10497                           ; BSR set to: 0
 10498  001EB6  0012               	return	
 10499  001EB8                     i1l436:
 10500                           
 10501                           ;Lab7.c: 1179: }
 10502                           ;Lab7.c: 1180: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 10503  001EB8  A883               	btfss	3971,4,c	;volatile
 10504  001EBA  BA83               	btfsc	3971,5,c	;volatile
 10505  001EBC  D731               	goto	i1_keypad
 10506  001EBE  AC83               	btfss	3971,6,c	;volatile
 10507  001EC0  AE83               	btfss	3971,7,c	;volatile
 10508  001EC2  D72E               	goto	i1_keypad
 10509                           
 10510                           ;Lab7.c: 1181: {
 10511                           ;Lab7.c: 1182: return 'D';
 10512  001EC4  0E00               	movlw	0
 10513  001EC6  0100               	movlb	0	; () banked
 10514  001EC8  6F81               	movwf	(?i1_keypad+1)& (0+255),b
 10515  001ECA  0E44               	movlw	68
 10516  001ECC  6F80               	movwf	?i1_keypad& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519  001ECE  0012               	return	
 10520  001ED0                     __end_ofi1_keypad:
 10521                           	opt stack 0
 10522                           pclatu	equ	0xFFB
 10523                           pclath	equ	0xFFA
 10524                           tblptru	equ	0xFF8
 10525                           tblptrh	equ	0xFF7
 10526                           tblptrl	equ	0xFF6
 10527                           tablat	equ	0xFF5
 10528                           prodh	equ	0xFF4
 10529                           prodl	equ	0xFF3
 10530                           intcon	equ	0xFF2
 10531                           intcon2	equ	0xFF1
 10532                           intcon3	equ	0xFF0
 10533                           postinc0	equ	0xFEE
 10534                           fsr0h	equ	0xFEA
 10535                           fsr0l	equ	0xFE9
 10536                           wreg	equ	0xFE8
 10537                           fsr1h	equ	0xFE2
 10538                           fsr1l	equ	0xFE1
 10539                           bsr	equ	0xFE0
 10540                           indf2	equ	0xFDF
 10541                           postinc2	equ	0xFDE
 10542                           postdec2	equ	0xFDD
 10543                           fsr2h	equ	0xFDA
 10544                           fsr2l	equ	0xFD9
 10545                           status	equ	0xFD8
 10546                           
 10547 ;; *************** function i1_Read_b_eep *****************
 10548 ;; Defined at:
 10549 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\EEP\read_B.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;  badd            2    0[BANK0 ] unsigned int 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      unsigned char 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10563 ;;      Params:         0       2       0       0       0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0
 10566 ;;      Totals:         0       2       0       0       0       0       0
 10567 ;;Total ram usage:        2 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    4
 10570 ;; This function calls:
 10571 ;;		Nothing
 10572 ;; This function is called by:
 10573 ;;		_temp_sensor
 10574 ;;		i1_password
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text19
 10579  003098                     __ptext19:
 10580                           	opt stack 0
 10581  003098                     i1_Read_b_eep:
 10582                           	opt stack 19
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;incstack = 0
 10586  003098  C080  FFA9         	movff	i1Read_b_eep@badd,4009	;volatile
 10587  00309C  9CA6               	bcf	4006,6,c	;volsfr
 10588  00309E  9EA6               	bcf	4006,7,c	;volsfr
 10589  0030A0  80A6               	bsf	4006,0,c	;volsfr
 10590  0030A2  F000               	nop	
 10591  0030A4  F000               	nop	
 10592  0030A6  50A8               	movf	4008,w,c	;volatile
 10593  0030A8  0012               	return	
 10594  0030AA                     __end_ofi1_Read_b_eep:
 10595                           	opt stack 0
 10596                           pclatu	equ	0xFFB
 10597                           pclath	equ	0xFFA
 10598                           tblptru	equ	0xFF8
 10599                           tblptrh	equ	0xFF7
 10600                           tblptrl	equ	0xFF6
 10601                           tablat	equ	0xFF5
 10602                           prodh	equ	0xFF4
 10603                           prodl	equ	0xFF3
 10604                           intcon	equ	0xFF2
 10605                           intcon2	equ	0xFF1
 10606                           intcon3	equ	0xFF0
 10607                           postinc0	equ	0xFEE
 10608                           fsr0h	equ	0xFEA
 10609                           fsr0l	equ	0xFE9
 10610                           wreg	equ	0xFE8
 10611                           fsr1h	equ	0xFE2
 10612                           fsr1l	equ	0xFE1
 10613                           bsr	equ	0xFE0
 10614                           indf2	equ	0xFDF
 10615                           postinc2	equ	0xFDE
 10616                           postdec2	equ	0xFDD
 10617                           fsr2h	equ	0xFDA
 10618                           fsr2l	equ	0xFD9
 10619                           status	equ	0xFD8
 10620                           
 10621 ;; *************** function i1_Clear *****************
 10622 ;; Defined at:
 10623 ;;		line 112 in file "Lab7.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10637 ;;      Params:         0       0       0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:    6
 10644 ;; This function calls:
 10645 ;;		i1_printf
 10646 ;; This function is called by:
 10647 ;;		_temp_sensor
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text20
 10652  00304E                     __ptext20:
 10653                           	opt stack 0
 10654  00304E                     i1_Clear:
 10655                           	opt stack 18
 10656                           
 10657                           ;Lab7.c: 114: printf("\033[2J");
 10658                           
 10659                           ;incstack = 0
 10660  00304E  0EF5               	movlw	low STR_1
 10661  003050  0100               	movlb	0	; () banked
 10662  003052  6F96               	movwf	i1printf@f& (0+255),b
 10663  003054  0E7F               	movlw	high STR_1
 10664  003056  6F97               	movwf	(i1printf@f+1)& (0+255),b
 10665  003058  ECDC  F00C         	call	i1_printf	;wreg free
 10666                           
 10667                           ;Lab7.c: 115: printf("\033[0;0H");
 10668  00305C  0EEE               	movlw	low STR_2
 10669  00305E  0100               	movlb	0	; () banked
 10670  003060  6F96               	movwf	i1printf@f& (0+255),b
 10671  003062  0E7F               	movlw	high STR_2
 10672  003064  6F97               	movwf	(i1printf@f+1)& (0+255),b
 10673  003066  ECDC  F00C         	call	i1_printf	;wreg free
 10674  00306A  0012               	return		;funcret
 10675  00306C                     __end_ofi1_Clear:
 10676                           	opt stack 0
 10677                           pclatu	equ	0xFFB
 10678                           pclath	equ	0xFFA
 10679                           tblptru	equ	0xFF8
 10680                           tblptrh	equ	0xFF7
 10681                           tblptrl	equ	0xFF6
 10682                           tablat	equ	0xFF5
 10683                           prodh	equ	0xFF4
 10684                           prodl	equ	0xFF3
 10685                           intcon	equ	0xFF2
 10686                           intcon2	equ	0xFF1
 10687                           intcon3	equ	0xFF0
 10688                           postinc0	equ	0xFEE
 10689                           fsr0h	equ	0xFEA
 10690                           fsr0l	equ	0xFE9
 10691                           wreg	equ	0xFE8
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           bsr	equ	0xFE0
 10695                           indf2	equ	0xFDF
 10696                           postinc2	equ	0xFDE
 10697                           postdec2	equ	0xFDD
 10698                           fsr2h	equ	0xFDA
 10699                           fsr2l	equ	0xFD9
 10700                           status	equ	0xFD8
 10701                           
 10702 ;; *************** function i1_printf *****************
 10703 ;; Defined at:
 10704 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  f               2   22[BANK0 ] PTR const unsigned char 
 10707 ;;		 -> STR_105(23), STR_104(9), STR_103(28), STR_102(26), 
 10708 ;;		 -> STR_101(25), STR_100(135), STR_99(18), STR_98(29), 
 10709 ;;		 -> STR_97(16), STR_96(19), STR_95(20), STR_94(14), 
 10710 ;;		 -> STR_93(15), STR_92(23), STR_91(38), STR_90(3), 
 10711 ;;		 -> STR_89(36), STR_88(3), STR_87(36), STR_86(36), 
 10712 ;;		 -> STR_85(26), STR_84(25), STR_83(25), STR_82(153), 
 10713 ;;		 -> STR_81(18), STR_80(29), STR_79(16), STR_78(19), 
 10714 ;;		 -> STR_77(20), STR_76(14), STR_75(15), STR_74(23), 
 10715 ;;		 -> STR_73(19), STR_72(18), STR_71(25), STR_70(119), 
 10716 ;;		 -> STR_69(18), STR_68(29), STR_67(16), STR_66(19), 
 10717 ;;		 -> STR_65(20), STR_64(14), STR_63(15), STR_62(23), 
 10718 ;;		 -> STR_61(21), STR_60(25), STR_59(111), STR_58(18), 
 10719 ;;		 -> STR_57(29), STR_56(16), STR_55(19), STR_54(20), 
 10720 ;;		 -> STR_53(14), STR_52(15), STR_51(28), STR_50(21), 
 10721 ;;		 -> STR_49(2), STR_48(2), STR_47(11), STR_46(54), 
 10722 ;;		 -> STR_45(25), STR_44(32), STR_43(37), STR_42(2), 
 10723 ;;		 -> STR_41(32), STR_40(37), STR_39(2), STR_38(21), 
 10724 ;;		 -> STR_37(2), STR_36(2), STR_35(25), STR_34(23), 
 10725 ;;		 -> STR_33(25), STR_32(163), STR_31(18), STR_30(29), 
 10726 ;;		 -> STR_29(16), STR_28(19), STR_27(20), STR_26(14), 
 10727 ;;		 -> STR_25(15), STR_24(19), STR_23(37), STR_22(2), 
 10728 ;;		 -> STR_21(15), STR_20(20), STR_19(31), STR_18(18), 
 10729 ;;		 -> STR_17(39), STR_16(39), STR_15(7), STR_14(3), 
 10730 ;;		 -> STR_13(39), STR_12(3), STR_11(36), STR_10(36), 
 10731 ;;		 -> STR_9(59), STR_8(31), STR_7(44), STR_6(39), 
 10732 ;;		 -> STR_5(39), STR_4(31), STR_3(28), STR_2(7), 
 10733 ;;		 -> STR_1(5), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  printf          4   35[BANK0 ] unsigned long 
 10736 ;;  printf          4    0        struct .
 10737 ;;  printf          3    0        PTR const unsigned char 
 10738 ;;  printf          2   32[BANK0 ] PTR void [1]
 10739 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
 10740 ;;  printf          2   30[BANK0 ] int 
 10741 ;;  printf          2    0        unsigned int 
 10742 ;;  printf          1   39[BANK0 ] char 
 10743 ;;  printf          1   34[BANK0 ] unsigned char 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  2   22[BANK0 ] int 
 10746 ;; Registers used:
 10747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10753 ;;      Params:         0       6       0       0       0       0       0
 10754 ;;      Locals:         0      10       0       0       0       0       0
 10755 ;;      Temps:          0       2       0       0       0       0       0
 10756 ;;      Totals:         0      18       0       0       0       0       0
 10757 ;;Total ram usage:       18 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    5
 10760 ;; This function calls:
 10761 ;;		i1___lldiv
 10762 ;;		i1___llmod
 10763 ;;		i1_putch
 10764 ;; This function is called by:
 10765 ;;		_temp_sensor
 10766 ;;		i1_Clear
 10767 ;;		i1_password
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text21
 10772  0019B8                     __ptext21:
 10773                           	opt stack 0
 10774  0019B8                     i1_printf:
 10775                           	opt stack 19
 10776                           
 10777                           ;doprnt.c: 466: va_list ap;
 10778                           ;doprnt.c: 499: signed char c;
 10779                           ;doprnt.c: 504: int prec;
 10780                           ;doprnt.c: 508: unsigned char flag;
 10781                           ;doprnt.c: 523: union {
 10782                           ;doprnt.c: 524: unsigned long vd;
 10783                           ;doprnt.c: 525: double integ;
 10784                           ;doprnt.c: 526: } tmpval;
 10785                           ;doprnt.c: 528: unsigned long val;
 10786                           ;doprnt.c: 529: unsigned len;
 10787                           ;doprnt.c: 530: const char * cp;
 10788                           ;doprnt.c: 533: *ap = __va_start();
 10789                           
 10790                           ;incstack = 0
 10791  0019B8  0E98               	movlw	low (?i1_printf+2)
 10792  0019BA  0100               	movlb	0	; () banked
 10793  0019BC  6FA0               	movwf	i1printf@ap& (0+255),b
 10794  0019BE  0E00               	movlw	high (?i1_printf+2)
 10795  0019C0  6FA1               	movwf	(i1printf@ap+1)& (0+255),b
 10796                           
 10797                           ;doprnt.c: 536: while(c = *f++) {
 10798  0019C2  D0C8               	goto	i1u694_20
 10799  0019C4                     
 10800                           ; BSR set to: 0
 10801                           ;doprnt.c: 538: if(c != '%')
 10802                           
 10803                           ; BSR set to: 0
 10804  0019C4  0E25               	movlw	37
 10805  0019C6  19A7               	xorwf	i1printf@c& (0+255),w,b
 10806  0019C8  B4D8               	btfsc	status,2,c
 10807  0019CA  D004               	goto	i1l452
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;doprnt.c: 540: {
 10811                           ;doprnt.c: 541: (putch(c) );
 10812  0019CC  51A7               	movf	i1printf@c& (0+255),w,b
 10813  0019CE  EC65  F018         	call	i1_putch
 10814                           
 10815                           ;doprnt.c: 542: continue;
 10816  0019D2  D0C0               	goto	i1u694_20
 10817  0019D4                     i1l452:
 10818                           
 10819                           ;doprnt.c: 543: }
 10820                           ;doprnt.c: 548: flag = 0;
 10821  0019D4  0E00               	movlw	0
 10822  0019D6  0100               	movlb	0	; () banked
 10823  0019D8  6FA2               	movwf	i1printf@flag& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;doprnt.c: 635: switch(c = *f++) {
 10827                           
 10828                           ;doprnt.c: 633: loop:
 10829  0019DA  D001               	goto	i1l454
 10830  0019DC                     
 10831                           ; BSR set to: 0
 10832                           ;doprnt.c: 643: flag |= 0x10;
 10833                           
 10834                           ; BSR set to: 0
 10835  0019DC  89A2               	bsf	i1printf@flag& (0+255),4,b
 10836  0019DE                     i1l454:
 10837                           
 10838                           ; BSR set to: 0
 10839                           
 10840                           ; BSR set to: 0
 10841  0019DE  C096  FFF6         	movff	i1printf@f,tblptrl
 10842  0019E2  C097  FFF7         	movff	i1printf@f+1,tblptrh
 10843  0019E6  4B96               	infsnz	i1printf@f& (0+255),f,b
 10844  0019E8  2B97               	incf	(i1printf@f+1)& (0+255),f,b
 10845  0019EA                     	if	0	;tblptru may be non-zero
 10846  0019EA                     	endif
 10847  0019EA                     	if	0	;tblptru may be non-zero
 10848  0019EA                     	endif
 10849  0019EA  0008               	tblrd		*
 10850  0019EC  CFF5 F0A7          	movff	tablat,i1printf@c
 10851  0019F0  51A7               	movf	i1printf@c& (0+255),w,b
 10852                           
 10853                           ; Switch size 1, requested type "space"
 10854                           ; Number of cases is 4, Range of values is 0 to 108
 10855                           ; switch strategies available:
 10856                           ; Name         Instructions Cycles
 10857                           ; simple_byte           13     7 (average)
 10858                           ;	Chosen strategy is simple_byte
 10859  0019F2  0A00               	xorlw	0	; case 0
 10860  0019F4  B4D8               	btfsc	status,2,c
 10861  0019F6  0012               	return	
 10862  0019F8  0A64               	xorlw	100	; case 100
 10863  0019FA  B4D8               	btfsc	status,2,c
 10864  0019FC  D007               	goto	i1l460
 10865  0019FE  0A0D               	xorlw	13	; case 105
 10866  001A00  B4D8               	btfsc	status,2,c
 10867  001A02  D004               	goto	i1l460
 10868  001A04  0A05               	xorlw	5	; case 108
 10869  001A06  B4D8               	btfsc	status,2,c
 10870  001A08  D7E9               	goto	i1l457
 10871  001A0A  D0A4               	goto	i1u694_20
 10872  001A0C                     i1l460:
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;doprnt.c: 1253: {
 10876                           ;doprnt.c: 1255: if(flag & 0x10)
 10877  001A0C  A9A2               	btfss	i1printf@flag& (0+255),4,b
 10878  001A0E  D00E               	goto	i1l462
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 10882  001A10  C0A0  FFD9         	movff	i1printf@ap,fsr2l
 10883  001A14  C0A1  FFDA         	movff	i1printf@ap+1,fsr2h
 10884  001A18  CFDE F0A3          	movff	postinc2,i1printf@val
 10885  001A1C  CFDE F0A4          	movff	postinc2,i1printf@val+1
 10886  001A20  CFDE F0A5          	movff	postinc2,i1printf@val+2
 10887  001A24  CFDE F0A6          	movff	postinc2,i1printf@val+3
 10888                           
 10889                           ; BSR set to: 0
 10890  001A28  0E04               	movlw	4
 10891  001A2A  D00E               	goto	L8
 10892  001A2C                     i1l462:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;doprnt.c: 1257: else
 10896                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10897                           
 10898                           ; BSR set to: 0
 10899  001A2C  C0A0  FFD9         	movff	i1printf@ap,fsr2l
 10900  001A30  C0A1  FFDA         	movff	i1printf@ap+1,fsr2h
 10901  001A34  CFDE F0A3          	movff	postinc2,i1printf@val
 10902  001A38  CFDD F0A4          	movff	postdec2,i1printf@val+1
 10903  001A3C  0E00               	movlw	0
 10904  001A3E  BFA4               	btfsc	(i1printf@val+1)& (0+255),7,b
 10905  001A40  0EFF               	movlw	-1
 10906  001A42  6FA5               	movwf	(i1printf@val+2)& (0+255),b
 10907  001A44  6FA6               	movwf	(i1printf@val+3)& (0+255),b
 10908                           
 10909                           ; BSR set to: 0
 10910  001A46  0E02               	movlw	2
 10911  001A48                     L8:
 10912  001A48  27A0               	addwf	i1printf@ap& (0+255),f,b
 10913  001A4A  0E00               	movlw	0
 10914  001A4C  23A1               	addwfc	(i1printf@ap+1)& (0+255),f,b
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;doprnt.c: 1261: if((long)val < 0) {
 10918                           
 10919                           ; BSR set to: 0
 10920  001A4E  AFA6               	btfss	(i1printf@val+3)& (0+255),7,b
 10921  001A50  D00A               	goto	i1l464
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;doprnt.c: 1262: flag |= 0x03;
 10925  001A52  0E03               	movlw	3
 10926  001A54  13A2               	iorwf	i1printf@flag& (0+255),f,b
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;doprnt.c: 1263: val = -val;
 10930  001A56  1FA6               	comf	(i1printf@val+3)& (0+255),f,b
 10931  001A58  1FA5               	comf	(i1printf@val+2)& (0+255),f,b
 10932  001A5A  1FA4               	comf	(i1printf@val+1)& (0+255),f,b
 10933  001A5C  6DA3               	negf	i1printf@val& (0+255),b
 10934  001A5E  0E00               	movlw	0
 10935  001A60  23A4               	addwfc	(i1printf@val+1)& (0+255),f,b
 10936  001A62  23A5               	addwfc	(i1printf@val+2)& (0+255),f,b
 10937  001A64  23A6               	addwfc	(i1printf@val+3)& (0+255),f,b
 10938  001A66                     i1l464:
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;doprnt.c: 1264: }
 10942                           ;doprnt.c: 1266: }
 10943                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10944                           
 10945                           ; BSR set to: 0
 10946  001A66  0E01               	movlw	1
 10947  001A68  6FA7               	movwf	i1printf@c& (0+255),b
 10948  001A6A                     i1l4630:
 10949                           
 10950                           ; BSR set to: 0
 10951  001A6A  0E0A               	movlw	10
 10952  001A6C  19A7               	xorwf	i1printf@c& (0+255),w,b
 10953  001A6E  B4D8               	btfsc	status,2,c
 10954  001A70  D018               	goto	i1u692_20
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;doprnt.c: 1306: if(val < dpowers[c])
 10958                           
 10959                           ; BSR set to: 0
 10960                           
 10961                           ; BSR set to: 0
 10962  001A72  51A7               	movf	i1printf@c& (0+255),w,b
 10963  001A74  0D04               	mullw	4
 10964  001A76  0EF5               	movlw	low _dpowers
 10965  001A78  24F3               	addwf	prodl,w,c
 10966  001A7A  6EF6               	movwf	tblptrl,c
 10967  001A7C  0E78               	movlw	high _dpowers
 10968  001A7E  20F4               	addwfc	prodh,w,c
 10969  001A80  6EF7               	movwf	tblptrh,c
 10970  001A82                     	if	0	;There are less than 3 active tblptr bytes
 10971  001A82                     	endif
 10972  001A82  0009               	tblrd		*+
 10973  001A84  50F5               	movf	tablat,w,c
 10974  001A86  5DA3               	subwf	i1printf@val& (0+255),w,b
 10975  001A88  0009               	tblrd		*+
 10976  001A8A  50F5               	movf	tablat,w,c
 10977  001A8C  59A4               	subwfb	(i1printf@val+1)& (0+255),w,b
 10978  001A8E  0009               	tblrd		*+
 10979  001A90  50F5               	movf	tablat,w,c
 10980  001A92  59A5               	subwfb	(i1printf@val+2)& (0+255),w,b
 10981  001A94  0009               	tblrd		*+
 10982  001A96  50F5               	movf	tablat,w,c
 10983  001A98  59A6               	subwfb	(i1printf@val+3)& (0+255),w,b
 10984  001A9A  A0D8               	btfss	status,0,c
 10985  001A9C  D002               	goto	i1u692_20
 10986                           
 10987                           ; BSR set to: 0
 10988                           
 10989                           ; BSR set to: 0
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;doprnt.c: 1307: break;
 10993  001A9E  2BA7               	incf	i1printf@c& (0+255),f,b
 10994  001AA0  D7E4               	goto	i1l4630
 10995  001AA2                     i1u692_20:
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;doprnt.c: 1422: {
 10999                           ;doprnt.c: 1438: if(flag & 0x03)
 11000                           
 11001                           ; BSR set to: 0
 11002  001AA2  C0A2  F09C         	movff	i1printf@flag,??i1_printf
 11003  001AA6  0E03               	movlw	3
 11004  001AA8  179C               	andwf	??i1_printf& (0+255),f,b
 11005  001AAA  B4D8               	btfsc	status,2,c
 11006  001AAC  D003               	goto	i1l468
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;doprnt.c: 1439: (putch('-') );
 11010  001AAE  0E2D               	movlw	45
 11011  001AB0  EC65  F018         	call	i1_putch
 11012  001AB4                     i1l468:
 11013                           
 11014                           ;doprnt.c: 1469: }
 11015                           ;doprnt.c: 1472: prec = c;
 11016  001AB4  0100               	movlb	0	; () banked
 11017  001AB6  51A7               	movf	i1printf@c& (0+255),w,b
 11018  001AB8  6F9E               	movwf	i1printf@prec& (0+255),b
 11019  001ABA  6B9F               	clrf	(i1printf@prec+1)& (0+255),b
 11020  001ABC  BF9E               	btfsc	i1printf@prec& (0+255),7,b
 11021  001ABE  079F               	decf	(i1printf@prec+1)& (0+255),f,b
 11022                           
 11023                           ;doprnt.c: 1474: while(prec--) {
 11024  001AC0  D040               	goto	i1l469
 11025  001AC2                     i1l4648:
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;doprnt.c: 1478: {
 11029                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11030  001AC2  C09E  F09C         	movff	i1printf@prec,??i1_printf
 11031  001AC6  C09F  F09D         	movff	i1printf@prec+1,??i1_printf+1
 11032  001ACA  90D8               	bcf	status,0,c
 11033  001ACC  379C               	rlcf	??i1_printf& (0+255),f,b
 11034  001ACE  379D               	rlcf	(??i1_printf+1)& (0+255),f,b
 11035  001AD0  90D8               	bcf	status,0,c
 11036  001AD2  379C               	rlcf	??i1_printf& (0+255),f,b
 11037  001AD4  379D               	rlcf	(??i1_printf+1)& (0+255),f,b
 11038  001AD6  0EF5               	movlw	low _dpowers
 11039  001AD8  259C               	addwf	??i1_printf& (0+255),w,b
 11040  001ADA  6EF6               	movwf	tblptrl,c
 11041  001ADC  0E78               	movlw	high _dpowers
 11042  001ADE  219D               	addwfc	(??i1_printf+1)& (0+255),w,b
 11043  001AE0  6EF7               	movwf	tblptrh,c
 11044  001AE2                     	if	0	;There are less than 3 active tblptr bytes
 11045  001AE2                     	endif
 11046  001AE2  0009               	tblrd		*+
 11047  001AE4  CFF5 F084          	movff	tablat,i1___lldiv@divisor
 11048  001AE8  0009               	tblrd		*+
 11049  001AEA  CFF5 F085          	movff	tablat,i1___lldiv@divisor+1
 11050  001AEE  0009               	tblrd		*+
 11051  001AF0  CFF5 F086          	movff	tablat,i1___lldiv@divisor+2
 11052  001AF4  000A               	tblrd		*-
 11053  001AF6  CFF5 F087          	movff	tablat,i1___lldiv@divisor+3
 11054  001AFA  C0A3  F080         	movff	i1printf@val,i1___lldiv@dividend
 11055  001AFE  C0A4  F081         	movff	i1printf@val+1,i1___lldiv@dividend+1
 11056  001B02  C0A5  F082         	movff	i1printf@val+2,i1___lldiv@dividend+2
 11057  001B06  C0A6  F083         	movff	i1printf@val+3,i1___lldiv@dividend+3
 11058  001B0A  EC29  F016         	call	i1___lldiv	;wreg free
 11059  001B0E  C080  F08D         	movff	?i1___lldiv,i1___llmod@dividend
 11060  001B12  C081  F08E         	movff	?i1___lldiv+1,i1___llmod@dividend+1
 11061  001B16  C082  F08F         	movff	?i1___lldiv+2,i1___llmod@dividend+2
 11062  001B1A  C083  F090         	movff	?i1___lldiv+3,i1___llmod@dividend+3
 11063  001B1E  0E0A               	movlw	10
 11064  001B20  0100               	movlb	0	; () banked
 11065  001B22  6F91               	movwf	i1___llmod@divisor& (0+255),b
 11066  001B24  0E00               	movlw	0
 11067  001B26  6F92               	movwf	(i1___llmod@divisor+1)& (0+255),b
 11068  001B28  0E00               	movlw	0
 11069  001B2A  6F93               	movwf	(i1___llmod@divisor+2)& (0+255),b
 11070  001B2C  0E00               	movlw	0
 11071  001B2E  6F94               	movwf	(i1___llmod@divisor+3)& (0+255),b
 11072  001B30  EC51  F017         	call	i1___llmod	;wreg free
 11073  001B34  0100               	movlb	0	; () banked
 11074  001B36  518D               	movf	?i1___llmod& (0+255),w,b
 11075  001B38  0F30               	addlw	48
 11076  001B3A  6FA7               	movwf	i1printf@c& (0+255),b
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;doprnt.c: 1523: }
 11080                           ;doprnt.c: 1524: (putch(c) );
 11081  001B3C  51A7               	movf	i1printf@c& (0+255),w,b
 11082  001B3E  EC65  F018         	call	i1_putch
 11083  001B42                     i1l469:
 11084  001B42  0100               	movlb	0	; () banked
 11085  001B44  079E               	decf	i1printf@prec& (0+255),f,b
 11086  001B46  A0D8               	btfss	status,0,c
 11087  001B48  079F               	decf	(i1printf@prec+1)& (0+255),f,b
 11088  001B4A  299E               	incf	i1printf@prec& (0+255),w,b
 11089  001B4C  E1BA               	bnz	i1l4648
 11090  001B4E  299F               	incf	(i1printf@prec+1)& (0+255),w,b
 11091  001B50  A4D8               	btfss	status,2,c
 11092  001B52  D7B7               	goto	i1l470
 11093  001B54                     i1u694_20:
 11094                           
 11095                           ; BSR set to: 0
 11096                           
 11097                           ; BSR set to: 0
 11098  001B54  C096  FFF6         	movff	i1printf@f,tblptrl
 11099  001B58  C097  FFF7         	movff	i1printf@f+1,tblptrh
 11100  001B5C  0100               	movlb	0	; () banked
 11101  001B5E  4B96               	infsnz	i1printf@f& (0+255),f,b
 11102  001B60  2B97               	incf	(i1printf@f+1)& (0+255),f,b
 11103  001B62                     	if	0	;tblptru may be non-zero
 11104  001B62                     	endif
 11105  001B62                     	if	0	;tblptru may be non-zero
 11106  001B62                     	endif
 11107  001B62  0008               	tblrd		*
 11108  001B64  CFF5 F0A7          	movff	tablat,i1printf@c
 11109  001B68  51A7               	movf	i1printf@c& (0+255),w,b
 11110  001B6A  B4D8               	btfsc	status,2,c
 11111  001B6C  0012               	return	
 11112  001B6E  D72A               	goto	i1l451
 11113  001B70                     __end_ofi1_printf:
 11114                           	opt stack 0
 11115                           pclatu	equ	0xFFB
 11116                           pclath	equ	0xFFA
 11117                           tblptru	equ	0xFF8
 11118                           tblptrh	equ	0xFF7
 11119                           tblptrl	equ	0xFF6
 11120                           tablat	equ	0xFF5
 11121                           prodh	equ	0xFF4
 11122                           prodl	equ	0xFF3
 11123                           intcon	equ	0xFF2
 11124                           intcon2	equ	0xFF1
 11125                           intcon3	equ	0xFF0
 11126                           postinc0	equ	0xFEE
 11127                           fsr0h	equ	0xFEA
 11128                           fsr0l	equ	0xFE9
 11129                           wreg	equ	0xFE8
 11130                           fsr1h	equ	0xFE2
 11131                           fsr1l	equ	0xFE1
 11132                           bsr	equ	0xFE0
 11133                           indf2	equ	0xFDF
 11134                           postinc2	equ	0xFDE
 11135                           postdec2	equ	0xFDD
 11136                           fsr2h	equ	0xFDA
 11137                           fsr2l	equ	0xFD9
 11138                           status	equ	0xFD8
 11139                           
 11140 ;; *************** function i1_putch *****************
 11141 ;; Defined at:
 11142 ;;		line 106 in file "Lab7.c"
 11143 ;; Parameters:    Size  Location     Type
 11144 ;;  data            1    wreg     unsigned char 
 11145 ;; Auto vars:     Size  Location     Type
 11146 ;;  data            1    0[BANK0 ] unsigned char 
 11147 ;; Return value:  Size  Location     Type
 11148 ;;                  1    wreg      void 
 11149 ;; Registers used:
 11150 ;;		wreg
 11151 ;; Tracked objects:
 11152 ;;		On entry : 0/0
 11153 ;;		On exit  : 0/0
 11154 ;;		Unchanged: 0/0
 11155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11156 ;;      Params:         0       0       0       0       0       0       0
 11157 ;;      Locals:         0       1       0       0       0       0       0
 11158 ;;      Temps:          0       0       0       0       0       0       0
 11159 ;;      Totals:         0       1       0       0       0       0       0
 11160 ;;Total ram usage:        1 bytes
 11161 ;; Hardware stack levels used:    1
 11162 ;; Hardware stack levels required when called:    4
 11163 ;; This function calls:
 11164 ;;		Nothing
 11165 ;; This function is called by:
 11166 ;;		i1_printf
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text22
 11171  0030CA                     __ptext22:
 11172                           	opt stack 0
 11173  0030CA                     i1_putch:
 11174                           	opt stack 19
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;incstack = 0
 11178                           ;i1putch@data stored from wreg
 11179  0030CA  0100               	movlb	0	; () banked
 11180  0030CC  6F80               	movwf	i1putch@data& (0+255),b
 11181  0030CE                     
 11182                           ;Lab7.c: 109: continue;
 11183                           
 11184                           ;Lab7.c: 108: while(!PIR1bits.TXIF)
 11185  0030CE  A89E               	btfss	3998,4,c	;volatile
 11186  0030D0  D7FE               	goto	i1l3880
 11187                           
 11188                           ;Lab7.c: 110: TXREG = data;
 11189  0030D2  C080  FFAD         	movff	i1putch@data,4013	;volatile
 11190  0030D6  0012               	return		;funcret
 11191  0030D8                     __end_ofi1_putch:
 11192                           	opt stack 0
 11193                           pclatu	equ	0xFFB
 11194                           pclath	equ	0xFFA
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           intcon3	equ	0xFF0
 11204                           postinc0	equ	0xFEE
 11205                           fsr0h	equ	0xFEA
 11206                           fsr0l	equ	0xFE9
 11207                           wreg	equ	0xFE8
 11208                           fsr1h	equ	0xFE2
 11209                           fsr1l	equ	0xFE1
 11210                           bsr	equ	0xFE0
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           fsr2h	equ	0xFDA
 11215                           fsr2l	equ	0xFD9
 11216                           status	equ	0xFD8
 11217                           
 11218 ;; *************** function i1___llmod *****************
 11219 ;; Defined at:
 11220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;  dividend        4   13[BANK0 ] unsigned long 
 11223 ;;  divisor         4   17[BANK0 ] unsigned long 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  __llmod         1   21[BANK0 ] unsigned char 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  4   13[BANK0 ] unsigned long 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11235 ;;      Params:         0       8       0       0       0       0       0
 11236 ;;      Locals:         0       1       0       0       0       0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0
 11238 ;;      Totals:         0       9       0       0       0       0       0
 11239 ;;Total ram usage:        9 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    4
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		i1_printf
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text23
 11250  002EA2                     __ptext23:
 11251                           	opt stack 0
 11252  002EA2                     i1___llmod:
 11253                           	opt stack 19
 11254                           
 11255                           ;incstack = 0
 11256  002EA2  0100               	movlb	0	; () banked
 11257  002EA4  5191               	movf	i1___llmod@divisor& (0+255),w,b
 11258  002EA6  1192               	iorwf	(i1___llmod@divisor+1)& (0+255),w,b
 11259  002EA8  1193               	iorwf	(i1___llmod@divisor+2)& (0+255),w,b
 11260  002EAA  1194               	iorwf	(i1___llmod@divisor+3)& (0+255),w,b
 11261  002EAC  B4D8               	btfsc	status,2,c
 11262  002EAE  D024               	goto	i1l850
 11263                           
 11264                           ; BSR set to: 0
 11265  002EB0  0E01               	movlw	1
 11266  002EB2  6F95               	movwf	i1___llmod@counter& (0+255),b
 11267  002EB4  D006               	goto	i1l845
 11268  002EB6                     
 11269                           ; BSR set to: 0
 11270                           
 11271                           ; BSR set to: 0
 11272  002EB6  90D8               	bcf	status,0,c
 11273  002EB8  3791               	rlcf	i1___llmod@divisor& (0+255),f,b
 11274  002EBA  3792               	rlcf	(i1___llmod@divisor+1)& (0+255),f,b
 11275  002EBC  3793               	rlcf	(i1___llmod@divisor+2)& (0+255),f,b
 11276  002EBE  3794               	rlcf	(i1___llmod@divisor+3)& (0+255),f,b
 11277  002EC0  2B95               	incf	i1___llmod@counter& (0+255),f,b
 11278  002EC2                     i1l845:
 11279                           
 11280                           ; BSR set to: 0
 11281                           
 11282                           ; BSR set to: 0
 11283  002EC2  AF94               	btfss	(i1___llmod@divisor+3)& (0+255),7,b
 11284  002EC4  D7F8               	goto	i1l846
 11285  002EC6                     i1u508_20:
 11286                           
 11287                           ; BSR set to: 0
 11288                           
 11289                           ; BSR set to: 0
 11290                           
 11291                           ; BSR set to: 0
 11292  002EC6  5191               	movf	i1___llmod@divisor& (0+255),w,b
 11293  002EC8  5D8D               	subwf	i1___llmod@dividend& (0+255),w,b
 11294  002ECA  5192               	movf	(i1___llmod@divisor+1)& (0+255),w,b
 11295  002ECC  598E               	subwfb	(i1___llmod@dividend+1)& (0+255),w,b
 11296  002ECE  5193               	movf	(i1___llmod@divisor+2)& (0+255),w,b
 11297  002ED0  598F               	subwfb	(i1___llmod@dividend+2)& (0+255),w,b
 11298  002ED2  5194               	movf	(i1___llmod@divisor+3)& (0+255),w,b
 11299  002ED4  5990               	subwfb	(i1___llmod@dividend+3)& (0+255),w,b
 11300  002ED6  A0D8               	btfss	status,0,c
 11301  002ED8  D008               	goto	i1l849
 11302                           
 11303                           ; BSR set to: 0
 11304  002EDA  5191               	movf	i1___llmod@divisor& (0+255),w,b
 11305  002EDC  5F8D               	subwf	i1___llmod@dividend& (0+255),f,b
 11306  002EDE  5192               	movf	(i1___llmod@divisor+1)& (0+255),w,b
 11307  002EE0  5B8E               	subwfb	(i1___llmod@dividend+1)& (0+255),f,b
 11308  002EE2  5193               	movf	(i1___llmod@divisor+2)& (0+255),w,b
 11309  002EE4  5B8F               	subwfb	(i1___llmod@dividend+2)& (0+255),f,b
 11310  002EE6  5194               	movf	(i1___llmod@divisor+3)& (0+255),w,b
 11311  002EE8  5B90               	subwfb	(i1___llmod@dividend+3)& (0+255),f,b
 11312  002EEA                     i1l849:
 11313                           
 11314                           ; BSR set to: 0
 11315                           
 11316                           ; BSR set to: 0
 11317  002EEA  90D8               	bcf	status,0,c
 11318  002EEC  3394               	rrcf	(i1___llmod@divisor+3)& (0+255),f,b
 11319  002EEE  3393               	rrcf	(i1___llmod@divisor+2)& (0+255),f,b
 11320  002EF0  3392               	rrcf	(i1___llmod@divisor+1)& (0+255),f,b
 11321  002EF2  3391               	rrcf	i1___llmod@divisor& (0+255),f,b
 11322                           
 11323                           ; BSR set to: 0
 11324  002EF4  2F95               	decfsz	i1___llmod@counter& (0+255),f,b
 11325  002EF6  D7E7               	goto	i1u508_20
 11326  002EF8                     i1l850:
 11327                           
 11328                           ; BSR set to: 0
 11329                           
 11330                           ; BSR set to: 0
 11331  002EF8  C08D  F08D         	movff	i1___llmod@dividend,?i1___llmod
 11332  002EFC  C08E  F08E         	movff	i1___llmod@dividend+1,?i1___llmod+1
 11333  002F00  C08F  F08F         	movff	i1___llmod@dividend+2,?i1___llmod+2
 11334  002F04  C090  F090         	movff	i1___llmod@dividend+3,?i1___llmod+3
 11335                           
 11336                           ; BSR set to: 0
 11337  002F08  0012               	return		;funcret
 11338  002F0A                     __end_ofi1___llmod:
 11339                           	opt stack 0
 11340                           pclatu	equ	0xFFB
 11341                           pclath	equ	0xFFA
 11342                           tblptru	equ	0xFF8
 11343                           tblptrh	equ	0xFF7
 11344                           tblptrl	equ	0xFF6
 11345                           tablat	equ	0xFF5
 11346                           prodh	equ	0xFF4
 11347                           prodl	equ	0xFF3
 11348                           intcon	equ	0xFF2
 11349                           intcon2	equ	0xFF1
 11350                           intcon3	equ	0xFF0
 11351                           postinc0	equ	0xFEE
 11352                           fsr0h	equ	0xFEA
 11353                           fsr0l	equ	0xFE9
 11354                           wreg	equ	0xFE8
 11355                           fsr1h	equ	0xFE2
 11356                           fsr1l	equ	0xFE1
 11357                           bsr	equ	0xFE0
 11358                           indf2	equ	0xFDF
 11359                           postinc2	equ	0xFDE
 11360                           postdec2	equ	0xFDD
 11361                           fsr2h	equ	0xFDA
 11362                           fsr2l	equ	0xFD9
 11363                           status	equ	0xFD8
 11364                           
 11365 ;; *************** function i1___lldiv *****************
 11366 ;; Defined at:
 11367 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  dividend        4    0[BANK0 ] unsigned long 
 11370 ;;  divisor         4    4[BANK0 ] unsigned long 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  __lldiv         4    8[BANK0 ] unsigned long 
 11373 ;;  __lldiv         1   12[BANK0 ] unsigned char 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  4    0[BANK0 ] unsigned long 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11383 ;;      Params:         0       8       0       0       0       0       0
 11384 ;;      Locals:         0       5       0       0       0       0       0
 11385 ;;      Temps:          0       0       0       0       0       0       0
 11386 ;;      Totals:         0      13       0       0       0       0       0
 11387 ;;Total ram usage:       13 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; Hardware stack levels required when called:    4
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		i1_printf
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text24
 11398  002C52                     __ptext24:
 11399                           	opt stack 0
 11400  002C52                     i1___lldiv:
 11401                           	opt stack 19
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;incstack = 0
 11405  002C52  0E00               	movlw	0
 11406  002C54  0100               	movlb	0	; () banked
 11407  002C56  6F88               	movwf	i1___lldiv@quotient& (0+255),b
 11408  002C58  0E00               	movlw	0
 11409  002C5A  6F89               	movwf	(i1___lldiv@quotient+1)& (0+255),b
 11410  002C5C  0E00               	movlw	0
 11411  002C5E  6F8A               	movwf	(i1___lldiv@quotient+2)& (0+255),b
 11412  002C60  0E00               	movlw	0
 11413  002C62  6F8B               	movwf	(i1___lldiv@quotient+3)& (0+255),b
 11414                           
 11415                           ; BSR set to: 0
 11416  002C64  5184               	movf	i1___lldiv@divisor& (0+255),w,b
 11417  002C66  1185               	iorwf	(i1___lldiv@divisor+1)& (0+255),w,b
 11418  002C68  1186               	iorwf	(i1___lldiv@divisor+2)& (0+255),w,b
 11419  002C6A  1187               	iorwf	(i1___lldiv@divisor+3)& (0+255),w,b
 11420  002C6C  B4D8               	btfsc	status,2,c
 11421  002C6E  D02A               	goto	i1l840
 11422                           
 11423                           ; BSR set to: 0
 11424  002C70  0E01               	movlw	1
 11425  002C72  6F8C               	movwf	i1___lldiv@counter& (0+255),b
 11426  002C74  D006               	goto	i1l835
 11427  002C76                     
 11428                           ; BSR set to: 0
 11429                           
 11430                           ; BSR set to: 0
 11431  002C76  90D8               	bcf	status,0,c
 11432  002C78  3784               	rlcf	i1___lldiv@divisor& (0+255),f,b
 11433  002C7A  3785               	rlcf	(i1___lldiv@divisor+1)& (0+255),f,b
 11434  002C7C  3786               	rlcf	(i1___lldiv@divisor+2)& (0+255),f,b
 11435  002C7E  3787               	rlcf	(i1___lldiv@divisor+3)& (0+255),f,b
 11436  002C80  2B8C               	incf	i1___lldiv@counter& (0+255),f,b
 11437  002C82                     i1l835:
 11438                           
 11439                           ; BSR set to: 0
 11440                           
 11441                           ; BSR set to: 0
 11442  002C82  AF87               	btfss	(i1___lldiv@divisor+3)& (0+255),7,b
 11443  002C84  D7F8               	goto	i1l836
 11444  002C86                     i1u502_20:
 11445                           
 11446                           ; BSR set to: 0
 11447                           
 11448                           ; BSR set to: 0
 11449                           
 11450                           ; BSR set to: 0
 11451  002C86  90D8               	bcf	status,0,c
 11452  002C88  3788               	rlcf	i1___lldiv@quotient& (0+255),f,b
 11453  002C8A  3789               	rlcf	(i1___lldiv@quotient+1)& (0+255),f,b
 11454  002C8C  378A               	rlcf	(i1___lldiv@quotient+2)& (0+255),f,b
 11455  002C8E  378B               	rlcf	(i1___lldiv@quotient+3)& (0+255),f,b
 11456                           
 11457                           ; BSR set to: 0
 11458  002C90  5184               	movf	i1___lldiv@divisor& (0+255),w,b
 11459  002C92  5D80               	subwf	i1___lldiv@dividend& (0+255),w,b
 11460  002C94  5185               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
 11461  002C96  5981               	subwfb	(i1___lldiv@dividend+1)& (0+255),w,b
 11462  002C98  5186               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
 11463  002C9A  5982               	subwfb	(i1___lldiv@dividend+2)& (0+255),w,b
 11464  002C9C  5187               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
 11465  002C9E  5983               	subwfb	(i1___lldiv@dividend+3)& (0+255),w,b
 11466  002CA0  A0D8               	btfss	status,0,c
 11467  002CA2  D009               	goto	i1l839
 11468                           
 11469                           ; BSR set to: 0
 11470  002CA4  5184               	movf	i1___lldiv@divisor& (0+255),w,b
 11471  002CA6  5F80               	subwf	i1___lldiv@dividend& (0+255),f,b
 11472  002CA8  5185               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
 11473  002CAA  5B81               	subwfb	(i1___lldiv@dividend+1)& (0+255),f,b
 11474  002CAC  5186               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
 11475  002CAE  5B82               	subwfb	(i1___lldiv@dividend+2)& (0+255),f,b
 11476  002CB0  5187               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
 11477  002CB2  5B83               	subwfb	(i1___lldiv@dividend+3)& (0+255),f,b
 11478                           
 11479                           ; BSR set to: 0
 11480  002CB4  8188               	bsf	i1___lldiv@quotient& (0+255),0,b
 11481  002CB6                     i1l839:
 11482                           
 11483                           ; BSR set to: 0
 11484                           
 11485                           ; BSR set to: 0
 11486  002CB6  90D8               	bcf	status,0,c
 11487  002CB8  3387               	rrcf	(i1___lldiv@divisor+3)& (0+255),f,b
 11488  002CBA  3386               	rrcf	(i1___lldiv@divisor+2)& (0+255),f,b
 11489  002CBC  3385               	rrcf	(i1___lldiv@divisor+1)& (0+255),f,b
 11490  002CBE  3384               	rrcf	i1___lldiv@divisor& (0+255),f,b
 11491                           
 11492                           ; BSR set to: 0
 11493  002CC0  2F8C               	decfsz	i1___lldiv@counter& (0+255),f,b
 11494  002CC2  D7E1               	goto	i1u502_20
 11495  002CC4                     i1l840:
 11496                           
 11497                           ; BSR set to: 0
 11498                           
 11499                           ; BSR set to: 0
 11500  002CC4  C088  F080         	movff	i1___lldiv@quotient,?i1___lldiv
 11501  002CC8  C089  F081         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 11502  002CCC  C08A  F082         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 11503  002CD0  C08B  F083         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 11504                           
 11505                           ; BSR set to: 0
 11506  002CD4  0012               	return		;funcret
 11507  002CD6                     __end_ofi1___lldiv:
 11508                           	opt stack 0
 11509                           pclatu	equ	0xFFB
 11510                           pclath	equ	0xFFA
 11511                           tblptru	equ	0xFF8
 11512                           tblptrh	equ	0xFF7
 11513                           tblptrl	equ	0xFF6
 11514                           tablat	equ	0xFF5
 11515                           prodh	equ	0xFF4
 11516                           prodl	equ	0xFF3
 11517                           intcon	equ	0xFF2
 11518                           intcon2	equ	0xFF1
 11519                           intcon3	equ	0xFF0
 11520                           postinc0	equ	0xFEE
 11521                           fsr0h	equ	0xFEA
 11522                           fsr0l	equ	0xFE9
 11523                           wreg	equ	0xFE8
 11524                           fsr1h	equ	0xFE2
 11525                           fsr1l	equ	0xFE1
 11526                           bsr	equ	0xFE0
 11527                           indf2	equ	0xFDF
 11528                           postinc2	equ	0xFDE
 11529                           postdec2	equ	0xFDD
 11530                           fsr2h	equ	0xFDA
 11531                           fsr2l	equ	0xFD9
 11532                           status	equ	0xFD8
 11533                           
 11534 ;; *************** function _ADC *****************
 11535 ;; Defined at:
 11536 ;;		line 252 in file "Lab7.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2, status,0, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11550 ;;      Params:         0       0       0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0
 11552 ;;      Temps:          0       4       0       0       0       0       0
 11553 ;;      Totals:         0       4       0       0       0       0       0
 11554 ;;Total ram usage:        4 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    6
 11557 ;; This function calls:
 11558 ;;		___aldiv
 11559 ;;		___altoft
 11560 ;;		___ftmul
 11561 ;;		___fttol
 11562 ;;		___lmul
 11563 ;; This function is called by:
 11564 ;;		_temp_sensor
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text25
 11569  00261E                     __ptext25:
 11570                           	opt stack 0
 11571  00261E                     _ADC:
 11572                           	opt stack 18
 11573                           
 11574                           ;Lab7.c: 254: adLow = ADRESL;
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;incstack = 0
 11578  00261E  50C3               	movf	4035,w,c	;volatile
 11579  002620  0100               	movlb	0	; () banked
 11580  002622  6FDA               	movwf	_adLow& (0+255),b
 11581  002624  6BDB               	clrf	(_adLow+1)& (0+255),b
 11582  002626  6BDC               	clrf	(_adLow+2)& (0+255),b
 11583  002628  6BDD               	clrf	(_adLow+3)& (0+255),b
 11584                           
 11585                           ;Lab7.c: 255: adHigh = ADRESH;
 11586  00262A  50C4               	movf	4036,w,c	;volatile
 11587  00262C  6FD6               	movwf	_adHigh& (0+255),b
 11588  00262E  6BD7               	clrf	(_adHigh+1)& (0+255),b
 11589  002630  6BD8               	clrf	(_adHigh+2)& (0+255),b
 11590  002632  6BD9               	clrf	(_adHigh+3)& (0+255),b
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;Lab7.c: 256: adHigh = adHigh << 8;
 11594  002634  C0D6  F0B1         	movff	_adHigh,??_ADC+1
 11595  002638  C0D7  F0B2         	movff	_adHigh+1,??_ADC+2
 11596  00263C  C0D8  F0B3         	movff	_adHigh+2,??_ADC+3
 11597  002640  6BB0               	clrf	??_ADC& (0+255),b
 11598  002642  C0B0  F0D6         	movff	??_ADC,_adHigh
 11599  002646  C0B1  F0D7         	movff	??_ADC+1,_adHigh+1
 11600  00264A  C0B2  F0D8         	movff	??_ADC+2,_adHigh+2
 11601  00264E  C0B3  F0D9         	movff	??_ADC+3,_adHigh+3
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;Lab7.c: 257: decimal = adLow + adHigh;
 11605  002652  51D6               	movf	_adHigh& (0+255),w,b
 11606  002654  25DA               	addwf	_adLow& (0+255),w,b
 11607  002656  6FD2               	movwf	_decimal& (0+255),b
 11608  002658  51D7               	movf	(_adHigh+1)& (0+255),w,b
 11609  00265A  21DB               	addwfc	(_adLow+1)& (0+255),w,b
 11610  00265C  6FD3               	movwf	(_decimal+1)& (0+255),b
 11611  00265E  51D8               	movf	(_adHigh+2)& (0+255),w,b
 11612  002660  21DC               	addwfc	(_adLow+2)& (0+255),w,b
 11613  002662  6FD4               	movwf	(_decimal+2)& (0+255),b
 11614  002664  51D9               	movf	(_adHigh+3)& (0+255),w,b
 11615  002666  21DD               	addwfc	(_adLow+3)& (0+255),w,b
 11616  002668  6FD5               	movwf	(_decimal+3)& (0+255),b
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;Lab7.c: 258: voltage = decimal*500;
 11620  00266A  C0D2  F080         	movff	_decimal,___lmul@multiplier
 11621  00266E  C0D3  F081         	movff	_decimal+1,___lmul@multiplier+1
 11622  002672  C0D4  F082         	movff	_decimal+2,___lmul@multiplier+2
 11623  002676  C0D5  F083         	movff	_decimal+3,___lmul@multiplier+3
 11624  00267A  0EF4               	movlw	244
 11625  00267C  6F84               	movwf	___lmul@multiplicand& (0+255),b
 11626  00267E  0E01               	movlw	1
 11627  002680  6F85               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11628  002682  0E00               	movlw	0
 11629  002684  6F86               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11630  002686  0E00               	movlw	0
 11631  002688  6F87               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11632  00268A  ECB8  F017         	call	___lmul	;wreg free
 11633  00268E  C080  F044         	movff	?___lmul,_voltage
 11634  002692  C081  F045         	movff	?___lmul+1,_voltage+1
 11635  002696  C082  F046         	movff	?___lmul+2,_voltage+2
 11636  00269A  C083  F047         	movff	?___lmul+3,_voltage+3
 11637                           
 11638                           ;Lab7.c: 259: voltage = voltage/1023;
 11639  00269E  C044  F080         	movff	_voltage,___aldiv@dividend
 11640  0026A2  C045  F081         	movff	_voltage+1,___aldiv@dividend+1
 11641  0026A6  C046  F082         	movff	_voltage+2,___aldiv@dividend+2
 11642  0026AA  C047  F083         	movff	_voltage+3,___aldiv@dividend+3
 11643  0026AE  0EFF               	movlw	255
 11644  0026B0  0100               	movlb	0	; () banked
 11645  0026B2  6F84               	movwf	___aldiv@divisor& (0+255),b
 11646  0026B4  0E03               	movlw	3
 11647  0026B6  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
 11648  0026B8  0E00               	movlw	0
 11649  0026BA  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
 11650  0026BC  0E00               	movlw	0
 11651  0026BE  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
 11652  0026C0  EC28  F015         	call	___aldiv	;wreg free
 11653  0026C4  C080  F044         	movff	?___aldiv,_voltage
 11654  0026C8  C081  F045         	movff	?___aldiv+1,_voltage+1
 11655  0026CC  C082  F046         	movff	?___aldiv+2,_voltage+2
 11656  0026D0  C083  F047         	movff	?___aldiv+3,_voltage+3
 11657                           
 11658                           ;Lab7.c: 260: voltage = voltage - 50;
 11659  0026D4  0ECE               	movlw	206
 11660  0026D6  2444               	addwf	_voltage,w,c
 11661  0026D8  6E44               	movwf	_voltage,c
 11662  0026DA  0EFF               	movlw	255
 11663  0026DC  2045               	addwfc	_voltage+1,w,c
 11664  0026DE  6E45               	movwf	_voltage+1,c
 11665  0026E0  0EFF               	movlw	255
 11666  0026E2  2046               	addwfc	_voltage+2,w,c
 11667  0026E4  6E46               	movwf	_voltage+2,c
 11668  0026E6  0EFF               	movlw	255
 11669  0026E8  2047               	addwfc	_voltage+3,w,c
 11670  0026EA  6E47               	movwf	_voltage+3,c
 11671                           
 11672                           ;Lab7.c: 262: voltage = voltage*1.8;
 11673  0026EC  0E66               	movlw	102
 11674  0026EE  0100               	movlb	0	; () banked
 11675  0026F0  6F95               	movwf	___ftmul@f2& (0+255),b
 11676  0026F2  0EE6               	movlw	230
 11677  0026F4  6F96               	movwf	(___ftmul@f2+1)& (0+255),b
 11678  0026F6  0E3F               	movlw	63
 11679  0026F8  6F97               	movwf	(___ftmul@f2+2)& (0+255),b
 11680  0026FA  C044  F088         	movff	_voltage,___altoft@c
 11681  0026FE  C045  F089         	movff	_voltage+1,___altoft@c+1
 11682  002702  C046  F08A         	movff	_voltage+2,___altoft@c+2
 11683  002706  C047  F08B         	movff	_voltage+3,___altoft@c+3
 11684  00270A  ECAC  F016         	call	___altoft	;wreg free
 11685  00270E  C088  F092         	movff	?___altoft,___ftmul@f1
 11686  002712  C089  F093         	movff	?___altoft+1,___ftmul@f1+1
 11687  002716  C08A  F094         	movff	?___altoft+2,___ftmul@f1+2
 11688  00271A  ECAD  F014         	call	___ftmul	;wreg free
 11689  00271E  C092  F0A1         	movff	?___ftmul,___fttol@f1
 11690  002722  C093  F0A2         	movff	?___ftmul+1,___fttol@f1+1
 11691  002726  C094  F0A3         	movff	?___ftmul+2,___fttol@f1+2
 11692  00272A  EC31  F014         	call	___fttol	;wreg free
 11693  00272E  C0A1  F044         	movff	?___fttol,_voltage
 11694  002732  C0A2  F045         	movff	?___fttol+1,_voltage+1
 11695  002736  C0A3  F046         	movff	?___fttol+2,_voltage+2
 11696  00273A  C0A4  F047         	movff	?___fttol+3,_voltage+3
 11697                           
 11698                           ;Lab7.c: 263: voltage += 32;
 11699  00273E  0E20               	movlw	32
 11700  002740  2644               	addwf	_voltage,f,c
 11701  002742  0E00               	movlw	0
 11702  002744  2245               	addwfc	_voltage+1,f,c
 11703  002746  2246               	addwfc	_voltage+2,f,c
 11704  002748  2247               	addwfc	_voltage+3,f,c
 11705  00274A  0012               	return		;funcret
 11706  00274C                     __end_of_ADC:
 11707                           	opt stack 0
 11708                           pclatu	equ	0xFFB
 11709                           pclath	equ	0xFFA
 11710                           tblptru	equ	0xFF8
 11711                           tblptrh	equ	0xFF7
 11712                           tblptrl	equ	0xFF6
 11713                           tablat	equ	0xFF5
 11714                           prodh	equ	0xFF4
 11715                           prodl	equ	0xFF3
 11716                           intcon	equ	0xFF2
 11717                           intcon2	equ	0xFF1
 11718                           intcon3	equ	0xFF0
 11719                           postinc0	equ	0xFEE
 11720                           fsr0h	equ	0xFEA
 11721                           fsr0l	equ	0xFE9
 11722                           wreg	equ	0xFE8
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           bsr	equ	0xFE0
 11726                           indf2	equ	0xFDF
 11727                           postinc2	equ	0xFDE
 11728                           postdec2	equ	0xFDD
 11729                           fsr2h	equ	0xFDA
 11730                           fsr2l	equ	0xFD9
 11731                           status	equ	0xFD8
 11732                           
 11733 ;; *************** function ___lmul *****************
 11734 ;; Defined at:
 11735 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11738 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;  product         4    8[BANK0 ] unsigned long 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  4    0[BANK0 ] unsigned long 
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11750 ;;      Params:         0       8       0       0       0       0       0
 11751 ;;      Locals:         0       4       0       0       0       0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0
 11753 ;;      Totals:         0      12       0       0       0       0       0
 11754 ;;Total ram usage:       12 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_ADC
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text26
 11765  002F70                     __ptext26:
 11766                           	opt stack 0
 11767  002F70                     ___lmul:
 11768                           	opt stack 19
 11769                           
 11770                           ;incstack = 0
 11771  002F70  0E00               	movlw	0
 11772  002F72  0100               	movlb	0	; () banked
 11773  002F74  6F88               	movwf	___lmul@product& (0+255),b
 11774  002F76  0E00               	movlw	0
 11775  002F78  6F89               	movwf	(___lmul@product+1)& (0+255),b
 11776  002F7A  0E00               	movlw	0
 11777  002F7C  6F8A               	movwf	(___lmul@product+2)& (0+255),b
 11778  002F7E  0E00               	movlw	0
 11779  002F80  6F8B               	movwf	(___lmul@product+3)& (0+255),b
 11780  002F82                     
 11781                           ; BSR set to: 0
 11782                           
 11783                           ; BSR set to: 0
 11784  002F82  A180               	btfss	___lmul@multiplier& (0+255),0,b
 11785  002F84  D008               	goto	i1l497
 11786                           
 11787                           ; BSR set to: 0
 11788  002F86  5184               	movf	___lmul@multiplicand& (0+255),w,b
 11789  002F88  2788               	addwf	___lmul@product& (0+255),f,b
 11790  002F8A  5185               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11791  002F8C  2389               	addwfc	(___lmul@product+1)& (0+255),f,b
 11792  002F8E  5186               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11793  002F90  238A               	addwfc	(___lmul@product+2)& (0+255),f,b
 11794  002F92  5187               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11795  002F94  238B               	addwfc	(___lmul@product+3)& (0+255),f,b
 11796  002F96                     i1l497:
 11797                           
 11798                           ; BSR set to: 0
 11799                           
 11800                           ; BSR set to: 0
 11801  002F96  90D8               	bcf	status,0,c
 11802  002F98  3784               	rlcf	___lmul@multiplicand& (0+255),f,b
 11803  002F9A  3785               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11804  002F9C  3786               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11805  002F9E  3787               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11806                           
 11807                           ; BSR set to: 0
 11808  002FA0  90D8               	bcf	status,0,c
 11809  002FA2  3383               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11810  002FA4  3382               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11811  002FA6  3381               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11812  002FA8  3380               	rrcf	___lmul@multiplier& (0+255),f,b
 11813  002FAA  5180               	movf	___lmul@multiplier& (0+255),w,b
 11814  002FAC  1181               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11815  002FAE  1182               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 11816  002FB0  1183               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 11817  002FB2  A4D8               	btfss	status,2,c
 11818  002FB4  D7E6               	goto	i1l496
 11819                           
 11820                           ; BSR set to: 0
 11821  002FB6  C088  F080         	movff	___lmul@product,?___lmul
 11822  002FBA  C089  F081         	movff	___lmul@product+1,?___lmul+1
 11823  002FBE  C08A  F082         	movff	___lmul@product+2,?___lmul+2
 11824  002FC2  C08B  F083         	movff	___lmul@product+3,?___lmul+3
 11825                           
 11826                           ; BSR set to: 0
 11827  002FC6  0012               	return		;funcret
 11828  002FC8                     __end_of___lmul:
 11829                           	opt stack 0
 11830                           pclatu	equ	0xFFB
 11831                           pclath	equ	0xFFA
 11832                           tblptru	equ	0xFF8
 11833                           tblptrh	equ	0xFF7
 11834                           tblptrl	equ	0xFF6
 11835                           tablat	equ	0xFF5
 11836                           prodh	equ	0xFF4
 11837                           prodl	equ	0xFF3
 11838                           intcon	equ	0xFF2
 11839                           intcon2	equ	0xFF1
 11840                           intcon3	equ	0xFF0
 11841                           postinc0	equ	0xFEE
 11842                           fsr0h	equ	0xFEA
 11843                           fsr0l	equ	0xFE9
 11844                           wreg	equ	0xFE8
 11845                           fsr1h	equ	0xFE2
 11846                           fsr1l	equ	0xFE1
 11847                           bsr	equ	0xFE0
 11848                           indf2	equ	0xFDF
 11849                           postinc2	equ	0xFDE
 11850                           postdec2	equ	0xFDD
 11851                           fsr2h	equ	0xFDA
 11852                           fsr2l	equ	0xFD9
 11853                           status	equ	0xFD8
 11854                           
 11855 ;; *************** function ___fttol *****************
 11856 ;; Defined at:
 11857 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  f1              3   33[BANK0 ] float 
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;  lval            4   43[BANK0 ] unsigned long 
 11862 ;;  exp1            1   47[BANK0 ] unsigned char 
 11863 ;;  sign1           1   42[BANK0 ] unsigned char 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  4   33[BANK0 ] long 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11873 ;;      Params:         0       4       0       0       0       0       0
 11874 ;;      Locals:         0       6       0       0       0       0       0
 11875 ;;      Temps:          0       5       0       0       0       0       0
 11876 ;;      Totals:         0      15       0       0       0       0       0
 11877 ;;Total ram usage:       15 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; Hardware stack levels required when called:    4
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_ADC
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text27
 11888  002862                     __ptext27:
 11889                           	opt stack 0
 11890  002862                     ___fttol:
 11891                           	opt stack 19
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;incstack = 0
 11895  002862  C0A3  F0A5         	movff	___fttol@f1+2,??___fttol
 11896  002866  0100               	movlb	0	; () banked
 11897  002868  6BA6               	clrf	(??___fttol+1)& (0+255),b
 11898  00286A  6BA7               	clrf	(??___fttol+2)& (0+255),b
 11899  00286C  35A2               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11900  00286E  37A5               	rlcf	??___fttol& (0+255),f,b
 11901  002870  E301               	bnc	u551_21
 11902  002872  81A6               	bsf	(??___fttol+1)& (0+255),0,b
 11903  002874                     u551_21:
 11904  002874  51A5               	movf	??___fttol& (0+255),w,b
 11905  002876  6FAF               	movwf	___fttol@exp1& (0+255),b
 11906  002878  51AF               	movf	___fttol@exp1& (0+255),w,b
 11907  00287A  A4D8               	btfss	status,2,c
 11908  00287C  D009               	goto	i1l799
 11909                           
 11910                           ; BSR set to: 0
 11911  00287E  0E00               	movlw	0
 11912  002880  6FA1               	movwf	?___fttol& (0+255),b
 11913  002882  0E00               	movlw	0
 11914  002884  6FA2               	movwf	(?___fttol+1)& (0+255),b
 11915  002886  0E00               	movlw	0
 11916  002888  6FA3               	movwf	(?___fttol+2)& (0+255),b
 11917  00288A  0E00               	movlw	0
 11918  00288C  6FA4               	movwf	(?___fttol+3)& (0+255),b
 11919                           
 11920                           ; BSR set to: 0
 11921  00288E  0012               	return	
 11922  002890                     i1l799:
 11923                           
 11924                           ; BSR set to: 0
 11925                           
 11926                           ; BSR set to: 0
 11927  002890  0E17               	movlw	23
 11928  002892  6FA5               	movwf	??___fttol& (0+255),b
 11929  002894  C0A1  F0A6         	movff	___fttol@f1,??___fttol+1
 11930  002898  C0A2  F0A7         	movff	___fttol@f1+1,??___fttol+2
 11931  00289C  C0A3  F0A8         	movff	___fttol@f1+2,??___fttol+3
 11932  0028A0  29A5               	incf	??___fttol& (0+255),w,b
 11933  0028A2  6FA9               	movwf	(??___fttol+4)& (0+255),b
 11934  0028A4  D004               	goto	i1u553_20
 11935  0028A6                     i1u553_25:
 11936  0028A6  90D8               	bcf	status,0,c
 11937  0028A8  33A8               	rrcf	(??___fttol+3)& (0+255),f,b
 11938  0028AA  33A7               	rrcf	(??___fttol+2)& (0+255),f,b
 11939  0028AC  33A6               	rrcf	(??___fttol+1)& (0+255),f,b
 11940  0028AE                     i1u553_20:
 11941  0028AE  2FA9               	decfsz	(??___fttol+4)& (0+255),f,b
 11942  0028B0  D7FA               	goto	i1u553_25
 11943  0028B2  0100               	movlb	0	; () banked
 11944  0028B4  51A6               	movf	(??___fttol+1)& (0+255),w,b
 11945  0028B6  6FAA               	movwf	___fttol@sign1& (0+255),b
 11946                           
 11947                           ; BSR set to: 0
 11948  0028B8  8FA2               	bsf	(___fttol@f1+1)& (0+255),7,b
 11949                           
 11950                           ; BSR set to: 0
 11951  0028BA  0EFF               	movlw	255
 11952  0028BC  17A1               	andwf	___fttol@f1& (0+255),f,b
 11953  0028BE  0EFF               	movlw	255
 11954  0028C0  17A2               	andwf	(___fttol@f1+1)& (0+255),f,b
 11955  0028C2  0E00               	movlw	0
 11956  0028C4  17A3               	andwf	(___fttol@f1+2)& (0+255),f,b
 11957                           
 11958                           ; BSR set to: 0
 11959  0028C6  51A1               	movf	___fttol@f1& (0+255),w,b
 11960  0028C8  6FAB               	movwf	___fttol@lval& (0+255),b
 11961  0028CA  51A2               	movf	(___fttol@f1+1)& (0+255),w,b
 11962  0028CC  6FAC               	movwf	(___fttol@lval+1)& (0+255),b
 11963  0028CE  51A3               	movf	(___fttol@f1+2)& (0+255),w,b
 11964  0028D0  6FAD               	movwf	(___fttol@lval+2)& (0+255),b
 11965  0028D2  6BAE               	clrf	(___fttol@lval+3)& (0+255),b
 11966                           
 11967                           ; BSR set to: 0
 11968  0028D4  0E8E               	movlw	142
 11969  0028D6  5FAF               	subwf	___fttol@exp1& (0+255),f,b
 11970                           
 11971                           ; BSR set to: 0
 11972  0028D8  AFAF               	btfss	___fttol@exp1& (0+255),7,b
 11973  0028DA  D016               	goto	i1l801
 11974                           
 11975                           ; BSR set to: 0
 11976  0028DC  51AF               	movf	___fttol@exp1& (0+255),w,b
 11977  0028DE  0A80               	xorlw	128
 11978  0028E0  0F8F               	addlw	143
 11979  0028E2  B0D8               	btfsc	status,0,c
 11980  0028E4  D009               	goto	i1l802
 11981                           
 11982                           ; BSR set to: 0
 11983  0028E6  0E00               	movlw	0
 11984  0028E8  6FA1               	movwf	?___fttol& (0+255),b
 11985  0028EA  0E00               	movlw	0
 11986  0028EC  6FA2               	movwf	(?___fttol+1)& (0+255),b
 11987  0028EE  0E00               	movlw	0
 11988  0028F0  6FA3               	movwf	(?___fttol+2)& (0+255),b
 11989  0028F2  0E00               	movlw	0
 11990  0028F4  6FA4               	movwf	(?___fttol+3)& (0+255),b
 11991                           
 11992                           ; BSR set to: 0
 11993  0028F6  0012               	return	
 11994  0028F8                     i1l802:
 11995                           
 11996                           ; BSR set to: 0
 11997                           
 11998                           ; BSR set to: 0
 11999                           
 12000                           ; BSR set to: 0
 12001  0028F8  90D8               	bcf	status,0,c
 12002  0028FA  33AE               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12003  0028FC  33AD               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12004  0028FE  33AC               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12005  002900  33AB               	rrcf	___fttol@lval& (0+255),f,b
 12006                           
 12007                           ; BSR set to: 0
 12008  002902  3FAF               	incfsz	___fttol@exp1& (0+255),f,b
 12009  002904  D7F9               	goto	i1l802
 12010                           
 12011                           ; BSR set to: 0
 12012  002906  D015               	goto	i1u557_20
 12013  002908                     i1l801:
 12014                           
 12015                           ; BSR set to: 0
 12016                           
 12017                           ; BSR set to: 0
 12018  002908  0E17               	movlw	23
 12019  00290A  65AF               	cpfsgt	___fttol@exp1& (0+255),b
 12020  00290C  D00F               	goto	i1l807
 12021                           
 12022                           ; BSR set to: 0
 12023  00290E  0E00               	movlw	0
 12024  002910  6FA1               	movwf	?___fttol& (0+255),b
 12025  002912  0E00               	movlw	0
 12026  002914  6FA2               	movwf	(?___fttol+1)& (0+255),b
 12027  002916  0E00               	movlw	0
 12028  002918  6FA3               	movwf	(?___fttol+2)& (0+255),b
 12029  00291A  0E00               	movlw	0
 12030  00291C  6FA4               	movwf	(?___fttol+3)& (0+255),b
 12031                           
 12032                           ; BSR set to: 0
 12033  00291E  0012               	return	
 12034  002920                     
 12035                           ; BSR set to: 0
 12036                           
 12037                           ; BSR set to: 0
 12038  002920  90D8               	bcf	status,0,c
 12039  002922  37AB               	rlcf	___fttol@lval& (0+255),f,b
 12040  002924  37AC               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12041  002926  37AD               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12042  002928  37AE               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12043  00292A  07AF               	decf	___fttol@exp1& (0+255),f,b
 12044  00292C                     i1l807:
 12045                           
 12046                           ; BSR set to: 0
 12047                           
 12048                           ; BSR set to: 0
 12049  00292C  51AF               	movf	___fttol@exp1& (0+255),w,b
 12050  00292E  A4D8               	btfss	status,2,c
 12051  002930  D7F7               	goto	i1l808
 12052  002932                     i1u557_20:
 12053                           
 12054                           ; BSR set to: 0
 12055                           
 12056                           ; BSR set to: 0
 12057                           
 12058                           ; BSR set to: 0
 12059  002932  51AA               	movf	___fttol@sign1& (0+255),w,b
 12060  002934  B4D8               	btfsc	status,2,c
 12061  002936  D008               	goto	i1l810
 12062                           
 12063                           ; BSR set to: 0
 12064  002938  1FAE               	comf	(___fttol@lval+3)& (0+255),f,b
 12065  00293A  1FAD               	comf	(___fttol@lval+2)& (0+255),f,b
 12066  00293C  1FAC               	comf	(___fttol@lval+1)& (0+255),f,b
 12067  00293E  6DAB               	negf	___fttol@lval& (0+255),b
 12068  002940  0E00               	movlw	0
 12069  002942  23AC               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12070  002944  23AD               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12071  002946  23AE               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12072  002948                     i1l810:
 12073                           
 12074                           ; BSR set to: 0
 12075                           
 12076                           ; BSR set to: 0
 12077  002948  C0AB  F0A1         	movff	___fttol@lval,?___fttol
 12078  00294C  C0AC  F0A2         	movff	___fttol@lval+1,?___fttol+1
 12079  002950  C0AD  F0A3         	movff	___fttol@lval+2,?___fttol+2
 12080  002954  C0AE  F0A4         	movff	___fttol@lval+3,?___fttol+3
 12081  002958  0012               	return	
 12082  00295A                     __end_of___fttol:
 12083                           	opt stack 0
 12084                           pclatu	equ	0xFFB
 12085                           pclath	equ	0xFFA
 12086                           tblptru	equ	0xFF8
 12087                           tblptrh	equ	0xFF7
 12088                           tblptrl	equ	0xFF6
 12089                           tablat	equ	0xFF5
 12090                           prodh	equ	0xFF4
 12091                           prodl	equ	0xFF3
 12092                           intcon	equ	0xFF2
 12093                           intcon2	equ	0xFF1
 12094                           intcon3	equ	0xFF0
 12095                           postinc0	equ	0xFEE
 12096                           fsr0h	equ	0xFEA
 12097                           fsr0l	equ	0xFE9
 12098                           wreg	equ	0xFE8
 12099                           fsr1h	equ	0xFE2
 12100                           fsr1l	equ	0xFE1
 12101                           bsr	equ	0xFE0
 12102                           indf2	equ	0xFDF
 12103                           postinc2	equ	0xFDE
 12104                           postdec2	equ	0xFDD
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function ___ftmul *****************
 12110 ;; Defined at:
 12111 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;  f1              3   18[BANK0 ] float 
 12114 ;;  f2              3   21[BANK0 ] float 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
 12117 ;;  sign            1   32[BANK0 ] unsigned char 
 12118 ;;  cntr            1   31[BANK0 ] unsigned char 
 12119 ;;  exp             1   27[BANK0 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  3   18[BANK0 ] float 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12129 ;;      Params:         0       6       0       0       0       0       0
 12130 ;;      Locals:         0       6       0       0       0       0       0
 12131 ;;      Temps:          0       3       0       0       0       0       0
 12132 ;;      Totals:         0      15       0       0       0       0       0
 12133 ;;Total ram usage:       15 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    5
 12136 ;; This function calls:
 12137 ;;		___ftpack
 12138 ;; This function is called by:
 12139 ;;		_ADC
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text28
 12144  00295A                     __ptext28:
 12145                           	opt stack 0
 12146  00295A                     ___ftmul:
 12147                           	opt stack 18
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;incstack = 0
 12151  00295A  C094  F098         	movff	___ftmul@f1+2,??___ftmul
 12152  00295E  0100               	movlb	0	; () banked
 12153  002960  6B99               	clrf	(??___ftmul+1)& (0+255),b
 12154  002962  6B9A               	clrf	(??___ftmul+2)& (0+255),b
 12155  002964  3593               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12156  002966  3798               	rlcf	??___ftmul& (0+255),f,b
 12157  002968  E301               	bnc	u545_21
 12158  00296A  8199               	bsf	(??___ftmul+1)& (0+255),0,b
 12159  00296C                     u545_21:
 12160  00296C  5198               	movf	??___ftmul& (0+255),w,b
 12161  00296E  6F9B               	movwf	___ftmul@exp& (0+255),b
 12162  002970  519B               	movf	___ftmul@exp& (0+255),w,b
 12163  002972  A4D8               	btfss	status,2,c
 12164  002974  D007               	goto	i1l778
 12165                           
 12166                           ; BSR set to: 0
 12167  002976  0E00               	movlw	0
 12168  002978  6F92               	movwf	?___ftmul& (0+255),b
 12169  00297A  0E00               	movlw	0
 12170  00297C  6F93               	movwf	(?___ftmul+1)& (0+255),b
 12171  00297E  0E00               	movlw	0
 12172  002980  6F94               	movwf	(?___ftmul+2)& (0+255),b
 12173                           
 12174                           ; BSR set to: 0
 12175  002982  0012               	return	
 12176  002984                     i1l778:
 12177                           
 12178                           ; BSR set to: 0
 12179                           
 12180                           ; BSR set to: 0
 12181  002984  C097  F098         	movff	___ftmul@f2+2,??___ftmul
 12182  002988  6B99               	clrf	(??___ftmul+1)& (0+255),b
 12183  00298A  6B9A               	clrf	(??___ftmul+2)& (0+255),b
 12184  00298C  3596               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12185  00298E  3798               	rlcf	??___ftmul& (0+255),f,b
 12186  002990  E301               	bnc	u547_21
 12187  002992  8199               	bsf	(??___ftmul+1)& (0+255),0,b
 12188  002994                     u547_21:
 12189  002994  5198               	movf	??___ftmul& (0+255),w,b
 12190  002996  6FA0               	movwf	___ftmul@sign& (0+255),b
 12191  002998  51A0               	movf	___ftmul@sign& (0+255),w,b
 12192  00299A  A4D8               	btfss	status,2,c
 12193  00299C  D007               	goto	i1l780
 12194                           
 12195                           ; BSR set to: 0
 12196  00299E  0E00               	movlw	0
 12197  0029A0  6F92               	movwf	?___ftmul& (0+255),b
 12198  0029A2  0E00               	movlw	0
 12199  0029A4  6F93               	movwf	(?___ftmul+1)& (0+255),b
 12200  0029A6  0E00               	movlw	0
 12201  0029A8  6F94               	movwf	(?___ftmul+2)& (0+255),b
 12202                           
 12203                           ; BSR set to: 0
 12204  0029AA  0012               	return	
 12205  0029AC                     i1l780:
 12206                           
 12207                           ; BSR set to: 0
 12208                           
 12209                           ; BSR set to: 0
 12210  0029AC  51A0               	movf	___ftmul@sign& (0+255),w,b
 12211  0029AE  0F7B               	addlw	123
 12212  0029B0  279B               	addwf	___ftmul@exp& (0+255),f,b
 12213                           
 12214                           ; BSR set to: 0
 12215  0029B2  C094  F0A0         	movff	___ftmul@f1+2,___ftmul@sign
 12216  0029B6  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
 12217  0029B8  1BA0               	xorwf	___ftmul@sign& (0+255),f,b
 12218  0029BA  0E80               	movlw	128
 12219  0029BC  17A0               	andwf	___ftmul@sign& (0+255),f,b
 12220                           
 12221                           ; BSR set to: 0
 12222  0029BE  8F93               	bsf	(___ftmul@f1+1)& (0+255),7,b
 12223                           
 12224                           ; BSR set to: 0
 12225  0029C0  8F96               	bsf	(___ftmul@f2+1)& (0+255),7,b
 12226                           
 12227                           ; BSR set to: 0
 12228  0029C2  0EFF               	movlw	255
 12229  0029C4  1795               	andwf	___ftmul@f2& (0+255),f,b
 12230  0029C6  0EFF               	movlw	255
 12231  0029C8  1796               	andwf	(___ftmul@f2+1)& (0+255),f,b
 12232  0029CA  0E00               	movlw	0
 12233  0029CC  1797               	andwf	(___ftmul@f2+2)& (0+255),f,b
 12234                           
 12235                           ; BSR set to: 0
 12236  0029CE  0E00               	movlw	0
 12237  0029D0  6F9C               	movwf	___ftmul@f3_as_product& (0+255),b
 12238  0029D2  0E00               	movlw	0
 12239  0029D4  6F9D               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 12240  0029D6  0E00               	movlw	0
 12241  0029D8  6F9E               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 12242                           
 12243                           ; BSR set to: 0
 12244  0029DA  0E07               	movlw	7
 12245  0029DC  6F9F               	movwf	___ftmul@cntr& (0+255),b
 12246  0029DE                     
 12247                           ; BSR set to: 0
 12248                           
 12249                           ; BSR set to: 0
 12250  0029DE  A192               	btfss	___ftmul@f1& (0+255),0,b
 12251  0029E0  D006               	goto	i1l782
 12252                           
 12253                           ; BSR set to: 0
 12254  0029E2  5195               	movf	___ftmul@f2& (0+255),w,b
 12255  0029E4  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12256  0029E6  5196               	movf	(___ftmul@f2+1)& (0+255),w,b
 12257  0029E8  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12258  0029EA  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
 12259  0029EC  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12260  0029EE                     i1l782:
 12261                           
 12262                           ; BSR set to: 0
 12263                           
 12264                           ; BSR set to: 0
 12265  0029EE  90D8               	bcf	status,0,c
 12266  0029F0  3394               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12267  0029F2  3393               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12268  0029F4  3392               	rrcf	___ftmul@f1& (0+255),f,b
 12269  0029F6  90D8               	bcf	status,0,c
 12270  0029F8  3795               	rlcf	___ftmul@f2& (0+255),f,b
 12271  0029FA  3796               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 12272  0029FC  3797               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 12273                           
 12274                           ; BSR set to: 0
 12275  0029FE  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
 12276  002A00  D7EE               	goto	i1l781
 12277                           
 12278                           ; BSR set to: 0
 12279                           
 12280                           ; BSR set to: 0
 12281  002A02  0E09               	movlw	9
 12282  002A04  6F9F               	movwf	___ftmul@cntr& (0+255),b
 12283  002A06                     
 12284                           ; BSR set to: 0
 12285                           
 12286                           ; BSR set to: 0
 12287  002A06  A192               	btfss	___ftmul@f1& (0+255),0,b
 12288  002A08  D006               	goto	i1l785
 12289                           
 12290                           ; BSR set to: 0
 12291  002A0A  5195               	movf	___ftmul@f2& (0+255),w,b
 12292  002A0C  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12293  002A0E  5196               	movf	(___ftmul@f2+1)& (0+255),w,b
 12294  002A10  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12295  002A12  5197               	movf	(___ftmul@f2+2)& (0+255),w,b
 12296  002A14  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12297  002A16                     i1l785:
 12298                           
 12299                           ; BSR set to: 0
 12300                           
 12301                           ; BSR set to: 0
 12302  002A16  90D8               	bcf	status,0,c
 12303  002A18  3394               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12304  002A1A  3393               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12305  002A1C  3392               	rrcf	___ftmul@f1& (0+255),f,b
 12306  002A1E  90D8               	bcf	status,0,c
 12307  002A20  339E               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12308  002A22  339D               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12309  002A24  339C               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12310                           
 12311                           ; BSR set to: 0
 12312  002A26  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
 12313  002A28  D7EE               	goto	i1l784
 12314                           
 12315                           ; BSR set to: 0
 12316                           
 12317                           ; BSR set to: 0
 12318  002A2A  C09C  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
 12319  002A2E  C09D  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12320  002A32  C09E  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12321  002A36  C09B  F083         	movff	___ftmul@exp,___ftpack@exp
 12322  002A3A  C0A0  F084         	movff	___ftmul@sign,___ftpack@sign
 12323  002A3E  EC8F  F015         	call	___ftpack	;wreg free
 12324  002A42  C080  F092         	movff	?___ftpack,?___ftmul
 12325  002A46  C081  F093         	movff	?___ftpack+1,?___ftmul+1
 12326  002A4A  C082  F094         	movff	?___ftpack+2,?___ftmul+2
 12327  002A4E  0012               	return	
 12328  002A50                     __end_of___ftmul:
 12329                           	opt stack 0
 12330                           pclatu	equ	0xFFB
 12331                           pclath	equ	0xFFA
 12332                           tblptru	equ	0xFF8
 12333                           tblptrh	equ	0xFF7
 12334                           tblptrl	equ	0xFF6
 12335                           tablat	equ	0xFF5
 12336                           prodh	equ	0xFF4
 12337                           prodl	equ	0xFF3
 12338                           intcon	equ	0xFF2
 12339                           intcon2	equ	0xFF1
 12340                           intcon3	equ	0xFF0
 12341                           postinc0	equ	0xFEE
 12342                           fsr0h	equ	0xFEA
 12343                           fsr0l	equ	0xFE9
 12344                           wreg	equ	0xFE8
 12345                           fsr1h	equ	0xFE2
 12346                           fsr1l	equ	0xFE1
 12347                           bsr	equ	0xFE0
 12348                           indf2	equ	0xFDF
 12349                           postinc2	equ	0xFDE
 12350                           postdec2	equ	0xFDD
 12351                           fsr2h	equ	0xFDA
 12352                           fsr2l	equ	0xFD9
 12353                           status	equ	0xFD8
 12354                           
 12355 ;; *************** function ___altoft *****************
 12356 ;; Defined at:
 12357 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  c               4    8[BANK0 ] long 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  sign            1   17[BANK0 ] unsigned char 
 12362 ;;  exp             1   16[BANK0 ] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  3    8[BANK0 ] float 
 12365 ;; Registers used:
 12366 ;;		wreg, status,2, status,0, cstack
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12372 ;;      Params:         0       4       0       0       0       0       0
 12373 ;;      Locals:         0       2       0       0       0       0       0
 12374 ;;      Temps:          0       4       0       0       0       0       0
 12375 ;;      Totals:         0      10       0       0       0       0       0
 12376 ;;Total ram usage:       10 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    5
 12379 ;; This function calls:
 12380 ;;		___ftpack
 12381 ;; This function is called by:
 12382 ;;		_ADC
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text29
 12387  002D58                     __ptext29:
 12388                           	opt stack 0
 12389  002D58                     ___altoft:
 12390                           	opt stack 18
 12391                           
 12392                           ;incstack = 0
 12393  002D58  0E00               	movlw	0
 12394  002D5A  0100               	movlb	0	; () banked
 12395  002D5C  6F91               	movwf	___altoft@sign& (0+255),b
 12396  002D5E  0E8E               	movlw	142
 12397  002D60  6F90               	movwf	___altoft@exp& (0+255),b
 12398                           
 12399                           ; BSR set to: 0
 12400  002D62  AF8B               	btfss	(___altoft@c+3)& (0+255),7,b
 12401  002D64  D011               	goto	i1l569
 12402                           
 12403                           ; BSR set to: 0
 12404  002D66  1F8B               	comf	(___altoft@c+3)& (0+255),f,b
 12405  002D68  1F8A               	comf	(___altoft@c+2)& (0+255),f,b
 12406  002D6A  1F89               	comf	(___altoft@c+1)& (0+255),f,b
 12407  002D6C  6D88               	negf	___altoft@c& (0+255),b
 12408  002D6E  0E00               	movlw	0
 12409  002D70  2389               	addwfc	(___altoft@c+1)& (0+255),f,b
 12410  002D72  238A               	addwfc	(___altoft@c+2)& (0+255),f,b
 12411  002D74  238B               	addwfc	(___altoft@c+3)& (0+255),f,b
 12412                           
 12413                           ; BSR set to: 0
 12414  002D76  0E01               	movlw	1
 12415  002D78  6F91               	movwf	___altoft@sign& (0+255),b
 12416                           
 12417                           ; BSR set to: 0
 12418  002D7A  D006               	goto	i1l569
 12419  002D7C                     
 12420                           ; BSR set to: 0
 12421                           
 12422                           ; BSR set to: 0
 12423  002D7C  90D8               	bcf	status,0,c
 12424  002D7E  338B               	rrcf	(___altoft@c+3)& (0+255),f,b
 12425  002D80  338A               	rrcf	(___altoft@c+2)& (0+255),f,b
 12426  002D82  3389               	rrcf	(___altoft@c+1)& (0+255),f,b
 12427  002D84  3388               	rrcf	___altoft@c& (0+255),f,b
 12428  002D86  2B90               	incf	___altoft@exp& (0+255),f,b
 12429  002D88                     i1l569:
 12430                           
 12431                           ; BSR set to: 0
 12432                           
 12433                           ; BSR set to: 0
 12434  002D88  0E00               	movlw	0
 12435  002D8A  1588               	andwf	___altoft@c& (0+255),w,b
 12436  002D8C  6F8C               	movwf	??___altoft& (0+255),b
 12437  002D8E  0E00               	movlw	0
 12438  002D90  1589               	andwf	(___altoft@c+1)& (0+255),w,b
 12439  002D92  6F8D               	movwf	(??___altoft+1)& (0+255),b
 12440  002D94  0E00               	movlw	0
 12441  002D96  158A               	andwf	(___altoft@c+2)& (0+255),w,b
 12442  002D98  6F8E               	movwf	(??___altoft+2)& (0+255),b
 12443  002D9A  0EFF               	movlw	255
 12444  002D9C  158B               	andwf	(___altoft@c+3)& (0+255),w,b
 12445  002D9E  6F8F               	movwf	(??___altoft+3)& (0+255),b
 12446  002DA0  518C               	movf	??___altoft& (0+255),w,b
 12447  002DA2  118D               	iorwf	(??___altoft+1)& (0+255),w,b
 12448  002DA4  118E               	iorwf	(??___altoft+2)& (0+255),w,b
 12449  002DA6  118F               	iorwf	(??___altoft+3)& (0+255),w,b
 12450  002DA8  A4D8               	btfss	status,2,c
 12451  002DAA  D7E8               	goto	i1l570
 12452                           
 12453                           ; BSR set to: 0
 12454                           
 12455                           ; BSR set to: 0
 12456  002DAC  C088  F080         	movff	___altoft@c,___ftpack@arg
 12457  002DB0  C089  F081         	movff	___altoft@c+1,___ftpack@arg+1
 12458  002DB4  C08A  F082         	movff	___altoft@c+2,___ftpack@arg+2
 12459  002DB8  C090  F083         	movff	___altoft@exp,___ftpack@exp
 12460  002DBC  C091  F084         	movff	___altoft@sign,___ftpack@sign
 12461  002DC0  EC8F  F015         	call	___ftpack	;wreg free
 12462  002DC4  C080  F088         	movff	?___ftpack,?___altoft
 12463  002DC8  C081  F089         	movff	?___ftpack+1,?___altoft+1
 12464  002DCC  C082  F08A         	movff	?___ftpack+2,?___altoft+2
 12465  002DD0  0012               	return	
 12466  002DD2                     __end_of___altoft:
 12467                           	opt stack 0
 12468                           pclatu	equ	0xFFB
 12469                           pclath	equ	0xFFA
 12470                           tblptru	equ	0xFF8
 12471                           tblptrh	equ	0xFF7
 12472                           tblptrl	equ	0xFF6
 12473                           tablat	equ	0xFF5
 12474                           prodh	equ	0xFF4
 12475                           prodl	equ	0xFF3
 12476                           intcon	equ	0xFF2
 12477                           intcon2	equ	0xFF1
 12478                           intcon3	equ	0xFF0
 12479                           postinc0	equ	0xFEE
 12480                           fsr0h	equ	0xFEA
 12481                           fsr0l	equ	0xFE9
 12482                           wreg	equ	0xFE8
 12483                           fsr1h	equ	0xFE2
 12484                           fsr1l	equ	0xFE1
 12485                           bsr	equ	0xFE0
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           fsr2h	equ	0xFDA
 12490                           fsr2l	equ	0xFD9
 12491                           status	equ	0xFD8
 12492                           
 12493 ;; *************** function ___ftpack *****************
 12494 ;; Defined at:
 12495 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;  arg             3    0[BANK0 ] unsigned um
 12498 ;;  exp             1    3[BANK0 ] unsigned char 
 12499 ;;  sign            1    4[BANK0 ] unsigned char 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;		None
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  3    0[BANK0 ] float 
 12504 ;; Registers used:
 12505 ;;		wreg, status,2, status,0
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12511 ;;      Params:         0       5       0       0       0       0       0
 12512 ;;      Locals:         0       0       0       0       0       0       0
 12513 ;;      Temps:          0       3       0       0       0       0       0
 12514 ;;      Totals:         0       8       0       0       0       0       0
 12515 ;;Total ram usage:        8 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    4
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		___altoft
 12522 ;;		___ftmul
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text30
 12527  002B1E                     __ptext30:
 12528                           	opt stack 0
 12529  002B1E                     ___ftpack:
 12530                           	opt stack 18
 12531                           
 12532                           ;incstack = 0
 12533  002B1E  0100               	movlb	0	; () banked
 12534  002B20  5183               	movf	___ftpack@exp& (0+255),w,b
 12535  002B22  B4D8               	btfsc	status,2,c
 12536  002B24  D005               	goto	i1u492_20
 12537                           
 12538                           ; BSR set to: 0
 12539  002B26  5180               	movf	___ftpack@arg& (0+255),w,b
 12540  002B28  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12541  002B2A  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12542  002B2C  A4D8               	btfss	status,2,c
 12543  002B2E  D00C               	goto	i1l699
 12544  002B30                     i1u492_20:
 12545                           
 12546                           ; BSR set to: 0
 12547                           
 12548                           ; BSR set to: 0
 12549  002B30  0E00               	movlw	0
 12550  002B32  6F80               	movwf	?___ftpack& (0+255),b
 12551  002B34  0E00               	movlw	0
 12552  002B36  6F81               	movwf	(?___ftpack+1)& (0+255),b
 12553  002B38  0E00               	movlw	0
 12554  002B3A  6F82               	movwf	(?___ftpack+2)& (0+255),b
 12555                           
 12556                           ; BSR set to: 0
 12557  002B3C  0012               	return	
 12558  002B3E                     
 12559                           ; BSR set to: 0
 12560                           
 12561                           ; BSR set to: 0
 12562  002B3E  2B83               	incf	___ftpack@exp& (0+255),f,b
 12563  002B40  90D8               	bcf	status,0,c
 12564  002B42  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12565  002B44  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12566  002B46  3380               	rrcf	___ftpack@arg& (0+255),f,b
 12567  002B48                     i1l699:
 12568                           
 12569                           ; BSR set to: 0
 12570                           
 12571                           ; BSR set to: 0
 12572  002B48  0E00               	movlw	0
 12573  002B4A  1580               	andwf	___ftpack@arg& (0+255),w,b
 12574  002B4C  6F85               	movwf	??___ftpack& (0+255),b
 12575  002B4E  0E00               	movlw	0
 12576  002B50  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12577  002B52  6F86               	movwf	(??___ftpack+1)& (0+255),b
 12578  002B54  0EFE               	movlw	254
 12579  002B56  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12580  002B58  6F87               	movwf	(??___ftpack+2)& (0+255),b
 12581  002B5A  5185               	movf	??___ftpack& (0+255),w,b
 12582  002B5C  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 12583  002B5E  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 12584  002B60  B4D8               	btfsc	status,2,c
 12585  002B62  D00C               	goto	i1l702
 12586  002B64  D7EC               	goto	i1l700
 12587  002B66                     
 12588                           ; BSR set to: 0
 12589                           
 12590                           ; BSR set to: 0
 12591  002B66  2B83               	incf	___ftpack@exp& (0+255),f,b
 12592                           
 12593                           ; BSR set to: 0
 12594  002B68  0E01               	movlw	1
 12595  002B6A  2780               	addwf	___ftpack@arg& (0+255),f,b
 12596  002B6C  0E00               	movlw	0
 12597  002B6E  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12598  002B70  0E00               	movlw	0
 12599  002B72  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12600  002B74  90D8               	bcf	status,0,c
 12601  002B76  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12602  002B78  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12603  002B7A  3380               	rrcf	___ftpack@arg& (0+255),f,b
 12604  002B7C                     i1l702:
 12605                           
 12606                           ; BSR set to: 0
 12607                           
 12608                           ; BSR set to: 0
 12609  002B7C  0E00               	movlw	0
 12610  002B7E  1580               	andwf	___ftpack@arg& (0+255),w,b
 12611  002B80  6F85               	movwf	??___ftpack& (0+255),b
 12612  002B82  0E00               	movlw	0
 12613  002B84  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12614  002B86  6F86               	movwf	(??___ftpack+1)& (0+255),b
 12615  002B88  0EFF               	movlw	255
 12616  002B8A  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12617  002B8C  6F87               	movwf	(??___ftpack+2)& (0+255),b
 12618  002B8E  5185               	movf	??___ftpack& (0+255),w,b
 12619  002B90  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 12620  002B92  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 12621  002B94  B4D8               	btfsc	status,2,c
 12622  002B96  D006               	goto	i1l705
 12623  002B98  D7E6               	goto	i1l703
 12624  002B9A                     
 12625                           ; BSR set to: 0
 12626                           
 12627                           ; BSR set to: 0
 12628  002B9A  0783               	decf	___ftpack@exp& (0+255),f,b
 12629  002B9C  90D8               	bcf	status,0,c
 12630  002B9E  3780               	rlcf	___ftpack@arg& (0+255),f,b
 12631  002BA0  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12632  002BA2  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12633  002BA4                     i1l705:
 12634                           
 12635                           ; BSR set to: 0
 12636                           
 12637                           ; BSR set to: 0
 12638  002BA4  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12639  002BA6  D003               	goto	i1u496_20
 12640                           
 12641                           ; BSR set to: 0
 12642  002BA8  0E02               	movlw	2
 12643  002BAA  6183               	cpfslt	___ftpack@exp& (0+255),b
 12644  002BAC  D7F6               	goto	i1l706
 12645  002BAE                     i1u496_20:
 12646                           
 12647                           ; BSR set to: 0
 12648                           
 12649                           ; BSR set to: 0
 12650  002BAE  A183               	btfss	___ftpack@exp& (0+255),0,b
 12651                           
 12652                           ; BSR set to: 0
 12653  002BB0  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12654                           
 12655                           ; BSR set to: 0
 12656                           
 12657                           ; BSR set to: 0
 12658  002BB2  90D8               	bcf	status,0,c
 12659  002BB4  3383               	rrcf	___ftpack@exp& (0+255),f,b
 12660  002BB6  5183               	movf	___ftpack@exp& (0+255),w,b
 12661  002BB8  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12662                           
 12663                           ; BSR set to: 0
 12664  002BBA  5184               	movf	___ftpack@sign& (0+255),w,b
 12665  002BBC  A4D8               	btfss	status,2,c
 12666                           
 12667                           ; BSR set to: 0
 12668  002BBE  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12669                           
 12670                           ; BSR set to: 0
 12671                           
 12672                           ; BSR set to: 0
 12673  002BC0  C080  F080         	movff	___ftpack@arg,?___ftpack
 12674  002BC4  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
 12675  002BC8  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
 12676  002BCC  0012               	return	
 12677  002BCE                     __end_of___ftpack:
 12678                           	opt stack 0
 12679                           pclatu	equ	0xFFB
 12680                           pclath	equ	0xFFA
 12681                           tblptru	equ	0xFF8
 12682                           tblptrh	equ	0xFF7
 12683                           tblptrl	equ	0xFF6
 12684                           tablat	equ	0xFF5
 12685                           prodh	equ	0xFF4
 12686                           prodl	equ	0xFF3
 12687                           intcon	equ	0xFF2
 12688                           intcon2	equ	0xFF1
 12689                           intcon3	equ	0xFF0
 12690                           postinc0	equ	0xFEE
 12691                           fsr0h	equ	0xFEA
 12692                           fsr0l	equ	0xFE9
 12693                           wreg	equ	0xFE8
 12694                           fsr1h	equ	0xFE2
 12695                           fsr1l	equ	0xFE1
 12696                           bsr	equ	0xFE0
 12697                           indf2	equ	0xFDF
 12698                           postinc2	equ	0xFDE
 12699                           postdec2	equ	0xFDD
 12700                           fsr2h	equ	0xFDA
 12701                           fsr2l	equ	0xFD9
 12702                           status	equ	0xFD8
 12703                           
 12704 ;; *************** function ___aldiv *****************
 12705 ;; Defined at:
 12706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;  dividend        4    0[BANK0 ] long 
 12709 ;;  divisor         4    4[BANK0 ] long 
 12710 ;; Auto vars:     Size  Location     Type
 12711 ;;  quotient        4   10[BANK0 ] long 
 12712 ;;  sign            1    9[BANK0 ] unsigned char 
 12713 ;;  counter         1    8[BANK0 ] unsigned char 
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  4    0[BANK0 ] long 
 12716 ;; Registers used:
 12717 ;;		wreg, status,2, status,0
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12723 ;;      Params:         0       8       0       0       0       0       0
 12724 ;;      Locals:         0       6       0       0       0       0       0
 12725 ;;      Temps:          0       0       0       0       0       0       0
 12726 ;;      Totals:         0      14       0       0       0       0       0
 12727 ;;Total ram usage:       14 bytes
 12728 ;; Hardware stack levels used:    1
 12729 ;; Hardware stack levels required when called:    4
 12730 ;; This function calls:
 12731 ;;		Nothing
 12732 ;; This function is called by:
 12733 ;;		_ADC
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text31
 12738  002A50                     __ptext31:
 12739                           	opt stack 0
 12740  002A50                     ___aldiv:
 12741                           	opt stack 19
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;incstack = 0
 12745  002A50  0E00               	movlw	0
 12746  002A52  0100               	movlb	0	; () banked
 12747  002A54  6F89               	movwf	___aldiv@sign& (0+255),b
 12748                           
 12749                           ; BSR set to: 0
 12750  002A56  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 12751  002A58  D00A               	goto	i1l540
 12752                           
 12753                           ; BSR set to: 0
 12754  002A5A  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
 12755  002A5C  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
 12756  002A5E  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
 12757  002A60  6D84               	negf	___aldiv@divisor& (0+255),b
 12758  002A62  0E00               	movlw	0
 12759  002A64  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 12760  002A66  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 12761  002A68  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 12762                           
 12763                           ; BSR set to: 0
 12764  002A6A  0E01               	movlw	1
 12765  002A6C  6F89               	movwf	___aldiv@sign& (0+255),b
 12766  002A6E                     i1l540:
 12767                           
 12768                           ; BSR set to: 0
 12769                           
 12770                           ; BSR set to: 0
 12771  002A6E  AF83               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 12772  002A70  D00A               	goto	i1l541
 12773                           
 12774                           ; BSR set to: 0
 12775  002A72  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
 12776  002A74  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
 12777  002A76  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
 12778  002A78  6D80               	negf	___aldiv@dividend& (0+255),b
 12779  002A7A  0E00               	movlw	0
 12780  002A7C  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 12781  002A7E  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 12782  002A80  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 12783                           
 12784                           ; BSR set to: 0
 12785  002A82  0E01               	movlw	1
 12786  002A84  1B89               	xorwf	___aldiv@sign& (0+255),f,b
 12787  002A86                     i1l541:
 12788                           
 12789                           ; BSR set to: 0
 12790                           
 12791                           ; BSR set to: 0
 12792  002A86  0E00               	movlw	0
 12793  002A88  6F8A               	movwf	___aldiv@quotient& (0+255),b
 12794  002A8A  0E00               	movlw	0
 12795  002A8C  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
 12796  002A8E  0E00               	movlw	0
 12797  002A90  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
 12798  002A92  0E00               	movlw	0
 12799  002A94  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
 12800                           
 12801                           ; BSR set to: 0
 12802  002A96  5184               	movf	___aldiv@divisor& (0+255),w,b
 12803  002A98  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 12804  002A9A  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 12805  002A9C  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 12806  002A9E  B4D8               	btfsc	status,2,c
 12807  002AA0  D02A               	goto	i1l548
 12808                           
 12809                           ; BSR set to: 0
 12810  002AA2  0E01               	movlw	1
 12811  002AA4  6F88               	movwf	___aldiv@counter& (0+255),b
 12812  002AA6  D006               	goto	i1l543
 12813  002AA8                     
 12814                           ; BSR set to: 0
 12815                           
 12816                           ; BSR set to: 0
 12817  002AA8  90D8               	bcf	status,0,c
 12818  002AAA  3784               	rlcf	___aldiv@divisor& (0+255),f,b
 12819  002AAC  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 12820  002AAE  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 12821  002AB0  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 12822  002AB2  2B88               	incf	___aldiv@counter& (0+255),f,b
 12823  002AB4                     i1l543:
 12824                           
 12825                           ; BSR set to: 0
 12826                           
 12827                           ; BSR set to: 0
 12828  002AB4  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 12829  002AB6  D7F8               	goto	i1l544
 12830  002AB8                     i1u540_20:
 12831                           
 12832                           ; BSR set to: 0
 12833                           
 12834                           ; BSR set to: 0
 12835                           
 12836                           ; BSR set to: 0
 12837  002AB8  90D8               	bcf	status,0,c
 12838  002ABA  378A               	rlcf	___aldiv@quotient& (0+255),f,b
 12839  002ABC  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 12840  002ABE  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 12841  002AC0  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 12842                           
 12843                           ; BSR set to: 0
 12844  002AC2  5184               	movf	___aldiv@divisor& (0+255),w,b
 12845  002AC4  5D80               	subwf	___aldiv@dividend& (0+255),w,b
 12846  002AC6  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
 12847  002AC8  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 12848  002ACA  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
 12849  002ACC  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 12850  002ACE  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
 12851  002AD0  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 12852  002AD2  A0D8               	btfss	status,0,c
 12853  002AD4  D009               	goto	i1l547
 12854                           
 12855                           ; BSR set to: 0
 12856  002AD6  5184               	movf	___aldiv@divisor& (0+255),w,b
 12857  002AD8  5F80               	subwf	___aldiv@dividend& (0+255),f,b
 12858  002ADA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
 12859  002ADC  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 12860  002ADE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
 12861  002AE0  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 12862  002AE2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
 12863  002AE4  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 12864                           
 12865                           ; BSR set to: 0
 12866  002AE6  818A               	bsf	___aldiv@quotient& (0+255),0,b
 12867  002AE8                     i1l547:
 12868                           
 12869                           ; BSR set to: 0
 12870                           
 12871                           ; BSR set to: 0
 12872  002AE8  90D8               	bcf	status,0,c
 12873  002AEA  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 12874  002AEC  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 12875  002AEE  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 12876  002AF0  3384               	rrcf	___aldiv@divisor& (0+255),f,b
 12877                           
 12878                           ; BSR set to: 0
 12879  002AF2  2F88               	decfsz	___aldiv@counter& (0+255),f,b
 12880  002AF4  D7E1               	goto	i1u540_20
 12881  002AF6                     i1l548:
 12882                           
 12883                           ; BSR set to: 0
 12884                           
 12885                           ; BSR set to: 0
 12886                           
 12887                           ; BSR set to: 0
 12888  002AF6  5189               	movf	___aldiv@sign& (0+255),w,b
 12889  002AF8  B4D8               	btfsc	status,2,c
 12890  002AFA  D008               	goto	i1l549
 12891                           
 12892                           ; BSR set to: 0
 12893  002AFC  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 12894  002AFE  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 12895  002B00  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 12896  002B02  6D8A               	negf	___aldiv@quotient& (0+255),b
 12897  002B04  0E00               	movlw	0
 12898  002B06  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 12899  002B08  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 12900  002B0A  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 12901  002B0C                     i1l549:
 12902                           
 12903                           ; BSR set to: 0
 12904                           
 12905                           ; BSR set to: 0
 12906  002B0C  C08A  F080         	movff	___aldiv@quotient,?___aldiv
 12907  002B10  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
 12908  002B14  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
 12909  002B18  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
 12910  002B1C  0012               	return	
 12911  002B1E                     __end_of___aldiv:
 12912                           	opt stack 0
 12913                           pclatu	equ	0xFFB
 12914                           pclath	equ	0xFFA
 12915                           tblptru	equ	0xFF8
 12916                           tblptrh	equ	0xFF7
 12917                           tblptrl	equ	0xFF6
 12918                           tablat	equ	0xFF5
 12919                           prodh	equ	0xFF4
 12920                           prodl	equ	0xFF3
 12921                           intcon	equ	0xFF2
 12922                           intcon2	equ	0xFF1
 12923                           intcon3	equ	0xFF0
 12924                           postinc0	equ	0xFEE
 12925                           fsr0h	equ	0xFEA
 12926                           fsr0l	equ	0xFE9
 12927                           wreg	equ	0xFE8
 12928                           fsr1h	equ	0xFE2
 12929                           fsr1l	equ	0xFE1
 12930                           bsr	equ	0xFE0
 12931                           indf2	equ	0xFDF
 12932                           postinc2	equ	0xFDE
 12933                           postdec2	equ	0xFDD
 12934                           fsr2h	equ	0xFDA
 12935                           fsr2l	equ	0xFD9
 12936                           status	equ	0xFD8
 12937                           
 12938 ;; *************** function _alarm *****************
 12939 ;; Defined at:
 12940 ;;		line 133 in file "Lab7.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;		None
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      void 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12954 ;;      Params:         0       0       0       0       0       0       0
 12955 ;;      Locals:         0       0       0       0       0       0       0
 12956 ;;      Temps:         23       0       0       0       0       0       0
 12957 ;;      Totals:        23       0       0       0       0       0       0
 12958 ;;Total ram usage:       23 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    3
 12961 ;; This function calls:
 12962 ;;		i2_Clear
 12963 ;;		i2_password
 12964 ;;		i2_printf
 12965 ;; This function is called by:
 12966 ;;		Interrupt level 2
 12967 ;; This function uses a non-reentrant model
 12968 ;;
 12969                           
 12970                           	psect	intcode
 12971  000008                     __pintcode:
 12972                           	opt stack 0
 12973  000008                     _alarm:
 12974                           	opt stack 18
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;incstack = 0
 12978  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12979  00000A  EDA6  F013         	call	int_func,f	;refresh shadow registers
 12980                           pclatu	equ	0xFFB
 12981                           pclath	equ	0xFFA
 12982                           tblptru	equ	0xFF8
 12983                           tblptrh	equ	0xFF7
 12984                           tblptrl	equ	0xFF6
 12985                           tablat	equ	0xFF5
 12986                           prodh	equ	0xFF4
 12987                           prodl	equ	0xFF3
 12988                           intcon	equ	0xFF2
 12989                           intcon2	equ	0xFF1
 12990                           intcon3	equ	0xFF0
 12991                           postinc0	equ	0xFEE
 12992                           fsr0h	equ	0xFEA
 12993                           fsr0l	equ	0xFE9
 12994                           wreg	equ	0xFE8
 12995                           fsr1h	equ	0xFE2
 12996                           fsr1l	equ	0xFE1
 12997                           bsr	equ	0xFE0
 12998                           indf2	equ	0xFDF
 12999                           postinc2	equ	0xFDE
 13000                           postdec2	equ	0xFDD
 13001                           fsr2h	equ	0xFDA
 13002                           fsr2l	equ	0xFD9
 13003                           status	equ	0xFD8
 13004                           
 13005                           	psect	intcode_body
 13006  00274C                     __pintcode_body:
 13007                           	opt stack 18
 13008  00274C                     int_func:
 13009                           	opt stack 18
 13010  00274C  0006               	pop		; remove dummy address from shadow register refresh
 13011  00274E  CFFA F032          	movff	pclath,??_alarm+5
 13012  002752  CFFB F033          	movff	pclatu,??_alarm+6
 13013  002756  CFE9 F034          	movff	fsr0l,??_alarm+7
 13014  00275A  CFEA F035          	movff	fsr0h,??_alarm+8
 13015  00275E  CFE1 F036          	movff	fsr1l,??_alarm+9
 13016  002762  CFE2 F037          	movff	fsr1h,??_alarm+10
 13017  002766  CFD9 F038          	movff	fsr2l,??_alarm+11
 13018  00276A  CFDA F039          	movff	fsr2h,??_alarm+12
 13019  00276E  CFF3 F03A          	movff	prodl,??_alarm+13
 13020  002772  CFF4 F03B          	movff	prodh,??_alarm+14
 13021  002776  CFF6 F03C          	movff	tblptrl,??_alarm+15
 13022  00277A  CFF7 F03D          	movff	tblptrh,??_alarm+16
 13023  00277E  CFF8 F03E          	movff	tblptru,??_alarm+17
 13024  002782  CFF5 F03F          	movff	tablat,??_alarm+18
 13025  002786  C04F  F040         	movff	btemp,??_alarm+19
 13026  00278A  C050  F041         	movff	btemp+1,??_alarm+20
 13027  00278E  C051  F042         	movff	btemp+2,??_alarm+21
 13028  002792  C052  F043         	movff	btemp+3,??_alarm+22
 13029                           
 13030                           ;Lab7.c: 135: Clear();
 13031  002796  EC36  F018         	call	i2_Clear	;wreg free
 13032                           
 13033                           ;Lab7.c: 136: printf("\n\r\n\r\n\rALARM TRIGGERED\n\r\n\r\n\r");
 13034  00279A  0EE6               	movlw	low STR_3
 13035  00279C  6E17               	movwf	i2printf@f,c
 13036  00279E  0E7D               	movlw	high STR_3
 13037  0027A0  6E18               	movwf	i2printf@f+1,c
 13038  0027A2  EC68  F00F         	call	i2_printf	;wreg free
 13039                           
 13040                           ;Lab7.c: 137: printf("\n\rENTER PASSWORD TO CONTINUE\n\r");
 13041  0027A6  0EAA               	movlw	low STR_4
 13042  0027A8  6E17               	movwf	i2printf@f,c
 13043  0027AA  0E7D               	movlw	high STR_4
 13044  0027AC  6E18               	movwf	i2printf@f+1,c
 13045  0027AE  EC68  F00F         	call	i2_printf	;wreg free
 13046                           
 13047                           ;Lab7.c: 138: PORTBbits.RB2 = 1;
 13048  0027B2  8481               	bsf	3969,2,c	;volatile
 13049                           
 13050                           ;Lab7.c: 139: triggered = 1;
 13051  0027B4  0E00               	movlw	0
 13052  0027B6  0101               	movlb	1	; () banked
 13053  0027B8  6F57               	movwf	(_triggered+1)& (0+255),b
 13054  0027BA  0E01               	movlw	1
 13055  0027BC  6F56               	movwf	_triggered& (0+255),b
 13056                           
 13057                           ; BSR set to: 1
 13058                           ;Lab7.c: 140: password();
 13059  0027BE  EC6A  F012         	call	i2_password	;wreg free
 13060                           
 13061                           ;Lab7.c: 142: if((voltage>=temp_threshold) && temp_set == 1){
 13062  0027C2  C048  F02D         	movff	_temp_threshold,??_alarm
 13063  0027C6  C049  F02E         	movff	_temp_threshold+1,??_alarm+1
 13064  0027CA  0E00               	movlw	0
 13065  0027CC  BE2E               	btfsc	(??_alarm+1)& (0+255),7,c
 13066  0027CE  0EFF               	movlw	255
 13067  0027D0  6E2F               	movwf	(??_alarm+2)& (0+255),c
 13068  0027D2  6E30               	movwf	(??_alarm+3)& (0+255),c
 13069  0027D4  502D               	movf	??_alarm,w,c
 13070  0027D6  5C44               	subwf	_voltage,w,c
 13071  0027D8  502E               	movf	??_alarm+1,w,c
 13072  0027DA  5845               	subwfb	_voltage+1,w,c
 13073  0027DC  502F               	movf	??_alarm+2,w,c
 13074  0027DE  5846               	subwfb	_voltage+2,w,c
 13075  0027E0  5047               	movf	_voltage+3,w,c
 13076  0027E2  0A80               	xorlw	128
 13077  0027E4  6E31               	movwf	(??_alarm+4)& (0+255),c
 13078  0027E6  5030               	movf	??_alarm+3,w,c
 13079  0027E8  0A80               	xorlw	128
 13080  0027EA  5831               	subwfb	(??_alarm+4)& (0+255),w,c
 13081  0027EC  A0D8               	btfss	status,0,c
 13082  0027EE  D00B               	goto	i2l145
 13083  0027F0  044A               	decf	_temp_set,w,c
 13084  0027F2  104B               	iorwf	_temp_set+1,w,c
 13085  0027F4  A4D8               	btfss	status,2,c
 13086  0027F6  D007               	goto	i2l145
 13087                           
 13088                           ;Lab7.c: 143: printf("\n\rENTER PASSWORD TO RESET TEMP ALARM\n\r");
 13089  0027F8  0E8A               	movlw	low STR_5
 13090  0027FA  6E17               	movwf	i2printf@f,c
 13091  0027FC  0E7C               	movlw	high STR_5
 13092  0027FE  6E18               	movwf	i2printf@f+1,c
 13093  002800  EC68  F00F         	call	i2_printf	;wreg free
 13094                           
 13095                           ;Lab7.c: 144: }
 13096  002804  D006               	goto	i2l146
 13097  002806                     i2l145:
 13098                           
 13099                           ;Lab7.c: 145: else{
 13100                           ;Lab7.c: 146: printf("\n\rPress Any Button to return to Menu\n\r");
 13101  002806  0EB1               	movlw	low STR_6
 13102  002808  6E17               	movwf	i2printf@f,c
 13103  00280A  0E7C               	movlw	high STR_6
 13104  00280C  6E18               	movwf	i2printf@f+1,c
 13105  00280E  EC68  F00F         	call	i2_printf	;wreg free
 13106  002812                     i2l146:
 13107                           
 13108                           ;Lab7.c: 147: }
 13109                           ;Lab7.c: 148: INTCON3bits.INT1IF = 0;
 13110  002812  90F0               	bcf	intcon3,0,c	;volatile
 13111                           
 13112                           ;Lab7.c: 149: PORTBbits.RB2 = 0;
 13113  002814  9481               	bcf	3969,2,c	;volatile
 13114  002816  C043  F052         	movff	??_alarm+22,btemp+3
 13115  00281A  C042  F051         	movff	??_alarm+21,btemp+2
 13116  00281E  C041  F050         	movff	??_alarm+20,btemp+1
 13117  002822  C040  F04F         	movff	??_alarm+19,btemp
 13118  002826  C03F  FFF5         	movff	??_alarm+18,tablat
 13119  00282A  C03E  FFF8         	movff	??_alarm+17,tblptru
 13120  00282E  C03D  FFF7         	movff	??_alarm+16,tblptrh
 13121  002832  C03C  FFF6         	movff	??_alarm+15,tblptrl
 13122  002836  C03B  FFF4         	movff	??_alarm+14,prodh
 13123  00283A  C03A  FFF3         	movff	??_alarm+13,prodl
 13124  00283E  C039  FFDA         	movff	??_alarm+12,fsr2h
 13125  002842  C038  FFD9         	movff	??_alarm+11,fsr2l
 13126  002846  C037  FFE2         	movff	??_alarm+10,fsr1h
 13127  00284A  C036  FFE1         	movff	??_alarm+9,fsr1l
 13128  00284E  C035  FFEA         	movff	??_alarm+8,fsr0h
 13129  002852  C034  FFE9         	movff	??_alarm+7,fsr0l
 13130  002856  C033  FFFB         	movff	??_alarm+6,pclatu
 13131  00285A  C032  FFFA         	movff	??_alarm+5,pclath
 13132  00285E  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13133  002860  0011               	retfie		f
 13134  002862                     __end_of_alarm:
 13135                           	opt stack 0
 13136                           pclatu	equ	0xFFB
 13137                           pclath	equ	0xFFA
 13138                           tblptru	equ	0xFF8
 13139                           tblptrh	equ	0xFF7
 13140                           tblptrl	equ	0xFF6
 13141                           tablat	equ	0xFF5
 13142                           prodh	equ	0xFF4
 13143                           prodl	equ	0xFF3
 13144                           intcon	equ	0xFF2
 13145                           intcon2	equ	0xFF1
 13146                           intcon3	equ	0xFF0
 13147                           postinc0	equ	0xFEE
 13148                           fsr0h	equ	0xFEA
 13149                           fsr0l	equ	0xFE9
 13150                           wreg	equ	0xFE8
 13151                           fsr1h	equ	0xFE2
 13152                           fsr1l	equ	0xFE1
 13153                           bsr	equ	0xFE0
 13154                           indf2	equ	0xFDF
 13155                           postinc2	equ	0xFDE
 13156                           postdec2	equ	0xFDD
 13157                           fsr2h	equ	0xFDA
 13158                           fsr2l	equ	0xFD9
 13159                           status	equ	0xFD8
 13160                           
 13161 ;; *************** function i2_password *****************
 13162 ;; Defined at:
 13163 ;;		line 612 in file "Lab7.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;		None
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  password        2   42[COMRAM] int 
 13168 ;;  password        2   40[COMRAM] int 
 13169 ;;  password        2   38[COMRAM] int 
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1    wreg      void 
 13172 ;; Registers used:
 13173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13179 ;;      Params:         0       0       0       0       0       0       0
 13180 ;;      Locals:         6       0       0       0       0       0       0
 13181 ;;      Temps:          2       0       0       0       0       0       0
 13182 ;;      Totals:         8       0       0       0       0       0       0
 13183 ;;Total ram usage:        8 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    2
 13186 ;; This function calls:
 13187 ;;		i2_Read_b_eep
 13188 ;;		i2_keypad
 13189 ;;		i2_printf
 13190 ;; This function is called by:
 13191 ;;		_alarm
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text33
 13196  0024D4                     __ptext33:
 13197                           	opt stack 0
 13198  0024D4                     i2_password:
 13199                           	opt stack 18
 13200                           
 13201                           ;Lab7.c: 615: {
 13202                           ;Lab7.c: 616: _delay((unsigned long)((250)*(20000000/4000.0)));
 13203                           
 13204                           ;incstack = 0
 13205                           ;Lab7.c: 614: while(1)
 13206  0024D4  0E07               	movlw	7
 13207  0024D6  6E26               	movwf	(??i2_password+1)& (0+255),c
 13208  0024D8  0E58               	movlw	88
 13209  0024DA  6E25               	movwf	??i2_password& (0+255),c
 13210  0024DC  0E5A               	movlw	90
 13211  0024DE                     i2u862_47:
 13212  0024DE  2EE8               	decfsz	wreg,f,c
 13213  0024E0  D7FE               	bra	i2u862_47
 13214  0024E2  2E25               	decfsz	??i2_password& (0+255),f,c
 13215  0024E4  D7FC               	bra	i2u862_47
 13216  0024E6  2E26               	decfsz	(??i2_password+1)& (0+255),f,c
 13217  0024E8  D7FA               	bra	i2u862_47
 13218                           
 13219                           ;Lab7.c: 617: printf("PASSWORD:\t");
 13220  0024EA  0ED3               	movlw	low (STR_21+4)
 13221  0024EC  6E17               	movwf	i2printf@f,c
 13222  0024EE  0E7F               	movlw	high (STR_21+4)
 13223  0024F0  6E18               	movwf	i2printf@f+1,c
 13224  0024F2  EC68  F00F         	call	i2_printf	;wreg free
 13225                           
 13226                           ;Lab7.c: 618: if(PORTBbits.RB4 == 1)
 13227  0024F6  A881               	btfss	3969,4,c	;volatile
 13228  0024F8  D02D               	goto	i2l274
 13229                           
 13230                           ;Lab7.c: 619: {
 13231                           ;Lab7.c: 620: for(int i = 0;i < 4;i++){
 13232  0024FA  0E00               	movlw	0
 13233  0024FC  6E28               	movwf	i2password@i+1,c
 13234  0024FE  0E00               	movlw	0
 13235  002500  6E27               	movwf	i2password@i,c
 13236  002502                     i2l5390:
 13237  002502  BE28               	btfsc	i2password@i+1,7,c
 13238  002504  D006               	goto	i2l275
 13239  002506  5028               	movf	i2password@i+1,w,c
 13240  002508  E14B               	bnz	i2l5422
 13241  00250A  0E04               	movlw	4
 13242  00250C  5C27               	subwf	i2password@i,w,c
 13243  00250E  B0D8               	btfsc	status,0,c
 13244  002510  D047               	goto	i2u776_40
 13245  002512                     i2l275:
 13246                           
 13247                           ;Lab7.c: 621: pass[i] = keypad();
 13248  002512  0E4C               	movlw	low _pass
 13249  002514  2427               	addwf	i2password@i,w,c
 13250  002516  6ED9               	movwf	fsr2l,c
 13251  002518  0E01               	movlw	high _pass
 13252  00251A  2028               	addwfc	i2password@i+1,w,c
 13253  00251C  6EDA               	movwf	fsr2h,c
 13254  00251E  EC3D  F010         	call	i2_keypad	;wreg free
 13255  002522  5001               	movf	?i2_keypad,w,c
 13256  002524  6EDF               	movwf	indf2,c
 13257                           
 13258                           ;Lab7.c: 622: printf("*");
 13259  002526  0EFD               	movlw	low STR_22
 13260  002528  6E17               	movwf	i2printf@f,c
 13261  00252A  0E7F               	movlw	high STR_22
 13262  00252C  6E18               	movwf	i2printf@f+1,c
 13263  00252E  EC68  F00F         	call	i2_printf	;wreg free
 13264                           
 13265                           ;Lab7.c: 623: PORTBbits.RB4 = 0;
 13266  002532  9881               	bcf	3969,4,c	;volatile
 13267                           
 13268                           ;Lab7.c: 624: _delay((unsigned long)((500)*(20000000/4000.0)));
 13269  002534  0E0D               	movlw	13
 13270  002536  6E26               	movwf	(??i2_password+1)& (0+255),c
 13271  002538  0EAF               	movlw	175
 13272  00253A  6E25               	movwf	??i2_password& (0+255),c
 13273  00253C  0EB6               	movlw	182
 13274  00253E                     i2u863_47:
 13275  00253E  2EE8               	decfsz	wreg,f,c
 13276  002540  D7FE               	bra	i2u863_47
 13277  002542  2E25               	decfsz	??i2_password& (0+255),f,c
 13278  002544  D7FC               	bra	i2u863_47
 13279  002546  2E26               	decfsz	(??i2_password+1)& (0+255),f,c
 13280  002548  D7FA               	bra	i2u863_47
 13281  00254A  D000               	nop2	
 13282                           
 13283                           ;Lab7.c: 625: PORTBbits.RB4 = 1;
 13284  00254C  8881               	bsf	3969,4,c	;volatile
 13285  00254E  4A27               	infsnz	i2password@i,f,c
 13286  002550  2A28               	incf	i2password@i+1,f,c
 13287  002552  D7D7               	goto	i2l5390
 13288  002554                     i2l274:
 13289                           
 13290                           ;Lab7.c: 628: else
 13291                           ;Lab7.c: 629: {
 13292                           ;Lab7.c: 630: for(int i = 0;i < 4;i++){
 13293  002554  0E00               	movlw	0
 13294  002556  6E2A               	movwf	i2password@i_1118+1,c
 13295  002558  0E00               	movlw	0
 13296  00255A  6E29               	movwf	i2password@i_1118,c
 13297  00255C  BE2A               	btfsc	i2password@i_1118+1,7,c
 13298  00255E  D006               	goto	i2l278
 13299  002560  502A               	movf	i2password@i_1118+1,w,c
 13300  002562  E11E               	bnz	i2l5422
 13301  002564  0E04               	movlw	4
 13302  002566  5C29               	subwf	i2password@i_1118,w,c
 13303  002568  B0D8               	btfsc	status,0,c
 13304  00256A  D01A               	goto	i2u776_40
 13305  00256C                     i2l278:
 13306                           
 13307                           ;Lab7.c: 631: while(PIR1bits.RCIF == 0);
 13308  00256C  AA9E               	btfss	3998,5,c	;volatile
 13309  00256E  D7FE               	goto	i2l278
 13310                           
 13311                           ;Lab7.c: 632: pass[i] = RCREG;
 13312  002570  0E4C               	movlw	low _pass
 13313  002572  2429               	addwf	i2password@i_1118,w,c
 13314  002574  6ED9               	movwf	fsr2l,c
 13315  002576  0E01               	movlw	high _pass
 13316  002578  202A               	addwfc	i2password@i_1118+1,w,c
 13317  00257A  6EDA               	movwf	fsr2h,c
 13318  00257C  CFAE FFDF          	movff	4014,indf2	;volatile
 13319                           
 13320                           ;Lab7.c: 633: printf("*");
 13321  002580  0EFD               	movlw	low STR_22
 13322  002582  6E17               	movwf	i2printf@f,c
 13323  002584  0E7F               	movlw	high STR_22
 13324  002586  6E18               	movwf	i2printf@f+1,c
 13325  002588  EC68  F00F         	call	i2_printf	;wreg free
 13326  00258C  4A29               	infsnz	i2password@i_1118,f,c
 13327  00258E  2A2A               	incf	i2password@i_1118+1,f,c
 13328  002590  BE2A               	btfsc	i2password@i_1118+1,7,c
 13329  002592  D7EC               	goto	i2l278
 13330  002594  502A               	movf	i2password@i_1118+1,w,c
 13331  002596  E104               	bnz	i2l5422
 13332  002598  0E04               	movlw	4
 13333  00259A  5C29               	subwf	i2password@i_1118,w,c
 13334  00259C  A0D8               	btfss	status,0,c
 13335  00259E  D7E6               	goto	i2l278
 13336  0025A0                     i2u776_40:
 13337  0025A0                     i2l5422:
 13338                           
 13339                           ;Lab7.c: 634: }
 13340                           ;Lab7.c: 635: }
 13341                           ;Lab7.c: 636: pass_loc = 0x00;
 13342  0025A0  0E00               	movlw	0
 13343  0025A2  0101               	movlb	1	; () banked
 13344  0025A4  6F5A               	movwf	_pass_loc& (0+255),b
 13345                           
 13346                           ;Lab7.c: 637: for(int i = 0;i < 4;i++)
 13347  0025A6  0E00               	movlw	0
 13348  0025A8  6E2C               	movwf	i2password@i_1120+1,c
 13349  0025AA  0E00               	movlw	0
 13350  0025AC  6E2B               	movwf	i2password@i_1120,c
 13351  0025AE                     i2l5424:
 13352                           
 13353                           ; BSR set to: 1
 13354  0025AE  BE2C               	btfsc	i2password@i_1120+1,7,c
 13355  0025B0  D006               	goto	i2l283
 13356  0025B2  502C               	movf	i2password@i_1120+1,w,c
 13357  0025B4  E122               	bnz	i2l5444
 13358  0025B6  0E04               	movlw	4
 13359  0025B8  5C2B               	subwf	i2password@i_1120,w,c
 13360  0025BA  B0D8               	btfsc	status,0,c
 13361  0025BC  D01E               	goto	i2u779_40
 13362  0025BE                     i2l283:
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;Lab7.c: 638: {
 13366                           ;Lab7.c: 639: pass_check = Read_b_eep(pass_loc);
 13367                           
 13368                           ; BSR set to: 1
 13369  0025BE  C15A  F001         	movff	_pass_loc,i2Read_b_eep@badd
 13370  0025C2  6A02               	clrf	i2Read_b_eep@badd+1,c
 13371  0025C4  EC55  F018         	call	i2_Read_b_eep	;wreg free
 13372  0025C8  0101               	movlb	1	; () banked
 13373  0025CA  6F5B               	movwf	_pass_check& (0+255),b
 13374                           
 13375                           ; BSR set to: 1
 13376                           ;Lab7.c: 640: pass_loc+=1;
 13377  0025CC  2B5A               	incf	_pass_loc& (0+255),f,b
 13378                           
 13379                           ; BSR set to: 1
 13380                           ;Lab7.c: 641: if(pass_check != pass[i])
 13381  0025CE  0E4C               	movlw	low _pass
 13382  0025D0  242B               	addwf	i2password@i_1120,w,c
 13383  0025D2  6ED9               	movwf	fsr2l,c
 13384  0025D4  0E01               	movlw	high _pass
 13385  0025D6  202C               	addwfc	i2password@i_1120+1,w,c
 13386  0025D8  6EDA               	movwf	fsr2h,c
 13387  0025DA  515B               	movf	_pass_check& (0+255),w,b
 13388  0025DC  18DE               	xorwf	postinc2,w,c
 13389  0025DE  B4D8               	btfsc	status,2,c
 13390  0025E0  D005               	goto	i2l285
 13391                           
 13392                           ; BSR set to: 1
 13393                           ;Lab7.c: 642: {
 13394                           ;Lab7.c: 643: check = 1;
 13395  0025E2  0E00               	movlw	0
 13396  0025E4  6F59               	movwf	(_check+1)& (0+255),b
 13397  0025E6  0E01               	movlw	1
 13398  0025E8  6F58               	movwf	_check& (0+255),b
 13399                           
 13400                           ;Lab7.c: 644: break;
 13401  0025EA  D007               	goto	i2u779_40
 13402  0025EC                     i2l285:
 13403                           
 13404                           ; BSR set to: 1
 13405                           ;Lab7.c: 646: else
 13406                           ;Lab7.c: 647: {
 13407                           ;Lab7.c: 648: check = 0;
 13408                           
 13409                           ; BSR set to: 1
 13410  0025EC  0E00               	movlw	0
 13411  0025EE  6F59               	movwf	(_check+1)& (0+255),b
 13412  0025F0  0E00               	movlw	0
 13413  0025F2  6F58               	movwf	_check& (0+255),b
 13414                           
 13415                           ; BSR set to: 1
 13416                           
 13417                           ; BSR set to: 1
 13418  0025F4  4A2B               	infsnz	i2password@i_1120,f,c
 13419  0025F6  2A2C               	incf	i2password@i_1120+1,f,c
 13420  0025F8  D7DA               	goto	i2l5424
 13421  0025FA                     i2u779_40:
 13422  0025FA                     i2l5444:
 13423                           
 13424                           ; BSR set to: 1
 13425                           ;Lab7.c: 649: }
 13426                           ;Lab7.c: 651: }
 13427                           ;Lab7.c: 653: if(check == 0)
 13428  0025FA  5158               	movf	_check& (0+255),w,b
 13429  0025FC  1159               	iorwf	(_check+1)& (0+255),w,b
 13430  0025FE  A4D8               	btfss	status,2,c
 13431  002600  D007               	goto	i2l287
 13432                           
 13433                           ; BSR set to: 1
 13434                           ;Lab7.c: 654: {
 13435                           ;Lab7.c: 655: printf("\n\rPASSWORD VALID\n\r\n\r");
 13436  002602  0EE9               	movlw	low STR_50
 13437  002604  6E17               	movwf	i2printf@f,c
 13438  002606  0E7E               	movlw	high STR_50
 13439  002608  6E18               	movwf	i2printf@f+1,c
 13440  00260A  EC68  F00F         	call	i2_printf	;wreg free
 13441                           
 13442                           ;Lab7.c: 656: return;
 13443  00260E  0012               	return	
 13444  002610                     i2l287:
 13445                           
 13446                           ;Lab7.c: 658: else
 13447                           ;Lab7.c: 659: {
 13448                           ;Lab7.c: 660: printf("\n\rxxxxxxxINVALIDxxxxxxx\n\r\n\r");
 13449  002610  0E02               	movlw	low STR_51
 13450  002612  6E17               	movwf	i2printf@f,c
 13451  002614  0E7E               	movlw	high STR_51
 13452  002616  6E18               	movwf	i2printf@f+1,c
 13453  002618  EC68  F00F         	call	i2_printf	;wreg free
 13454  00261C  D75B               	goto	i2_password
 13455  00261E                     __end_ofi2_password:
 13456                           	opt stack 0
 13457                           pclatu	equ	0xFFB
 13458                           pclath	equ	0xFFA
 13459                           tblptru	equ	0xFF8
 13460                           tblptrh	equ	0xFF7
 13461                           tblptrl	equ	0xFF6
 13462                           tablat	equ	0xFF5
 13463                           prodh	equ	0xFF4
 13464                           prodl	equ	0xFF3
 13465                           intcon	equ	0xFF2
 13466                           intcon2	equ	0xFF1
 13467                           intcon3	equ	0xFF0
 13468                           postinc0	equ	0xFEE
 13469                           fsr0h	equ	0xFEA
 13470                           fsr0l	equ	0xFE9
 13471                           wreg	equ	0xFE8
 13472                           fsr1h	equ	0xFE2
 13473                           fsr1l	equ	0xFE1
 13474                           bsr	equ	0xFE0
 13475                           indf2	equ	0xFDF
 13476                           postinc2	equ	0xFDE
 13477                           postdec2	equ	0xFDD
 13478                           fsr2h	equ	0xFDA
 13479                           fsr2l	equ	0xFD9
 13480                           status	equ	0xFD8
 13481                           
 13482 ;; *************** function i2_keypad *****************
 13483 ;; Defined at:
 13484 ;;		line 1086 in file "Lab7.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;		None
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  2    0[COMRAM] int 
 13491 ;; Registers used:
 13492 ;;		wreg, status,2
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13498 ;;      Params:         2       0       0       0       0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0
 13501 ;;      Totals:         2       0       0       0       0       0       0
 13502 ;;Total ram usage:        2 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		i2_password
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           	psect	text34
 13512  00207A                     __ptext34:
 13513                           	opt stack 0
 13514  00207A                     i2_keypad:
 13515                           	opt stack 19
 13516                           
 13517                           ;Lab7.c: 1089: {
 13518                           ;Lab7.c: 1091: TRISDbits.RD0 = 0;
 13519                           
 13520                           ;incstack = 0
 13521                           ;Lab7.c: 1088: while(1)
 13522  00207A  9095               	bcf	3989,0,c	;volatile
 13523                           
 13524                           ;Lab7.c: 1092: TRISDbits.RD1 = 0;
 13525  00207C  9295               	bcf	3989,1,c	;volatile
 13526                           
 13527                           ;Lab7.c: 1093: TRISDbits.RD2 = 0;
 13528  00207E  9495               	bcf	3989,2,c	;volatile
 13529                           
 13530                           ;Lab7.c: 1094: TRISDbits.RD3 = 0;
 13531  002080  9695               	bcf	3989,3,c	;volatile
 13532                           
 13533                           ;Lab7.c: 1095: TRISDbits.RD4 = 1;
 13534  002082  8895               	bsf	3989,4,c	;volatile
 13535                           
 13536                           ;Lab7.c: 1096: TRISDbits.RD5 = 1;
 13537  002084  8A95               	bsf	3989,5,c	;volatile
 13538                           
 13539                           ;Lab7.c: 1097: TRISDbits.RD6 = 1;
 13540  002086  8C95               	bsf	3989,6,c	;volatile
 13541                           
 13542                           ;Lab7.c: 1098: TRISDbits.RD7 = 1;
 13543  002088  8E95               	bsf	3989,7,c	;volatile
 13544                           
 13545                           ;Lab7.c: 1101: PORTDbits.RD0 = 1;
 13546  00208A  8083               	bsf	3971,0,c	;volatile
 13547                           
 13548                           ;Lab7.c: 1102: PORTDbits.RD1 = 0;
 13549  00208C  9283               	bcf	3971,1,c	;volatile
 13550                           
 13551                           ;Lab7.c: 1103: PORTDbits.RD2 = 0;
 13552  00208E  9483               	bcf	3971,2,c	;volatile
 13553                           
 13554                           ;Lab7.c: 1104: PORTDbits.RD3 = 0;
 13555  002090  9683               	bcf	3971,3,c	;volatile
 13556                           
 13557                           ;Lab7.c: 1105: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13558  002092  B883               	btfsc	3971,4,c	;volatile
 13559  002094  BA83               	btfsc	3971,5,c	;volatile
 13560  002096  D008               	goto	i2l421
 13561  002098  AC83               	btfss	3971,6,c	;volatile
 13562  00209A  BE83               	btfsc	3971,7,c	;volatile
 13563  00209C  D005               	goto	i2l421
 13564                           
 13565                           ;Lab7.c: 1106: {
 13566                           ;Lab7.c: 1107: return '1';
 13567  00209E  0E00               	movlw	0
 13568  0020A0  6E02               	movwf	?i2_keypad+1,c
 13569  0020A2  0E31               	movlw	49
 13570  0020A4  6E01               	movwf	?i2_keypad,c
 13571  0020A6  0012               	return	
 13572  0020A8                     i2l421:
 13573                           
 13574                           ;Lab7.c: 1108: }
 13575                           ;Lab7.c: 1109: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13576  0020A8  A883               	btfss	3971,4,c	;volatile
 13577  0020AA  AA83               	btfss	3971,5,c	;volatile
 13578  0020AC  D008               	goto	i2l423
 13579  0020AE  AC83               	btfss	3971,6,c	;volatile
 13580  0020B0  BE83               	btfsc	3971,7,c	;volatile
 13581  0020B2  D005               	goto	i2l423
 13582                           
 13583                           ;Lab7.c: 1110: {
 13584                           ;Lab7.c: 1111: return '2';
 13585  0020B4  0E00               	movlw	0
 13586  0020B6  6E02               	movwf	?i2_keypad+1,c
 13587  0020B8  0E32               	movlw	50
 13588  0020BA  6E01               	movwf	?i2_keypad,c
 13589  0020BC  0012               	return	
 13590  0020BE                     i2l423:
 13591                           
 13592                           ;Lab7.c: 1112: }
 13593                           ;Lab7.c: 1113: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 13594  0020BE  A883               	btfss	3971,4,c	;volatile
 13595  0020C0  BA83               	btfsc	3971,5,c	;volatile
 13596  0020C2  D008               	goto	i2l424
 13597  0020C4  BC83               	btfsc	3971,6,c	;volatile
 13598  0020C6  BE83               	btfsc	3971,7,c	;volatile
 13599  0020C8  D005               	goto	i2l424
 13600                           
 13601                           ;Lab7.c: 1114: {
 13602                           ;Lab7.c: 1115: return '3';
 13603  0020CA  0E00               	movlw	0
 13604  0020CC  6E02               	movwf	?i2_keypad+1,c
 13605  0020CE  0E33               	movlw	51
 13606  0020D0  6E01               	movwf	?i2_keypad,c
 13607  0020D2  0012               	return	
 13608  0020D4                     i2l424:
 13609                           
 13610                           ;Lab7.c: 1116: }
 13611                           ;Lab7.c: 1117: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 13612  0020D4  A883               	btfss	3971,4,c	;volatile
 13613  0020D6  BA83               	btfsc	3971,5,c	;volatile
 13614  0020D8  D008               	goto	i2l425
 13615  0020DA  AC83               	btfss	3971,6,c	;volatile
 13616  0020DC  AE83               	btfss	3971,7,c	;volatile
 13617  0020DE  D005               	goto	i2l425
 13618                           
 13619                           ;Lab7.c: 1118: {
 13620                           ;Lab7.c: 1119: return 'A';
 13621  0020E0  0E00               	movlw	0
 13622  0020E2  6E02               	movwf	?i2_keypad+1,c
 13623  0020E4  0E41               	movlw	65
 13624  0020E6  6E01               	movwf	?i2_keypad,c
 13625  0020E8  0012               	return	
 13626  0020EA                     i2l425:
 13627                           
 13628                           ;Lab7.c: 1120: }
 13629                           ;Lab7.c: 1122: PORTDbits.RD0 = 0;
 13630  0020EA  9083               	bcf	3971,0,c	;volatile
 13631                           
 13632                           ;Lab7.c: 1123: PORTDbits.RD1 = 1;
 13633  0020EC  8283               	bsf	3971,1,c	;volatile
 13634                           
 13635                           ;Lab7.c: 1124: PORTDbits.RD2 = 0;
 13636  0020EE  9483               	bcf	3971,2,c	;volatile
 13637                           
 13638                           ;Lab7.c: 1125: PORTDbits.RD3 = 0;
 13639  0020F0  9683               	bcf	3971,3,c	;volatile
 13640                           
 13641                           ;Lab7.c: 1126: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13642  0020F2  B883               	btfsc	3971,4,c	;volatile
 13643  0020F4  BA83               	btfsc	3971,5,c	;volatile
 13644  0020F6  D008               	goto	i2l426
 13645  0020F8  AC83               	btfss	3971,6,c	;volatile
 13646  0020FA  BE83               	btfsc	3971,7,c	;volatile
 13647  0020FC  D005               	goto	i2l426
 13648                           
 13649                           ;Lab7.c: 1127: {
 13650                           ;Lab7.c: 1128: return '4';
 13651  0020FE  0E00               	movlw	0
 13652  002100  6E02               	movwf	?i2_keypad+1,c
 13653  002102  0E34               	movlw	52
 13654  002104  6E01               	movwf	?i2_keypad,c
 13655  002106  0012               	return	
 13656  002108                     i2l426:
 13657                           
 13658                           ;Lab7.c: 1129: }
 13659                           ;Lab7.c: 1130: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13660  002108  A883               	btfss	3971,4,c	;volatile
 13661  00210A  AA83               	btfss	3971,5,c	;volatile
 13662  00210C  D008               	goto	i2l427
 13663  00210E  AC83               	btfss	3971,6,c	;volatile
 13664  002110  BE83               	btfsc	3971,7,c	;volatile
 13665  002112  D005               	goto	i2l427
 13666                           
 13667                           ;Lab7.c: 1131: {
 13668                           ;Lab7.c: 1132: return '5';
 13669  002114  0E00               	movlw	0
 13670  002116  6E02               	movwf	?i2_keypad+1,c
 13671  002118  0E35               	movlw	53
 13672  00211A  6E01               	movwf	?i2_keypad,c
 13673  00211C  0012               	return	
 13674  00211E                     i2l427:
 13675                           
 13676                           ;Lab7.c: 1133: }
 13677                           ;Lab7.c: 1134: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 13678  00211E  A883               	btfss	3971,4,c	;volatile
 13679  002120  BA83               	btfsc	3971,5,c	;volatile
 13680  002122  D008               	goto	i2l428
 13681  002124  BC83               	btfsc	3971,6,c	;volatile
 13682  002126  BE83               	btfsc	3971,7,c	;volatile
 13683  002128  D005               	goto	i2l428
 13684                           
 13685                           ;Lab7.c: 1135: {
 13686                           ;Lab7.c: 1136: return '6';
 13687  00212A  0E00               	movlw	0
 13688  00212C  6E02               	movwf	?i2_keypad+1,c
 13689  00212E  0E36               	movlw	54
 13690  002130  6E01               	movwf	?i2_keypad,c
 13691  002132  0012               	return	
 13692  002134                     i2l428:
 13693                           
 13694                           ;Lab7.c: 1137: }
 13695                           ;Lab7.c: 1138: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 13696  002134  A883               	btfss	3971,4,c	;volatile
 13697  002136  BA83               	btfsc	3971,5,c	;volatile
 13698  002138  D008               	goto	i2l429
 13699  00213A  AC83               	btfss	3971,6,c	;volatile
 13700  00213C  AE83               	btfss	3971,7,c	;volatile
 13701  00213E  D005               	goto	i2l429
 13702                           
 13703                           ;Lab7.c: 1139: {
 13704                           ;Lab7.c: 1140: return 'B';
 13705  002140  0E00               	movlw	0
 13706  002142  6E02               	movwf	?i2_keypad+1,c
 13707  002144  0E42               	movlw	66
 13708  002146  6E01               	movwf	?i2_keypad,c
 13709  002148  0012               	return	
 13710  00214A                     i2l429:
 13711                           
 13712                           ;Lab7.c: 1141: }
 13713                           ;Lab7.c: 1143: PORTDbits.RD0 = 0;
 13714  00214A  9083               	bcf	3971,0,c	;volatile
 13715                           
 13716                           ;Lab7.c: 1144: PORTDbits.RD1 = 0;
 13717  00214C  9283               	bcf	3971,1,c	;volatile
 13718                           
 13719                           ;Lab7.c: 1145: PORTDbits.RD2 = 1;
 13720  00214E  8483               	bsf	3971,2,c	;volatile
 13721                           
 13722                           ;Lab7.c: 1146: PORTDbits.RD3 = 0;
 13723  002150  9683               	bcf	3971,3,c	;volatile
 13724                           
 13725                           ;Lab7.c: 1147: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13726  002152  B883               	btfsc	3971,4,c	;volatile
 13727  002154  BA83               	btfsc	3971,5,c	;volatile
 13728  002156  D008               	goto	i2l430
 13729  002158  AC83               	btfss	3971,6,c	;volatile
 13730  00215A  BE83               	btfsc	3971,7,c	;volatile
 13731  00215C  D005               	goto	i2l430
 13732                           
 13733                           ;Lab7.c: 1148: {
 13734                           ;Lab7.c: 1149: return '7';
 13735  00215E  0E00               	movlw	0
 13736  002160  6E02               	movwf	?i2_keypad+1,c
 13737  002162  0E37               	movlw	55
 13738  002164  6E01               	movwf	?i2_keypad,c
 13739  002166  0012               	return	
 13740  002168                     i2l430:
 13741                           
 13742                           ;Lab7.c: 1150: }
 13743                           ;Lab7.c: 1151: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13744  002168  A883               	btfss	3971,4,c	;volatile
 13745  00216A  AA83               	btfss	3971,5,c	;volatile
 13746  00216C  D008               	goto	i2l431
 13747  00216E  AC83               	btfss	3971,6,c	;volatile
 13748  002170  BE83               	btfsc	3971,7,c	;volatile
 13749  002172  D005               	goto	i2l431
 13750                           
 13751                           ;Lab7.c: 1152: {
 13752                           ;Lab7.c: 1153: return '8';
 13753  002174  0E00               	movlw	0
 13754  002176  6E02               	movwf	?i2_keypad+1,c
 13755  002178  0E38               	movlw	56
 13756  00217A  6E01               	movwf	?i2_keypad,c
 13757  00217C  0012               	return	
 13758  00217E                     i2l431:
 13759                           
 13760                           ;Lab7.c: 1154: }
 13761                           ;Lab7.c: 1155: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 13762  00217E  A883               	btfss	3971,4,c	;volatile
 13763  002180  BA83               	btfsc	3971,5,c	;volatile
 13764  002182  D008               	goto	i2l432
 13765  002184  BC83               	btfsc	3971,6,c	;volatile
 13766  002186  BE83               	btfsc	3971,7,c	;volatile
 13767  002188  D005               	goto	i2l432
 13768                           
 13769                           ;Lab7.c: 1156: {
 13770                           ;Lab7.c: 1157: return '9';
 13771  00218A  0E00               	movlw	0
 13772  00218C  6E02               	movwf	?i2_keypad+1,c
 13773  00218E  0E39               	movlw	57
 13774  002190  6E01               	movwf	?i2_keypad,c
 13775  002192  0012               	return	
 13776  002194                     i2l432:
 13777                           
 13778                           ;Lab7.c: 1158: }
 13779                           ;Lab7.c: 1159: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 13780  002194  A883               	btfss	3971,4,c	;volatile
 13781  002196  BA83               	btfsc	3971,5,c	;volatile
 13782  002198  D008               	goto	i2l433
 13783  00219A  AC83               	btfss	3971,6,c	;volatile
 13784  00219C  AE83               	btfss	3971,7,c	;volatile
 13785  00219E  D005               	goto	i2l433
 13786                           
 13787                           ;Lab7.c: 1160: {
 13788                           ;Lab7.c: 1161: return 'C';
 13789  0021A0  0E00               	movlw	0
 13790  0021A2  6E02               	movwf	?i2_keypad+1,c
 13791  0021A4  0E43               	movlw	67
 13792  0021A6  6E01               	movwf	?i2_keypad,c
 13793  0021A8  0012               	return	
 13794  0021AA                     i2l433:
 13795                           
 13796                           ;Lab7.c: 1162: }
 13797                           ;Lab7.c: 1164: PORTDbits.RD0 = 0;
 13798  0021AA  9083               	bcf	3971,0,c	;volatile
 13799                           
 13800                           ;Lab7.c: 1165: PORTDbits.RD1 = 0;
 13801  0021AC  9283               	bcf	3971,1,c	;volatile
 13802                           
 13803                           ;Lab7.c: 1166: PORTDbits.RD2 = 0;
 13804  0021AE  9483               	bcf	3971,2,c	;volatile
 13805                           
 13806                           ;Lab7.c: 1167: PORTDbits.RD3 = 1;
 13807  0021B0  8683               	bsf	3971,3,c	;volatile
 13808                           
 13809                           ;Lab7.c: 1168: if(PORTDbits.RD4 == 1 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13810  0021B2  B883               	btfsc	3971,4,c	;volatile
 13811  0021B4  BA83               	btfsc	3971,5,c	;volatile
 13812  0021B6  D008               	goto	i2l434
 13813  0021B8  AC83               	btfss	3971,6,c	;volatile
 13814  0021BA  BE83               	btfsc	3971,7,c	;volatile
 13815  0021BC  D005               	goto	i2l434
 13816                           
 13817                           ;Lab7.c: 1169: {
 13818                           ;Lab7.c: 1170: return '*';
 13819  0021BE  0E00               	movlw	0
 13820  0021C0  6E02               	movwf	?i2_keypad+1,c
 13821  0021C2  0E2A               	movlw	42
 13822  0021C4  6E01               	movwf	?i2_keypad,c
 13823  0021C6  0012               	return	
 13824  0021C8                     i2l434:
 13825                           
 13826                           ;Lab7.c: 1171: }
 13827                           ;Lab7.c: 1172: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 0)
 13828  0021C8  A883               	btfss	3971,4,c	;volatile
 13829  0021CA  AA83               	btfss	3971,5,c	;volatile
 13830  0021CC  D008               	goto	i2l435
 13831  0021CE  AC83               	btfss	3971,6,c	;volatile
 13832  0021D0  BE83               	btfsc	3971,7,c	;volatile
 13833  0021D2  D005               	goto	i2l435
 13834                           
 13835                           ;Lab7.c: 1173: {
 13836                           ;Lab7.c: 1174: return '0';
 13837  0021D4  0E00               	movlw	0
 13838  0021D6  6E02               	movwf	?i2_keypad+1,c
 13839  0021D8  0E30               	movlw	48
 13840  0021DA  6E01               	movwf	?i2_keypad,c
 13841  0021DC  0012               	return	
 13842  0021DE                     i2l435:
 13843                           
 13844                           ;Lab7.c: 1175: }
 13845                           ;Lab7.c: 1176: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1 && PORT
      +                          Dbits.RD7 == 0)
 13846  0021DE  A883               	btfss	3971,4,c	;volatile
 13847  0021E0  BA83               	btfsc	3971,5,c	;volatile
 13848  0021E2  D008               	goto	i2l436
 13849  0021E4  BC83               	btfsc	3971,6,c	;volatile
 13850  0021E6  BE83               	btfsc	3971,7,c	;volatile
 13851  0021E8  D005               	goto	i2l436
 13852                           
 13853                           ;Lab7.c: 1177: {
 13854                           ;Lab7.c: 1178: return '#';
 13855  0021EA  0E00               	movlw	0
 13856  0021EC  6E02               	movwf	?i2_keypad+1,c
 13857  0021EE  0E23               	movlw	35
 13858  0021F0  6E01               	movwf	?i2_keypad,c
 13859  0021F2  0012               	return	
 13860  0021F4                     i2l436:
 13861                           
 13862                           ;Lab7.c: 1179: }
 13863                           ;Lab7.c: 1180: if(PORTDbits.RD4 == 0 && PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0 && PORT
      +                          Dbits.RD7 == 1)
 13864  0021F4  A883               	btfss	3971,4,c	;volatile
 13865  0021F6  BA83               	btfsc	3971,5,c	;volatile
 13866  0021F8  D740               	goto	i2_keypad
 13867  0021FA  AC83               	btfss	3971,6,c	;volatile
 13868  0021FC  AE83               	btfss	3971,7,c	;volatile
 13869  0021FE  D73D               	goto	i2_keypad
 13870                           
 13871                           ;Lab7.c: 1181: {
 13872                           ;Lab7.c: 1182: return 'D';
 13873  002200  0E00               	movlw	0
 13874  002202  6E02               	movwf	?i2_keypad+1,c
 13875  002204  0E44               	movlw	68
 13876  002206  6E01               	movwf	?i2_keypad,c
 13877  002208  0012               	return	
 13878  00220A                     __end_ofi2_keypad:
 13879                           	opt stack 0
 13880                           pclatu	equ	0xFFB
 13881                           pclath	equ	0xFFA
 13882                           tblptru	equ	0xFF8
 13883                           tblptrh	equ	0xFF7
 13884                           tblptrl	equ	0xFF6
 13885                           tablat	equ	0xFF5
 13886                           prodh	equ	0xFF4
 13887                           prodl	equ	0xFF3
 13888                           intcon	equ	0xFF2
 13889                           intcon2	equ	0xFF1
 13890                           intcon3	equ	0xFF0
 13891                           postinc0	equ	0xFEE
 13892                           fsr0h	equ	0xFEA
 13893                           fsr0l	equ	0xFE9
 13894                           wreg	equ	0xFE8
 13895                           fsr1h	equ	0xFE2
 13896                           fsr1l	equ	0xFE1
 13897                           bsr	equ	0xFE0
 13898                           indf2	equ	0xFDF
 13899                           postinc2	equ	0xFDE
 13900                           postdec2	equ	0xFDD
 13901                           fsr2h	equ	0xFDA
 13902                           fsr2l	equ	0xFD9
 13903                           status	equ	0xFD8
 13904                           
 13905 ;; *************** function i2_Read_b_eep *****************
 13906 ;; Defined at:
 13907 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\EEP\read_B.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;  badd            2    0[COMRAM] unsigned int 
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;		None
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  1    wreg      unsigned char 
 13914 ;; Registers used:
 13915 ;;		wreg, status,2
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/0
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13921 ;;      Params:         2       0       0       0       0       0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0
 13923 ;;      Temps:          0       0       0       0       0       0       0
 13924 ;;      Totals:         2       0       0       0       0       0       0
 13925 ;;Total ram usage:        2 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; This function calls:
 13928 ;;		Nothing
 13929 ;; This function is called by:
 13930 ;;		i2_password
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text35
 13935  0030AA                     __ptext35:
 13936                           	opt stack 0
 13937  0030AA                     i2_Read_b_eep:
 13938                           	opt stack 19
 13939                           
 13940                           ;incstack = 0
 13941  0030AA  C001  FFA9         	movff	i2Read_b_eep@badd,4009	;volatile
 13942  0030AE  9CA6               	bcf	4006,6,c	;volsfr
 13943  0030B0  9EA6               	bcf	4006,7,c	;volsfr
 13944  0030B2  80A6               	bsf	4006,0,c	;volsfr
 13945  0030B4  F000               	nop	
 13946  0030B6  F000               	nop	
 13947  0030B8  50A8               	movf	4008,w,c	;volatile
 13948  0030BA  0012               	return	
 13949  0030BC                     __end_ofi2_Read_b_eep:
 13950                           	opt stack 0
 13951                           pclatu	equ	0xFFB
 13952                           pclath	equ	0xFFA
 13953                           tblptru	equ	0xFF8
 13954                           tblptrh	equ	0xFF7
 13955                           tblptrl	equ	0xFF6
 13956                           tablat	equ	0xFF5
 13957                           prodh	equ	0xFF4
 13958                           prodl	equ	0xFF3
 13959                           intcon	equ	0xFF2
 13960                           intcon2	equ	0xFF1
 13961                           intcon3	equ	0xFF0
 13962                           postinc0	equ	0xFEE
 13963                           fsr0h	equ	0xFEA
 13964                           fsr0l	equ	0xFE9
 13965                           wreg	equ	0xFE8
 13966                           fsr1h	equ	0xFE2
 13967                           fsr1l	equ	0xFE1
 13968                           bsr	equ	0xFE0
 13969                           indf2	equ	0xFDF
 13970                           postinc2	equ	0xFDE
 13971                           postdec2	equ	0xFDD
 13972                           fsr2h	equ	0xFDA
 13973                           fsr2l	equ	0xFD9
 13974                           status	equ	0xFD8
 13975                           
 13976 ;; *************** function i2_Clear *****************
 13977 ;; Defined at:
 13978 ;;		line 112 in file "Lab7.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;		None
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;		None
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      void 
 13985 ;; Registers used:
 13986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13992 ;;      Params:         0       0       0       0       0       0       0
 13993 ;;      Locals:         0       0       0       0       0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0
 13995 ;;      Totals:         0       0       0       0       0       0       0
 13996 ;;Total ram usage:        0 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    2
 13999 ;; This function calls:
 14000 ;;		i2_printf
 14001 ;; This function is called by:
 14002 ;;		_alarm
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text36
 14007  00306C                     __ptext36:
 14008                           	opt stack 0
 14009  00306C                     i2_Clear:
 14010                           	opt stack 18
 14011                           
 14012                           ;Lab7.c: 114: printf("\033[2J");
 14013                           
 14014                           ;incstack = 0
 14015  00306C  0EF5               	movlw	low STR_1
 14016  00306E  6E17               	movwf	i2printf@f,c
 14017  003070  0E7F               	movlw	high STR_1
 14018  003072  6E18               	movwf	i2printf@f+1,c
 14019  003074  EC68  F00F         	call	i2_printf	;wreg free
 14020                           
 14021                           ;Lab7.c: 115: printf("\033[0;0H");
 14022  003078  0EEE               	movlw	low STR_2
 14023  00307A  6E17               	movwf	i2printf@f,c
 14024  00307C  0E7F               	movlw	high STR_2
 14025  00307E  6E18               	movwf	i2printf@f+1,c
 14026  003080  EC68  F00F         	call	i2_printf	;wreg free
 14027  003084  0012               	return		;funcret
 14028  003086                     __end_ofi2_Clear:
 14029                           	opt stack 0
 14030                           pclatu	equ	0xFFB
 14031                           pclath	equ	0xFFA
 14032                           tblptru	equ	0xFF8
 14033                           tblptrh	equ	0xFF7
 14034                           tblptrl	equ	0xFF6
 14035                           tablat	equ	0xFF5
 14036                           prodh	equ	0xFF4
 14037                           prodl	equ	0xFF3
 14038                           intcon	equ	0xFF2
 14039                           intcon2	equ	0xFF1
 14040                           intcon3	equ	0xFF0
 14041                           postinc0	equ	0xFEE
 14042                           fsr0h	equ	0xFEA
 14043                           fsr0l	equ	0xFE9
 14044                           wreg	equ	0xFE8
 14045                           fsr1h	equ	0xFE2
 14046                           fsr1l	equ	0xFE1
 14047                           bsr	equ	0xFE0
 14048                           indf2	equ	0xFDF
 14049                           postinc2	equ	0xFDE
 14050                           postdec2	equ	0xFDD
 14051                           fsr2h	equ	0xFDA
 14052                           fsr2l	equ	0xFD9
 14053                           status	equ	0xFD8
 14054                           
 14055 ;; *************** function i2_printf *****************
 14056 ;; Defined at:
 14057 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;  f               2   22[COMRAM] PTR const unsigned char 
 14060 ;;		 -> STR_105(23), STR_104(9), STR_103(28), STR_102(26), 
 14061 ;;		 -> STR_101(25), STR_100(135), STR_99(18), STR_98(29), 
 14062 ;;		 -> STR_97(16), STR_96(19), STR_95(20), STR_94(14), 
 14063 ;;		 -> STR_93(15), STR_92(23), STR_91(38), STR_90(3), 
 14064 ;;		 -> STR_89(36), STR_88(3), STR_87(36), STR_86(36), 
 14065 ;;		 -> STR_85(26), STR_84(25), STR_83(25), STR_82(153), 
 14066 ;;		 -> STR_81(18), STR_80(29), STR_79(16), STR_78(19), 
 14067 ;;		 -> STR_77(20), STR_76(14), STR_75(15), STR_74(23), 
 14068 ;;		 -> STR_73(19), STR_72(18), STR_71(25), STR_70(119), 
 14069 ;;		 -> STR_69(18), STR_68(29), STR_67(16), STR_66(19), 
 14070 ;;		 -> STR_65(20), STR_64(14), STR_63(15), STR_62(23), 
 14071 ;;		 -> STR_61(21), STR_60(25), STR_59(111), STR_58(18), 
 14072 ;;		 -> STR_57(29), STR_56(16), STR_55(19), STR_54(20), 
 14073 ;;		 -> STR_53(14), STR_52(15), STR_51(28), STR_50(21), 
 14074 ;;		 -> STR_49(2), STR_48(2), STR_47(11), STR_46(54), 
 14075 ;;		 -> STR_45(25), STR_44(32), STR_43(37), STR_42(2), 
 14076 ;;		 -> STR_41(32), STR_40(37), STR_39(2), STR_38(21), 
 14077 ;;		 -> STR_37(2), STR_36(2), STR_35(25), STR_34(23), 
 14078 ;;		 -> STR_33(25), STR_32(163), STR_31(18), STR_30(29), 
 14079 ;;		 -> STR_29(16), STR_28(19), STR_27(20), STR_26(14), 
 14080 ;;		 -> STR_25(15), STR_24(19), STR_23(37), STR_22(2), 
 14081 ;;		 -> STR_21(15), STR_20(20), STR_19(31), STR_18(18), 
 14082 ;;		 -> STR_17(39), STR_16(39), STR_15(7), STR_14(3), 
 14083 ;;		 -> STR_13(39), STR_12(3), STR_11(36), STR_10(36), 
 14084 ;;		 -> STR_9(59), STR_8(31), STR_7(44), STR_6(39), 
 14085 ;;		 -> STR_5(39), STR_4(31), STR_3(28), STR_2(7), 
 14086 ;;		 -> STR_1(5), 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  printf          4   31[COMRAM] unsigned long 
 14089 ;;  printf          4    0        struct .
 14090 ;;  printf          3    0        PTR const unsigned char 
 14091 ;;  printf          2   28[COMRAM] PTR void [1]
 14092 ;;		 -> ?i2_printf(2), ?i1_printf(2), ?_printf(2), 
 14093 ;;  printf          2   26[COMRAM] int 
 14094 ;;  printf          2    0        unsigned int 
 14095 ;;  printf          1   35[COMRAM] char 
 14096 ;;  printf          1   30[COMRAM] unsigned char 
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  2   22[COMRAM] int 
 14099 ;; Registers used:
 14100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14101 ;; Tracked objects:
 14102 ;;		On entry : 0/0
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14106 ;;      Params:         2       0       0       0       0       0       0
 14107 ;;      Locals:        10       0       0       0       0       0       0
 14108 ;;      Temps:          2       0       0       0       0       0       0
 14109 ;;      Totals:        14       0       0       0       0       0       0
 14110 ;;Total ram usage:       14 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; Hardware stack levels required when called:    1
 14113 ;; This function calls:
 14114 ;;		i2___lldiv
 14115 ;;		i2___llmod
 14116 ;;		i2_putch
 14117 ;; This function is called by:
 14118 ;;		_alarm
 14119 ;;		i2_Clear
 14120 ;;		i2_password
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           	psect	text37
 14125  001ED0                     __ptext37:
 14126                           	opt stack 0
 14127  001ED0                     i2_printf:
 14128                           	opt stack 19
 14129                           
 14130                           ;doprnt.c: 466: va_list ap;
 14131                           ;doprnt.c: 499: signed char c;
 14132                           ;doprnt.c: 504: int prec;
 14133                           ;doprnt.c: 508: unsigned char flag;
 14134                           ;doprnt.c: 523: union {
 14135                           ;doprnt.c: 524: unsigned long vd;
 14136                           ;doprnt.c: 525: double integ;
 14137                           ;doprnt.c: 526: } tmpval;
 14138                           ;doprnt.c: 528: unsigned long val;
 14139                           ;doprnt.c: 529: unsigned len;
 14140                           ;doprnt.c: 530: const char * cp;
 14141                           ;doprnt.c: 533: *ap = __va_start();
 14142                           
 14143                           ;incstack = 0
 14144  001ED0  0E19               	movlw	low (?i2_printf+2)
 14145  001ED2  6E1D               	movwf	i2printf@ap,c
 14146  001ED4  0E00               	movlw	high (?i2_printf+2)
 14147  001ED6  6E1E               	movwf	i2printf@ap+1,c
 14148                           
 14149                           ;doprnt.c: 536: while(c = *f++) {
 14150  001ED8  D0C3               	goto	i2u703_40
 14151  001EDA                     
 14152                           ;doprnt.c: 538: if(c != '%')
 14153  001EDA  0E25               	movlw	37
 14154  001EDC  1824               	xorwf	i2printf@c,w,c
 14155  001EDE  B4D8               	btfsc	status,2,c
 14156  001EE0  D004               	goto	i2l452
 14157                           
 14158                           ;doprnt.c: 540: {
 14159                           ;doprnt.c: 541: (putch(c) );
 14160  001EE2  5024               	movf	i2printf@c,w,c
 14161  001EE4  EC6C  F018         	call	i2_putch
 14162                           
 14163                           ;doprnt.c: 542: continue;
 14164  001EE8  D0BB               	goto	i2u703_40
 14165  001EEA                     i2l452:
 14166                           
 14167                           ;doprnt.c: 543: }
 14168                           ;doprnt.c: 548: flag = 0;
 14169  001EEA  0E00               	movlw	0
 14170  001EEC  6E1F               	movwf	i2printf@flag,c
 14171                           
 14172                           ;doprnt.c: 635: switch(c = *f++) {
 14173                           
 14174                           ;doprnt.c: 633: loop:
 14175  001EEE  D001               	goto	i2l454
 14176  001EF0                     
 14177                           ;doprnt.c: 643: flag |= 0x10;
 14178  001EF0  881F               	bsf	i2printf@flag,4,c
 14179  001EF2                     i2l454:
 14180  001EF2  C017  FFF6         	movff	i2printf@f,tblptrl
 14181  001EF6  C018  FFF7         	movff	i2printf@f+1,tblptrh
 14182  001EFA  4A17               	infsnz	i2printf@f,f,c
 14183  001EFC  2A18               	incf	i2printf@f+1,f,c
 14184  001EFE                     	if	0	;tblptru may be non-zero
 14185  001EFE                     	endif
 14186  001EFE                     	if	0	;tblptru may be non-zero
 14187  001EFE                     	endif
 14188  001EFE  0008               	tblrd		*
 14189  001F00  CFF5 F024          	movff	tablat,i2printf@c
 14190  001F04  5024               	movf	i2printf@c,w,c
 14191                           
 14192                           ; Switch size 1, requested type "space"
 14193                           ; Number of cases is 4, Range of values is 0 to 108
 14194                           ; switch strategies available:
 14195                           ; Name         Instructions Cycles
 14196                           ; simple_byte           13     7 (average)
 14197                           ;	Chosen strategy is simple_byte
 14198  001F06  0A00               	xorlw	0	; case 0
 14199  001F08  B4D8               	btfsc	status,2,c
 14200  001F0A  0012               	return	
 14201  001F0C  0A64               	xorlw	100	; case 100
 14202  001F0E  B4D8               	btfsc	status,2,c
 14203  001F10  D007               	goto	i2l460
 14204  001F12  0A0D               	xorlw	13	; case 105
 14205  001F14  B4D8               	btfsc	status,2,c
 14206  001F16  D004               	goto	i2l460
 14207  001F18  0A05               	xorlw	5	; case 108
 14208  001F1A  B4D8               	btfsc	status,2,c
 14209  001F1C  D7E9               	goto	i2l457
 14210  001F1E  D0A0               	goto	i2u703_40
 14211  001F20                     i2l460:
 14212                           
 14213                           ;doprnt.c: 1253: {
 14214                           ;doprnt.c: 1255: if(flag & 0x10)
 14215  001F20  A81F               	btfss	i2printf@flag,4,c
 14216  001F22  D00E               	goto	i2l462
 14217                           
 14218                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14219  001F24  C01D  FFD9         	movff	i2printf@ap,fsr2l
 14220  001F28  C01E  FFDA         	movff	i2printf@ap+1,fsr2h
 14221  001F2C  CFDE F020          	movff	postinc2,i2printf@val
 14222  001F30  CFDE F021          	movff	postinc2,i2printf@val+1
 14223  001F34  CFDE F022          	movff	postinc2,i2printf@val+2
 14224  001F38  CFDE F023          	movff	postinc2,i2printf@val+3
 14225  001F3C  0E04               	movlw	4
 14226  001F3E  D00E               	goto	L9
 14227  001F40                     i2l462:
 14228                           
 14229                           ;doprnt.c: 1257: else
 14230                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14231  001F40  C01D  FFD9         	movff	i2printf@ap,fsr2l
 14232  001F44  C01E  FFDA         	movff	i2printf@ap+1,fsr2h
 14233  001F48  CFDE F020          	movff	postinc2,i2printf@val
 14234  001F4C  CFDD F021          	movff	postdec2,i2printf@val+1
 14235  001F50  0E00               	movlw	0
 14236  001F52  BE21               	btfsc	i2printf@val+1,7,c
 14237  001F54  0EFF               	movlw	-1
 14238  001F56  6E22               	movwf	i2printf@val+2,c
 14239  001F58  6E23               	movwf	i2printf@val+3,c
 14240  001F5A  0E02               	movlw	2
 14241  001F5C                     L9:
 14242  001F5C  261D               	addwf	i2printf@ap,f,c
 14243  001F5E  0E00               	movlw	0
 14244  001F60  221E               	addwfc	i2printf@ap+1,f,c
 14245                           
 14246                           ;doprnt.c: 1261: if((long)val < 0) {
 14247  001F62  AE23               	btfss	i2printf@val+3,7,c
 14248  001F64  D00A               	goto	i2l464
 14249                           
 14250                           ;doprnt.c: 1262: flag |= 0x03;
 14251  001F66  0E03               	movlw	3
 14252  001F68  121F               	iorwf	i2printf@flag,f,c
 14253                           
 14254                           ;doprnt.c: 1263: val = -val;
 14255  001F6A  1E23               	comf	i2printf@val+3,f,c
 14256  001F6C  1E22               	comf	i2printf@val+2,f,c
 14257  001F6E  1E21               	comf	i2printf@val+1,f,c
 14258  001F70  6C20               	negf	i2printf@val,c
 14259  001F72  0E00               	movlw	0
 14260  001F74  2221               	addwfc	i2printf@val+1,f,c
 14261  001F76  2222               	addwfc	i2printf@val+2,f,c
 14262  001F78  2223               	addwfc	i2printf@val+3,f,c
 14263  001F7A                     i2l464:
 14264                           
 14265                           ;doprnt.c: 1264: }
 14266                           ;doprnt.c: 1266: }
 14267                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14268  001F7A  0E01               	movlw	1
 14269  001F7C  6E24               	movwf	i2printf@c,c
 14270  001F7E                     i2l4686:
 14271  001F7E  0E0A               	movlw	10
 14272  001F80  1824               	xorwf	i2printf@c,w,c
 14273  001F82  B4D8               	btfsc	status,2,c
 14274  001F84  D018               	goto	i2u701_40
 14275                           
 14276                           ;doprnt.c: 1306: if(val < dpowers[c])
 14277  001F86  5024               	movf	i2printf@c,w,c
 14278  001F88  0D04               	mullw	4
 14279  001F8A  0EF5               	movlw	low _dpowers
 14280  001F8C  24F3               	addwf	prodl,w,c
 14281  001F8E  6EF6               	movwf	tblptrl,c
 14282  001F90  0E78               	movlw	high _dpowers
 14283  001F92  20F4               	addwfc	prodh,w,c
 14284  001F94  6EF7               	movwf	tblptrh,c
 14285  001F96                     	if	0	;There are less than 3 active tblptr bytes
 14286  001F96                     	endif
 14287  001F96  0009               	tblrd		*+
 14288  001F98  50F5               	movf	tablat,w,c
 14289  001F9A  5C20               	subwf	i2printf@val,w,c
 14290  001F9C  0009               	tblrd		*+
 14291  001F9E  50F5               	movf	tablat,w,c
 14292  001FA0  5821               	subwfb	i2printf@val+1,w,c
 14293  001FA2  0009               	tblrd		*+
 14294  001FA4  50F5               	movf	tablat,w,c
 14295  001FA6  5822               	subwfb	i2printf@val+2,w,c
 14296  001FA8  0009               	tblrd		*+
 14297  001FAA  50F5               	movf	tablat,w,c
 14298  001FAC  5823               	subwfb	i2printf@val+3,w,c
 14299  001FAE  A0D8               	btfss	status,0,c
 14300  001FB0  D002               	goto	i2u701_40
 14301                           
 14302                           ;doprnt.c: 1307: break;
 14303  001FB2  2A24               	incf	i2printf@c,f,c
 14304  001FB4  D7E4               	goto	i2l4686
 14305  001FB6                     i2u701_40:
 14306                           
 14307                           ;doprnt.c: 1422: {
 14308                           ;doprnt.c: 1438: if(flag & 0x03)
 14309  001FB6  C01F  F019         	movff	i2printf@flag,??i2_printf
 14310  001FBA  0E03               	movlw	3
 14311  001FBC  1619               	andwf	??i2_printf,f,c
 14312  001FBE  B4D8               	btfsc	status,2,c
 14313  001FC0  D003               	goto	i2l468
 14314                           
 14315                           ;doprnt.c: 1439: (putch('-') );
 14316  001FC2  0E2D               	movlw	45
 14317  001FC4  EC6C  F018         	call	i2_putch
 14318  001FC8                     i2l468:
 14319                           
 14320                           ;doprnt.c: 1469: }
 14321                           ;doprnt.c: 1472: prec = c;
 14322  001FC8  5024               	movf	i2printf@c,w,c
 14323  001FCA  6E1B               	movwf	i2printf@prec,c
 14324  001FCC  6A1C               	clrf	i2printf@prec+1,c
 14325  001FCE  BE1B               	btfsc	i2printf@prec,7,c
 14326  001FD0  061C               	decf	i2printf@prec+1,f,c
 14327                           
 14328                           ;doprnt.c: 1474: while(prec--) {
 14329  001FD2  D03E               	goto	i2l469
 14330  001FD4                     i2l4704:
 14331                           
 14332                           ;doprnt.c: 1478: {
 14333                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14334  001FD4  C01B  F019         	movff	i2printf@prec,??i2_printf
 14335  001FD8  C01C  F01A         	movff	i2printf@prec+1,??i2_printf+1
 14336  001FDC  90D8               	bcf	status,0,c
 14337  001FDE  3619               	rlcf	??i2_printf,f,c
 14338  001FE0  361A               	rlcf	??i2_printf+1,f,c
 14339  001FE2  90D8               	bcf	status,0,c
 14340  001FE4  3619               	rlcf	??i2_printf,f,c
 14341  001FE6  361A               	rlcf	??i2_printf+1,f,c
 14342  001FE8  0EF5               	movlw	low _dpowers
 14343  001FEA  2419               	addwf	??i2_printf,w,c
 14344  001FEC  6EF6               	movwf	tblptrl,c
 14345  001FEE  0E78               	movlw	high _dpowers
 14346  001FF0  201A               	addwfc	??i2_printf+1,w,c
 14347  001FF2  6EF7               	movwf	tblptrh,c
 14348  001FF4                     	if	0	;There are less than 3 active tblptr bytes
 14349  001FF4                     	endif
 14350  001FF4  0009               	tblrd		*+
 14351  001FF6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14352  001FFA  0009               	tblrd		*+
 14353  001FFC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14354  002000  0009               	tblrd		*+
 14355  002002  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14356  002006  000A               	tblrd		*-
 14357  002008  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14358  00200C  C020  F001         	movff	i2printf@val,i2___lldiv@dividend
 14359  002010  C021  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14360  002014  C022  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14361  002018  C023  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14362  00201C  EC6B  F016         	call	i2___lldiv	;wreg free
 14363  002020  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14364  002024  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14365  002028  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14366  00202C  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14367  002030  0E0A               	movlw	10
 14368  002032  6E12               	movwf	i2___llmod@divisor,c
 14369  002034  0E00               	movlw	0
 14370  002036  6E13               	movwf	i2___llmod@divisor+1,c
 14371  002038  0E00               	movlw	0
 14372  00203A  6E14               	movwf	i2___llmod@divisor+2,c
 14373  00203C  0E00               	movlw	0
 14374  00203E  6E15               	movwf	i2___llmod@divisor+3,c
 14375  002040  EC85  F017         	call	i2___llmod	;wreg free
 14376  002044  500E               	movf	?i2___llmod,w,c
 14377  002046  0F30               	addlw	48
 14378  002048  6E24               	movwf	i2printf@c,c
 14379                           
 14380                           ;doprnt.c: 1523: }
 14381                           ;doprnt.c: 1524: (putch(c) );
 14382  00204A  5024               	movf	i2printf@c,w,c
 14383  00204C  EC6C  F018         	call	i2_putch
 14384  002050                     i2l469:
 14385  002050  061B               	decf	i2printf@prec,f,c
 14386  002052  A0D8               	btfss	status,0,c
 14387  002054  061C               	decf	i2printf@prec+1,f,c
 14388  002056  281B               	incf	i2printf@prec,w,c
 14389  002058  E1BD               	bnz	i2l4704
 14390  00205A  281C               	incf	i2printf@prec+1,w,c
 14391  00205C  A4D8               	btfss	status,2,c
 14392  00205E  D7BA               	goto	i2l470
 14393  002060                     i2u703_40:
 14394  002060  C017  FFF6         	movff	i2printf@f,tblptrl
 14395  002064  C018  FFF7         	movff	i2printf@f+1,tblptrh
 14396  002068  4A17               	infsnz	i2printf@f,f,c
 14397  00206A  2A18               	incf	i2printf@f+1,f,c
 14398  00206C                     	if	0	;tblptru may be non-zero
 14399  00206C                     	endif
 14400  00206C                     	if	0	;tblptru may be non-zero
 14401  00206C                     	endif
 14402  00206C  0008               	tblrd		*
 14403  00206E  CFF5 F024          	movff	tablat,i2printf@c
 14404  002072  5024               	movf	i2printf@c,w,c
 14405  002074  B4D8               	btfsc	status,2,c
 14406  002076  0012               	return	
 14407  002078  D730               	goto	i2l451
 14408  00207A                     __end_ofi2_printf:
 14409                           	opt stack 0
 14410                           pclatu	equ	0xFFB
 14411                           pclath	equ	0xFFA
 14412                           tblptru	equ	0xFF8
 14413                           tblptrh	equ	0xFF7
 14414                           tblptrl	equ	0xFF6
 14415                           tablat	equ	0xFF5
 14416                           prodh	equ	0xFF4
 14417                           prodl	equ	0xFF3
 14418                           intcon	equ	0xFF2
 14419                           intcon2	equ	0xFF1
 14420                           intcon3	equ	0xFF0
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           fsr1h	equ	0xFE2
 14426                           fsr1l	equ	0xFE1
 14427                           bsr	equ	0xFE0
 14428                           indf2	equ	0xFDF
 14429                           postinc2	equ	0xFDE
 14430                           postdec2	equ	0xFDD
 14431                           fsr2h	equ	0xFDA
 14432                           fsr2l	equ	0xFD9
 14433                           status	equ	0xFD8
 14434                           
 14435 ;; *************** function i2_putch *****************
 14436 ;; Defined at:
 14437 ;;		line 106 in file "Lab7.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  data            1    wreg     unsigned char 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;  data            1    0[COMRAM] unsigned char 
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14451 ;;      Params:         0       0       0       0       0       0       0
 14452 ;;      Locals:         1       0       0       0       0       0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0
 14454 ;;      Totals:         1       0       0       0       0       0       0
 14455 ;;Total ram usage:        1 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		i2_printf
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text38
 14465  0030D8                     __ptext38:
 14466                           	opt stack 0
 14467  0030D8                     i2_putch:
 14468                           	opt stack 19
 14469                           
 14470                           ;incstack = 0
 14471                           ;i2putch@data stored from wreg
 14472  0030D8  6E01               	movwf	i2putch@data,c
 14473  0030DA                     
 14474                           ;Lab7.c: 109: continue;
 14475                           
 14476                           ;Lab7.c: 108: while(!PIR1bits.TXIF)
 14477  0030DA  A89E               	btfss	3998,4,c	;volatile
 14478  0030DC  D7FE               	goto	i2l3884
 14479                           
 14480                           ;Lab7.c: 110: TXREG = data;
 14481  0030DE  C001  FFAD         	movff	i2putch@data,4013	;volatile
 14482  0030E2  0012               	return		;funcret
 14483  0030E4                     __end_ofi2_putch:
 14484                           	opt stack 0
 14485                           pclatu	equ	0xFFB
 14486                           pclath	equ	0xFFA
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           intcon	equ	0xFF2
 14494                           intcon2	equ	0xFF1
 14495                           intcon3	equ	0xFF0
 14496                           postinc0	equ	0xFEE
 14497                           fsr0h	equ	0xFEA
 14498                           fsr0l	equ	0xFE9
 14499                           wreg	equ	0xFE8
 14500                           fsr1h	equ	0xFE2
 14501                           fsr1l	equ	0xFE1
 14502                           bsr	equ	0xFE0
 14503                           indf2	equ	0xFDF
 14504                           postinc2	equ	0xFDE
 14505                           postdec2	equ	0xFDD
 14506                           fsr2h	equ	0xFDA
 14507                           fsr2l	equ	0xFD9
 14508                           status	equ	0xFD8
 14509                           
 14510 ;; *************** function i2___llmod *****************
 14511 ;; Defined at:
 14512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 14513 ;; Parameters:    Size  Location     Type
 14514 ;;  dividend        4   13[COMRAM] unsigned long 
 14515 ;;  divisor         4   17[COMRAM] unsigned long 
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;  __llmod         1   21[COMRAM] unsigned char 
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  4   13[COMRAM] unsigned long 
 14520 ;; Registers used:
 14521 ;;		wreg, status,2, status,0
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14527 ;;      Params:         8       0       0       0       0       0       0
 14528 ;;      Locals:         1       0       0       0       0       0       0
 14529 ;;      Temps:          0       0       0       0       0       0       0
 14530 ;;      Totals:         9       0       0       0       0       0       0
 14531 ;;Total ram usage:        9 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; This function calls:
 14534 ;;		Nothing
 14535 ;; This function is called by:
 14536 ;;		i2_printf
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540                           	psect	text39
 14541  002F0A                     __ptext39:
 14542                           	opt stack 0
 14543  002F0A                     i2___llmod:
 14544                           	opt stack 19
 14545                           
 14546                           ;incstack = 0
 14547  002F0A  5012               	movf	i2___llmod@divisor,w,c
 14548  002F0C  1013               	iorwf	i2___llmod@divisor+1,w,c
 14549  002F0E  1014               	iorwf	i2___llmod@divisor+2,w,c
 14550  002F10  1015               	iorwf	i2___llmod@divisor+3,w,c
 14551  002F12  B4D8               	btfsc	status,2,c
 14552  002F14  D024               	goto	i2l850
 14553  002F16  0E01               	movlw	1
 14554  002F18  6E16               	movwf	i2___llmod@counter,c
 14555  002F1A  D006               	goto	i2l845
 14556  002F1C  90D8               	bcf	status,0,c
 14557  002F1E  3612               	rlcf	i2___llmod@divisor,f,c
 14558  002F20  3613               	rlcf	i2___llmod@divisor+1,f,c
 14559  002F22  3614               	rlcf	i2___llmod@divisor+2,f,c
 14560  002F24  3615               	rlcf	i2___llmod@divisor+3,f,c
 14561  002F26  2A16               	incf	i2___llmod@counter,f,c
 14562  002F28                     i2l845:
 14563  002F28  AE15               	btfss	i2___llmod@divisor+3,7,c
 14564  002F2A  D7F8               	goto	i2l846
 14565  002F2C                     i2u511_40:
 14566  002F2C  5012               	movf	i2___llmod@divisor,w,c
 14567  002F2E  5C0E               	subwf	i2___llmod@dividend,w,c
 14568  002F30  5013               	movf	i2___llmod@divisor+1,w,c
 14569  002F32  580F               	subwfb	i2___llmod@dividend+1,w,c
 14570  002F34  5014               	movf	i2___llmod@divisor+2,w,c
 14571  002F36  5810               	subwfb	i2___llmod@dividend+2,w,c
 14572  002F38  5015               	movf	i2___llmod@divisor+3,w,c
 14573  002F3A  5811               	subwfb	i2___llmod@dividend+3,w,c
 14574  002F3C  A0D8               	btfss	status,0,c
 14575  002F3E  D008               	goto	i2l849
 14576  002F40  5012               	movf	i2___llmod@divisor,w,c
 14577  002F42  5E0E               	subwf	i2___llmod@dividend,f,c
 14578  002F44  5013               	movf	i2___llmod@divisor+1,w,c
 14579  002F46  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 14580  002F48  5014               	movf	i2___llmod@divisor+2,w,c
 14581  002F4A  5A10               	subwfb	i2___llmod@dividend+2,f,c
 14582  002F4C  5015               	movf	i2___llmod@divisor+3,w,c
 14583  002F4E  5A11               	subwfb	i2___llmod@dividend+3,f,c
 14584  002F50                     i2l849:
 14585  002F50  90D8               	bcf	status,0,c
 14586  002F52  3215               	rrcf	i2___llmod@divisor+3,f,c
 14587  002F54  3214               	rrcf	i2___llmod@divisor+2,f,c
 14588  002F56  3213               	rrcf	i2___llmod@divisor+1,f,c
 14589  002F58  3212               	rrcf	i2___llmod@divisor,f,c
 14590  002F5A  2E16               	decfsz	i2___llmod@counter,f,c
 14591  002F5C  D7E7               	goto	i2u511_40
 14592  002F5E                     i2l850:
 14593  002F5E  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 14594  002F62  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 14595  002F66  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 14596  002F6A  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 14597  002F6E  0012               	return		;funcret
 14598  002F70                     __end_ofi2___llmod:
 14599                           	opt stack 0
 14600                           pclatu	equ	0xFFB
 14601                           pclath	equ	0xFFA
 14602                           tblptru	equ	0xFF8
 14603                           tblptrh	equ	0xFF7
 14604                           tblptrl	equ	0xFF6
 14605                           tablat	equ	0xFF5
 14606                           prodh	equ	0xFF4
 14607                           prodl	equ	0xFF3
 14608                           intcon	equ	0xFF2
 14609                           intcon2	equ	0xFF1
 14610                           intcon3	equ	0xFF0
 14611                           postinc0	equ	0xFEE
 14612                           fsr0h	equ	0xFEA
 14613                           fsr0l	equ	0xFE9
 14614                           wreg	equ	0xFE8
 14615                           fsr1h	equ	0xFE2
 14616                           fsr1l	equ	0xFE1
 14617                           bsr	equ	0xFE0
 14618                           indf2	equ	0xFDF
 14619                           postinc2	equ	0xFDE
 14620                           postdec2	equ	0xFDD
 14621                           fsr2h	equ	0xFDA
 14622                           fsr2l	equ	0xFD9
 14623                           status	equ	0xFD8
 14624                           
 14625 ;; *************** function i2___lldiv *****************
 14626 ;; Defined at:
 14627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14628 ;; Parameters:    Size  Location     Type
 14629 ;;  dividend        4    0[COMRAM] unsigned long 
 14630 ;;  divisor         4    4[COMRAM] unsigned long 
 14631 ;; Auto vars:     Size  Location     Type
 14632 ;;  __lldiv         4    8[COMRAM] unsigned long 
 14633 ;;  __lldiv         1   12[COMRAM] unsigned char 
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  4    0[COMRAM] unsigned long 
 14636 ;; Registers used:
 14637 ;;		wreg, status,2, status,0
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14643 ;;      Params:         8       0       0       0       0       0       0
 14644 ;;      Locals:         5       0       0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0
 14646 ;;      Totals:        13       0       0       0       0       0       0
 14647 ;;Total ram usage:       13 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; This function calls:
 14650 ;;		Nothing
 14651 ;; This function is called by:
 14652 ;;		i2_printf
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           	psect	text40
 14657  002CD6                     __ptext40:
 14658                           	opt stack 0
 14659  002CD6                     i2___lldiv:
 14660                           	opt stack 19
 14661                           
 14662                           ;incstack = 0
 14663  002CD6  0E00               	movlw	0
 14664  002CD8  6E09               	movwf	i2___lldiv@quotient,c
 14665  002CDA  0E00               	movlw	0
 14666  002CDC  6E0A               	movwf	i2___lldiv@quotient+1,c
 14667  002CDE  0E00               	movlw	0
 14668  002CE0  6E0B               	movwf	i2___lldiv@quotient+2,c
 14669  002CE2  0E00               	movlw	0
 14670  002CE4  6E0C               	movwf	i2___lldiv@quotient+3,c
 14671  002CE6  5005               	movf	i2___lldiv@divisor,w,c
 14672  002CE8  1006               	iorwf	i2___lldiv@divisor+1,w,c
 14673  002CEA  1007               	iorwf	i2___lldiv@divisor+2,w,c
 14674  002CEC  1008               	iorwf	i2___lldiv@divisor+3,w,c
 14675  002CEE  B4D8               	btfsc	status,2,c
 14676  002CF0  D02A               	goto	i2l840
 14677  002CF2  0E01               	movlw	1
 14678  002CF4  6E0D               	movwf	i2___lldiv@counter,c
 14679  002CF6  D006               	goto	i2l835
 14680  002CF8  90D8               	bcf	status,0,c
 14681  002CFA  3605               	rlcf	i2___lldiv@divisor,f,c
 14682  002CFC  3606               	rlcf	i2___lldiv@divisor+1,f,c
 14683  002CFE  3607               	rlcf	i2___lldiv@divisor+2,f,c
 14684  002D00  3608               	rlcf	i2___lldiv@divisor+3,f,c
 14685  002D02  2A0D               	incf	i2___lldiv@counter,f,c
 14686  002D04                     i2l835:
 14687  002D04  AE08               	btfss	i2___lldiv@divisor+3,7,c
 14688  002D06  D7F8               	goto	i2l836
 14689  002D08                     i2u505_40:
 14690  002D08  90D8               	bcf	status,0,c
 14691  002D0A  3609               	rlcf	i2___lldiv@quotient,f,c
 14692  002D0C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 14693  002D0E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 14694  002D10  360C               	rlcf	i2___lldiv@quotient+3,f,c
 14695  002D12  5005               	movf	i2___lldiv@divisor,w,c
 14696  002D14  5C01               	subwf	i2___lldiv@dividend,w,c
 14697  002D16  5006               	movf	i2___lldiv@divisor+1,w,c
 14698  002D18  5802               	subwfb	i2___lldiv@dividend+1,w,c
 14699  002D1A  5007               	movf	i2___lldiv@divisor+2,w,c
 14700  002D1C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 14701  002D1E  5008               	movf	i2___lldiv@divisor+3,w,c
 14702  002D20  5804               	subwfb	i2___lldiv@dividend+3,w,c
 14703  002D22  A0D8               	btfss	status,0,c
 14704  002D24  D009               	goto	i2l839
 14705  002D26  5005               	movf	i2___lldiv@divisor,w,c
 14706  002D28  5E01               	subwf	i2___lldiv@dividend,f,c
 14707  002D2A  5006               	movf	i2___lldiv@divisor+1,w,c
 14708  002D2C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 14709  002D2E  5007               	movf	i2___lldiv@divisor+2,w,c
 14710  002D30  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 14711  002D32  5008               	movf	i2___lldiv@divisor+3,w,c
 14712  002D34  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 14713  002D36  8009               	bsf	i2___lldiv@quotient,0,c
 14714  002D38                     i2l839:
 14715  002D38  90D8               	bcf	status,0,c
 14716  002D3A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 14717  002D3C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 14718  002D3E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 14719  002D40  3205               	rrcf	i2___lldiv@divisor,f,c
 14720  002D42  2E0D               	decfsz	i2___lldiv@counter,f,c
 14721  002D44  D7E1               	goto	i2u505_40
 14722  002D46                     i2l840:
 14723  002D46  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 14724  002D4A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 14725  002D4E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 14726  002D52  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 14727  002D56  0012               	return		;funcret
 14728  002D58                     __end_ofi2___lldiv:
 14729                           	opt stack 0
 14730                           pclatu	equ	0xFFB
 14731                           pclath	equ	0xFFA
 14732                           tblptru	equ	0xFF8
 14733                           tblptrh	equ	0xFF7
 14734                           tblptrl	equ	0xFF6
 14735                           tablat	equ	0xFF5
 14736                           prodh	equ	0xFF4
 14737                           prodl	equ	0xFF3
 14738                           intcon	equ	0xFF2
 14739                           intcon2	equ	0xFF1
 14740                           intcon3	equ	0xFF0
 14741                           postinc0	equ	0xFEE
 14742                           fsr0h	equ	0xFEA
 14743                           fsr0l	equ	0xFE9
 14744                           wreg	equ	0xFE8
 14745                           fsr1h	equ	0xFE2
 14746                           fsr1l	equ	0xFE1
 14747                           bsr	equ	0xFE0
 14748                           indf2	equ	0xFDF
 14749                           postinc2	equ	0xFDE
 14750                           postdec2	equ	0xFDD
 14751                           fsr2h	equ	0xFDA
 14752                           fsr2l	equ	0xFD9
 14753                           status	equ	0xFD8
 14754                           pclatu	equ	0xFFB
 14755                           pclath	equ	0xFFA
 14756                           tblptru	equ	0xFF8
 14757                           tblptrh	equ	0xFF7
 14758                           tblptrl	equ	0xFF6
 14759                           tablat	equ	0xFF5
 14760                           prodh	equ	0xFF4
 14761                           prodl	equ	0xFF3
 14762                           intcon	equ	0xFF2
 14763                           intcon2	equ	0xFF1
 14764                           intcon3	equ	0xFF0
 14765                           postinc0	equ	0xFEE
 14766                           fsr0h	equ	0xFEA
 14767                           fsr0l	equ	0xFE9
 14768                           wreg	equ	0xFE8
 14769                           fsr1h	equ	0xFE2
 14770                           fsr1l	equ	0xFE1
 14771                           bsr	equ	0xFE0
 14772                           indf2	equ	0xFDF
 14773                           postinc2	equ	0xFDE
 14774                           postdec2	equ	0xFDD
 14775                           fsr2h	equ	0xFDA
 14776                           fsr2l	equ	0xFD9
 14777                           status	equ	0xFD8
 14778                           
 14779                           	psect	rparam
 14780  0000                     pclatu	equ	0xFFB
 14781                           pclath	equ	0xFFA
 14782                           tblptru	equ	0xFF8
 14783                           tblptrh	equ	0xFF7
 14784                           tblptrl	equ	0xFF6
 14785                           tablat	equ	0xFF5
 14786                           prodh	equ	0xFF4
 14787                           prodl	equ	0xFF3
 14788                           intcon	equ	0xFF2
 14789                           intcon2	equ	0xFF1
 14790                           intcon3	equ	0xFF0
 14791                           postinc0	equ	0xFEE
 14792                           fsr0h	equ	0xFEA
 14793                           fsr0l	equ	0xFE9
 14794                           wreg	equ	0xFE8
 14795                           fsr1h	equ	0xFE2
 14796                           fsr1l	equ	0xFE1
 14797                           bsr	equ	0xFE0
 14798                           indf2	equ	0xFDF
 14799                           postinc2	equ	0xFDE
 14800                           postdec2	equ	0xFDD
 14801                           fsr2h	equ	0xFDA
 14802                           fsr2l	equ	0xFD9
 14803                           status	equ	0xFD8
 14804                           
 14805                           	psect	temp
 14806  00004F                     btemp:
 14807                           	opt stack 0
 14808  00004F                     	ds	1
 14809  0000                     int$flags	set	btemp
 14810  0000                     wtemp6	set	btemp+1
 14811                           pclatu	equ	0xFFB
 14812                           pclath	equ	0xFFA
 14813                           tblptru	equ	0xFF8
 14814                           tblptrh	equ	0xFF7
 14815                           tblptrl	equ	0xFF6
 14816                           tablat	equ	0xFF5
 14817                           prodh	equ	0xFF4
 14818                           prodl	equ	0xFF3
 14819                           intcon	equ	0xFF2
 14820                           intcon2	equ	0xFF1
 14821                           intcon3	equ	0xFF0
 14822                           postinc0	equ	0xFEE
 14823                           fsr0h	equ	0xFEA
 14824                           fsr0l	equ	0xFE9
 14825                           wreg	equ	0xFE8
 14826                           fsr1h	equ	0xFE2
 14827                           fsr1l	equ	0xFE1
 14828                           bsr	equ	0xFE0
 14829                           indf2	equ	0xFDF
 14830                           postinc2	equ	0xFDE
 14831                           postdec2	equ	0xFDD
 14832                           fsr2h	equ	0xFDA
 14833                           fsr2l	equ	0xFD9
 14834                           status	equ	0xFD8


Data Sizes:
    Strings     1762
    Constant    40
    Data        5
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     67      78
    BANK0           128     82     102
    BANK1           256     72      95
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 163
		 -> STR_105(CODE[23]), STR_104(CODE[9]), STR_103(CODE[28]), STR_102(CODE[26]), 
		 -> STR_101(CODE[25]), STR_100(CODE[135]), STR_99(CODE[18]), STR_98(CODE[29]), 
		 -> STR_97(CODE[16]), STR_96(CODE[19]), STR_95(CODE[20]), STR_94(CODE[14]), 
		 -> STR_93(CODE[15]), STR_92(CODE[23]), STR_91(CODE[38]), STR_90(CODE[3]), 
		 -> STR_89(CODE[36]), STR_88(CODE[3]), STR_87(CODE[36]), STR_86(CODE[36]), 
		 -> STR_85(CODE[26]), STR_84(CODE[25]), STR_83(CODE[25]), STR_82(CODE[153]), 
		 -> STR_81(CODE[18]), STR_80(CODE[29]), STR_79(CODE[16]), STR_78(CODE[19]), 
		 -> STR_77(CODE[20]), STR_76(CODE[14]), STR_75(CODE[15]), STR_74(CODE[23]), 
		 -> STR_73(CODE[19]), STR_72(CODE[18]), STR_71(CODE[25]), STR_70(CODE[119]), 
		 -> STR_69(CODE[18]), STR_68(CODE[29]), STR_67(CODE[16]), STR_66(CODE[19]), 
		 -> STR_65(CODE[20]), STR_64(CODE[14]), STR_63(CODE[15]), STR_62(CODE[23]), 
		 -> STR_61(CODE[21]), STR_60(CODE[25]), STR_59(CODE[111]), STR_58(CODE[18]), 
		 -> STR_57(CODE[29]), STR_56(CODE[16]), STR_55(CODE[19]), STR_54(CODE[20]), 
		 -> STR_53(CODE[14]), STR_52(CODE[15]), STR_51(CODE[28]), STR_50(CODE[21]), 
		 -> STR_49(CODE[2]), STR_48(CODE[2]), STR_47(CODE[11]), STR_46(CODE[54]), 
		 -> STR_45(CODE[25]), STR_44(CODE[32]), STR_43(CODE[37]), STR_42(CODE[2]), 
		 -> STR_41(CODE[32]), STR_40(CODE[37]), STR_39(CODE[2]), STR_38(CODE[21]), 
		 -> STR_37(CODE[2]), STR_36(CODE[2]), STR_35(CODE[25]), STR_34(CODE[23]), 
		 -> STR_33(CODE[25]), STR_32(CODE[163]), STR_31(CODE[18]), STR_30(CODE[29]), 
		 -> STR_29(CODE[16]), STR_28(CODE[19]), STR_27(CODE[20]), STR_26(CODE[14]), 
		 -> STR_25(CODE[15]), STR_24(CODE[19]), STR_23(CODE[37]), STR_22(CODE[2]), 
		 -> STR_21(CODE[15]), STR_20(CODE[20]), STR_19(CODE[31]), STR_18(CODE[18]), 
		 -> STR_17(CODE[39]), STR_16(CODE[39]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_13(CODE[39]), STR_12(CODE[3]), STR_11(CODE[36]), STR_10(CODE[36]), 
		 -> STR_9(CODE[59]), STR_8(CODE[31]), STR_7(CODE[44]), STR_6(CODE[39]), 
		 -> STR_5(CODE[39]), STR_4(CODE[31]), STR_3(CODE[28]), STR_2(CODE[7]), 
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?i1_printf(BANK0[2]), ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _temp_sensor in COMRAM

    None.

Critical Paths under _alarm in COMRAM

    _alarm->i2_password
    i2_password->i2_printf
    i2_Clear->i2_printf
    i2_printf->i2___llmod
    i2___llmod->i2___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _temp_sensor in BANK0

    _temp_sensor->_ADC
    i1_password->i1_printf
    i1_Clear->i1_printf
    i1_printf->i1___llmod
    i1___llmod->i1___lldiv
    _ADC->___fttol
    ___fttol->___ftmul
    ___ftmul->___altoft
    ___altoft->___ftpack

Critical Paths under _alarm in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_password_options
    _temp_options->_printf
    _password_options->_password_change
    _password_change->_printf
    _password->_printf
    _input_options->_printf
    _alarm_options->_printf
    _Clear->_printf
    _printf->___llmod
    ___llmod->___lldiv

Critical Paths under _temp_sensor in BANK1

    None.

Critical Paths under _alarm in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _temp_sensor in BANK2

    None.

Critical Paths under _alarm in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _temp_sensor in BANK3

    None.

Critical Paths under _alarm in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _temp_sensor in BANK4

    None.

Critical Paths under _alarm in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _temp_sensor in BANK5

    None.

Critical Paths under _alarm in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  135446
                                             62 BANK1     10    10      0
                              _Clear
                         _Read_b_eep
                      _alarm_options
                      _input_options
                             _keypad
                           _password
                   _password_options
                             _printf
                       _temp_options
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _temp_options                                         8     8      0   21128
                                             44 BANK1      8     8      0
                              _Clear
                         _Read_b_eep
                             _keypad
                             _printf
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _password_options                                     4     4      0   40700
                                             58 BANK1      4     4      0
                              _Clear
                         _Read_b_eep
                             _keypad
                    _password_change
                             _printf
 ---------------------------------------------------------------------------------
 (2) _password_change                                     14    14      0   21244
                                             44 BANK1     14    14      0
                              _Clear
                         _Read_b_eep
                             _keypad
                             _printf
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _password                                             8     8      0   10922
                                             44 BANK1      8     8      0
                         _Read_b_eep
                             _keypad
                             _printf
 ---------------------------------------------------------------------------------
 (1) _input_options                                        4     4      0   20816
                                             44 BANK1      4     4      0
                              _Clear
                         _Read_b_eep
                             _keypad
                             _printf
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _alarm_options                                        4     4      0   20816
                                             44 BANK1      4     4      0
                              _Clear
                         _Read_b_eep
                             _keypad
                             _printf
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_eeprom                                         3     2      1    1360
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _keypad                                               2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2    2048
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Clear                                                0     0      0    8670
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    21     10    8670
                                             22 BANK1     22    12     10
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             13 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _temp_sensor                                         30    30      0   11548
                                             52 BANK0     30    30      0
                                _ADC
                            i1_Clear
                       i1_Read_b_eep
                           i1_keypad
                         i1_password
                           i1_printf
                     i1_write_eeprom
 ---------------------------------------------------------------------------------
 (7) i1_write_eeprom                                       3     2      1      96
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (7) i1_password                                           8     8      0    1626
                                             40 BANK0      8     8      0
                       i1_Read_b_eep
                           i1_keypad
                           i1_printf
 ---------------------------------------------------------------------------------
 (8) i1_keypad                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_Read_b_eep                                         2     0      2      74
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) i1_Clear                                              0     0      0    1348
                           i1_printf
 ---------------------------------------------------------------------------------
 (7) i1_printf                                            27    21      6    1348
                                             22 BANK0     18    12      6
                          i1___lldiv
                          i1___llmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (8) i1_putch                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) i1___llmod                                            9     1      8     211
                                             13 BANK0      9     1      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lldiv                                           13     5      8     214
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (7) _ADC                                                  4     4      0    6744
                                             48 BANK0      4     4      0
                            ___aldiv
                           ___altoft
                            ___ftmul
                            ___fttol
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             15    11      4     328
                                             33 BANK0     15    11      4
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    2992
                                             18 BANK0     15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___altoft                                            10     6      4    2602
                                              8 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2388
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     452
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _alarm                                              23    23      0    3750
                                             44 COMRAM    23    23      0
                            i2_Clear
                         i2_password
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_password                                          8     8      0    1418
                                             36 COMRAM     8     8      0
                       i2_Read_b_eep
                           i2_keypad
                           i2_printf
 ---------------------------------------------------------------------------------
 (12) i2_keypad                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_Read_b_eep                                        2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) i2_Clear                                             0     0      0    1166
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_printf                                           23    21      2    1166
                                             22 COMRAM    14    12      2
                          i2___lldiv
                          i2___llmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (12) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2___llmod                                           9     1      8     211
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _Read_b_eep
   _alarm_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _Read_b_eep
     _keypad
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
     _write_eeprom
   _input_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _Read_b_eep
     _keypad
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
     _write_eeprom
   _keypad
   _password
     _Read_b_eep
     _keypad
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _password_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _Read_b_eep
     _keypad
     _password_change
       _Clear
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
       _Read_b_eep
       _keypad
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
       _write_eeprom
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
   _temp_options
     _Clear
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
     _Read_b_eep
     _keypad
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
     _write_eeprom
   _write_eeprom

 _temp_sensor (ROOT)
   _ADC
     ___aldiv
     ___altoft
       ___ftpack
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___lmul
   i1_Clear
     i1_printf
       i1___lldiv
       i1___llmod
         i1___lldiv (ARG)
       i1_putch
   i1_Read_b_eep
   i1_keypad
   i1_password
     i1_Read_b_eep
     i1_keypad
     i1_printf
       i1___lldiv
       i1___llmod
         i1___lldiv (ARG)
       i1_putch
   i1_printf
     i1___lldiv
     i1___llmod
       i1___lldiv (ARG)
     i1_putch
   i1_write_eeprom

 _alarm (ROOT)
   i2_Clear
     i2_printf
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2_putch
   i2_password
     i2_Read_b_eep
     i2_keypad
     i2_printf
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2_putch
   i2_printf
     i2___lldiv
     i2___llmod
       i2___lldiv (ARG)
     i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     48      5F       7       37.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     52      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     43      4E       1       61.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      15        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 10 12:40:58 2018

             ___altoft@exp 0090              ___altoft@sign 0091                         bsr 000FE0  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
         password_change@i 012E                        l210 0C42                        l202 0B10  
                      l211 0C50                        l300 16CA                        l212 0C68  
                      l301 16E2                        l205 0B82                        l214 0C82  
                      l206 0BE0                        l303 16FC                        l223 0D62  
                      l215 0C90                        l400 1208                        l240 0E3C  
                      l312 17DE                        l304 170A                        l224 0D1C  
                      l216 0CEA                        l208 0C1A                        l321 13B2  
                      l401 1216                        l313 1796                        l305 1764  
                      l217 0CF6                        l209 0C2A                        l330 14B0  
                      l322 1410                        l410 12A2                        l402 1270  
                      l250 0FD4                        l306 1770                        l226 0D22  
                      l331 14BE                        l403 127C                        l251 0F22  
                      l315 17AA                        l227 0D28                        l340 154A  
                      l332 1518                        l324 144A                        l412 12DA  
                      l236 0E22                        l228 0D2E                        l421 1BA0  
                      l341 156A                        l333 1524                        l325 1458  
                      l413 1312                        l253 0FC4                        l245 0E90  
                      l237 0DDA                        l317 17B0                        l229 0D34  
                      l181 099C                        l430 1C70                        l342 1584  
                      l326 1470                        l414 134C                        l350 042C  
                      l190 0A10                        l431 1C88                        l423 1BB8  
                      l327 147E                        l263 1072                        l247 0EBE  
                      l351 048A                        _ADC 261E                        l432 1CA0  
                      l424 1BD0                        l344 15A4                        l328 1496  
                      l416 1352                        l360 0538                        l192 0B7E  
                      l184 099E                        l433 1CB8                        l425 1BE8  
                      l409 1380                        l249 10D2                        l361 0592  
                      l353 04C4                        l193 0A70                        l185 0A48  
                      l434 1CD8                        l426 1C08                        l346 15AA  
                      l274 2404                        l266 10A4                        l258 0FEE  
                      l370 05FE                        l362 059E                        l354 04D2  
                      l186 09C0                        l451 180C                        l435 1CF0  
                      l427 1C20                        l339 15D8                        l283 2472  
                      l275 23BC                        l371 061A                        l355 04EA  
                      l460 1854                        l452 181C                        l436 1D08  
                      l428 1C38                        l380 077A                        l356 04F8  
                      l188 09DE                        l429 1C50                        l285 24A0  
                      l373 063A                        l357 0510                        l189 09F0  
                      l470 190A                        l462 1874                        l454 1826  
                      l278 241E                        l294 15FE                        l374 0760  
                      l198 0AE2                        l391 1104                        l287 24C4  
                      l295 165C                        l375 068A                        l359 052A  
                      l464 18AE                        l392 1162                        l368 08B6  
                      l457 1824                        l297 1696                        l385 07E0  
                      l377 06F0                        l369 05C4                        l394 11A2  
                      l298 16A4                        l386 0882                        l395 11B0  
                      l299 16BC                        l387 0888                        l379 0838  
                      l468 18FC                        l396 11C8                        l469 198A  
                      l397 11D6                        l398 11EE                        l840 2C40  
                      l850 2E90                        l835 2BFE                        l836 2BF2  
                      l845 2E5A                        l846 2E4E                        l839 2C32  
                      l849 2E82               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      wreg 000FE8                       ?_ADC 0001               __CFG_LVP$OFF 000000  
    __end_of_input_options 13AE               __CFG_WDT$OFF 000000                       l4006 0E74  
                     l4008 0E80                       l4106 10C4                       l4028 0ECC  
                     l5006 047A                       l5018 04AE                       l4092 1088  
                     l5140 0838                       l4094 1094                       l3554 30C0  
                     l3626 18B2                       l3644 190A                       l5180 1152  
                     l5192 1186                       l4732 23AC                       l4920 1434  
                     l4824 164C                       l4908 1400                       l4764 2456  
                     l4836 1680                       l4766 2462                       l3974 0DCA  
                     l5816 0BD0                       l5736 0A00                       l4786 24AE  
                     l5828 0C04                       l5748 0A34                       l5790 0B30  
                     l5776 0AF8                       l5778 0B00                       STR_1 7FF5  
                     STR_2 7FEE                       STR_3 7DE6                       STR_4 7DAA  
                     STR_5 7C8A                       STR_6 7CB1                       STR_7 7C37  
                     STR_8 7DAA                       STR_9 7BC6                       u4130 2C02  
                     u4230 18EA                       u4160 2E5E                       u4250 199C  
                     u5210 0ECC                       u5310 1036                       u5320 1088  
                     u5240 0F20                       u7100 2456                       u5340 10C4  
                     u5260 0F88                       u5180 0E74                       u7130 24AE  
                     u8110 0B30                       u7160 1680                       u8040 0A34  
                     u7250 1434                       u8130 0C04                       u7510 0838  
                     u7350 04AE                       u8080 0AB8                       u8217 0AD0  
                     u7530 1186                       u7450 0688                       u8090 0AF8  
                     u8307 086E                       u8227 0CD8                       u8317 08A2  
                     u8237 0D4E                       u8407 10EC                       u8327 1752  
                     u8247 0580                       u8417 2382                       u8337 17CA  
                     u8257 0626                       u8507 15C4                       u8427 23EC  
                     u8347 0DA0                       u8267 0646                       u8517 2FEE  
                     u8437 125E                       u8357 0E0A                       u8277 06E0  
                     u8447 12CC                       u8367 0EE4                       u8287 0740  
                     u8457 1304                       u8377 0F52                       u8297 07D0  
                     u8467 133C                       u8387 0FB4                       u8477 136C  
                     u8397 1062                       u8487 1506                       u8497 1590  
                     u7990 0998            __end_ofi1_Clear 306C            __end_ofi2_Clear 3086  
        i1___lldiv@divisor 0084                       _main 08DE               ___ftpack@arg 0080  
                     _pass 014C               ___ftpack@exp 0083                       _temp 004E  
                     _test 004C                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004F  
        i1___lldiv@counter 008C                 i1_password 220A                       prodh 000FF4  
                     prodl 000FF3                       start 0424              __CFG_IESO$OFF 000000  
               i2_password 24D4            __end_ofi1_putch 30D8            __end_ofi2_putch 30E4  
            __CFG_MCLRE$ON 000000               ___ftmul@cntr 009F               ___param_bank 000000  
             ___ftmul@sign 00A0   __size_of_password_change 0370    __size_ofi1_write_eeprom 0034  
                    ??_ADC 00B0               ___fttol@exp1 00AF               ___fttol@lval 00AB  
          __end_of___aldiv 2B1E                      ?_main 0001                      _EEADR 000FA9  
                    STR_10 7D47                      STR_11 7D23                      STR_12 7FFA  
                    STR_20 7F28                      STR_21 7FCF                      STR_13 7C63  
                    STR_14 7FFA                      STR_22 7FFD                      STR_30 7DC9  
                    STR_15 7FE7                      STR_31 7F9B                      STR_23 7CFE  
                    STR_40 7CFE                      STR_16 7CB1                      STR_24 7F50  
                    STR_32 791D                      STR_25 7F41                      STR_17 7CB1  
                    STR_33 7E87                      STR_41 7D6B                      STR_26 7F68  
                    STR_42 7FFD                      STR_18 7F89                      STR_50 7EE9  
                    STR_34 7ED2                      STR_43 7CFE                      STR_27 7F3C  
                    STR_35 7EB9                      STR_51 7E02                      STR_19 7D8B  
                    STR_44 7D6B                      STR_60 7E87                      STR_52 7F41  
                    STR_36 7FFD                      STR_28 7F63                      STR_53 7F68  
                    STR_37 7FFD                      STR_29 7FBF                      STR_61 7EFE  
                    STR_45 7E6E                      STR_54 7F3C                      STR_62 7ED2  
                    STR_38 7F13                      STR_46 7C01                      STR_70 7AE0  
                    STR_47 7FD3                      STR_71 7E87                      STR_63 7F41  
                    STR_55 7F63                      STR_39 7FFD                      STR_56 7FBF  
                    STR_80 7DC9                      STR_64 7F68                      STR_48 7FFD  
                    STR_72 7FAD                      STR_81 7F9B                      STR_57 7DC9  
                    STR_65 7F3C                      STR_49 7FFD                      STR_73 7F76  
                    STR_58 7F9B                      STR_66 7F63                      STR_74 7ED2  
                    STR_90 7FFA                      STR_82 79C0                      STR_83 7E87  
                    STR_67 7FBF                      STR_75 7F41                      STR_91 7CD8  
                    STR_59 7B57                      STR_68 7DC9                      STR_76 7F68  
                    STR_92 7ED2                      STR_84 7EA0                      STR_69 7F9B  
                    STR_93 7F41                      STR_77 7F3C                      STR_85 7E3A  
                    STR_94 7F68                      STR_78 7F63                      STR_86 7D47  
                    STR_87 7D23                      STR_79 7FBF                      STR_95 7F3C  
                    STR_96 7F63                      STR_88 7FFA                      STR_89 7D23  
                    STR_97 7FBF                      STR_98 7DC9                      STR_99 7F9B  
          __end_of___lldiv 2C52            __end_of___ftmul 2A50            __end_of___llmod 2EA2  
          __end_of___fttol 295A                      i1l160 03B6                      i1l161 02AE  
                    i1l154 03C6                      i1l162 01DE                      i1l155 0178  
                    i1l172 032C                      i1l164 0242                      i1l156 0184  
                    i1l421 1D50                      i1l173 03C4                      i1l165 03CC  
                    i1l430 1E20                      i1l166 0380                      i1l431 1E38  
                    i1l423 1D68                      i1l167 02C6                      i1l432 1E50  
                    i1l424 1D80                      i1l433 1E68                      i1l425 1D98  
                    i1l434 1E88                      i1l426 1DB8                      i1l274 2298  
                    i1l451 19C4                      i1l435 1EA0                      i1l427 1DD0  
                    i1l283 230A                      i1l275 2250                      i1l540 2A6E  
                    i1l700 2B3E                      i1l460 1A0C                      i1l452 19D4  
                    i1l436 1EB8                      i1l428 1DE8                      i1l541 2A86  
                    i1l429 1E00                      i1l285 233C                      i1l702 2B7C  
                    i1l470 1AC2                      i1l462 1A2C                      i1l454 19DE  
                    i1l278 22B2                      i1l543 2AB4                      i1l703 2B66  
                    i1l287 2366                      i1l544 2AA8                      i1l464 1A66  
                    i2l145 2806                      i1l705 2BA4                      i1l801 2908  
                    i1l457 19DC                      i2l146 2812                      i1l706 2B9A  
                    i1l570 2D7C                      i1l810 2948                      i1l802 28F8  
                    i1l547 2AE8                      i1l548 2AF6                      i1l468 1AB4  
                    i2l421 20A8                      i1l549 2B0C                      i1l469 1B42  
                    i2l430 2168                      i2l431 217E                      i2l423 20BE  
                    i1l807 292C                      i2l432 2194                      i2l424 20D4  
                    i1l808 2920                      i1l496 2F82                      i1l840 2CC4  
                    i2l433 21AA                      i2l425 20EA                      i1l569 2D88  
                    i1l497 2F96                      i2l434 21C8                      i2l426 2108  
                    i2l274 2554                      i1l850 2EF8                      i2l451 1EDA  
                    i2l435 21DE                      i2l427 211E                      i2l283 25BE  
                    i2l275 2512                      i1l835 2C82                      i2l460 1F20  
                    i2l452 1EEA                      i2l436 21F4                      i2l428 2134  
                    i1l780 29AC                      i1l836 2C76                      i2l429 214A  
                    i2l285 25EC                      i1l781 29DE                      i1l845 2EC2  
                    i2l470 1FD4                      i2l462 1F40                      i2l454 1EF2  
                    i2l278 256C                      i1l782 29EE                      i1l846 2EB6  
                    i2l287 2610                      i1l839 2CB6                      i2l464 1F7A  
                    i1l784 2A06                      i2l457 1EF0                      i1l785 2A16  
                    i1l849 2EEA                      i1l778 2984                      i1l699 2B48  
                    i2l468 1FC8                      i2l469 2050                      i1l799 2890  
                    i2l840 2D46                      i2l850 2F5E                      i2l835 2D04  
                    i2l836 2CF8                      i2l845 2F28                      i2l846 2F1C  
                    i2l839 2D38                      i2l849 2F50                      _RCREG 000FAE  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _SPBRG 000FAF  
                    _TRISB 000F93                      _TXREG 000FAD              __CFG_PWRT$OFF 000000  
                    _Clear 3030              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000        ___lmul@multiplicand 0084              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000                      _adLow 00DA  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           Read_b_eep@badd 0100         i1___lldiv@dividend 0080                      _check 0158  
           __CFG_EBTRB$OFF 000000                      _alarm 0008            __end_of_dpowers 791D  
     _temp_threshold_input 00DE              ___ftpack@sign 0084                      _putch 30BC  
                    main@i 0140             __CFG_BOREN$OFF 000000                      pclath 000FFA  
                    tablat 000FF5                      status 000FD8                      wtemp6 0050  
         __end_ofi1_keypad 1ED0         __size_ofi1___lldiv 0084      __end_of_alarm_options 15FA  
       __size_ofi1___llmod 0068           __end_ofi2_keypad 220A           __end_ofi1_printf 1B70  
       __size_ofi2___lldiv 0082         __size_ofi2___llmod 0066           __end_ofi2_printf 207A  
        password_options@i 013C                 i1printf@ap 00A0            __initialization 2DD2  
        i2___lldiv@divisor 0005         temp_options@i_1165 0130         temp_options@i_1168 0132  
             __end_of_main 0D90          i2___lldiv@counter 000D                 i2printf@ap 001D  
               _Read_b_eep 3086         i1___lldiv@quotient 0088      __size_of_write_eeprom 0034  
                   ??_main 013E              ___fttol@sign1 00AA              __activetblptr 000002  
                   ?_Clear 0001                  ??i1_Clear 00A8                     ?_alarm 0001  
                ??i2_Clear 0025           __end_of___altoft 2DD2           ___llmod@dividend 010D  
                   STR_100 7A59                     STR_101 7E87                     STR_102 7E54  
                   STR_103 7E1E                     STR_104 7FDE                     STR_105 7ED2  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     _EEDATA 000FA8  
                   _EECON2 000FA7                     ?_putch 0001           __end_of___ftpack 2BCE  
        i1___llmod@divisor 0091                     i1l4630 1A6A                     i1l5350 22EA  
                   i1l5318 2240                     i1l5352 22FA                     i1l5372 234C  
                   i1l3880 30CE                     i1l4648 1AC2                     i1l5586 0380  
                   i2l5422 25A0                     i2l4704 1FD4                     i2l5424 25AE  
                   i2l5444 25FA                     i2l5390 2502                     i2l3884 30DA  
                   i2l4686 1F7E          i1___llmod@counter 0095                     u551_21 2874  
                   u545_21 296C                     u547_21 2994                  ??i1_putch 0080  
                ??i2_putch 0001   __end_of_password_options 1800                ?i1_password 0001  
             _write_eeprom 2FC8                ?i2_password 0001             __CFG_XINST$OFF 000000  
                   _adHigh 00D6                     ___lmul 2F70                  ??___aldiv 0088  
           __CFG_STVREN$ON 000000                  ??___lldiv 0108                  ??___ftmul 0098  
                   _choice 00E2                  ??___llmod 0115                  ??___fttol 00A5  
                   _keypad 1B70                     clear_0 2E0E                     clear_1 2E1A  
                   clear_2 2E26               ?_temp_sensor 0001                     _printf 1800  
        ??_password_change 012C      ___ftmul@f3_as_product 009C           __end_of_password 24D4  
        __end_ofi1___lldiv 2CD6          __end_ofi1___llmod 2F0A                i1password@i 00AA  
        __end_ofi2___lldiv 2D58          __end_ofi2___llmod 2F70               __mediumconst 78F4  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
              i2password@i 0027                 __accesstop 0080    __end_of__initialization 2E2C  
               ___altoft@c 0088            __CFG_PBADEN$OFF 000000           i1password@i_1120 00AE  
         i1password@i_1118 00AC              ___rparam_used 000001          i2___llmod@divisor 0012  
              i1printf@val 00A3          i2___llmod@counter 0016              __end_of_Clear 304E  
               ___ftmul@f1 0092                 ___ftmul@f2 0095                 ___fttol@f1 00A1  
           i1_write_eeprom 2FFC             __pcstackCOMRAM 0001         i2___lldiv@dividend 0001  
             __pidataBANK0 30E7               __pidataBANK1 30E4              __end_of_alarm 2862  
              ?_Read_b_eep 0100                i1putch@data 0080              __end_of_putch 30CA  
              i2printf@val 0020        __size_ofi1_password 016C                i2putch@data 0001  
                ?i1_keypad 0080                    ??_Clear 012C                  ?i2_keypad 0001  
                ?i1_printf 0096        __size_ofi2_password 014A                  ?i2_printf 0017  
                  ??_alarm 002D                    ??_putch 0100         i2___lldiv@quotient 0009  
               __pbssBANK0 00D2                 __pbssBANK1 0148     __end_ofi1_write_eeprom 3030  
                  ?___lmul 0080                  ?___altoft 0088                    ?_keypad 0100  
           ___lmul@product 0088                  ?___ftpack 0080                    ?_printf 0116  
            _keypad_active 0150         i1___llmod@dividend 008D                 ??i1_keypad 0082  
               ??i2_keypad 0003                 ??i1_printf 009C                 ??i2_printf 0019  
                  i1_Clear 304E                    i2_Clear 306C           write_eeprom@data 0100  
      __size_of_Read_b_eep 0012                    i1_putch 30CA                    i2_putch 30D8  
          ?i1_write_eeprom 0080                    __Hparam 0000                  ?_password 0001  
         i1Read_b_eep@badd 0080                    __Lparam 0000                    ___aldiv 2A50  
          __size_of___lmul 0058                    ___lldiv 2BCE                    ___ftmul 295A  
                  ___llmod 2E3A                    ___fttol 2862                 ??___altoft 008C  
   __size_of_input_options 02AE                    _decimal 00D2                    __pcinit 2DD2  
               ??___ftpack 0085            __size_of_keypad 01B0                    __ramtop 0600  
                  __ptext0 08DE                    __ptext1 0428                    __ptext2 15FA  
                  __ptext3 0D90                    __ptext4 2376                    __ptext5 1100  
                  __ptext6 13AE                    __ptext7 2FC8                    __ptext8 1B70  
                  __ptext9 3086            __size_of_printf 01B8                  _T0CONbits 000FD5  
             __size_of_ADC 012E                    _dpowers 78F5       __size_of_temp_sensor 040C  
         ___aldiv@dividend 0080              ?_temp_options 0001                 _pass_check 015B  
                  _voltage 0044             __pintcode_body 274C              ?i1_Read_b_eep 0080  
     end_of_initialization 2E2C      i1write_eeprom@address 0082              __Lmediumconst 78F4  
                  int_func 274C               ??i1_password 00A8                 _saved_pass 0148  
        ?_password_options 0001            ___lldiv@divisor 0104               ??i2_password 0025  
               ??_password 012C            ___lldiv@counter 010C         ??_password_options 013A  
          _password_change 0D90                  _RCSTAbits 000FAB                    printf@c 012B  
                  printf@f 0116           ___aldiv@quotient 008A                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE              ?i2_Read_b_eep 0001  
                _PORTBbits 000F81                  _PORTDbits 000F83     __size_of_alarm_options 024C  
       __end_ofi1_password 2376             ??_temp_options 012C                  _TRISCbits 000F94  
                _TRISDbits 000F95                  i1___lldiv 2C52         __end_ofi2_password 261E  
                i1___llmod 2EA2                 main@i_1082 0142                 main@i_1084 0144  
               main@i_1079 0146             ??i1_Read_b_eep 0082                  i2___lldiv 2CD6  
                i2___llmod 2F0A              _input_options 1100                  _TXSTAbits 000FAC  
       i2___llmod@dividend 000E               i1printf@flag 00A2               i1printf@prec 009E  
              ___ftmul@exp 009B             ??i2_Read_b_eep 0003               ??_Read_b_eep 0102  
            _system_active 0152             __end_of___lmul 2FC8        _temp_threshold_read 00E0  
           __end_of_keypad 1D20         i1write_eeprom@data 0080             __end_of_printf 19B8  
             i2printf@flag 001F               i2printf@prec 001B        start_initialization 2DD2  
              __end_of_ADC 274C                  i1printf@c 00A7                  i1printf@f 0096  
                i2printf@c 0024                  i2printf@f 0017                 ?i1___lldiv 0080  
        __size_ofi1_keypad 01B0                 ?i1___llmod 008D          __size_ofi2_keypad 0190  
               ?i2___lldiv 0001             ?_input_options 0001                 ?i2___llmod 000E  
        __size_ofi1_printf 01B8          __size_ofi2_printf 01AA    __end_of_password_change 1100  
       __end_of_Read_b_eep 3098            ___llmod@divisor 0111             input_options@i 012E  
          ___llmod@counter 0115              _alarm_options 13AE                   ??___lmul 0088  
    password_change@i_1101 0132      password_change@i_1103 0136      password_change@i_1111 0134  
    password_change@i_1107 0138                __pdataBANK0 00E4                __pdataBANK1 015C  
           _temp_threshold 0048      password_change@i_1099 0130           __CFG_LPT1OSC$OFF 000000  
                 ??_keypad 0102                   ??_printf 0120          __size_of___altoft 007A  
        __size_of___ftpack 00B0                __pbssCOMRAM 0044              __pcstackBANK0 0080  
            __pcstackBANK1 0100                   ?i1_Clear 0001                   ?i2_Clear 0001  
         ??i1_write_eeprom 0081                   ?i1_putch 0001                   ?i2_putch 0001  
           ?_alarm_options 0001                  _alarm_loc 015E                  _alarm_set 0154  
        __CFG_CCP2MX$PORTC 000000       __end_of_temp_options 08DE                  __pintcode 0008  
            __pmediumconst 78F4                   ?___aldiv 0080          __size_of_password 015E  
        _system_active_loc 015D                   ?___lldiv 0100                   ?___ftmul 0092  
                 ?___llmod 010D                   ?___fttol 00A1       __end_ofi1_Read_b_eep 30AA  
              __pintcodelo 0018          _keypad_active_loc 015C             __size_of_Clear 001E  
          ??_input_options 012C                ??i1___lldiv 0088                ??i1___llmod 0095  
           __size_of_alarm 285A                ??i2___lldiv 0009                ??i2___llmod 0016  
     __end_ofi2_Read_b_eep 30BC             __size_of_putch 000E            ___aldiv@divisor 0084  
         ?_password_change 0001            ___aldiv@counter 0088                   _IPR1bits 000F9F  
                 _PIE1bits 000F9D              ?_write_eeprom 0100                   i1u502_20 2C86  
                 i1u540_20 2AB8                   i1u508_20 2EC6                   i1u553_20 28AE  
                 i1u553_25 28A6                   i1u492_20 2B30                   i1u557_20 2932  
                 i2u511_40 2F2C                   i1u496_20 2BAE                   i2u505_40 2D08  
                 _PIR1bits 000F9E                   i1u692_20 1AA2                   i1u860_27 2216  
                 i1u852_27 007C                   i2u701_40 1FB6                   i1u861_27 2280  
                 i1u853_27 0090                   i1u694_20 1B54                   i1u766_20 22EA  
                 i1u854_27 0166                   i1u791_20 01DC                   i2u703_40 2060  
                 i1u855_27 019C                   i1u856_27 0234                   i1u769_20 234C  
                 i1u857_27 028E                   i1u858_27 031C                   i1u859_27 3022  
                 i1u797_20 0380                   i2u862_47 24DE                   i2u863_47 253E  
                 i2u776_40 25A0                   i2u779_40 25FA                   _RCONbits 000FD0  
         __CFG_WDTPS$32768 000000              ??_temp_sensor 00B4                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1  __size_of_password_options 0206                 _ADCON2bits 000FC0  
                _triggered 0156                 printf@flag 0126                 printf@prec 0122  
                 i1_keypad 1D20                   i2_keypad 207A                   i1_printf 19B8  
                 i2_printf 1ED0           __size_ofi1_Clear 001E          ___lmul@multiplier 0080  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0           __size_ofi2_Clear 001A  
          ??_alarm_options 012C           __size_ofi1_putch 000E             ??_write_eeprom 0101  
         __size_ofi2_putch 000C                 _EECON1bits 000FA6                   __Hrparam 0000  
         i2password@i_1120 002B           i2password@i_1118 0029                   __Lrparam 0000  
         __size_of___aldiv 00CE           __size_of___lldiv 0084                   ___altoft 2D58  
         __size_of___ftmul 00F6           __size_of___llmod 0068           __size_of___fttol 00F8  
                 ___ftpack 2B1E        __end_of_temp_sensor 0424                   __ptext10 3030  
                 __ptext11 1800                   __ptext20 304E                   __ptext12 30BC  
                 __ptext21 19B8                   __ptext13 2E3A                   __ptext30 2B1E  
                 __ptext22 30CA                   __ptext14 2BCE                   __ptext31 2A50  
                 __ptext23 2EA2                   __ptext40 2CD6                   __ptext24 2C52  
                 __ptext16 2FFC                   __ptext33 24D4                   __ptext25 261E  
                 __ptext17 220A                   __ptext34 207A                   __ptext26 2F70  
                 __ptext18 1D20                   __ptext35 30AA                   __ptext27 2862  
                 __ptext19 3098                   __ptext36 306C                   __ptext28 295A  
                 __ptext37 1ED0                   __ptext29 2D58                   __ptext38 30D8  
                 __ptext39 2F0A                  password@i 012E      __size_of_temp_options 04B6  
            __size_of_main 04B2                   _pass_loc 015A      __size_ofi1_Read_b_eep 0012  
                 _password 2376                   _temp_loc 00E5                   _temp_set 004A  
                 int$flags 004F              temp_options@i 012E                  printf@val 0127  
                putch@data 0100                 _INTCONbits 000FF2      __size_ofi2_Read_b_eep 0012  
             _temp_options 0428               i1_Read_b_eep 3098                   intlevel1 0000  
                 intlevel2 0000             alarm_options@i 012E           ___lldiv@dividend 0100  
             temp_sensor@i 00CE                   printf@ap 0124           i2Read_b_eep@badd 0001  
             i2_Read_b_eep 30AA                _temp_sensor 0018           _password_options 15FA  
     __end_of_write_eeprom 2FFC              _threshold_loc 00E4           temp_sensor@i_981 00D0  
         ___lldiv@quotient 0108             password@i_1120 0132             password@i_1118 0130  
             ___aldiv@sign 0089        write_eeprom@address 0102  
