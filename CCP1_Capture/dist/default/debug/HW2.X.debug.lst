

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 10 16:35:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F452 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	smallconst
    57  000600                     __psmallconst:
    58                           	opt stack 0
    59  000600  00                 	db	0
    60  000601                     _dpowers:
    61                           	opt stack 0
    62  000601  0001               	dw	1
    63  000603  000A               	dw	10
    64  000605  0064               	dw	100
    65  000607  03E8               	dw	1000
    66  000609  2710               	dw	10000
    67  00060B                     __end_of_dpowers:
    68                           	opt stack 0
    69  0000                     _PORTD	set	3971
    70  0000                     _T1CONbits	set	4045
    71  0000                     _INTCONbits	set	4082
    72  0000                     _PIE1bits	set	3997
    73  0000                     _CCP1CON	set	4029
    74  0000                     _TRISC	set	3988
    75  0000                     _RCSTAbits	set	4011
    76  0000                     _TXSTAbits	set	4012
    77  0000                     _CCPR1L	set	4030
    78  0000                     _CCPR1H	set	4031
    79  0000                     _TXREG	set	4013
    80  0000                     _PIR1bits	set	3998
    81  00060B                     STR_1:
    82  00060B  25                 	db	37
    83  00060C  64                 	db	100	;'d'
    84  00060D  20                 	db	32
    85  00060E  48                 	db	72	;'H'
    86  00060F  7A                 	db	122	;'z'
    87  000610  0A                 	db	10
    88  000611  00                 	db	0
    89                           
    90                           ; #config settings
    91  000612  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	cinit
    94  0009A4                     __pcinit:
    95                           	opt stack 0
    96  0009A4                     start_initialization:
    97                           	opt stack 0
    98  0009A4                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (12 bytes)
   102  0009A4  EE00  F03B         	lfsr	0,__pbssCOMRAM
   103  0009A8  0E0C               	movlw	12
   104  0009AA                     clear_0:
   105  0009AA  6AEE               	clrf	postinc0,c
   106  0009AC  06E8               	decf	wreg,f,c
   107  0009AE  E1FD               	bnz	clear_0
   108  0009B0                     end_of_initialization:
   109                           	opt stack 0
   110  0009B0                     __end_of__initialization:
   111                           	opt stack 0
   112  0009B0  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   113  0009B2  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   114  0009B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   115  0009B6  6EF8               	movwf	tblptru,c
   116  0009B8  0100               	movlb	0
   117  0009BA  EFAC  F004         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           
   122                           	psect	bssCOMRAM
   123  00003B                     __pbssCOMRAM:
   124                           	opt stack 0
   125  00003B                     _freq:
   126                           	opt stack 0
   127  00003B                     	ds	2
   128  00003D                     _prev:
   129                           	opt stack 0
   130  00003D                     	ds	2
   131  00003F                     _current:
   132                           	opt stack 0
   133  00003F                     	ds	2
   134  000041                     _low:
   135                           	opt stack 0
   136  000041                     	ds	2
   137  000043                     _high:
   138                           	opt stack 0
   139  000043                     	ds	2
   140  000045                     _dif:
   141                           	opt stack 0
   142  000045                     	ds	2
   143                           tblptru	equ	0xFF8
   144                           postinc0	equ	0xFEE
   145                           wreg	equ	0xFE8
   146                           
   147                           	psect	cstackCOMRAM
   148  000001                     __pcstackCOMRAM:
   149                           	opt stack 0
   150  000001                     ?___aldiv:
   151                           	opt stack 0
   152  000001                     ___aldiv@dividend:
   153                           	opt stack 0
   154                           
   155                           ; 4 bytes @ 0x0
   156  000001                     	ds	4
   157  000005                     ___aldiv@divisor:
   158                           	opt stack 0
   159                           
   160                           ; 4 bytes @ 0x4
   161  000005                     	ds	4
   162  000009                     ___aldiv@counter:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x8
   166  000009                     	ds	1
   167  00000A                     ___aldiv@sign:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x9
   171  00000A                     	ds	1
   172  00000B                     ___aldiv@quotient:
   173                           	opt stack 0
   174                           
   175                           ; 4 bytes @ 0xA
   176  00000B                     	ds	4
   177  00000F                     ??_timer1:
   178                           
   179                           ; 1 bytes @ 0xE
   180  00000F                     	ds	2
   181  000011                     ??_capture:
   182                           
   183                           ; 1 bytes @ 0x10
   184  000011                     	ds	18
   185  000023                     ?___lwdiv:
   186                           	opt stack 0
   187  000023                     putch@data:
   188                           	opt stack 0
   189  000023                     ___lwdiv@dividend:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x22
   193  000023                     	ds	2
   194  000025                     ___lwdiv@divisor:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x24
   198  000025                     	ds	2
   199  000027                     ___lwdiv@quotient:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x26
   203  000027                     	ds	2
   204  000029                     ___lwdiv@counter:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x28
   208  000029                     	ds	1
   209  00002A                     ?___lwmod:
   210                           	opt stack 0
   211  00002A                     ___lwmod@dividend:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x29
   215  00002A                     	ds	2
   216  00002C                     ___lwmod@divisor:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x2B
   220  00002C                     	ds	2
   221  00002E                     ___lwmod@counter:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x2D
   225  00002E                     	ds	1
   226  00002F                     ?_printf:
   227                           	opt stack 0
   228  00002F                     printf@f:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x2E
   232  00002F                     	ds	4
   233  000033                     ??_printf:
   234                           
   235                           ; 1 bytes @ 0x32
   236  000033                     	ds	1
   237  000034                     printf@ap:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x33
   241  000034                     	ds	2
   242  000036                     printf@flag:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x35
   246  000036                     	ds	1
   247  000037                     printf@prec:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x36
   251  000037                     	ds	1
   252  000038                     printf@val:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x37
   256  000038                     	ds	2
   257  00003A                     printf@c:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x39
   261  00003A                     	ds	1
   262  00003B                     tblptru	equ	0xFF8
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           ; 1 bytes @ 0x3A
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 77 in file "HW2.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   286 ;;      Params:         0       0       0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called:    5
   292 ;; This function calls:
   293 ;;		_printf
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  000958                     __ptext0:
   301                           	opt stack 0
   302  000958                     _main:
   303                           	opt stack 0
   304  000958  FFFF               	dw	65535	; assembler added errata NOP
   305                           
   306                           ;HW2.c: 81: TXSTAbits.TXEN = 1;
   307                           
   308                           ;incstack = 0
   309  00095A  8AAC               	bsf	4012,5,c	;volatile
   310                           
   311                           ;HW2.c: 82: RCSTAbits.SPEN = 1;
   312  00095C  8EAB               	bsf	4011,7,c	;volatile
   313                           
   314                           ;HW2.c: 87: TRISC = 0b11111111;
   315  00095E  6894               	setf	3988,c	;volatile
   316                           
   317                           ;HW2.c: 90: CCP1CON = 0b00000101;
   318  000960  0E05               	movlw	5
   319  000962  6EBD               	movwf	4029,c	;volatile
   320                           
   321                           ;HW2.c: 91: PIE1bits.CCP1IE = 1;
   322  000964  849D               	bsf	3997,2,c	;volatile
   323                           
   324                           ;HW2.c: 97: INTCONbits.GIE = 1;
   325  000966  8EF2               	bsf	intcon,7,c	;volatile
   326                           
   327                           ;HW2.c: 98: INTCONbits.PEIE = 1;
   328  000968  8CF2               	bsf	intcon,6,c	;volatile
   329                           
   330                           ;HW2.c: 99: T1CONbits.TMR1ON = 1;
   331  00096A  80CD               	bsf	4045,0,c	;volatile
   332  00096C  FFFF               	dw	65535	; assembler added errata NOP
   333                           
   334                           ;HW2.c: 105: {
   335                           ;HW2.c: 106: printf("%d Hz\n", freq);
   336  00096E  0E0B               	movlw	low STR_1
   337  000970  6E2F               	movwf	printf@f,c
   338  000972  0E06               	movlw	high STR_1
   339  000974  6E30               	movwf	printf@f+1,c
   340  000976  C03B  F031         	movff	_freq,?_printf+2
   341  00097A  C03C  F032         	movff	_freq+1,?_printf+3
   342  00097E  EC0A  F003         	call	_printf	;wreg free
   343                           
   344                           ;HW2.c: 107: PORTD = 0b10101010;
   345  000982  0EAA               	movlw	170
   346  000984  6E83               	movwf	3971,c	;volatile
   347                           
   348                           ;HW2.c: 108: PORTD = 0b01010101;
   349  000986  0E55               	movlw	85
   350  000988  6E83               	movwf	3971,c	;volatile
   351                           
   352                           ;HW2.c: 109: PORTD = 0b10101010;
   353  00098A  0EAA               	movlw	170
   354  00098C  6E83               	movwf	3971,c	;volatile
   355                           
   356                           ;HW2.c: 110: PORTD = 0b01010101;
   357  00098E  0E55               	movlw	85
   358  000990  6E83               	movwf	3971,c	;volatile
   359                           
   360                           ;HW2.c: 111: PORTD = 0b10101010;
   361  000992  0EAA               	movlw	170
   362  000994  6E83               	movwf	3971,c	;volatile
   363                           
   364                           ;HW2.c: 112: PORTD = 0b01010101;
   365  000996  0E55               	movlw	85
   366  000998  6E83               	movwf	3971,c	;volatile
   367                           
   368                           ;HW2.c: 113: PORTD = 0b10101010;
   369  00099A  0EAA               	movlw	170
   370  00099C  6E83               	movwf	3971,c	;volatile
   371                           
   372                           ;HW2.c: 114: PORTD = 0b01010101;
   373  00099E  0E55               	movlw	85
   374  0009A0  6E83               	movwf	3971,c	;volatile
   375  0009A2  D7E4               	goto	l59
   376  0009A4                     __end_of_main:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           intcon	equ	0xFF2
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383 ;; *************** function _printf *****************
   384 ;; Defined at:
   385 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  f               2   46[COMRAM] PTR const unsigned char 
   388 ;;		 -> STR_1(7), 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  tmpval          4    0        struct .
   391 ;;  cp              3    0        PTR const unsigned char 
   392 ;;  val             2   55[COMRAM] unsigned int 
   393 ;;  ap              2   51[COMRAM] PTR void [1]
   394 ;;		 -> ?_printf(2), 
   395 ;;  len             2    0        unsigned int 
   396 ;;  c               1   57[COMRAM] char 
   397 ;;  prec            1   54[COMRAM] char 
   398 ;;  flag            1   53[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  2   46[COMRAM] int 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         4       0       0       0       0       0       0
   409 ;;      Locals:         7       0       0       0       0       0       0
   410 ;;      Temps:          1       0       0       0       0       0       0
   411 ;;      Totals:        12       0       0       0       0       0       0
   412 ;;Total ram usage:       12 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; Hardware stack levels required when called:    4
   415 ;; This function calls:
   416 ;;		___lwdiv
   417 ;;		___lwmod
   418 ;;		_putch
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425  000614                     __ptext1:
   426                           	opt stack 0
   427  000614                     _printf:
   428                           	opt stack 0
   429  000614  FFFF               	dw	65535	; assembler added errata NOP
   430                           
   431                           ;doprnt.c: 466: va_list ap;
   432                           ;doprnt.c: 499: signed char c;
   433                           ;doprnt.c: 506: signed char prec;
   434                           ;doprnt.c: 508: unsigned char flag;
   435                           ;doprnt.c: 523: union {
   436                           ;doprnt.c: 524: unsigned long vd;
   437                           ;doprnt.c: 525: double integ;
   438                           ;doprnt.c: 526: } tmpval;
   439                           ;doprnt.c: 528: unsigned int val;
   440                           ;doprnt.c: 529: unsigned len;
   441                           ;doprnt.c: 530: const char * cp;
   442                           ;doprnt.c: 533: *ap = __va_start();
   443                           
   444                           ;incstack = 0
   445  000616  0E31               	movlw	low (?_printf+2)
   446  000618  6E34               	movwf	printf@ap,c
   447  00061A  0E00               	movlw	high (?_printf+2)
   448  00061C  6E35               	movwf	printf@ap+1,c
   449                           
   450                           ;doprnt.c: 536: while(c = *f++) {
   451  00061E  D08B               	goto	u400
   452  000620  FFFF               	dw	65535	; assembler added errata NOP
   453                           
   454                           ;doprnt.c: 538: if(c != '%')
   455  000622  0E25               	movlw	37
   456  000624  183A               	xorwf	printf@c,w,c
   457  000626  B4D8               	btfsc	status,2,c
   458  000628  D004               	goto	l75
   459                           
   460                           ;doprnt.c: 540: {
   461                           ;doprnt.c: 541: (putch(c) );
   462  00062A  503A               	movf	printf@c,w,c
   463  00062C  ECDF  F004         	call	_putch
   464                           
   465                           ;doprnt.c: 542: continue;
   466  000630  D082               	goto	u400
   467  000632                     l75:
   468  000632  FFFF               	dw	65535	; assembler added errata NOP
   469                           
   470                           ;doprnt.c: 543: }
   471                           ;doprnt.c: 548: flag = 0;
   472  000634  0E00               	movlw	0
   473  000636  6E36               	movwf	printf@flag,c
   474                           
   475                           ;doprnt.c: 822: }
   476                           
   477                           ;doprnt.c: 813: continue;
   478                           
   479                           ;doprnt.c: 802: default:
   480                           
   481                           ;doprnt.c: 698: case 'i':
   482                           ;doprnt.c: 699: break;
   483                           
   484                           ;doprnt.c: 697: case 'd':
   485                           
   486                           ;doprnt.c: 638: goto alldone;
   487                           
   488                           ;doprnt.c: 637: case 0:
   489                           
   490                           ;doprnt.c: 635: switch(c = *f++) {
   491  000638  C02F  FFF6         	movff	printf@f,tblptrl
   492  00063C  C030  FFF7         	movff	printf@f+1,tblptrh
   493  000640  4A2F               	infsnz	printf@f,f,c
   494  000642  2A30               	incf	printf@f+1,f,c
   495  000644                     	if	0	;tblptru may be non-zero
   496  000644                     	endif
   497  000644                     	if	0	;tblptru may be non-zero
   498  000644                     	endif
   499  000644  0008               	tblrd		*
   500  000646  FFFF               	dw	65535	; errata NOP
   501  000648  CFF5 F03A          	movff	tablat,printf@c
   502  00064C  503A               	movf	printf@c,w,c
   503                           
   504                           ; Switch size 1, requested type "space"
   505                           ; Number of cases is 3, Range of values is 0 to 105
   506                           ; switch strategies available:
   507                           ; Name         Instructions Cycles
   508                           ; simple_byte           10     6 (average)
   509                           ;	Chosen strategy is simple_byte
   510  00064E  0A00               	xorlw	0	; case 0
   511  000650  B4D8               	btfsc	status,2,c
   512  000652  D07F               	goto	u410
   513  000654  0A64               	xorlw	100	; case 100
   514  000656  B4D8               	btfsc	status,2,c
   515  000658  D003               	goto	l81
   516  00065A  0A0D               	xorlw	13	; case 105
   517  00065C  A4D8               	btfss	status,2,c
   518  00065E  D06B               	goto	u400
   519  000660                     l81:
   520  000660  FFFF               	dw	65535	; assembler added errata NOP
   521                           
   522                           ;doprnt.c: 1253: {
   523                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   524  000662  C034  FFD9         	movff	printf@ap,fsr2l
   525  000666  C035  FFDA         	movff	printf@ap+1,fsr2h
   526  00066A  CFDE F038          	movff	postinc2,printf@val
   527  00066E  CFDD F039          	movff	postdec2,printf@val+1
   528  000672  0E02               	movlw	2
   529  000674  2634               	addwf	printf@ap,f,c
   530  000676  0E00               	movlw	0
   531  000678  2235               	addwfc	printf@ap+1,f,c
   532                           
   533                           ;doprnt.c: 1261: if((int)val < 0) {
   534  00067A  AE39               	btfss	printf@val+1,7,c
   535  00067C  D006               	goto	l83
   536                           
   537                           ;doprnt.c: 1262: flag |= 0x03;
   538  00067E  0E03               	movlw	3
   539  000680  1236               	iorwf	printf@flag,f,c
   540                           
   541                           ;doprnt.c: 1263: val = -val;
   542  000682  6C38               	negf	printf@val,c
   543  000684  1E39               	comf	printf@val+1,f,c
   544  000686  B0D8               	btfsc	status,0,c
   545  000688  2A39               	incf	printf@val+1,f,c
   546  00068A                     l83:
   547  00068A  FFFF               	dw	65535	; assembler added errata NOP
   548                           
   549                           ;doprnt.c: 1264: }
   550                           ;doprnt.c: 1266: }
   551                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   552  00068C  0E01               	movlw	1
   553  00068E  6E3A               	movwf	printf@c,c
   554  000690                     l1014:
   555  000690  FFFF               	dw	65535	; assembler added errata NOP
   556  000692  0E05               	movlw	5
   557  000694  183A               	xorwf	printf@c,w,c
   558  000696  B4D8               	btfsc	status,2,c
   559  000698  D014               	goto	u380
   560                           
   561                           ;doprnt.c: 1306: if(val < dpowers[c])
   562  00069A  503A               	movf	printf@c,w,c
   563  00069C  0D02               	mullw	2
   564  00069E  0E01               	movlw	low _dpowers
   565  0006A0  24F3               	addwf	prodl,w,c
   566  0006A2  6EF6               	movwf	tblptrl,c
   567  0006A4  0E06               	movlw	high _dpowers
   568  0006A6  20F4               	addwfc	prodh,w,c
   569  0006A8  6EF7               	movwf	tblptrh,c
   570  0006AA                     	if	0	;There are less than 3 active tblptr bytes
   571  0006AA                     	endif
   572  0006AA  0009               	tblrd		*+
   573  0006AC  FFFF               	dw	65535	; errata NOP
   574  0006AE  50F5               	movf	tablat,w,c
   575  0006B0  5C38               	subwf	printf@val,w,c
   576  0006B2  0009               	tblrd		*+
   577  0006B4  FFFF               	dw	65535	; errata NOP
   578  0006B6  50F5               	movf	tablat,w,c
   579  0006B8  5839               	subwfb	printf@val+1,w,c
   580  0006BA  A0D8               	btfss	status,0,c
   581  0006BC  D002               	goto	u380
   582                           
   583                           ;doprnt.c: 1307: break;
   584  0006BE  2A3A               	incf	printf@c,f,c
   585  0006C0  D7E7               	goto	l1014
   586  0006C2                     u380:
   587  0006C2  FFFF               	dw	65535	; assembler added errata NOP
   588                           
   589                           ;doprnt.c: 1422: {
   590                           ;doprnt.c: 1438: if(flag & 0x03)
   591  0006C4  C036  F033         	movff	printf@flag,??_printf
   592  0006C8  0E03               	movlw	3
   593  0006CA  1633               	andwf	??_printf,f,c
   594  0006CC  B4D8               	btfsc	status,2,c
   595  0006CE  D003               	goto	l87
   596                           
   597                           ;doprnt.c: 1439: (putch('-') );
   598  0006D0  0E2D               	movlw	45
   599  0006D2  ECDF  F004         	call	_putch
   600  0006D6                     l87:
   601  0006D6  FFFF               	dw	65535	; assembler added errata NOP
   602                           
   603                           ;doprnt.c: 1469: }
   604                           ;doprnt.c: 1472: prec = c;
   605  0006D8  C03A  F037         	movff	printf@c,printf@prec
   606                           
   607                           ;doprnt.c: 1474: while(prec--) {
   608  0006DC  D027               	goto	l88
   609  0006DE  FFFF               	dw	65535	; assembler added errata NOP
   610                           
   611                           ;doprnt.c: 1478: {
   612                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   613  0006E0  5037               	movf	printf@prec,w,c
   614  0006E2  0D02               	mullw	2
   615  0006E4  0E01               	movlw	low _dpowers
   616  0006E6  24F3               	addwf	prodl,w,c
   617  0006E8  6EF6               	movwf	tblptrl,c
   618  0006EA  0E06               	movlw	high _dpowers
   619  0006EC  20F4               	addwfc	prodh,w,c
   620  0006EE  6EF7               	movwf	tblptrh,c
   621  0006F0                     	if	0	;There are less than 3 active tblptr bytes
   622  0006F0                     	endif
   623  0006F0  0009               	tblrd		*+
   624  0006F2  FFFF               	dw	65535	; errata NOP
   625  0006F4  CFF5 F025          	movff	tablat,___lwdiv@divisor
   626  0006F8  000A               	tblrd		*-
   627  0006FA  FFFF               	dw	65535	; errata NOP
   628  0006FC  CFF5 F026          	movff	tablat,___lwdiv@divisor+1
   629  000700  C038  F023         	movff	printf@val,___lwdiv@dividend
   630  000704  C039  F024         	movff	printf@val+1,___lwdiv@dividend+1
   631  000708  EC54  F004         	call	___lwdiv	;wreg free
   632  00070C  C023  F02A         	movff	?___lwdiv,___lwmod@dividend
   633  000710  C024  F02B         	movff	?___lwdiv+1,___lwmod@dividend+1
   634  000714  0E00               	movlw	0
   635  000716  6E2D               	movwf	___lwmod@divisor+1,c
   636  000718  0E0A               	movlw	10
   637  00071A  6E2C               	movwf	___lwmod@divisor,c
   638  00071C  EC84  F004         	call	___lwmod	;wreg free
   639  000720  502A               	movf	?___lwmod,w,c
   640  000722  0F30               	addlw	48
   641  000724  6E3A               	movwf	printf@c,c
   642                           
   643                           ;doprnt.c: 1523: }
   644                           ;doprnt.c: 1524: (putch(c) );
   645  000726  503A               	movf	printf@c,w,c
   646  000728  ECDF  F004         	call	_putch
   647  00072C                     l88:
   648  00072C  FFFF               	dw	65535	; assembler added errata NOP
   649  00072E  0637               	decf	printf@prec,f,c
   650  000730  2837               	incf	printf@prec,w,c
   651  000732  A4D8               	btfss	status,2,c
   652  000734  D7D4               	goto	l89
   653  000736                     u400:
   654  000736  FFFF               	dw	65535	; assembler added errata NOP
   655  000738  C02F  FFF6         	movff	printf@f,tblptrl
   656  00073C  C030  FFF7         	movff	printf@f+1,tblptrh
   657  000740  4A2F               	infsnz	printf@f,f,c
   658  000742  2A30               	incf	printf@f+1,f,c
   659  000744                     	if	0	;tblptru may be non-zero
   660  000744                     	endif
   661  000744                     	if	0	;tblptru may be non-zero
   662  000744                     	endif
   663  000744  0008               	tblrd		*
   664  000746  FFFF               	dw	65535	; errata NOP
   665  000748  CFF5 F03A          	movff	tablat,printf@c
   666  00074C  503A               	movf	printf@c,w,c
   667  00074E  A4D8               	btfss	status,2,c
   668  000750  D767               	goto	l74
   669  000752                     u410:
   670  000752  FFFF               	dw	65535	; assembler added errata NOP
   671                           
   672                           ;doprnt.c: 1540: return 0;
   673                           ;	Return value of _printf is never used
   674                           
   675                           ;doprnt.c: 1525: }
   676                           ;doprnt.c: 1533: }
   677                           ;doprnt.c: 1535: alldone:
   678  000754  0012               	return		;funcret
   679  000756  FFFF               	dw	65535	; errata NOP
   680  000758                     __end_of_printf:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           prodh	equ	0xFF4
   687                           prodl	equ	0xFF3
   688                           intcon	equ	0xFF2
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           postinc2	equ	0xFDE
   692                           postdec2	equ	0xFDD
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _putch *****************
   698 ;; Defined at:
   699 ;;		line 44 in file "HW2.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  data            1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  data            1   34[COMRAM] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   713 ;;      Params:         0       0       0       0       0       0       0
   714 ;;      Locals:         1       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0
   716 ;;      Totals:         1       0       0       0       0       0       0
   717 ;;Total ram usage:        1 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_printf
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text2
   728  0009BE                     __ptext2:
   729                           	opt stack 0
   730  0009BE                     _putch:
   731                           	opt stack 0
   732  0009BE  FFFF               	dw	65535	; assembler added errata NOP
   733                           
   734                           ;incstack = 0
   735                           ;putch@data stored from wreg
   736  0009C0  6E23               	movwf	putch@data,c
   737  0009C2  FFFF               	dw	65535	; assembler added errata NOP
   738                           
   739                           ;HW2.c: 47: continue;
   740                           
   741                           ;HW2.c: 46: while(!PIR1bits.TXIF)
   742  0009C4  A89E               	btfss	3998,4,c	;volatile
   743  0009C6  D7FD               	goto	l714
   744                           
   745                           ;HW2.c: 49: TXREG = data;
   746  0009C8  C023  FFAD         	movff	putch@data,4013	;volatile
   747  0009CC  0012               	return		;funcret
   748  0009CE  FFFF               	dw	65535	; errata NOP
   749  0009D0                     __end_of_putch:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           prodh	equ	0xFF4
   756                           prodl	equ	0xFF3
   757                           intcon	equ	0xFF2
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postinc2	equ	0xFDE
   761                           postdec2	equ	0xFDD
   762                           fsr2h	equ	0xFDA
   763                           fsr2l	equ	0xFD9
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function ___lwmod *****************
   767 ;; Defined at:
   768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  dividend        2   41[COMRAM] unsigned int 
   771 ;;  divisor         2   43[COMRAM] unsigned int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  counter         1   45[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  2   41[COMRAM] unsigned int 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         4       0       0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0
   786 ;;      Totals:         5       0       0       0       0       0       0
   787 ;;Total ram usage:        5 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_printf
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text3
   798  000908                     __ptext3:
   799                           	opt stack 0
   800  000908                     ___lwmod:
   801                           	opt stack 0
   802  000908  FFFF               	dw	65535	; assembler added errata NOP
   803                           
   804                           ;incstack = 0
   805  00090A  502C               	movf	___lwmod@divisor,w,c
   806  00090C  102D               	iorwf	___lwmod@divisor+1,w,c
   807  00090E  B4D8               	btfsc	status,2,c
   808  000910  D01C               	goto	l511
   809  000912  0E01               	movlw	1
   810  000914  6E2E               	movwf	___lwmod@counter,c
   811  000916  D005               	goto	l506
   812  000918  FFFF               	dw	65535	; assembler added errata NOP
   813  00091A  90D8               	bcf	status,0,c
   814  00091C  362C               	rlcf	___lwmod@divisor,f,c
   815  00091E  362D               	rlcf	___lwmod@divisor+1,f,c
   816  000920  2A2E               	incf	___lwmod@counter,f,c
   817  000922                     l506:
   818  000922  FFFF               	dw	65535	; assembler added errata NOP
   819  000924  AE2D               	btfss	___lwmod@divisor+1,7,c
   820  000926  D7F8               	goto	l507
   821  000928                     u320:
   822  000928  FFFF               	dw	65535	; assembler added errata NOP
   823  00092A  502C               	movf	___lwmod@divisor,w,c
   824  00092C  5C2A               	subwf	___lwmod@dividend,w,c
   825  00092E  502D               	movf	___lwmod@divisor+1,w,c
   826  000930  582B               	subwfb	___lwmod@dividend+1,w,c
   827  000932  A0D8               	btfss	status,0,c
   828  000934  D004               	goto	l510
   829  000936  502C               	movf	___lwmod@divisor,w,c
   830  000938  5E2A               	subwf	___lwmod@dividend,f,c
   831  00093A  502D               	movf	___lwmod@divisor+1,w,c
   832  00093C  5A2B               	subwfb	___lwmod@dividend+1,f,c
   833  00093E                     l510:
   834  00093E  FFFF               	dw	65535	; assembler added errata NOP
   835  000940  90D8               	bcf	status,0,c
   836  000942  322D               	rrcf	___lwmod@divisor+1,f,c
   837  000944  322C               	rrcf	___lwmod@divisor,f,c
   838  000946  2E2E               	decfsz	___lwmod@counter,f,c
   839  000948  D7EF               	goto	u320
   840  00094A                     l511:
   841  00094A  FFFF               	dw	65535	; assembler added errata NOP
   842  00094C  C02A  F02A         	movff	___lwmod@dividend,?___lwmod
   843  000950  C02B  F02B         	movff	___lwmod@dividend+1,?___lwmod+1
   844  000954  0012               	return		;funcret
   845  000956  FFFF               	dw	65535	; errata NOP
   846  000958                     __end_of___lwmod:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           prodh	equ	0xFF4
   853                           prodl	equ	0xFF3
   854                           intcon	equ	0xFF2
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postinc2	equ	0xFDE
   858                           postdec2	equ	0xFDD
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           status	equ	0xFD8
   862                           
   863 ;; *************** function ___lwdiv *****************
   864 ;; Defined at:
   865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  dividend        2   34[COMRAM] unsigned int 
   868 ;;  divisor         2   36[COMRAM] unsigned int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  quotient        2   38[COMRAM] unsigned int 
   871 ;;  counter         1   40[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2   34[COMRAM] unsigned int 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         4       0       0       0       0       0       0
   882 ;;      Locals:         3       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0
   884 ;;      Totals:         7       0       0       0       0       0       0
   885 ;;Total ram usage:        7 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    3
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_printf
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text4
   896  0008A8                     __ptext4:
   897                           	opt stack 0
   898  0008A8                     ___lwdiv:
   899                           	opt stack 0
   900  0008A8  FFFF               	dw	65535	; assembler added errata NOP
   901                           
   902                           ;incstack = 0
   903  0008AA  0E00               	movlw	0
   904  0008AC  6E28               	movwf	___lwdiv@quotient+1,c
   905  0008AE  0E00               	movlw	0
   906  0008B0  6E27               	movwf	___lwdiv@quotient,c
   907  0008B2  5025               	movf	___lwdiv@divisor,w,c
   908  0008B4  1026               	iorwf	___lwdiv@divisor+1,w,c
   909  0008B6  B4D8               	btfsc	status,2,c
   910  0008B8  D020               	goto	l501
   911  0008BA  0E01               	movlw	1
   912  0008BC  6E29               	movwf	___lwdiv@counter,c
   913  0008BE  D005               	goto	l496
   914  0008C0  FFFF               	dw	65535	; assembler added errata NOP
   915  0008C2  90D8               	bcf	status,0,c
   916  0008C4  3625               	rlcf	___lwdiv@divisor,f,c
   917  0008C6  3626               	rlcf	___lwdiv@divisor+1,f,c
   918  0008C8  2A29               	incf	___lwdiv@counter,f,c
   919  0008CA                     l496:
   920  0008CA  FFFF               	dw	65535	; assembler added errata NOP
   921  0008CC  AE26               	btfss	___lwdiv@divisor+1,7,c
   922  0008CE  D7F8               	goto	l497
   923  0008D0                     u290:
   924  0008D0  FFFF               	dw	65535	; assembler added errata NOP
   925  0008D2  90D8               	bcf	status,0,c
   926  0008D4  3627               	rlcf	___lwdiv@quotient,f,c
   927  0008D6  3628               	rlcf	___lwdiv@quotient+1,f,c
   928  0008D8  5025               	movf	___lwdiv@divisor,w,c
   929  0008DA  5C23               	subwf	___lwdiv@dividend,w,c
   930  0008DC  5026               	movf	___lwdiv@divisor+1,w,c
   931  0008DE  5824               	subwfb	___lwdiv@dividend+1,w,c
   932  0008E0  A0D8               	btfss	status,0,c
   933  0008E2  D005               	goto	l500
   934  0008E4  5025               	movf	___lwdiv@divisor,w,c
   935  0008E6  5E23               	subwf	___lwdiv@dividend,f,c
   936  0008E8  5026               	movf	___lwdiv@divisor+1,w,c
   937  0008EA  5A24               	subwfb	___lwdiv@dividend+1,f,c
   938  0008EC  8027               	bsf	___lwdiv@quotient,0,c
   939  0008EE                     l500:
   940  0008EE  FFFF               	dw	65535	; assembler added errata NOP
   941  0008F0  90D8               	bcf	status,0,c
   942  0008F2  3226               	rrcf	___lwdiv@divisor+1,f,c
   943  0008F4  3225               	rrcf	___lwdiv@divisor,f,c
   944  0008F6  2E29               	decfsz	___lwdiv@counter,f,c
   945  0008F8  D7EB               	goto	u290
   946  0008FA                     l501:
   947  0008FA  FFFF               	dw	65535	; assembler added errata NOP
   948  0008FC  C027  F023         	movff	___lwdiv@quotient,?___lwdiv
   949  000900  C028  F024         	movff	___lwdiv@quotient+1,?___lwdiv+1
   950  000904  0012               	return		;funcret
   951  000906  FFFF               	dw	65535	; errata NOP
   952  000908                     __end_of___lwdiv:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           intcon	equ	0xFF2
   961                           postinc0	equ	0xFEE
   962                           wreg	equ	0xFE8
   963                           postinc2	equ	0xFDE
   964                           postdec2	equ	0xFDD
   965                           fsr2h	equ	0xFDA
   966                           fsr2l	equ	0xFD9
   967                           status	equ	0xFD8
   968                           
   969 ;; *************** function _capture *****************
   970 ;; Defined at:
   971 ;;		line 52 in file "HW2.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0       0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0
   987 ;;      Temps:         18       0       0       0       0       0       0
   988 ;;      Totals:        18       0       0       0       0       0       0
   989 ;;Total ram usage:       18 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    2
   992 ;; This function calls:
   993 ;;		_timer1
   994 ;; This function is called by:
   995 ;;		Interrupt level 2
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	intcode
  1000  000008                     __pintcode:
  1001                           	opt stack 0
  1002  000008                     _capture:
  1003                           	opt stack 0
  1004  000008  FFFF               	dw	65535	; assembler added errata NOP
  1005                           
  1006                           ;incstack = 0
  1007  00000A  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1008  00000C  CFFA F011          	movff	pclath,??_capture
  1009  000010  CFFB F012          	movff	pclatu,??_capture+1
  1010  000014  CFE9 F013          	movff	fsr0l,??_capture+2
  1011  000018  CFEA F014          	movff	fsr0h,??_capture+3
  1012  00001C  CFE1 F015          	movff	fsr1l,??_capture+4
  1013  000020  CFE2 F016          	movff	fsr1h,??_capture+5
  1014  000024  CFD9 F017          	movff	fsr2l,??_capture+6
  1015  000028  CFDA F018          	movff	fsr2h,??_capture+7
  1016  00002C  CFF3 F019          	movff	prodl,??_capture+8
  1017  000030  CFF4 F01A          	movff	prodh,??_capture+9
  1018  000034  CFF6 F01B          	movff	tblptrl,??_capture+10
  1019  000038  CFF7 F01C          	movff	tblptrh,??_capture+11
  1020  00003C  CFF8 F01D          	movff	tblptru,??_capture+12
  1021  000040  CFF5 F01E          	movff	tablat,??_capture+13
  1022  000044  C047  F01F         	movff	btemp,??_capture+14
  1023  000048  C048  F020         	movff	btemp+1,??_capture+15
  1024  00004C  C049  F021         	movff	btemp+2,??_capture+16
  1025  000050  C04A  F022         	movff	btemp+3,??_capture+17
  1026                           
  1027                           ;HW2.c: 56: timer1();
  1028  000054  EC1C  F004         	call	_timer1	;wreg free
  1029                           
  1030                           ;HW2.c: 59: PIR1bits.CCP1IF = 0;
  1031  000058  949E               	bcf	3998,2,c	;volatile
  1032  00005A  C022  F04A         	movff	??_capture+17,btemp+3
  1033  00005E  C021  F049         	movff	??_capture+16,btemp+2
  1034  000062  C020  F048         	movff	??_capture+15,btemp+1
  1035  000066  C01F  F047         	movff	??_capture+14,btemp
  1036  00006A  C01E  FFF5         	movff	??_capture+13,tablat
  1037  00006E  C01D  FFF8         	movff	??_capture+12,tblptru
  1038  000072  C01C  FFF7         	movff	??_capture+11,tblptrh
  1039  000076  C01B  FFF6         	movff	??_capture+10,tblptrl
  1040  00007A  C01A  FFF4         	movff	??_capture+9,prodh
  1041  00007E  C019  FFF3         	movff	??_capture+8,prodl
  1042  000082  C018  FFDA         	movff	??_capture+7,fsr2h
  1043  000086  C017  FFD9         	movff	??_capture+6,fsr2l
  1044  00008A  C016  FFE2         	movff	??_capture+5,fsr1h
  1045  00008E  C015  FFE1         	movff	??_capture+4,fsr1l
  1046  000092  C014  FFEA         	movff	??_capture+3,fsr0h
  1047  000096  C013  FFE9         	movff	??_capture+2,fsr0l
  1048  00009A  C012  FFFB         	movff	??_capture+1,pclatu
  1049  00009E  C011  FFFA         	movff	??_capture,pclath
  1050  0000A2  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1051  0000A4  0011               	retfie		f
  1052  0000A6  FFFF               	dw	65535	; errata NOP
  1053  0000A8                     __end_of_capture:
  1054                           	opt stack 0
  1055                           pclatu	equ	0xFFB
  1056                           pclath	equ	0xFFA
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           prodh	equ	0xFF4
  1062                           prodl	equ	0xFF3
  1063                           intcon	equ	0xFF2
  1064                           postinc0	equ	0xFEE
  1065                           fsr0h	equ	0xFEA
  1066                           fsr0l	equ	0xFE9
  1067                           wreg	equ	0xFE8
  1068                           fsr1h	equ	0xFE2
  1069                           fsr1l	equ	0xFE1
  1070                           postinc2	equ	0xFDE
  1071                           postdec2	equ	0xFDD
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _timer1 *****************
  1077 ;; Defined at:
  1078 ;;		line 64 in file "HW2.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1092 ;;      Params:         0       0       0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0
  1094 ;;      Temps:          2       0       0       0       0       0       0
  1095 ;;      Totals:         2       0       0       0       0       0       0
  1096 ;;Total ram usage:        2 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    1
  1099 ;; This function calls:
  1100 ;;		___aldiv
  1101 ;; This function is called by:
  1102 ;;		_capture
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text6
  1107  000838                     __ptext6:
  1108                           	opt stack 0
  1109  000838                     _timer1:
  1110                           	opt stack 0
  1111  000838  FFFF               	dw	65535	; assembler added errata NOP
  1112                           
  1113                           ;HW2.c: 67: high = CCPR1H << 8;
  1114                           
  1115                           ;incstack = 0
  1116  00083A  50BF               	movf	4031,w,c	;volatile
  1117  00083C  6E44               	movwf	_high+1,c
  1118  00083E  6A43               	clrf	_high,c
  1119                           
  1120                           ;HW2.c: 68: low = CCPR1L;
  1121  000840  CFBE F041          	movff	4030,_low	;volatile
  1122  000844  6A42               	clrf	_low+1,c
  1123                           
  1124                           ;HW2.c: 70: current = high + low;
  1125  000846  5041               	movf	_low,w,c
  1126  000848  2443               	addwf	_high,w,c
  1127  00084A  6E3F               	movwf	_current,c
  1128  00084C  5042               	movf	_low+1,w,c
  1129  00084E  2044               	addwfc	_high+1,w,c
  1130  000850  6E40               	movwf	_current+1,c
  1131                           
  1132                           ;HW2.c: 71: dif = current - prev;
  1133  000852  C03D  F00F         	movff	_prev,??_timer1
  1134  000856  C03E  F010         	movff	_prev+1,??_timer1+1
  1135  00085A  1E0F               	comf	??_timer1,f,c
  1136  00085C  1E10               	comf	??_timer1+1,f,c
  1137  00085E  4A0F               	infsnz	??_timer1,f,c
  1138  000860  2A10               	incf	??_timer1+1,f,c
  1139  000862  503F               	movf	_current,w,c
  1140  000864  240F               	addwf	??_timer1,w,c
  1141  000866  6E45               	movwf	_dif,c
  1142  000868  5040               	movf	_current+1,w,c
  1143  00086A  2010               	addwfc	??_timer1+1,w,c
  1144  00086C  6E46               	movwf	_dif+1,c
  1145                           
  1146                           ;HW2.c: 72: prev = current;
  1147  00086E  C03F  F03D         	movff	_current,_prev
  1148  000872  C040  F03E         	movff	_current+1,_prev+1
  1149                           
  1150                           ;HW2.c: 74: freq = 1000000/dif;
  1151  000876  0E40               	movlw	64
  1152  000878  6E01               	movwf	___aldiv@dividend,c
  1153  00087A  0E42               	movlw	66
  1154  00087C  6E02               	movwf	___aldiv@dividend+1,c
  1155  00087E  0E0F               	movlw	15
  1156  000880  6E03               	movwf	___aldiv@dividend+2,c
  1157  000882  0E00               	movlw	0
  1158  000884  6E04               	movwf	___aldiv@dividend+3,c
  1159  000886  C045  F005         	movff	_dif,___aldiv@divisor
  1160  00088A  C046  F006         	movff	_dif+1,___aldiv@divisor+1
  1161  00088E  0E00               	movlw	0
  1162  000890  BE06               	btfsc	___aldiv@divisor+1,7,c
  1163  000892  0EFF               	movlw	-1
  1164  000894  6E07               	movwf	___aldiv@divisor+2,c
  1165  000896  6E08               	movwf	___aldiv@divisor+3,c
  1166  000898  ECAC  F003         	call	___aldiv	;wreg free
  1167  00089C  C001  F03B         	movff	?___aldiv,_freq
  1168  0008A0  C002  F03C         	movff	?___aldiv+1,_freq+1
  1169  0008A4  0012               	return		;funcret
  1170  0008A6  FFFF               	dw	65535	; errata NOP
  1171  0008A8                     __end_of_timer1:
  1172                           	opt stack 0
  1173                           pclatu	equ	0xFFB
  1174                           pclath	equ	0xFFA
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodh	equ	0xFF4
  1180                           prodl	equ	0xFF3
  1181                           intcon	equ	0xFF2
  1182                           postinc0	equ	0xFEE
  1183                           fsr0h	equ	0xFEA
  1184                           fsr0l	equ	0xFE9
  1185                           wreg	equ	0xFE8
  1186                           fsr1h	equ	0xFE2
  1187                           fsr1l	equ	0xFE1
  1188                           postinc2	equ	0xFDE
  1189                           postdec2	equ	0xFDD
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function ___aldiv *****************
  1195 ;; Defined at:
  1196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  dividend        4    0[COMRAM] long 
  1199 ;;  divisor         4    4[COMRAM] long 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  quotient        4   10[COMRAM] long 
  1202 ;;  sign            1    9[COMRAM] unsigned char 
  1203 ;;  counter         1    8[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  4    0[COMRAM] long 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         8       0       0       0       0       0       0
  1214 ;;      Locals:         6       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:        14       0       0       0       0       0       0
  1217 ;;Total ram usage:       14 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_timer1
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text7
  1227  000758                     __ptext7:
  1228                           	opt stack 0
  1229  000758                     ___aldiv:
  1230                           	opt stack 0
  1231  000758  FFFF               	dw	65535	; assembler added errata NOP
  1232                           
  1233                           ;incstack = 0
  1234  00075A  0E00               	movlw	0
  1235  00075C  6E0A               	movwf	___aldiv@sign,c
  1236  00075E  AE08               	btfss	___aldiv@divisor+3,7,c
  1237  000760  D00A               	goto	i2l148
  1238  000762  1E08               	comf	___aldiv@divisor+3,f,c
  1239  000764  1E07               	comf	___aldiv@divisor+2,f,c
  1240  000766  1E06               	comf	___aldiv@divisor+1,f,c
  1241  000768  6C05               	negf	___aldiv@divisor,c
  1242  00076A  0E00               	movlw	0
  1243  00076C  2206               	addwfc	___aldiv@divisor+1,f,c
  1244  00076E  2207               	addwfc	___aldiv@divisor+2,f,c
  1245  000770  2208               	addwfc	___aldiv@divisor+3,f,c
  1246  000772  0E01               	movlw	1
  1247  000774  6E0A               	movwf	___aldiv@sign,c
  1248  000776                     i2l148:
  1249  000776  FFFF               	dw	65535	; assembler added errata NOP
  1250  000778  AE04               	btfss	___aldiv@dividend+3,7,c
  1251  00077A  D00A               	goto	i2l149
  1252  00077C  1E04               	comf	___aldiv@dividend+3,f,c
  1253  00077E  1E03               	comf	___aldiv@dividend+2,f,c
  1254  000780  1E02               	comf	___aldiv@dividend+1,f,c
  1255  000782  6C01               	negf	___aldiv@dividend,c
  1256  000784  0E00               	movlw	0
  1257  000786  2202               	addwfc	___aldiv@dividend+1,f,c
  1258  000788  2203               	addwfc	___aldiv@dividend+2,f,c
  1259  00078A  2204               	addwfc	___aldiv@dividend+3,f,c
  1260  00078C  0E01               	movlw	1
  1261  00078E  1A0A               	xorwf	___aldiv@sign,f,c
  1262  000790                     i2l149:
  1263  000790  FFFF               	dw	65535	; assembler added errata NOP
  1264  000792  0E00               	movlw	0
  1265  000794  6E0B               	movwf	___aldiv@quotient,c
  1266  000796  0E00               	movlw	0
  1267  000798  6E0C               	movwf	___aldiv@quotient+1,c
  1268  00079A  0E00               	movlw	0
  1269  00079C  6E0D               	movwf	___aldiv@quotient+2,c
  1270  00079E  0E00               	movlw	0
  1271  0007A0  6E0E               	movwf	___aldiv@quotient+3,c
  1272  0007A2  5005               	movf	___aldiv@divisor,w,c
  1273  0007A4  1006               	iorwf	___aldiv@divisor+1,w,c
  1274  0007A6  1007               	iorwf	___aldiv@divisor+2,w,c
  1275  0007A8  1008               	iorwf	___aldiv@divisor+3,w,c
  1276  0007AA  B4D8               	btfsc	status,2,c
  1277  0007AC  D02E               	goto	i2l156
  1278  0007AE  0E01               	movlw	1
  1279  0007B0  6E09               	movwf	___aldiv@counter,c
  1280  0007B2  D007               	goto	i2l151
  1281  0007B4  FFFF               	dw	65535	; assembler added errata NOP
  1282  0007B6  90D8               	bcf	status,0,c
  1283  0007B8  3605               	rlcf	___aldiv@divisor,f,c
  1284  0007BA  3606               	rlcf	___aldiv@divisor+1,f,c
  1285  0007BC  3607               	rlcf	___aldiv@divisor+2,f,c
  1286  0007BE  3608               	rlcf	___aldiv@divisor+3,f,c
  1287  0007C0  2A09               	incf	___aldiv@counter,f,c
  1288  0007C2                     i2l151:
  1289  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  1290  0007C4  AE08               	btfss	___aldiv@divisor+3,7,c
  1291  0007C6  D7F6               	goto	i2l152
  1292  0007C8                     i2u25_40:
  1293  0007C8  FFFF               	dw	65535	; assembler added errata NOP
  1294  0007CA  90D8               	bcf	status,0,c
  1295  0007CC  360B               	rlcf	___aldiv@quotient,f,c
  1296  0007CE  360C               	rlcf	___aldiv@quotient+1,f,c
  1297  0007D0  360D               	rlcf	___aldiv@quotient+2,f,c
  1298  0007D2  360E               	rlcf	___aldiv@quotient+3,f,c
  1299  0007D4  5005               	movf	___aldiv@divisor,w,c
  1300  0007D6  5C01               	subwf	___aldiv@dividend,w,c
  1301  0007D8  5006               	movf	___aldiv@divisor+1,w,c
  1302  0007DA  5802               	subwfb	___aldiv@dividend+1,w,c
  1303  0007DC  5007               	movf	___aldiv@divisor+2,w,c
  1304  0007DE  5803               	subwfb	___aldiv@dividend+2,w,c
  1305  0007E0  5008               	movf	___aldiv@divisor+3,w,c
  1306  0007E2  5804               	subwfb	___aldiv@dividend+3,w,c
  1307  0007E4  A0D8               	btfss	status,0,c
  1308  0007E6  D009               	goto	i2l155
  1309  0007E8  5005               	movf	___aldiv@divisor,w,c
  1310  0007EA  5E01               	subwf	___aldiv@dividend,f,c
  1311  0007EC  5006               	movf	___aldiv@divisor+1,w,c
  1312  0007EE  5A02               	subwfb	___aldiv@dividend+1,f,c
  1313  0007F0  5007               	movf	___aldiv@divisor+2,w,c
  1314  0007F2  5A03               	subwfb	___aldiv@dividend+2,f,c
  1315  0007F4  5008               	movf	___aldiv@divisor+3,w,c
  1316  0007F6  5A04               	subwfb	___aldiv@dividend+3,f,c
  1317  0007F8  800B               	bsf	___aldiv@quotient,0,c
  1318  0007FA                     i2l155:
  1319  0007FA  FFFF               	dw	65535	; assembler added errata NOP
  1320  0007FC  90D8               	bcf	status,0,c
  1321  0007FE  3208               	rrcf	___aldiv@divisor+3,f,c
  1322  000800  3207               	rrcf	___aldiv@divisor+2,f,c
  1323  000802  3206               	rrcf	___aldiv@divisor+1,f,c
  1324  000804  3205               	rrcf	___aldiv@divisor,f,c
  1325  000806  2E09               	decfsz	___aldiv@counter,f,c
  1326  000808  D7DF               	goto	i2u25_40
  1327  00080A                     i2l156:
  1328  00080A  FFFF               	dw	65535	; assembler added errata NOP
  1329  00080C  500A               	movf	___aldiv@sign,w,c
  1330  00080E  B4D8               	btfsc	status,2,c
  1331  000810  D008               	goto	i2l157
  1332  000812  1E0E               	comf	___aldiv@quotient+3,f,c
  1333  000814  1E0D               	comf	___aldiv@quotient+2,f,c
  1334  000816  1E0C               	comf	___aldiv@quotient+1,f,c
  1335  000818  6C0B               	negf	___aldiv@quotient,c
  1336  00081A  0E00               	movlw	0
  1337  00081C  220C               	addwfc	___aldiv@quotient+1,f,c
  1338  00081E  220D               	addwfc	___aldiv@quotient+2,f,c
  1339  000820  220E               	addwfc	___aldiv@quotient+3,f,c
  1340  000822                     i2l157:
  1341  000822  FFFF               	dw	65535	; assembler added errata NOP
  1342  000824  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1343  000828  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1344  00082C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1345  000830  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1346  000834  0012               	return		;funcret
  1347  000836  FFFF               	dw	65535	; errata NOP
  1348  000838                     __end_of___aldiv:
  1349                           	opt stack 0
  1350                           pclatu	equ	0xFFB
  1351                           pclath	equ	0xFFA
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           prodh	equ	0xFF4
  1357                           prodl	equ	0xFF3
  1358                           intcon	equ	0xFF2
  1359                           postinc0	equ	0xFEE
  1360                           fsr0h	equ	0xFEA
  1361                           fsr0l	equ	0xFE9
  1362                           wreg	equ	0xFE8
  1363                           fsr1h	equ	0xFE2
  1364                           fsr1l	equ	0xFE1
  1365                           postinc2	equ	0xFDE
  1366                           postdec2	equ	0xFDD
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8
  1370                           pclatu	equ	0xFFB
  1371                           pclath	equ	0xFFA
  1372                           tblptru	equ	0xFF8
  1373                           tblptrh	equ	0xFF7
  1374                           tblptrl	equ	0xFF6
  1375                           tablat	equ	0xFF5
  1376                           prodh	equ	0xFF4
  1377                           prodl	equ	0xFF3
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           fsr0h	equ	0xFEA
  1381                           fsr0l	equ	0xFE9
  1382                           wreg	equ	0xFE8
  1383                           fsr1h	equ	0xFE2
  1384                           fsr1l	equ	0xFE1
  1385                           postinc2	equ	0xFDE
  1386                           postdec2	equ	0xFDD
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391                           	psect	rparam
  1392  0000                     pclatu	equ	0xFFB
  1393                           pclath	equ	0xFFA
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           prodh	equ	0xFF4
  1399                           prodl	equ	0xFF3
  1400                           intcon	equ	0xFF2
  1401                           postinc0	equ	0xFEE
  1402                           fsr0h	equ	0xFEA
  1403                           fsr0l	equ	0xFE9
  1404                           wreg	equ	0xFE8
  1405                           fsr1h	equ	0xFE2
  1406                           fsr1l	equ	0xFE1
  1407                           postinc2	equ	0xFDE
  1408                           postdec2	equ	0xFDD
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413                           	psect	temp
  1414  000047                     btemp:
  1415                           	opt stack 0
  1416  000047                     	ds	1
  1417  0000                     int$flags	set	btemp
  1418  0000                     wtemp6	set	btemp+1
  1419                           pclatu	equ	0xFFB
  1420                           pclath	equ	0xFFA
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           intcon	equ	0xFF2
  1428                           postinc0	equ	0xFEE
  1429                           fsr0h	equ	0xFEA
  1430                           fsr0l	equ	0xFE9
  1431                           wreg	equ	0xFE8
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           postinc2	equ	0xFDE
  1435                           postdec2	equ	0xFDD
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     58      70
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _capture in COMRAM

    _capture->_timer1
    _timer1->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _capture in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _capture in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _capture in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _capture in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _capture in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _capture in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1102
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1102
                                             46 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             41 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _capture                                             18    18      0     452
                                             16 COMRAM    18    18      0
                             _timer1
 ---------------------------------------------------------------------------------
 (4) _timer1                                               2     2      0     452
                                             14 COMRAM     2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _capture (ROOT)
   _timer1
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3A      46       1       55.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      15        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 10 16:35:43 2018

                                              l81 0660                                                l74 0620  
                                              l83 068A                                                l75 0632  
                                              l59 096C                                                l87 06D6  
                                              l88 072C                                                l89 06DE  
                                     __CFG_OSC$HS 000000                                               l500 08EE  
                                             l501 08FA                                               l510 093E  
                                             l511 094A                                               l506 0922  
                                             l507 0918                                               l714 09C2  
                                             l496 08CA                                               l497 08C0  
                                             u320 0928                                               u400 0736  
                                             u410 0752                                               u290 08D0  
                                             u380 06C2                                      __CFG_BOR$OFF 000000  
                                             _dif 0045                                               _low 0041  
                                    __CFG_BORV$20 000000                                               wreg 000FE8  
                                    __CFG_LVP$OFF 000000                                      __CFG_WDT$OFF 000000  
                                            l1014 0690                                              STR_1 060B  
                                            _high 0043                                              _main 0958  
                                            _freq 003B                                              _prev 003D  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 0047                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A8  
                                    ___param_bank 000000                                     __CFG_OSCS$OFF 000000  
                                 __end_of___aldiv 0838                                             ?_main 0001  
                                 __end_of___lwdiv 0908                                   __end_of___lwmod 0958  
                                           i2l151 07C2                                             i2l152 07B4  
                                           i2l155 07FA                                             i2l156 080A  
                                           i2l148 0776                                             i2l157 0822  
                                           i2l149 0790                                             _PORTD 000F83  
                                           _TRISC 000F94                                             _TXREG 000FAD  
                                   __CFG_PWRT$OFF 000000                                   __end_of_capture 00A8  
                                   __CFG_STVR$OFF 000000                                   __end_of_dpowers 060B  
                                           _putch 09BE                                             pclath 000FFA  
                                           tablat 000FF5                                             status 000FD8  
                                           wtemp6 0048                                   __initialization 09A4  
                                    __end_of_main 09A4                                            ??_main 003B  
                                   __activetblptr 000002                                   __CFG_CCP2MUX$ON 000000  
                                          _CCPR1H 000FBF                                            _CCPR1L 000FBE  
                                          ?_putch 0001                                    __CFG_WDTPS$128 000000  
                                       ??___aldiv 0009                                         ??___lwdiv 0027  
                                       ??___lwmod 002E                                            clear_0 09AA  
                                       ??_capture 0011                                            _timer1 0838  
                                          _printf 0614                                      __mediumconst 0000  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                                        __accesstop 0080  
                         __end_of__initialization 09B0                                     ___rparam_used 000001  
                                  __pcstackCOMRAM 0001                                     __end_of_putch 09D0  
                                         ??_putch 0023                                           _CCP1CON 000FBD  
                                         ?_timer1 0001                                           ?_printf 002F  
                                         i2u25_40 07C8                                           __Hparam 0000  
                                         __Lparam 0000                                           ___aldiv 0758  
                                         ___lwdiv 08A8                                           ___lwmod 0908  
                                    __psmallconst 0600                                           __pcinit 09A4  
                                         __ramtop 0600                                           _capture 0008  
                                         __ptext0 0958                                           __ptext1 0614  
                                         __ptext2 09BE                                           __ptext3 0908  
                                         __ptext4 08A8                                           __ptext6 0838  
                                         __ptext7 0758                                   __size_of_timer1 0070  
                                 __size_of_printf 0144                                         _T1CONbits 000FCD  
                                         _dpowers 0601                                           _current 003F  
                                ___aldiv@dividend 0001                              end_of_initialization 09B0  
                                   __Lmediumconst 0000                                         _RCSTAbits 000FAB  
                                         printf@c 003A                                           printf@f 002F  
                                ___aldiv@quotient 000B                                           postdec2 000FDD  
                                         postinc0 000FEE                                           postinc2 000FDE  
                                       _TXSTAbits 000FAC                                    __end_of_timer1 08A8  
                                  __end_of_printf 0758                               start_initialization 09A4  
                                        ??_timer1 000F                                          ??_printf 0033  
                                     __pbssCOMRAM 003B                                  ___lwdiv@dividend 0023  
                                       __pintcode 0008                                          ?___aldiv 0001  
                                        ?___lwdiv 0023                                          ?___lwmod 002A  
                                        ?_capture 0001                                       __smallconst 0600  
                                ___lwdiv@quotient 0027                                    __size_of_putch 0012  
                                 ___aldiv@divisor 0005                                   ___aldiv@counter 0009  
                                        _PIE1bits 000F9D                                          _PIR1bits 000F9E  
                                      printf@flag 0036                                        printf@prec 0037  
                                        __Hrparam 0000                                          __Lrparam 0000  
                                __size_of___aldiv 00E0                                  __size_of___lwdiv 0060  
                                __size_of___lwmod 0050                                  __size_of_capture 00A0  
                                 ___lwdiv@divisor 0025                                   ___lwdiv@counter 0029  
                                   __size_of_main 004C                                          int$flags 0047  
                                       printf@val 0038                                         putch@data 0023  
                                      _INTCONbits 000FF2                                          intlevel2 09D0  
                                ___lwmod@dividend 002A                                          printf@ap 0034  
                                 ___lwmod@divisor 002C                                   ___lwmod@counter 002E  
                                    ___aldiv@sign 000A  
